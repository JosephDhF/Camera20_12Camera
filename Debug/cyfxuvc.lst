
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f5f4  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400125f4  400125f4  000125f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012744  40012744  00012744  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  400127dc  400127dc  000127dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012c48  40012c48  00012c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012c74  40012c74  00012c74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012d6c  40012d6c  00012d6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012d78  40012d78  00012d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012d84  40012d84  00012d84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012dac  40012dac  00012dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012dbc  40012dbc  00012dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012dcc  40012dcc  00012dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012ddc  40012ddc  00012ddc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012df0  40012df0  00012df0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012e00  40012e00  00012e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012e0c  40012e0c  00012e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012e20  40012e20  00012e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012e5c  40012e5c  00012e5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012e84  40012e84  00012e84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012ebc  40012ebc  00012ebc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012ef0  40012ef0  00012ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012f08  40012f08  00012f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012f20  40012f20  00012f20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012f3c  40012f3c  00012f3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012fc0  40012fc0  00012fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40013094  40013094  00013094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  400130dc  400130dc  000130dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  4001326c  4001326c  0001326c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  400132ec  400132ec  000132ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  400132fc  400132fc  000132fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  40013530  40013530  00013530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  40013628  40013628  00013628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  400138c0  400138c0  000138c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400138f8  400138f8  000138f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013954  40013954  00013954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  40013974  40013974  00013974  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  400139d0  400139d0  000139d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  400139f4  400139f4  000139f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013a14  40013a14  00013a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013b08  40013b08  00013b08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013b94  40013b94  00013b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013b98  40013b98  00013b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013bbc  40013bbc  00013bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013cd0  40013cd0  00013cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013d70  40013d70  00013d70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013dc8  40013dc8  00013dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013e18  40013e18  00013e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013f14  40013f14  00013f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013fc4  40013fc4  00013fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40014078  40014078  00014078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  400140a0  400140a0  000140a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  400140b0  400140b0  000140b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40014250  40014250  00014250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40014368  40014368  00014368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  400143b8  400143b8  000143b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  40014528  40014528  00014528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014600  40014600  00014600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014684  40014684  00014684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  4001469c  4001469c  0001469c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  4001481c  4001481c  0001481c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  4001485c  4001485c  0001485c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  4001486c  4001486c  0001486c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  4001487c  4001487c  0001487c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  4001488c  4001488c  0001488c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  4001489c  4001489c  0001489c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  4001496c  4001496c  0001496c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014b9c  40014b9c  00014b9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014c2c  40014c2c  00014c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014ca0  40014ca0  00014ca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014cc8  40014cc8  00014cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014d04  40014d04  00014d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014d2c  40014d2c  00014d2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014d54  40014d54  00014d54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014d7c  40014d7c  00014d7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014da4  40014da4  00014da4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014dcc  40014dcc  00014dcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014df4  40014df4  00014df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014e20  40014e20  00014e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014e88  40014e88  00014e88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014e9c  40014e9c  00014e9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014ef0  40014ef0  00014ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014f50  40014f50  00014f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014ff0  40014ff0  00014ff0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  400150d0  400150d0  000150d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  400151b0  400151b0  000151b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  400151f8  400151f8  000151f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  400152a4  400152a4  000152a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  400152e8  400152e8  000152e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  4001535c  4001535c  0001535c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  400154c0  400154c0  000154c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015514  40015514  00015514  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  40015568  40015568  00015568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  40015858  40015858  00015858  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  400158e8  400158e8  000158e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015b54  40015b54  00015b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015f3c  40015f3c  00015f3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015fec  40015fec  00015fec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  400160c0  400160c0  000160c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40016274  40016274  00016274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  400165a8  400165a8  000165a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  400166c8  400166c8  000166c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016734  40016734  00016734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  4001682c  4001682c  0001682c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  40016908  40016908  00016908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016aa8  40016aa8  00016aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016c94  40016c94  00016c94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016eb4  40016eb4  00016eb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  400170ec  400170ec  000170ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  4001721c  4001721c  0001721c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  400173c0  400173c0  000173c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  400174c0  400174c0  000174c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  400175dc  400175dc  000175dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  40017630  40017630  00017630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  400179f0  400179f0  000179f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017cdc  40017cdc  00017cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017fd4  40017fd4  00017fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  40018718  40018718  00018718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  4001886c  4001886c  0001886c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  4001899c  4001899c  0001899c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018acc  40018acc  00018acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018c08  40018c08  00018c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018e78  40018e78  00018e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  400190d4  400190d4  000190d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40019254  40019254  00019254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  400193dc  400193dc  000193dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019490  40019490  00019490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  40019548  40019548  00019548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  400195e4  400195e4  000195e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019684  40019684  00019684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  400199f0  400199f0  000199f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019f80  40019f80  00019f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a560  4001a560  0001a560  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001abe8  4001abe8  0001abe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001ac4c  4001ac4c  0001ac4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001ac9c  4001ac9c  0001ac9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001ad94  4001ad94  0001ad94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001aeac  4001aeac  0001aeac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001af28  4001af28  0001af28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001b05c  4001b05c  0001b05c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001b1c0  4001b1c0  0001b1c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001b210  4001b210  0001b210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b4c0  4001b4c0  0001b4c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b644  4001b644  0001b644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b684  4001b684  0001b684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b73c  4001b73c  0001b73c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b7cc  4001b7cc  0001b7cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001ba54  4001ba54  0001ba54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001ba64  4001ba64  0001ba64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001bbb8  4001bbb8  0001bbb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001bd38  4001bd38  0001bd38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bf9c  4001bf9c  0001bf9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bfac  4001bfac  0001bfac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001c078  4001c078  0001c078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001c138  4001c138  0001c138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001c148  4001c148  0001c148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c740  4001c740  0001c740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c7c4  4001c7c4  0001c7c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c98c  4001c98c  0001c98c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001cab0  4001cab0  0001cab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001cbf8  4001cbf8  0001cbf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001cd6c  4001cd6c  0001cd6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001ce38  4001ce38  0001ce38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001d000  4001d000  0001d000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001d010  4001d010  0001d010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001d020  4001d020  0001d020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001d06c  4001d06c  0001d06c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001d0d8  4001d0d8  0001d0d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001d154  4001d154  0001d154  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001d208  4001d208  0001d208  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d3e0  4001d3e0  0001d3e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d700  4001d700  0001d700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d70c  4001d70c  0001d70c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d7f0  4001d7f0  0001d7f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d9c8  4001d9c8  0001d9c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001dabc  4001dabc  0001dabc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001dbac  4001dbac  0001dbac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001dd84  4001dd84  0001dd84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001df48  4001df48  0001df48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001e09c  4001e09c  0001e09c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e42c  4001e42c  0001e42c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e7a4  4001e7a4  0001e7a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e81c  4001e81c  0001e81c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e894  4001e894  0001e894  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001ea30  4001ea30  0001ea30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001ec14  4001ec14  0001ec14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ee84  4001ee84  0001ee84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ef3c  4001ef3c  0001ef3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ef6c  4001ef6c  0001ef6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001f00c  4001f00c  0001f00c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f3ec  4001f3ec  0001f3ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f4d8  4001f4d8  0001f4d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001faf4  4001faf4  0001faf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001fb90  4001fb90  0001fb90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001fc00  4001fc00  0001fc00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001fc7c  4001fc7c  0001fc7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fdf0  4001fdf0  0001fdf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fe5c  4001fe5c  0001fe5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  40020090  40020090  00020090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  400200ac  400200ac  000200ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  400202a4  400202a4  000202a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  40020518  40020518  00020518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  400205d0  400205d0  000205d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  400206e8  400206e8  000206e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020ae4  40020ae4  00020ae4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020bdc  40020bdc  00020bdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020ce8  40020ce8  00020ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020eb4  40020eb4  00020eb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020f08  40020f08  00020f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020f68  40020f68  00020f68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  400210ac  400210ac  000210ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  400210fc  400210fc  000210fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  400212f0  400212f0  000212f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40021480  40021480  00021480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  40021618  40021618  00021618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  40021828  40021828  00021828  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40022034  40022034  00022034  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40022084  40022084  00022084  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40022188  40022188  00022188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  4002229c  4002229c  0002229c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  400222a8  400222a8  000222a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  400222b8  400222b8  000222b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  400222cc  400222cc  000222cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  400222e0  400222e0  000222e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  400222f0  400222f0  000222f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40022330  40022330  00022330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40022348  40022348  00022348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40022360  40022360  00022360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  4002239c  4002239c  0002239c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  400223cc  400223cc  000223cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  400223f8  400223f8  000223f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022478  40022478  00022478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002250c  4002250c  0002250c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  4002265c  4002265c  0002265c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  400226e8  400226e8  000226e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  400227c8  400227c8  000227c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  400227d8  400227d8  000227d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002282c  4002282c  0002282c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  400228c8  400228c8  000228c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  40022934  40022934  00022934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  400229a0  400229a0  000229a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022b18  40022b18  00022b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022c34  40022c34  00022c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022df8  40022df8  00022df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022ee8  40022ee8  00022ee8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022fc0  40022fc0  00022fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40023044  40023044  00023044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40023054  40023054  00023054  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40023064  40023064  00023064  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  400230c0  400230c0  000230c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  400231a8  400231a8  000231a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40023260  40023260  00023260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  400232a4  400232a4  000232a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  400234c0  400234c0  000234c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023510  40023510  00023510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  4002369c  4002369c  0002369c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400236f8  400236f8  000236f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  400237ec  400237ec  000237ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  400238dc  400238dc  000238dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023a98  40023a98  00023a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  40023adc  40023adc  00023adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023cf4  40023cf4  00023cf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023f24  40023f24  00023f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023f34  40023f34  00023f34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f04  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          0000235c  40030f20  40030f20  00028f04  2**5
                  ALLOC
266 .debug_abbrev 00001153  00000000  00000000  00028f04  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d3d7  00000000  00000000  0002a057  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023096  00000000  00000000  000a742e  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca4c4  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d6369  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d63a0  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6550  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042ec  00000000  00000000  000d7159  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e7e6  00000000  00000000  000db445  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 00007668  00000000  00000000  000e9c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1298  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a734  00000000  00000000  000f1338  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000588  00000000  00000000  000fba6c  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbff4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031604 	.word	0x40031604

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x6>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$45+0x13>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0xc>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xe>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x24>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xe>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x38>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x14>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x40>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_pubnames$10+0x14>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_pubnames$10+0x40>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x28>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0x4>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24+0x14>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$31+0x14>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$38+0x2>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_frame$69+0x8>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x26>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$59+0x1a>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x7>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x27>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$73+0x13>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0x2b>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x20>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1f>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x1d>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp_.debug_frame$13+0x10>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d38 	.word	0x40030d38
     af8:	40030d20 	.word	0x40030d20
     afc:	40031a40 	.word	0x40031a40
     b00:	40031970 	.word	0x40031970
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d34 	.word	0x40030d34
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d3c 	.word	0x40030d3c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_frame$48+0x1c>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp_.debug_frame$27+0x14>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_frame$27+0x18>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x29>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x15>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_pubnames$17+0x6>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$48+0x3c>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_pubnames$17+0x6>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$48+0x3c>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$20>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x27>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$115+0x13>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$87+0x4>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_frame$76+0x4>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$108+0x6>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_frame$13+0x8>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_pubnames$10+0x8>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_pubnames$10+0x10>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$20+0x8>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_frame$69+0x10>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$20+0x8>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_frame$20+0xc>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_frame$20+0x10>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_frame$76>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_frame$76>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$20+0x8>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$20+0x8>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_frame$20+0xc>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_frame$20+0x18>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_frame$90+0x18>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_frame$90+0x18>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_frame$20+0x10>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_line$1+0x2>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x16>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_line$1+0x2>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x16>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_line$1+0x6>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_frame$104+0x10>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_line$1+0x6>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$87>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$31+0x2>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$101+0xb>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_frame$20+0x10>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$108+0x2>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$20+0x8>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_frame$20+0xc>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$31+0x2>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$31+0x6>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_frame$20+0x10>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$10+0xd>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_frame$20+0xc>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$20>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_frame$20+0x24>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_frame$27+0xc>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$31+0xa>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_frame$27+0x18>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_frame$27+0x18>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_frame$27+0x18>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$20>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$45+0x2>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$52+0x2d>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_frame$48+0x1c>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x26>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp_.debug_frame$55+0x10>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x26>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$31+0xe>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x8>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$31+0xe>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$62+0x3c>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_frame$20+0x18>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_frame$20+0x34>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$45+0x10>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_line$1+0x6>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x24>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$31+0x12>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_line$1+0x6>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_frame$20+0x18>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_frame$20+0x10>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_pubnames$73+0x10>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$73+0x1c>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$94+0x3>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0x38>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x19>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$122+0x13>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$136+0x2>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_pubnames$31+0x1a>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_pubnames$31+0x1e>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$90+0x4>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_frame$27>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Hm3000__709$SAOzQ5_H00000+0x42>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp..debug_pubnames$cyu3descriptor.h$.2_Os2000_h7PQidXgB29_l00000+0x7>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xd>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x29>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_frame$97+0x8>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$17+0x9>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_frame$20+0x14>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x19>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x16>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$45+0x12>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$52+0x19>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_frame$118+0x1c>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$73>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$80+0x7>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_frame$132+0x8>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x34>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x14>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x34>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_frame$27+0x4>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_frame$27+0x4>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0x30>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_frame$27+0x4>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$20+0x4>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$20>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_pubnames$17+0x2>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d84 	.word	0x40030d84
    17d0:	40030d64 	.word	0x40030d64
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d70 	.word	0x40030d70
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d6c 	.word	0x40030d6c
    17e4:	40030d9c 	.word	0x40030d9c
    17e8:	40030d40 	.word	0x40030d40
    17ec:	40030da4 	.word	0x40030da4
    17f0:	40030db4 	.word	0x40030db4
    17f4:	40030d74 	.word	0x40030d74
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d68 	.word	0x40030d68
    1800:	80008000 	.word	0x80008000
    1804:	40030db0 	.word	0x40030db0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a7c 	.word	0x40031a7c
    1810:	40031b1c 	.word	0x40031b1c
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_pubnames$52+0x23>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_frame$41>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$59>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$59+0x4>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$59+0x8>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$59+0xc>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$59+0x10>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$59+0x14>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$59+0x18>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$59+0x1c>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$59+0x20>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$59+0x24>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_pubnames$59+0x28>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_pubnames$66+0x2>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_pubnames$66+0x6>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$66+0xa>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_line$22+0x2>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_line$22+0x6>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$48>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	400125a8 	.word	0x400125a8
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_frame$55+0x4>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_frame$55+0x8>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_pubnames$59+0xe>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_pubnames$59+0xe>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_pubnames$59+0x12>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dbc 	.word	0x40030dbc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x7>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x7>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b4 	.word	0x400315b4

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0xe>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$80+0x10>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$80+0x8>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xe>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$150+0x1>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x15>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$94+0xd>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$94+0x5>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_frame$20+0x10>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$101+0x25>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$101+0x1d>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$101+0x15>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_frame$27+0x4>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$150+0x5>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$115+0x4>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_frame$34+0x18>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_frame$34>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_pubnames$150+0x9>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$129+0x4>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_frame$41+0x1c>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_frame$41+0x14>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$122+0x3>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_pubnames$150+0xd>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0xa>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x2>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_frame$20+0x4>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$129+0x1c>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000af9c 	.word	0x4000af9c

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__CyU3PBusyWait_veneer+0x4>
    1fb4:	400138c0 	.word	0x400138c0

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__ARM_grp_.debug_frame$27>
    1fbc:	40022348 	.word	0x40022348

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a730 	.word	0x4000a730

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	400222b8 	.word	0x400222b8

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000b08c 	.word	0x4000b08c

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022478 	.word	0x40022478

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014684 	.word	0x40014684

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp_.debug_pubnames$164+0x2>
    1fec:	4000b1a4 	.word	0x4000b1a4

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000b1c8 	.word	0x4000b1c8

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	4002229c 	.word	0x4002229c

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fdf0 	.word	0x4001fdf0

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000af48 	.word	0x4000af48

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a5f0 	.word	0x4000a5f0

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	4000a064 	.word	0x4000a064

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40014078 	.word	0x40014078

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c98c 	.word	0x4001c98c

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b644 	.word	0x4001b644

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__ARM_grp_.debug_pubnames$178+0x3>
    203c:	400229a0 	.word	0x400229a0

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	400212f0 	.word	0x400212f0

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x2>
    204c:	400165a8 	.word	0x400165a8

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260, //2B: 0
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea0040ba 	b	400132fc <CyU3PDebugPrint>
40003010:	40010e20 	.word	0x40010e20

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb0040b1 	bl	400132fc <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb0040a4 	bl	400132fc <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb004096 	bl	400132fc <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb004089 	bl	400132fc <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb00407c 	bl	400132fc <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb00406f 	bl	400132fc <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb004061 	bl	400132fc <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb004054 	bl	400132fc <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb004047 	bl	400132fc <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb00403a 	bl	400132fc <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb00402d 	bl	400132fc <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb004020 	bl	400132fc <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb004013 	bl	400132fc <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb004006 	bl	400132fc <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003ff9 	bl	400132fc <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003fec 	bl	400132fc <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003fdf 	bl	400132fc <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003fd3 	bl	400132fc <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010e38 	.word	0x40010e38
400033b8:	40010e54 	.word	0x40010e54
400033bc:	40010eb4 	.word	0x40010eb4

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001b37 	bl	4000a0cc <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010f0c 	.word	0x40010f0c

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb0015fb 	bl	40008c84 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb0015f7 	bl	40008c84 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003f70 	bl	400132fc <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010da0 	.word	0x40010da0
40003548:	40010f20 	.word	0x40010f20

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006897 	b	4001d7f0 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea0014d7 	b	4000896c <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	4003327c 	.word	0x4003327c

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea0040fa 	b	40013a14 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb001939 	bl	40009b48 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb0014fa 	bl	40008a70 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb0018e6 	bl	40009a38 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0019a7 	b	40009d58 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001935 	bl	4000a0cc <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb001399 	bl	40008a70 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb001785 	bl	40009a38 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb001952 	bl	4000a244 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb001356 	bl	40008a70 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb001967 	bl	4000a2c4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001806 	bl	40009d58 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb001990 	bl	4000a398 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea001938 	b	4000a244 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb00133e 	bl	40008a70 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb00194f 	bl	4000a2c4 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb001951 	bl	4000a398 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb00192c 	bl	4000a398 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb0012db 	bl	40008a70 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb0018ec 	bl	4000a2c4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001917 	bl	4000a398 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb00128f 	bl	40008a70 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0018a0 	bl	4000a2c4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb00173e 	bl	40009d58 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb0018c8 	bl	4000a398 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb001871 	bl	4000a244 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001714 	bl	40009cd8 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007f04 	bl	40023cf4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003df3 	bl	400138c0 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004118:	eb007def 	bl	400238dc <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003de4 	bl	400138c0 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003c69 	bl	400132fc <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003c62 	bl	400132fc <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40011260 	.word	0x40011260
40004178:	40011244 	.word	0x40011244

4000417c <SensorWrite2B>:
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000021 	bne	40004234 <SensorWrite2B+0xb8>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = highAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	inbuf[0] = lowAddr;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041d8:	eb007ec5 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000010 	beq	40004228 <SensorWrite2B+0xac>
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041e4:	e1a02004 	mov	r2, r4
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
400041ec:	e3a04001 	mov	r4, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041f0:	e1a0000d 	mov	r0, sp
400041f4:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
400041f8:	e3a03000 	mov	r3, #0
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e5cd4008 	strb	r4, [sp, #8]
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004204:	eb007eba 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004208:	e2504000 	subs	r4, r0, #0
4000420c:	0a000002 	beq	4000421c <SensorWrite2B+0xa0>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004210:	e1a00004 	mov	r0, r4
40004214:	e28dd014 	add	sp, sp, #20
40004218:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
4000421c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004220:	eb003da6 	bl	400138c0 <CyU3PBusyWait>
40004224:	eafffff9 	b	40004210 <SensorWrite2B+0x94>
40004228:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000422c:	eb003da3 	bl	400138c0 <CyU3PBusyWait>
40004230:	eaffffeb 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004234:	e3a00004 	mov	r0, #4
40004238:	e59f1008 	ldr	r1, [pc, #8]	; 40004248 <SensorWrite2B+0xcc>
4000423c:	eb003c2e 	bl	400132fc <CyU3PDebugPrint>
		return 1;
40004240:	e3a04001 	mov	r4, #1
40004244:	eafffff1 	b	40004210 <SensorWrite2B+0x94>
40004248:	4001127c 	.word	0x4001127c

4000424c <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
4000424c:	e35000a0 	cmp	r0, #160	; 0xa0
40004250:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004254:	e92d4010 	push	{r4, lr}
40004258:	e1a0c000 	mov	ip, r0
4000425c:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004260:	03a0e000 	moveq	lr, #0
40004264:	13a0e001 	movne	lr, #1
40004268:	1a00001a 	bne	400042d8 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
4000426c:	e3530040 	cmp	r3, #64	; 0x40
40004270:	8a000013 	bhi	400042c4 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004274:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004278:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000427c:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004280:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004284:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004288:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000428c:	e28d0004 	add	r0, sp, #4
40004290:	e59d1018 	ldr	r1, [sp, #24]
40004294:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004298:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
4000429c:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a0:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a4:	eb007e92 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042a8:	e2504000 	subs	r4, r0, #0
400042ac:	1a000001 	bne	400042b8 <SensorWrite+0x6c>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400042b0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400042b4:	eb003d81 	bl	400138c0 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042b8:	e1a00004 	mov	r0, r4
400042bc:	e28dd010 	add	sp, sp, #16
400042c0:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c4:	e3a00004 	mov	r0, #4
400042c8:	e59f101c 	ldr	r1, [pc, #28]	; 400042ec <SensorWrite+0xa0>
400042cc:	eb003c0a 	bl	400132fc <CyU3PDebugPrint>
		return 1;
400042d0:	e3a04001 	mov	r4, #1
400042d4:	eafffff7 	b	400042b8 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042d8:	e3a00004 	mov	r0, #4
400042dc:	e59f100c 	ldr	r1, [pc, #12]	; 400042f0 <SensorWrite+0xa4>
400042e0:	eb003c05 	bl	400132fc <CyU3PDebugPrint>
		return 1;
400042e4:	e3a04001 	mov	r4, #1
400042e8:	eafffff2 	b	400042b8 <SensorWrite+0x6c>
400042ec:	400112a0 	.word	0x400112a0
400042f0:	4001127c 	.word	0x4001127c

400042f4 <SensorRead2B>:
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
400042f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042f8:	e35000a1 	cmp	r0, #161	; 0xa1
400042fc:	13500071 	cmpne	r0, #113	; 0x71
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004300:	e24dd018 	sub	sp, sp, #24
40004304:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004308:	03a0c000 	moveq	ip, #0
4000430c:	13a0c001 	movne	ip, #1
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004310:	e1a06001 	mov	r6, r1
40004314:	e1a0e002 	mov	lr, r2
40004318:	e59d5034 	ldr	r5, [sp, #52]	; 0x34
4000431c:	e5dd8030 	ldrb	r8, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb8>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007e66 	bl	40023cf4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xcc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004360:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004364:	eb003d55 	bl	400138c0 <CyU3PBusyWait>

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004368:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
4000436c:	e3a0e001 	mov	lr, #1
	preamble.ctrlMask = 0x0000;
40004370:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004374:	e28d000c 	add	r0, sp, #12
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a02008 	mov	r2, r8
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
4000438c:	eb007d52 	bl	400238dc <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004398:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000439c:	eb003d47 	bl	400138c0 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd018 	add	sp, sp, #24
400043a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x108>
400043b4:	eb003bd0 	bl	400132fc <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xac>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x10c>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003bc8 	bl	400132fc <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x74>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x110>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003bc0 	bl	400132fc <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xac>
400043fc:	4001127c 	.word	0x4001127c
40004400:	40011244 	.word	0x40011244
40004404:	40011260 	.word	0x40011260

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007d1b 	bl	400238dc <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004474:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004478:	eb003d10 	bl	400138c0 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003b99 	bl	400132fc <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003b94 	bl	400132fc <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	400112a0 	.word	0x400112a0
400044b4:	4001127c 	.word	0x4001127c

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb007a87 	bl	40022ee8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003b87 	bl	400132fc <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb0013da 	bl	4000944c <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb0011e5 	bl	40008c84 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb0013d6 	bl	4000944c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003b7b 	bl	400132fc <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb0013ce 	bl	4000944c <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb0011d9 	bl	40008c84 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb0013ca 	bl	4000944c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003b6f 	bl	400132fc <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb007a67 	bl	40022ee8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea0011c9 	b	40008c84 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003b63 	b	400132fc <CyU3PDebugPrint>
4000456c:	400112e8 	.word	0x400112e8
40004570:	400112fc 	.word	0x400112fc
40004574:	400112c0 	.word	0x400112c0

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003b51 	bl	400132fc <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	40011310 	.word	0x40011310

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, 1, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003b33 	bl	400132fc <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40011334 	.word	0x40011334

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd01c 	sub	sp, sp, #28
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a05000 	mov	r5, r0
40004650:	e1a04002 	mov	r4, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
40004654:	e5cd1006 	strb	r1, [sp, #6]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004658:	e5cde004 	strb	lr, [sp, #4]
	preamble.buffer[1] = boradAddr;
4000465c:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004660:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004664:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004668:	e28d0004 	add	r0, sp, #4
4000466c:	e28d1010 	add	r1, sp, #16
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	uint8_t buf[2];
	buf[0] = value;
40004678:	e5cd4014 	strb	r4, [sp, #20]
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000467c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004680:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;
40004684:	e5cd5010 	strb	r5, [sp, #16]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004688:	eb007d99 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000468c:	e3500000 	cmp	r0, #0
40004690:	0a000015 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004694:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004698:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
4000469c:	e28d0004 	add	r0, sp, #4
400046a0:	e28d1014 	add	r1, sp, #20
400046a4:	e1a0200c 	mov	r2, ip
400046a8:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
400046b0:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400046b4:	eb007d8e 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>
{
	uint8_t buf[2];
	buf[0] = value;
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, 1, buf);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02005 	mov	r2, r5
400046c8:	e1a03004 	mov	r3, r4
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb003b09 	bl	400132fc <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd01c 	add	sp, sp, #28
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400046e0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046e4:	eb003c75 	bl	400138c0 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046f0:	eb003c72 	bl	400138c0 <CyU3PBusyWait>
400046f4:	eaffffe6 	b	40004694 <SensorSetControl+0x58>
400046f8:	40011354 	.word	0x40011354

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, 1, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd01c 	sub	sp, sp, #28
	uint8_t buf[2];
	buf[0] = value;
40004730:	e5cd2014 	strb	r2, [sp, #20]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004734:	e5cd3005 	strb	r3, [sp, #5]
	preamble.buffer[2] = highAddr;
40004738:	e5cd1006 	strb	r1, [sp, #6]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;
4000473c:	e5cd0010 	strb	r0, [sp, #16]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004740:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004744:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004748:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
4000474c:	e28d0004 	add	r0, sp, #4
40004750:	e28d1010 	add	r1, sp, #16
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004764:	eb007d62 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000010 	beq	400047b4 <SensorSetIrisControl+0x90>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004778:	e28d0004 	add	r0, sp, #4
4000477c:	e28d1014 	add	r1, sp, #20
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004788:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
4000478c:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004790:	eb007d57 	bl	40023cf4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004794:	e3500000 	cmp	r0, #0
40004798:	0a000002 	beq	400047a8 <SensorSetIrisControl+0x84>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, 1, buf);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
4000479c:	e3a00000 	mov	r0, #0
400047a0:	e28dd01c 	add	sp, sp, #28
400047a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400047a8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047ac:	eb003c43 	bl	400138c0 <CyU3PBusyWait>
400047b0:	eafffff9 	b	4000479c <SensorSetIrisControl+0x78>
400047b4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047b8:	eb003c40 	bl	400138c0 <CyU3PBusyWait>
400047bc:	eaffffeb 	b	40004770 <SensorSetIrisControl+0x4c>

400047c0 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c4:	e59f2200 	ldr	r2, [pc, #512]	; 400049cc <I2cAppThread_Entry+0x20c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047c8:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047cc:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d0:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d4:	e284c02c 	add	ip, r4, #44	; 0x2c
400047d8:	e3a0300b 	mov	r3, #11
400047dc:	e1a01004 	mov	r1, r4
400047e0:	e59f01e8 	ldr	r0, [pc, #488]	; 400049d0 <I2cAppThread_Entry+0x210>
400047e4:	e58de000 	str	lr, [sp]
400047e8:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047ec:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f0:	e58d4004 	str	r4, [sp, #4]
400047f4:	e58d4008 	str	r4, [sp, #8]
400047f8:	eb001921 	bl	4000ac84 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
400047fc:	eb001312 	bl	4000944c <_tx_time_get>
40004800:	e59f11cc 	ldr	r1, [pc, #460]	; 400049d4 <I2cAppThread_Entry+0x214>
40004804:	e59f51cc 	ldr	r5, [pc, #460]	; 400049d8 <I2cAppThread_Entry+0x218>
40004808:	e1a02000 	mov	r2, r0
4000480c:	e3a00004 	mov	r0, #4
40004810:	eb003ab9 	bl	400132fc <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004814:	e3a00032 	mov	r0, #50	; 0x32
40004818:	eb001119 	bl	40008c84 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
4000481c:	e59f01ac 	ldr	r0, [pc, #428]	; 400049d0 <I2cAppThread_Entry+0x210>
40004820:	eb0018e5 	bl	4000abbc <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004824:	ea000000 	b	4000482c <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
40004828:	eb0018c6 	bl	4000ab48 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
4000482c:	e5d5201a 	ldrb	r2, [r5, #26]
40004830:	e3520000 	cmp	r2, #0
40004834:	0afffffb 	beq	40004828 <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
40004838:	e59f0198 	ldr	r0, [pc, #408]	; 400049d8 <I2cAppThread_Entry+0x218>
4000483c:	e59f1198 	ldr	r1, [pc, #408]	; 400049dc <I2cAppThread_Entry+0x21c>
40004840:	e5903010 	ldr	r3, [r0, #16]
40004844:	e3a00004 	mov	r0, #4
40004848:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
4000484c:	eb003aaa 	bl	400132fc <CyU3PDebugPrint>
40004850:	e59f7188 	ldr	r7, [pc, #392]	; 400049e0 <I2cAppThread_Entry+0x220>
40004854:	e59fb188 	ldr	fp, [pc, #392]	; 400049e4 <I2cAppThread_Entry+0x224>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004858:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
4000485c:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004860:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004864:	e3a02003 	mov	r2, #3
40004868:	e28d3014 	add	r3, sp, #20
4000486c:	e3a01020 	mov	r1, #32
40004870:	e59f0170 	ldr	r0, [pc, #368]	; 400049e8 <I2cAppThread_Entry+0x228>
40004874:	e58d6000 	str	r6, [sp]
40004878:	eb0015c9 	bl	40009fa4 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000487c:	e1a01006 	mov	r1, r6
40004880:	e597001c 	ldr	r0, [r7, #28]
40004884:	eb00168e 	bl	4000a2c4 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
40004888:	e597001c 	ldr	r0, [r7, #28]
4000488c:	eb0016c1 	bl	4000a398 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004890:	e595001c 	ldr	r0, [r5, #28]
40004894:	e1a01006 	mov	r1, r6
40004898:	eb001689 	bl	4000a2c4 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
4000489c:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a0:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a4:	e3520000 	cmp	r2, #0
400048a8:	1a000008 	bne	400048d0 <I2cAppThread_Entry+0x110>
400048ac:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b4:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048b8:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048bc:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c0:	e353003f 	cmp	r3, #63	; 0x3f
400048c4:	93520000 	cmpls	r2, #0
400048c8:	0afffff8 	beq	400048b0 <I2cAppThread_Entry+0xf0>
400048cc:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d0:	e3520000 	cmp	r2, #0
400048d4:	0a000029 	beq	40004980 <I2cAppThread_Entry+0x1c0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048d8:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048dc:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e0:	e083e083 	add	lr, r3, r3, lsl #1
400048e4:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e8:	e242c020 	sub	ip, r2, #32
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048ec:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f0:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f4:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048f8:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
400048fc:	e35c0003 	cmp	ip, #3
40004900:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004904:	ea00001a 	b	40004974 <I2cAppThread_Entry+0x1b4>
40004908:	40004918 	.word	0x40004918
4000490c:	40004918 	.word	0x40004918
40004910:	40004964 	.word	0x40004964
40004914:	40004964 	.word	0x40004964
						case 0x20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 0x21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004918:	e3a03052 	mov	r3, #82	; 0x52
4000491c:	ebffff80 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004920:	e3a01f7d 	mov	r1, #500	; 0x1f4
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004924:	e3a02000 	mov	r2, #0
40004928:	e59f00a0 	ldr	r0, [pc, #160]	; 400049d0 <I2cAppThread_Entry+0x210>
4000492c:	eb0018b2 	bl	4000abfc <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004930:	e59f0098 	ldr	r0, [pc, #152]	; 400049d0 <I2cAppThread_Entry+0x210>
40004934:	eb0018a0 	bl	4000abbc <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004938:	e5d40001 	ldrb	r0, [r4, #1]
4000493c:	e5d41002 	ldrb	r1, [r4, #2]
40004940:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004944:	12800001 	addne	r0, r0, #1
40004948:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
4000494c:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004950:	0a000010 	beq	40004998 <I2cAppThread_Entry+0x1d8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004954:	e595001c 	ldr	r0, [r5, #28]
40004958:	eb00168e 	bl	4000a398 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
4000495c:	eb001879 	bl	4000ab48 <_txe_thread_relinquish>
		}
40004960:	eaffffbf 	b	40004864 <I2cAppThread_Entry+0xa4>
						case 0x22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 0x23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//opt Zoom
40004964:	e3a03082 	mov	r3, #130	; 0x82
40004968:	ebffff6d 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
4000496c:	e3a01f4b 	mov	r1, #300	; 0x12c
40004970:	eaffffeb 	b	40004924 <I2cAppThread_Entry+0x164>
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004974:	ebffff30 	bl	4000463c <SensorSetControl>
40004978:	e1a0100a 	mov	r1, sl
							break;
4000497c:	eaffffe8 	b	40004924 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004980:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004984:	e59f0044 	ldr	r0, [pc, #68]	; 400049d0 <I2cAppThread_Entry+0x210>
40004988:	eb00189b 	bl	4000abfc <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
4000498c:	e59f003c 	ldr	r0, [pc, #60]	; 400049d0 <I2cAppThread_Entry+0x210>
40004990:	eb001889 	bl	4000abbc <_txe_timer_activate>
40004994:	eaffffee 	b	40004954 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004998:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
4000499c:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049a0:	e35c0023 	cmp	ip, #35	; 0x23
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049a4:	824cc020 	subhi	ip, ip, #32
400049a8:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049ac:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b0:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b4:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b8:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049bc:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049c0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049c4:	e5854010 	str	r4, [r5, #16]
400049c8:	eaffffe1 	b	40004954 <I2cAppThread_Entry+0x194>
400049cc:	400049ec 	.word	0x400049ec
400049d0:	40032fc4 	.word	0x40032fc4
400049d4:	400113c0 	.word	0x400113c0
400049d8:	40032ec4 	.word	0x40032ec4
400049dc:	400113d4 	.word	0x400113d4
400049e0:	40033148 	.word	0x40033148
400049e4:	40030000 	.word	0x40030000
400049e8:	40030f90 	.word	0x40030f90

400049ec <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
400049ec:	e59f0008 	ldr	r0, [pc, #8]	; 400049fc <I2CCmdCb+0x10>
400049f0:	e3a01020 	mov	r1, #32
400049f4:	e3a02000 	mov	r2, #0
400049f8:	ea001599 	b	4000a064 <_txe_event_flags_set>
400049fc:	40030f90 	.word	0x40030f90

40004a00 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004a00:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004a04:	e92d4070 	push	{r4, r5, r6, lr}
40004a08:	e1a03001 	mov	r3, r1
40004a0c:	e24dd010 	sub	sp, sp, #16
40004a10:	e1a04000 	mov	r4, r0
    switch (evtype)
40004a14:	0a000036 	beq	40004af4 <CyFxUVCApplnUSBEventCB+0xf4>
40004a18:	e3500004 	cmp	r0, #4
40004a1c:	0a00001f 	beq	40004aa0 <CyFxUVCApplnUSBEventCB+0xa0>
40004a20:	e3500001 	cmp	r0, #1
40004a24:	0a000001 	beq	40004a30 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004a28:	e28dd010 	add	sp, sp, #16
40004a2c:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004a30:	e59f5128 	ldr	r5, [pc, #296]	; 40004b60 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004a34:	e1a02000 	mov	r2, r0
40004a38:	e59f1124 	ldr	r1, [pc, #292]	; 40004b64 <CyFxUVCApplnUSBEventCB+0x164>
40004a3c:	e3a00004 	mov	r0, #4
40004a40:	eb003a2d 	bl	400132fc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004a44:	e1a00004 	mov	r0, r4
40004a48:	eb005b3b 	bl	4001b73c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004a4c:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004a50:	e1a01004 	mov	r1, r4
40004a54:	e1a00005 	mov	r0, r5
40004a58:	e3a02002 	mov	r2, #2
40004a5c:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004a60:	e585c028 	str	ip, [r5, #40]	; 0x28
            isUsbConnected = CyFalse;
40004a64:	e585c030 	str	ip, [r5, #48]	; 0x30
            streamingStarted = CyFalse;
40004a68:	e585c02c 	str	ip, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004a6c:	e58dc000 	str	ip, [sp]
40004a70:	eb00154b 	bl	40009fa4 <_txe_event_flags_get>
40004a74:	e2504000 	subs	r4, r0, #0
40004a78:	1affffea 	bne	40004a28 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004a7c:	e3e01001 	mvn	r1, #1
40004a80:	e3a02002 	mov	r2, #2
40004a84:	e1a00005 	mov	r0, r5
40004a88:	eb001575 	bl	4000a064 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004a8c:	e1a00005 	mov	r0, r5
40004a90:	e3a01002 	mov	r1, #2
40004a94:	e1a02004 	mov	r2, r4
40004a98:	eb001571 	bl	4000a064 <_txe_event_flags_set>
40004a9c:	eaffffe1 	b	40004a28 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004aa0:	e59f50b8 	ldr	r5, [pc, #184]	; 40004b60 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004aa4:	e59f10bc 	ldr	r1, [pc, #188]	; 40004b68 <CyFxUVCApplnUSBEventCB+0x168>
40004aa8:	e1a02000 	mov	r2, r0
40004aac:	eb003a12 	bl	400132fc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004ab0:	e3a00001 	mov	r0, #1
40004ab4:	eb005b20 	bl	4001b73c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004ab8:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004abc:	e3a01001 	mov	r1, #1
40004ac0:	e3a02002 	mov	r2, #2
40004ac4:	e1a00005 	mov	r0, r5
40004ac8:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004acc:	e585c028 	str	ip, [r5, #40]	; 0x28
            streamingStarted = CyFalse;
40004ad0:	e585c02c 	str	ip, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ad4:	e58dc000 	str	ip, [sp]
40004ad8:	eb001531 	bl	40009fa4 <_txe_event_flags_get>
40004adc:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004ae0:	01a00005 	moveq	r0, r5
40004ae4:	03e01001 	mvneq	r1, #1
40004ae8:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004aec:	1affffcd 	bne	40004a28 <CyFxUVCApplnUSBEventCB+0x28>
40004af0:	eaffffe4 	b	40004a88 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004af4:	e59f5064 	ldr	r5, [pc, #100]	; 40004b60 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004af8:	e1a02000 	mov	r2, r0
40004afc:	e59f1068 	ldr	r1, [pc, #104]	; 40004b6c <CyFxUVCApplnUSBEventCB+0x16c>
40004b00:	e3a00004 	mov	r0, #4
40004b04:	eb0039fc 	bl	400132fc <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b08:	e3a00001 	mov	r0, #1
40004b0c:	eb005b0a 	bl	4001b73c <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b10:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b14:	e1a00005 	mov	r0, r5
40004b18:	e3a01001 	mov	r1, #1
40004b1c:	e1a02004 	mov	r2, r4
40004b20:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b24:	e5856028 	str	r6, [r5, #40]	; 0x28
            streamingStarted = CyFalse;
40004b28:	e585602c 	str	r6, [r5, #44]	; 0x2c
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b2c:	e58d6000 	str	r6, [sp]
40004b30:	eb00151b 	bl	40009fa4 <_txe_event_flags_get>
40004b34:	e2506000 	subs	r6, r0, #0
40004b38:	1affffba 	bne	40004a28 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004b3c:	e1a02004 	mov	r2, r4
40004b40:	e1a00005 	mov	r0, r5
40004b44:	e3e01001 	mvn	r1, #1
40004b48:	eb001545 	bl	4000a064 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004b4c:	e1a00005 	mov	r0, r5
40004b50:	e1a01004 	mov	r1, r4
40004b54:	e1a02006 	mov	r2, r6
40004b58:	eb001541 	bl	4000a064 <_txe_event_flags_set>
40004b5c:	eaffffb1 	b	40004a28 <CyFxUVCApplnUSBEventCB+0x28>
40004b60:	40030f90 	.word	0x40030f90
40004b64:	4001143c 	.word	0x4001143c
40004b68:	400113f8 	.word	0x400113f8
40004b6c:	40011418 	.word	0x40011418

40004b70 <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b70:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004b74:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40004b78:	e1a05002 	mov	r5, r2
40004b7c:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004b80:	0a00000b 	beq	40004bb4 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004b84:	e3510010 	cmp	r1, #16
40004b88:	1a000007 	bne	40004bac <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004b8c:	e59f317c 	ldr	r3, [pc, #380]	; 40004d10 <CyFxUvcApplnDmaCallback+0x1a0>
        streamingStarted = CyTrue;
40004b90:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b94:	e1d3c4b6 	ldrh	ip, [r3, #70]	; 0x46
        streamingStarted = CyTrue;
40004b98:	e583202c 	str	r2, [r3, #44]	; 0x2c
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004b9c:	e08c0002 	add	r0, ip, r2
40004ba0:	e1a01800 	lsl	r1, r0, #16
40004ba4:	e1a02821 	lsr	r2, r1, #16
40004ba8:	e1c324b6 	strh	r2, [r3, #70]	; 0x46
        streamingStarted = CyTrue;
    }
}
40004bac:	e28dd00c 	add	sp, sp, #12
40004bb0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004bb4:	e1d220b4 	ldrh	r2, [r2, #4]
40004bb8:	e59f3154 	ldr	r3, [pc, #340]	; 40004d14 <CyFxUvcApplnDmaCallback+0x1a4>
40004bbc:	e1520003 	cmp	r2, r3
40004bc0:	0a000035 	beq	40004c9c <CyFxUvcApplnDmaCallback+0x12c>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004bc4:	e5956000 	ldr	r6, [r5]
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004bc8:	e59f7148 	ldr	r7, [pc, #328]	; 40004d18 <CyFxUvcApplnDmaCallback+0x1a8>
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004bcc:	e3e01000 	mvn	r1, #0
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004bd0:	e246400c 	sub	r4, r6, #12
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004bd4:	e59f0140 	ldr	r0, [pc, #320]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
40004bd8:	eb0015b9 	bl	4000a2c4 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004bdc:	e1a00004 	mov	r0, r4
40004be0:	e2871d12 	add	r1, r7, #1152	; 0x480
40004be4:	e3a0200c 	mov	r2, #12
40004be8:	ebfffb39 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40004bec:	e59f0128 	ldr	r0, [pc, #296]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
40004bf0:	eb0015e8 	bl	4000a398 <_txe_mutex_put>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bf4:	e556c00b 	ldrb	ip, [r6, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004bf8:	e59f4110 	ldr	r4, [pc, #272]	; 40004d10 <CyFxUvcApplnDmaCallback+0x1a0>
	CyU3PMutexPut(&imgHdMux);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004bfc:	e38c1002 	orr	r1, ip, #2
40004c00:	e546100b 	strb	r1, [r6, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004c04:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004c08:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
                pbc = input->buffer_p.count;
40004c0c:	e1d510b4 	ldrh	r1, [r5, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004c10:	e2803001 	add	r3, r0, #1
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004c14:	e352000f 	cmp	r2, #15
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004c18:	e1c433b6 	strh	r3, [r4, #54]	; 0x36
                pbc = input->buffer_p.count;
40004c1c:	e1c413b8 	strh	r1, [r4, #56]	; 0x38
               // hitFV = CyTrue;
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
40004c20:	0a00002e 	beq	40004ce0 <CyFxUvcApplnDmaCallback+0x170>
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	CyU3PMutexPut(&imgHdMux);
                	stiflag = 0xAA;
                }
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
40004c24:	e3a0e001 	mov	lr, #1
40004c28:	e584e040 	str	lr, [r4, #64]	; 0x40
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c2c:	e1d4e4b4 	ldrh	lr, [r4, #68]	; 0x44
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c30:	e281100c 	add	r1, r1, #12
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c34:	e28e3001 	add	r3, lr, #1
40004c38:	e1a00803 	lsl	r0, r3, #16
40004c3c:	e1a0c820 	lsr	ip, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c40:	e1a02801 	lsl	r2, r1, #16
40004c44:	e1a01822 	lsr	r1, r2, #16
40004c48:	e59f00d0 	ldr	r0, [pc, #208]	; 40004d20 <CyFxUvcApplnDmaCallback+0x1b0>
40004c4c:	e3a02000 	mov	r2, #0
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c50:	e1c4c4b4 	strh	ip, [r4, #68]	; 0x44
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004c54:	eb004a75 	bl	40017630 <CyU3PDmaMultiChannelCommitBuffer>
#endif
                hitFV = CyTrue;  //set the hitFV flag to indicate the the partial buffer has been committed.
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004c58:	e59f10b0 	ldr	r1, [pc, #176]	; 40004d10 <CyFxUvcApplnDmaCallback+0x1a0>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004c5c:	e2502000 	subs	r2, r0, #0
40004c60:	0affffd1 	beq	40004bac <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004c64:	e1d1c4b4 	ldrh	ip, [r1, #68]	; 0x44
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004c68:	e1d530b4 	ldrh	r3, [r5, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004c6c:	e24c0001 	sub	r0, ip, #1
40004c70:	e1a0e800 	lsl	lr, r0, #16
40004c74:	e1a0c82e 	lsr	ip, lr, #16
40004c78:	e1c1c4b4 	strh	ip, [r1, #68]	; 0x44
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004c7c:	e1d1e4b4 	ldrh	lr, [r1, #68]	; 0x44
40004c80:	e1d104b6 	ldrh	r0, [r1, #70]	; 0x46
40004c84:	e59f1098 	ldr	r1, [pc, #152]	; 40004d24 <CyFxUvcApplnDmaCallback+0x1b4>
40004c88:	e060c00e 	rsb	ip, r0, lr
40004c8c:	e3a00004 	mov	r0, #4
40004c90:	e58dc000 	str	ip, [sp]
40004c94:	eb003998 	bl	400132fc <CyU3PDebugPrint>
40004c98:	eaffffc3 	b	40004bac <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004c9c:	e5956000 	ldr	r6, [r5]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004ca0:	e3e01000 	mvn	r1, #0
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004ca4:	e59f4064 	ldr	r4, [pc, #100]	; 40004d10 <CyFxUvcApplnDmaCallback+0x1a0>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004ca8:	e246600c 	sub	r6, r6, #12
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004cac:	e59f0068 	ldr	r0, [pc, #104]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
40004cb0:	eb001583 	bl	4000a2c4 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004cb4:	e59f106c 	ldr	r1, [pc, #108]	; 40004d28 <CyFxUvcApplnDmaCallback+0x1b8>
40004cb8:	e1a00006 	mov	r0, r6
40004cbc:	e3a0200c 	mov	r2, #12
40004cc0:	ebfffb03 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40004cc4:	e59f0050 	ldr	r0, [pc, #80]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
40004cc8:	eb0015b2 	bl	4000a398 <_txe_mutex_put>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004ccc:	e1d4c3b4 	ldrh	ip, [r4, #52]	; 0x34
40004cd0:	e1d510b4 	ldrh	r1, [r5, #4]
40004cd4:	e28c0001 	add	r0, ip, #1
40004cd8:	e1c403b4 	strh	r0, [r4, #52]	; 0x34
40004cdc:	eaffffd2 	b	40004c2c <CyFxUvcApplnDmaCallback+0xbc>
                pb++;
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40004ce0:	e3e01000 	mvn	r1, #0
40004ce4:	e59f0030 	ldr	r0, [pc, #48]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
40004ce8:	eb001575 	bl	4000a2c4 <_txe_mutex_get>
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40004cec:	e5d71481 	ldrb	r1, [r7, #1153]	; 0x481
                	CyU3PMutexPut(&imgHdMux);
40004cf0:	e59f0024 	ldr	r0, [pc, #36]	; 40004d1c <CyFxUvcApplnDmaCallback+0x1ac>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
#if 1   //remove the still flag clearing here
                if(stiflag == 0x0F){
                	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40004cf4:	e20120df 	and	r2, r1, #223	; 0xdf
40004cf8:	e5c72481 	strb	r2, [r7, #1153]	; 0x481
                	CyU3PMutexPut(&imgHdMux);
40004cfc:	eb0015a5 	bl	4000a398 <_txe_mutex_put>
                	stiflag = 0xAA;
40004d00:	e3a030aa 	mov	r3, #170	; 0xaa
40004d04:	e1d510b4 	ldrh	r1, [r5, #4]
40004d08:	e584303c 	str	r3, [r4, #60]	; 0x3c
40004d0c:	eaffffc4 	b	40004c24 <CyFxUvcApplnDmaCallback+0xb4>
40004d10:	40030f90 	.word	0x40030f90
40004d14:	00003ff0 	.word	0x00003ff0
40004d18:	40030000 	.word	0x40030000
40004d1c:	400330d0 	.word	0x400330d0
40004d20:	40032ee4 	.word	0x40032ee4
40004d24:	4001145c 	.word	0x4001145c
40004d28:	40030480 	.word	0x40030480

40004d2c <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004d2c:	e59f32c0 	ldr	r3, [pc, #704]	; 40004ff4 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004d30:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004d34:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004ff8 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004d38:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004d3c:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004d40:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004d44:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004d48:	e59f22ac 	ldr	r2, [pc, #684]	; 40004ffc <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004d4c:	e59f02ac 	ldr	r0, [pc, #684]	; 40005000 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004d50:	e59f32ac 	ldr	r3, [pc, #684]	; 40005004 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004d54:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004d58:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004d5c:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004d60:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d64:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004d68:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004d6c:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004d70:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004d74:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004d78:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d7c:	0a00004f 	beq	40004ec0 <CyFxUVCApplnUSBSetupCB+0x194>
40004d80:	9a000006 	bls	40004da0 <CyFxUVCApplnUSBSetupCB+0x74>
40004d84:	e3540021 	cmp	r4, #33	; 0x21
40004d88:	0a00003a 	beq	40004e78 <CyFxUVCApplnUSBSetupCB+0x14c>
40004d8c:	e35400a1 	cmp	r4, #161	; 0xa1
40004d90:	0a000038 	beq	40004e78 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d94:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d98:	e28dd010 	add	sp, sp, #16
40004d9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004da0:	e3540001 	cmp	r4, #1
40004da4:	1afffffa 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004da8:	e358000b 	cmp	r8, #11
40004dac:	1afffff8 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004db0:	e3550001 	cmp	r5, #1
40004db4:	1afffff6 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
40004db8:	e3570000 	cmp	r7, #0
40004dbc:	1afffff4 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004dc0:	e59f4240 	ldr	r4, [pc, #576]	; 40005008 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004dc4:	e59f1240 	ldr	r1, [pc, #576]	; 4000500c <CyFxUVCApplnUSBSetupCB+0x2e0>
40004dc8:	e3a00004 	mov	r0, #4
40004dcc:	eb00394a 	bl	400132fc <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004dd0:	e1a00005 	mov	r0, r5
40004dd4:	eb005a58 	bl	4001b73c <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004dd8:	e1a01005 	mov	r1, r5
40004ddc:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004de0:	e5847028 	str	r7, [r4, #40]	; 0x28
                    streamingStarted = CyFalse;
40004de4:	e584702c 	str	r7, [r4, #44]	; 0x2c
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004de8:	eb0063e5 	bl	4001dd84 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004dec:	e3a00064 	mov	r0, #100	; 0x64
40004df0:	eb003ab2 	bl	400138c0 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004df4:	e59f0214 	ldr	r0, [pc, #532]	; 40005010 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004df8:	eb004e46 	bl	40018718 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004dfc:	e3a00083 	mov	r0, #131	; 0x83
40004e00:	eb005fd9 	bl	4001cd6c <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004e04:	e1a01007 	mov	r1, r7
40004e08:	e3a00083 	mov	r0, #131	; 0x83
40004e0c:	eb0063dc 	bl	4001dd84 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004e10:	e3a00064 	mov	r0, #100	; 0x64
40004e14:	eb003aa9 	bl	400138c0 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004e18:	e1a01007 	mov	r1, r7
40004e1c:	e1a02005 	mov	r2, r5
40004e20:	e3a00083 	mov	r0, #131	; 0x83
40004e24:	eb00649c 	bl	4001e09c <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004e28:	eb005ed7 	bl	4001c98c <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004e2c:	e5845048 	str	r5, [r4, #72]	; 0x48
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004e30:	e1a00004 	mov	r0, r4
40004e34:	e1a01005 	mov	r1, r5
40004e38:	e3a02002 	mov	r2, #2
40004e3c:	e28d300c 	add	r3, sp, #12
40004e40:	e58d7000 	str	r7, [sp]
40004e44:	eb001456 	bl	40009fa4 <_txe_event_flags_get>
40004e48:	e2506000 	subs	r6, r0, #0
40004e4c:	1a00002e 	bne	40004f0c <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004e50:	e3e01001 	mvn	r1, #1
40004e54:	e3a02002 	mov	r2, #2
40004e58:	e1a00004 	mov	r0, r4
40004e5c:	eb001480 	bl	4000a064 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004e60:	e1a00004 	mov	r0, r4
40004e64:	e3a01002 	mov	r1, #2
40004e68:	e1a02006 	mov	r2, r6
40004e6c:	eb00147c 	bl	4000a064 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e70:	e1a00005 	mov	r0, r5
40004e74:	eaffffc7 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e78:	e21550ff 	ands	r5, r5, #255	; 0xff
40004e7c:	1a00001a 	bne	40004eec <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e80:	e1a02005 	mov	r2, r5
40004e84:	e59f017c 	ldr	r0, [pc, #380]	; 40005008 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e88:	e3a01004 	mov	r1, #4
40004e8c:	eb001474 	bl	4000a064 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e90:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e94:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e98:	0affffbe 	beq	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e9c:	e59f1170 	ldr	r1, [pc, #368]	; 40005014 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004ea0:	e3a00004 	mov	r0, #4
40004ea4:	eb003914 	bl	400132fc <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ea8:	e1a00005 	mov	r0, r5
40004eac:	e3a01001 	mov	r1, #1
40004eb0:	e1a02005 	mov	r2, r5
40004eb4:	eb006478 	bl	4001e09c <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004eb8:	e3a00001 	mov	r0, #1
40004ebc:	eaffffb5 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004ec0:	e3580001 	cmp	r8, #1
40004ec4:	1affffb2 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004ec8:	e3550083 	cmp	r5, #131	; 0x83
40004ecc:	1affffb0 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004ed0:	e59f7130 	ldr	r7, [pc, #304]	; 40005008 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004ed4:	e597602c 	ldr	r6, [r7, #44]	; 0x2c
40004ed8:	e3560001 	cmp	r6, #1
40004edc:	0a000015 	beq	40004f38 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004ee0:	eb005ea9 	bl	4001c98c <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004ee4:	e1a00008 	mov	r0, r8
40004ee8:	eaffffaa 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004eec:	e3550001 	cmp	r5, #1
40004ef0:	1affffa7 	bne	40004d94 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004ef4:	e3a02000 	mov	r2, #0
40004ef8:	e59f0108 	ldr	r0, [pc, #264]	; 40005008 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004efc:	e3a01008 	mov	r1, #8
40004f00:	eb001457 	bl	4000a064 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004f04:	e2502000 	subs	r2, r0, #0
40004f08:	1a000001 	bne	40004f14 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004f0c:	e1a00005 	mov	r0, r5
40004f10:	eaffffa0 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004f14:	e59f10fc 	ldr	r1, [pc, #252]	; 40005018 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004f18:	e3a00004 	mov	r0, #4
40004f1c:	eb0038f6 	bl	400132fc <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004f20:	e3a00000 	mov	r0, #0
40004f24:	e1a01005 	mov	r1, r5
40004f28:	e1a02000 	mov	r2, r0
40004f2c:	eb00645a 	bl	4001e09c <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004f30:	e1a00005 	mov	r0, r5
40004f34:	eaffff97 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004f38:	e59f10dc 	ldr	r1, [pc, #220]	; 4000501c <CyFxUVCApplnUSBSetupCB+0x2f0>
40004f3c:	e3a00004 	mov	r0, #4
40004f40:	eb0038ed 	bl	400132fc <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004f44:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004f48:	e1a00006 	mov	r0, r6
40004f4c:	eb0059fa 	bl	4001b73c <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f50:	e1a01006 	mov	r1, r6
40004f54:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004f58:	e5878028 	str	r8, [r7, #40]	; 0x28
                        streamingStarted = CyFalse;
40004f5c:	e587802c 	str	r8, [r7, #44]	; 0x2c

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004f60:	eb006387 	bl	4001dd84 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f64:	e3a00064 	mov	r0, #100	; 0x64
40004f68:	eb003a54 	bl	400138c0 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004f6c:	e59f009c 	ldr	r0, [pc, #156]	; 40005010 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004f70:	eb004de8 	bl	40018718 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004f74:	e1a00005 	mov	r0, r5
40004f78:	eb005f7b 	bl	4001cd6c <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004f7c:	e1a01008 	mov	r1, r8
40004f80:	e1a00005 	mov	r0, r5
40004f84:	eb00637e 	bl	4001dd84 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f88:	e3a00064 	mov	r0, #100	; 0x64
40004f8c:	eb003a4b 	bl	400138c0 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f90:	e1a01008 	mov	r1, r8
40004f94:	e1a02006 	mov	r2, r6
40004f98:	e1a00005 	mov	r0, r5
40004f9c:	eb00643e 	bl	4001e09c <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004fa0:	eb005e79 	bl	4001c98c <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004fa4:	e5876048 	str	r6, [r7, #72]	; 0x48
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004fa8:	e1a00007 	mov	r0, r7
40004fac:	e1a01006 	mov	r1, r6
40004fb0:	e1a02004 	mov	r2, r4
40004fb4:	e28d300c 	add	r3, sp, #12
40004fb8:	e58d8000 	str	r8, [sp]
40004fbc:	eb0013f8 	bl	40009fa4 <_txe_event_flags_get>
40004fc0:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004fc4:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004fc8:	1affff72 	bne	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004fcc:	e3e01001 	mvn	r1, #1
40004fd0:	e1a02004 	mov	r2, r4
40004fd4:	e1a00007 	mov	r0, r7
40004fd8:	eb001421 	bl	4000a064 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004fdc:	e1a00007 	mov	r0, r7
40004fe0:	e1a01004 	mov	r1, r4
40004fe4:	e1a02005 	mov	r2, r5
40004fe8:	eb00141d 	bl	4000a064 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004fec:	e1a00006 	mov	r0, r6
40004ff0:	eaffff68 	b	40004d98 <CyFxUVCApplnUSBSetupCB+0x6c>
40004ff4:	40032ec0 	.word	0x40032ec0
40004ff8:	40033144 	.word	0x40033144
40004ffc:	40032fc0 	.word	0x40032fc0
40005000:	40032ff0 	.word	0x40032ff0
40005004:	40032ff2 	.word	0x40032ff2
40005008:	40030f90 	.word	0x40030f90
4000500c:	40011510 	.word	0x40011510
40005010:	40032ee4 	.word	0x40032ee4
40005014:	400114a4 	.word	0x400114a4
40005018:	400114dc 	.word	0x400114dc
4000501c:	40011528 	.word	0x40011528

40005020 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40005020:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40005024:	e92d4010 	push	{r4, lr}
40005028:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
4000502c:	18bd8010 	popne	{r4, pc}
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40005030:	e59f30cc 	ldr	r3, [pc, #204]	; 40005104 <CyFxGpifCB+0xe4>
40005034:	e5d3304c 	ldrb	r3, [r3, #76]	; 0x4c
40005038:	e3530003 	cmp	r3, #3
4000503c:	0a000028 	beq	400050e4 <CyFxGpifCB+0xc4>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40005040:	e3530002 	cmp	r3, #2
40005044:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40005048:	e2411008 	sub	r1, r1, #8
4000504c:	e351000a 	cmp	r1, #10
40005050:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005054:	ea00001b 	b	400050c8 <CyFxGpifCB+0xa8>
40005058:	40005088 	.word	0x40005088
4000505c:	400050c8 	.word	0x400050c8
40005060:	400050c8 	.word	0x400050c8
40005064:	40005084 	.word	0x40005084
40005068:	400050c8 	.word	0x400050c8
4000506c:	400050c8 	.word	0x400050c8
40005070:	400050c8 	.word	0x400050c8
40005074:	400050c0 	.word	0x400050c0
40005078:	400050c8 	.word	0x400050c8
4000507c:	400050c8 	.word	0x400050c8
40005080:	40005084 	.word	0x40005084
40005084:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005088:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
4000508c:	e59f0074 	ldr	r0, [pc, #116]	; 40005108 <CyFxGpifCB+0xe8>
40005090:	eb0050d1 	bl	400193dc <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005094:	e2502000 	subs	r2, r0, #0
40005098:	0afffff9 	beq	40005084 <CyFxGpifCB+0x64>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
4000509c:	e3a00004 	mov	r0, #4
400050a0:	e59f1064 	ldr	r1, [pc, #100]	; 4000510c <CyFxGpifCB+0xec>
400050a4:	eb003894 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400050a8:	e59f1060 	ldr	r1, [pc, #96]	; 40005110 <CyFxGpifCB+0xf0>
400050ac:	e3a00004 	mov	r0, #4
400050b0:	eb003891 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400050b4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400050b8:	eb000ef1 	bl	40008c84 <_tx_thread_sleep>
400050bc:	eafffff9 	b	400050a8 <CyFxGpifCB+0x88>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
400050c0:	e3a01001 	mov	r1, #1
400050c4:	eafffff0 	b	4000508c <CyFxGpifCB+0x6c>
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
400050c8:	e59f1044 	ldr	r1, [pc, #68]	; 40005114 <CyFxGpifCB+0xf4>
400050cc:	e3a00001 	mov	r0, #1
400050d0:	eb003889 	bl	400132fc <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        //hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
400050d4:	e59f103c 	ldr	r1, [pc, #60]	; 40005118 <CyFxGpifCB+0xf8>
400050d8:	e3a00004 	mov	r0, #4
    }
}
400050dc:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        //hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
400050e0:	ea003885 	b	400132fc <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
400050e4:	e241000b 	sub	r0, r1, #11
400050e8:	e3500003 	cmp	r0, #3
400050ec:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
400050f0:	eafffff4 	b	400050c8 <CyFxGpifCB+0xa8>
400050f4:	40005088 	.word	0x40005088
400050f8:	400050c0 	.word	0x400050c0
400050fc:	40005084 	.word	0x40005084
40005100:	40005084 	.word	0x40005084
40005104:	40030f90 	.word	0x40030f90
40005108:	40032ee4 	.word	0x40032ee4
4000510c:	40011564 	.word	0x40011564
40005110:	40011594 	.word	0x40011594
40005114:	4001154c 	.word	0x4001154c
40005118:	400115a8 	.word	0x400115a8

4000511c <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
4000511c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005120:	e59f4108 	ldr	r4, [pc, #264]	; 40005230 <I2CCmdHandler+0x114>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
40005124:	e24dd034 	sub	sp, sp, #52	; 0x34
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
40005128:	e5d45050 	ldrb	r5, [r4, #80]	; 0x50
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
4000512c:	e5d42059 	ldrb	r2, [r4, #89]	; 0x59
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
40005130:	e5d46058 	ldrb	r6, [r4, #88]	; 0x58
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
40005134:	e5d47052 	ldrb	r7, [r4, #82]	; 0x52
40005138:	e5d4e053 	ldrb	lr, [r4, #83]	; 0x53
4000513c:	e5d48054 	ldrb	r8, [r4, #84]	; 0x54
40005140:	e5d4a055 	ldrb	sl, [r4, #85]	; 0x55
40005144:	e5d49056 	ldrb	r9, [r4, #86]	; 0x56
40005148:	e5d4b057 	ldrb	fp, [r4, #87]	; 0x57
4000514c:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
40005150:	e58d201c 	str	r2, [sp, #28]
40005154:	e3a00004 	mov	r0, #4
40005158:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
4000515c:	e59f10d0 	ldr	r1, [pc, #208]	; 40005234 <I2CCmdHandler+0x118>
40005160:	e1a02005 	mov	r2, r5
40005164:	e88d4080 	stm	sp, {r7, lr}
40005168:	e58d8008 	str	r8, [sp, #8]
4000516c:	e58da00c 	str	sl, [sp, #12]
40005170:	e58d9010 	str	r9, [sp, #16]
40005174:	e58db014 	str	fp, [sp, #20]
40005178:	e58d6018 	str	r6, [sp, #24]
4000517c:	e58dc020 	str	ip, [sp, #32]
40005180:	eb00385d 	bl	400132fc <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005184:	e3550000 	cmp	r5, #0
40005188:	0a000003 	beq	4000519c <I2CCmdHandler+0x80>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
4000518c:	e3550001 	cmp	r5, #1
40005190:	0a000016 	beq	400051f0 <I2CCmdHandler+0xd4>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005194:	e28dd034 	add	sp, sp, #52	; 0x34
40005198:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
4000519c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
400051a0:	e5d40052 	ldrb	r0, [r4, #82]	; 0x52
400051a4:	e5d41053 	ldrb	r1, [r4, #83]	; 0x53
400051a8:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
400051ac:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
400051b0:	e58dc000 	str	ip, [sp]
400051b4:	e5d42054 	ldrb	r2, [r4, #84]	; 0x54
400051b8:	e28dc02c 	add	ip, sp, #44	; 0x2c
400051bc:	e3800001 	orr	r0, r0, #1
400051c0:	e3811001 	orr	r1, r1, #1
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
400051c4:	e5c4e05b 	strb	lr, [r4, #91]	; 0x5b
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
400051c8:	e58dc004 	str	ip, [sp, #4]
400051cc:	ebfffc48 	bl	400042f4 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
400051d0:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
			if(CmdDataLen == 2){
400051d4:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
400051d8:	e5c40059 	strb	r0, [r4, #89]	; 0x59
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051dc:	05dd002d 	ldrbeq	r0, [sp, #45]	; 0x2d
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051e0:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
400051e4:	05c4005a 	strbeq	r0, [r4, #90]	; 0x5a
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
400051e8:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
400051ec:	eaffffe8 	b	40005194 <I2CCmdHandler+0x78>
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
400051f0:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
400051f4:	e5d40052 	ldrb	r0, [r4, #82]	; 0x52
400051f8:	e5d41053 	ldrb	r1, [r4, #83]	; 0x53
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
400051fc:	e5d45059 	ldrb	r5, [r4, #89]	; 0x59
			buf[1] = I2CCMDArry[10];
40005200:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005204:	e58dc000 	str	ip, [sp]
40005208:	e5d42054 	ldrb	r2, [r4, #84]	; 0x54
4000520c:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005210:	e5d43055 	ldrb	r3, [r4, #85]	; 0x55
40005214:	e20110fe 	and	r1, r1, #254	; 0xfe
40005218:	e20000fe 	and	r0, r0, #254	; 0xfe
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
4000521c:	e5cd502c 	strb	r5, [sp, #44]	; 0x2c
			buf[1] = I2CCMDArry[10];
40005220:	e5cde02d 	strb	lr, [sp, #45]	; 0x2d
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005224:	e58dc004 	str	ip, [sp, #4]
40005228:	ebfffbd3 	bl	4000417c <SensorWrite2B>
4000522c:	eaffffd8 	b	40005194 <I2CCmdHandler+0x78>
40005230:	40030f90 	.word	0x40030f90
40005234:	400115bc 	.word	0x400115bc

40005238 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
40005238:	e92d4070 	push	{r4, r5, r6, lr}
4000523c:	e1a06001 	mov	r6, r1
40005240:	e24dd008 	sub	sp, sp, #8
40005244:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005248:	e3a05000 	mov	r5, #0
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000524c:	e3e01000 	mvn	r1, #0
40005250:	e590001c 	ldr	r0, [r0, #28]
40005254:	eb00141a 	bl	4000a2c4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40005258:	e0650006 	rsb	r0, r5, r6
4000525c:	e270c000 	rsbs	ip, r0, #0
40005260:	e0acc000 	adc	ip, ip, r0
40005264:	e3a01020 	mov	r1, #32
40005268:	e3a02027 	mov	r2, #39	; 0x27
4000526c:	e3a03030 	mov	r3, #48	; 0x30
40005270:	e1a00004 	mov	r0, r4
40005274:	e58dc000 	str	ip, [sp]
40005278:	e58d5004 	str	r5, [sp, #4]
4000527c:	ebfff88d 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005280:	e1560005 	cmp	r6, r5
40005284:	03a06002 	moveq	r6, #2
40005288:	13a06001 	movne	r6, #1
4000528c:	e1a00004 	mov	r0, r4
40005290:	e3a01021 	mov	r1, #33	; 0x21
40005294:	e3a02025 	mov	r2, #37	; 0x25
40005298:	e3a03030 	mov	r3, #48	; 0x30
4000529c:	e58d6000 	str	r6, [sp]
400052a0:	e58d5004 	str	r5, [sp, #4]
400052a4:	ebfff883 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400052a8:	e594001c 	ldr	r0, [r4, #28]
}
400052ac:	e28dd008 	add	sp, sp, #8
400052b0:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400052b4:	ea001437 	b	4000a398 <_txe_mutex_put>

400052b8 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
400052b8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052bc:	e3500023 	cmp	r0, #35	; 0x23
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
400052c0:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400052c4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
400052c8:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
400052cc:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
400052d0:	9a000024 	bls	40005368 <ControlHandle+0xb0>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400052d4:	e59f6f58 	ldr	r6, [pc, #3928]	; 40006234 <ControlHandle+0xf7c>
400052d8:	e0872087 	add	r2, r7, r7, lsl #1
400052dc:	e1a02182 	lsl	r2, r2, #3
400052e0:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
400052e4:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
400052e8:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
400052ec:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052f0:	e59f3f40 	ldr	r3, [pc, #3904]	; 40006238 <ControlHandle+0xf80>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
400052f4:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052f8:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400052fc:	e3550083 	cmp	r5, #131	; 0x83
40005300:	0a000023 	beq	40005394 <ControlHandle+0xdc>
40005304:	9a00002c 	bls	400053bc <ControlHandle+0x104>
40005308:	e3550085 	cmp	r5, #133	; 0x85
4000530c:	0a00008b 	beq	40005540 <ControlHandle+0x288>
40005310:	3a000079 	bcc	400054fc <ControlHandle+0x244>
40005314:	e3550086 	cmp	r5, #134	; 0x86
40005318:	0a0000c8 	beq	40005640 <ControlHandle+0x388>
4000531c:	e3550087 	cmp	r5, #135	; 0x87
40005320:	0a0000bc 	beq	40005618 <ControlHandle+0x360>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40005324:	e3a00000 	mov	r0, #0
40005328:	e3a01001 	mov	r1, #1
4000532c:	e1a02000 	mov	r2, r0
40005330:	eb006359 	bl	4001e09c <CyU3PUsbStall>
			  break;
40005334:	e3a0c0ff 	mov	ip, #255	; 0xff
40005338:	e1a0700c 	mov	r7, ip
4000533c:	e1a0e00c 	mov	lr, ip
40005340:	e1a0400c 	mov	r4, ip
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
40005344:	e59f1ef0 	ldr	r1, [pc, #3824]	; 4000623c <ControlHandle+0xf84>
40005348:	e1a02005 	mov	r2, r5
4000534c:	e1a03004 	mov	r3, r4
40005350:	e3a00004 	mov	r0, #4
40005354:	e58de000 	str	lr, [sp]
40005358:	e98d1080 	stmib	sp, {r7, ip}
4000535c:	eb0037e6 	bl	400132fc <CyU3PDebugPrint>
}
40005360:	e28dd02c 	add	sp, sp, #44	; 0x2c
40005364:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005368:	e59f6ec4 	ldr	r6, [pc, #3780]	; 40006234 <ControlHandle+0xf7c>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000536c:	e59f3ec4 	ldr	r3, [pc, #3780]	; 40006238 <ControlHandle+0xf80>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005370:	e0805080 	add	r5, r0, r0, lsl #1
40005374:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005378:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
4000537c:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005380:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005384:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005388:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
4000538c:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005390:	1affffdb 	bne	40005304 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005394:	e3540023 	cmp	r4, #35	; 0x23
40005398:	9a0000c6 	bls	400056b8 <ControlHandle+0x400>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
4000539c:	e0870087 	add	r0, r7, r7, lsl #1
400053a0:	e0866180 	add	r6, r6, r0, lsl #3
400053a4:	e59fae94 	ldr	sl, [pc, #3732]	; 40006240 <ControlHandle+0xf88>
400053a8:	e5d6c005 	ldrb	ip, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
400053ac:	e5d6e006 	ldrb	lr, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
400053b0:	e5cac05c 	strb	ip, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
400053b4:	e5cae05d 	strb	lr, [sl, #93]	; 0x5d
400053b8:	ea00000b 	b	400053ec <ControlHandle+0x134>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400053bc:	e3550081 	cmp	r5, #129	; 0x81
400053c0:	0a00006a 	beq	40005570 <ControlHandle+0x2b8>
400053c4:	9a000010 	bls	4000540c <ControlHandle+0x154>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
400053c8:	e3540023 	cmp	r4, #35	; 0x23
400053cc:	9a0000ad 	bls	40005688 <ControlHandle+0x3d0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053d0:	e087a087 	add	sl, r7, r7, lsl #1
400053d4:	e086618a 	add	r6, r6, sl, lsl #3
400053d8:	e5d64003 	ldrb	r4, [r6, #3]
400053dc:	e59fae5c 	ldr	sl, [pc, #3676]	; 40006240 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053e0:	e5d67004 	ldrb	r7, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
400053e4:	e5ca405c 	strb	r4, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
400053e8:	e5ca705d 	strb	r7, [sl, #93]	; 0x5d
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400053ec:	e1a00008 	mov	r0, r8
400053f0:	e59f1e4c 	ldr	r1, [pc, #3660]	; 40006244 <ControlHandle+0xf8c>
400053f4:	eb0060fd 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400053f8:	e3a0c0ff 	mov	ip, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400053fc:	e5da705c 	ldrb	r7, [sl, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40005400:	e1a0e00c 	mov	lr, ip
40005404:	e1a0400c 	mov	r4, ip
40005408:	eaffffcd 	b	40005344 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
4000540c:	e3550001 	cmp	r5, #1
40005410:	1affffc3 	bne	40005324 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40005414:	e59f1e24 	ldr	r1, [pc, #3620]	; 40006240 <ControlHandle+0xf88>
40005418:	e28d2026 	add	r2, sp, #38	; 0x26
4000541c:	e3a00020 	mov	r0, #32
40005420:	e281105c 	add	r1, r1, #92	; 0x5c
40005424:	eb005e83 	bl	4001ce38 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005428:	e2502000 	subs	r2, r0, #0
4000542c:	1a00034e 	bne	4000616c <ControlHandle+0xeb4>
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
40005430:	e59fce08 	ldr	ip, [pc, #3592]	; 40006240 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
40005434:	e59f0e04 	ldr	r0, [pc, #3588]	; 40006240 <ControlHandle+0xf88>
				  Data1 = glEp0Buffer[1];
40005438:	e5dce05d 	ldrb	lr, [ip, #93]	; 0x5d
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
4000543c:	e59f2dfc 	ldr	r2, [pc, #3580]	; 40006240 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
40005440:	e5d0305c 	ldrb	r3, [r0, #92]	; 0x5c
				  Data1 = glEp0Buffer[1];
40005444:	e58de01c 	str	lr, [sp, #28]
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005448:	e5d2e05e 	ldrb	lr, [r2, #94]	; 0x5e
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
4000544c:	e58d3014 	str	r3, [sp, #20]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
40005450:	e58de018 	str	lr, [sp, #24]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005454:	e3540026 	cmp	r4, #38	; 0x26
40005458:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
4000545c:	ea0002b3 	b	40005f30 <ControlHandle+0xc78>
40005460:	40005e70 	.word	0x40005e70
40005464:	40005dac 	.word	0x40005dac
40005468:	40005f30 	.word	0x40005f30
4000546c:	40005f30 	.word	0x40005f30
40005470:	40005d48 	.word	0x40005d48
40005474:	40005c08 	.word	0x40005c08
40005478:	40005b8c 	.word	0x40005b8c
4000547c:	40005f30 	.word	0x40005f30
40005480:	40005f30 	.word	0x40005f30
40005484:	40005f30 	.word	0x40005f30
40005488:	40005f30 	.word	0x40005f30
4000548c:	40005b04 	.word	0x40005b04
40005490:	40005f30 	.word	0x40005f30
40005494:	40005f30 	.word	0x40005f30
40005498:	40005f30 	.word	0x40005f30
4000549c:	40005f30 	.word	0x40005f30
400054a0:	400060e8 	.word	0x400060e8
400054a4:	40005f30 	.word	0x40005f30
400054a8:	40005f30 	.word	0x40005f30
400054ac:	40005f30 	.word	0x40005f30
400054b0:	40005f30 	.word	0x40005f30
400054b4:	40005f30 	.word	0x40005f30
400054b8:	40005f30 	.word	0x40005f30
400054bc:	40005f30 	.word	0x40005f30
400054c0:	40005f30 	.word	0x40005f30
400054c4:	40006044 	.word	0x40006044
400054c8:	40005fa8 	.word	0x40005fa8
400054cc:	40005f30 	.word	0x40005f30
400054d0:	40005f98 	.word	0x40005f98
400054d4:	40005f30 	.word	0x40005f30
400054d8:	40005aa8 	.word	0x40005aa8
400054dc:	40005a24 	.word	0x40005a24
400054e0:	40005f30 	.word	0x40005f30
400054e4:	40005f30 	.word	0x40005f30
400054e8:	40005f30 	.word	0x40005f30
400054ec:	40005f30 	.word	0x40005f30
400054f0:	40005988 	.word	0x40005988
400054f4:	40005970 	.word	0x40005970
400054f8:	4000590c 	.word	0x4000590c
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400054fc:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005500:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005504:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005508:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000550c:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005510:	859fad28 	ldrhi	sl, [pc, #3368]	; 40006240 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005514:	959fad24 	ldrls	sl, [pc, #3364]	; 40006240 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005518:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
4000551c:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005520:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
40005524:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
40005528:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000552c:	e5ca105c 	strb	r1, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
40005530:	e5ca205d 	strb	r2, [sl, #93]	; 0x5d
			  glEp0Buffer[2] = 0;
40005534:	e5ca305e 	strb	r3, [sl, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
40005538:	e5ca305f 	strb	r3, [sl, #95]	; 0x5f
4000553c:	eaffffaa 	b	400053ec <ControlHandle+0x134>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005540:	e59f4cf8 	ldr	r4, [pc, #3320]	; 40006240 <ControlHandle+0xf88>
			  glEp0Buffer[1] = 0;
40005544:	e3a0c000 	mov	ip, #0
40005548:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000554c:	e284105c 	add	r1, r4, #92	; 0x5c
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40005550:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005554:	e3a00002 	mov	r0, #2
40005558:	eb0060a4 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
4000555c:	e3a0c0ff 	mov	ip, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40005560:	e5d4705c 	ldrb	r7, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40005564:	e1a0e00c 	mov	lr, ip
40005568:	e1a0400c 	mov	r4, ip
4000556c:	eaffff74 	b	40005344 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
40005570:	e2441001 	sub	r1, r4, #1
40005574:	e3510025 	cmp	r1, #37	; 0x25
40005578:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
4000557c:	ea0000d0 	b	400058c4 <ControlHandle+0x60c>
40005580:	40005894 	.word	0x40005894
40005584:	400058c4 	.word	0x400058c4
40005588:	400058c4 	.word	0x400058c4
4000558c:	400058c4 	.word	0x400058c4
40005590:	40005874 	.word	0x40005874
40005594:	400058c4 	.word	0x400058c4
40005598:	400058c4 	.word	0x400058c4
4000559c:	400058c4 	.word	0x400058c4
400055a0:	400058c4 	.word	0x400058c4
400055a4:	400058c4 	.word	0x400058c4
400055a8:	400058e8 	.word	0x400058e8
400055ac:	400058c4 	.word	0x400058c4
400055b0:	400058c4 	.word	0x400058c4
400055b4:	400058c4 	.word	0x400058c4
400055b8:	400058c4 	.word	0x400058c4
400055bc:	400058c4 	.word	0x400058c4
400055c0:	400058c4 	.word	0x400058c4
400055c4:	400058c4 	.word	0x400058c4
400055c8:	400058c4 	.word	0x400058c4
400055cc:	400058c4 	.word	0x400058c4
400055d0:	400058c4 	.word	0x400058c4
400055d4:	400058c4 	.word	0x400058c4
400055d8:	400058c4 	.word	0x400058c4
400055dc:	400058c4 	.word	0x400058c4
400055e0:	40005838 	.word	0x40005838
400055e4:	400058c4 	.word	0x400058c4
400055e8:	400058c4 	.word	0x400058c4
400055ec:	4000580c 	.word	0x4000580c
400055f0:	400058c4 	.word	0x400058c4
400055f4:	400058c4 	.word	0x400058c4
400055f8:	40005770 	.word	0x40005770
400055fc:	400058c4 	.word	0x400058c4
40005600:	400058c4 	.word	0x400058c4
40005604:	400058c4 	.word	0x400058c4
40005608:	400058c4 	.word	0x400058c4
4000560c:	40005734 	.word	0x40005734
40005610:	40005734 	.word	0x40005734
40005614:	40005734 	.word	0x40005734
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005618:	e3540023 	cmp	r4, #35	; 0x23
4000561c:	9a000031 	bls	400056e8 <ControlHandle+0x430>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005620:	e0877087 	add	r7, r7, r7, lsl #1
40005624:	e0866187 	add	r6, r6, r7, lsl #3
40005628:	e59fac10 	ldr	sl, [pc, #3088]	; 40006240 <ControlHandle+0xf88>
4000562c:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005630:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005634:	e5ca205c 	strb	r2, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005638:	e5ca105d 	strb	r1, [sl, #93]	; 0x5d
4000563c:	eaffff6a 	b	400053ec <ControlHandle+0x134>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005640:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005644:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005648:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
4000564c:	80866187 	addhi	r6, r6, r7, lsl #3
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005650:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
40005654:	859f8be4 	ldrhi	r8, [pc, #3044]	; 40006240 <ControlHandle+0xf88>
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005658:	959f8be0 	ldrls	r8, [pc, #3040]	; 40006240 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
4000565c:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005660:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005664:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
40005668:	e5c8305c 	strb	r3, [r8, #92]	; 0x5c
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000566c:	e59f1bd0 	ldr	r1, [pc, #3024]	; 40006244 <ControlHandle+0xf8c>
40005670:	eb00605e 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005674:	e3a0c0ff 	mov	ip, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40005678:	e5d8705c 	ldrb	r7, [r8, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000567c:	e1a0e00c 	mov	lr, ip
40005680:	e1a0400c 	mov	r4, ip
40005684:	eaffff2e 	b	40005344 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005688:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
4000568c:	10844084 	addne	r4, r4, r4, lsl #1
40005690:	10866184 	addne	r6, r6, r4, lsl #3
40005694:	159faba4 	ldrne	sl, [pc, #2980]	; 40006240 <ControlHandle+0xf88>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005698:	059faba0 	ldreq	sl, [pc, #2976]	; 40006240 <ControlHandle+0xf88>
4000569c:	059f3ba4 	ldreq	r3, [pc, #2980]	; 40006248 <ControlHandle+0xf90>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400056a0:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
400056a4:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
400056a8:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400056ac:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
400056b0:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
400056b4:	eaffff4c 	b	400053ec <ControlHandle+0x134>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
400056b8:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056bc:	10844084 	addne	r4, r4, r4, lsl #1
400056c0:	10866184 	addne	r6, r6, r4, lsl #3
400056c4:	159fab74 	ldrne	sl, [pc, #2932]	; 40006240 <ControlHandle+0xf88>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
400056c8:	059fab70 	ldreq	sl, [pc, #2928]	; 40006240 <ControlHandle+0xf88>
400056cc:	059f3b78 	ldreq	r3, [pc, #2936]	; 4000624c <ControlHandle+0xf94>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056d0:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
400056d4:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
400056d8:	058a305c 	streq	r3, [sl, #92]	; 0x5c
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
400056dc:	15ca205c 	strbne	r2, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
400056e0:	15ca305d 	strbne	r3, [sl, #93]	; 0x5d
400056e4:	eaffff40 	b	400053ec <ControlHandle+0x134>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
400056e8:	e354000b 	cmp	r4, #11
400056ec:	0a000007 	beq	40005710 <ControlHandle+0x458>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056f0:	e084a084 	add	sl, r4, r4, lsl #1
400056f4:	e086618a 	add	r6, r6, sl, lsl #3
400056f8:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
400056fc:	e59fab3c 	ldr	sl, [pc, #2876]	; 40006240 <ControlHandle+0xf88>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005700:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005704:	e5ca305c 	strb	r3, [sl, #92]	; 0x5c
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005708:	e5ca005d 	strb	r0, [sl, #93]	; 0x5d
4000570c:	eaffff36 	b	400053ec <ControlHandle+0x134>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005710:	e59fab28 	ldr	sl, [pc, #2856]	; 40006240 <ControlHandle+0xf88>
40005714:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005718:	e5d6e294 	ldrb	lr, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
4000571c:	e3a04000 	mov	r4, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005720:	e5cac05c 	strb	ip, [sl, #92]	; 0x5c
				  glEp0Buffer[1] = 0;
40005724:	e5ca405d 	strb	r4, [sl, #93]	; 0x5d
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005728:	e5cae05e 	strb	lr, [sl, #94]	; 0x5e
				  glEp0Buffer[3] = 0;
4000572c:	e5ca405f 	strb	r4, [sl, #95]	; 0x5f
40005730:	eaffff2d 	b	400053ec <ControlHandle+0x134>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
40005734:	e0877087 	add	r7, r7, r7, lsl #1
40005738:	e0866187 	add	r6, r6, r7, lsl #3
4000573c:	e59feafc 	ldr	lr, [pc, #2812]	; 40006240 <ControlHandle+0xf88>
40005740:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
40005744:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
40005748:	e5ce405c 	strb	r4, [lr, #92]	; 0x5c
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
4000574c:	e5ce605d 	strb	r6, [lr, #93]	; 0x5d
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005750:	e1a00008 	mov	r0, r8
40005754:	e59f1ae8 	ldr	r1, [pc, #2792]	; 40006244 <ControlHandle+0xf8c>
40005758:	eb006024 	bl	4001d7f0 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
4000575c:	e3a0e0ff 	mov	lr, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005760:	e1a07004 	mov	r7, r4
40005764:	e1a0c006 	mov	ip, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
40005768:	e1a0400e 	mov	r4, lr
4000576c:	eafffef4 	b	40005344 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005770:	e3580000 	cmp	r8, #0
40005774:	0a0002a7 	beq	40006218 <ControlHandle+0xf60>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005778:	e1a0e128 	lsr	lr, r8, #2
4000577c:	e35e0000 	cmp	lr, #0
40005780:	13580003 	cmpne	r8, #3
40005784:	83a02000 	movhi	r2, #0
40005788:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000578c:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005790:	9a0002a4 	bls	40006228 <ControlHandle+0xf70>
40005794:	e59f1aa8 	ldr	r1, [pc, #2728]	; 40006244 <ControlHandle+0xf8c>
40005798:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
4000579c:	e4904004 	ldr	r4, [r0], #4
400057a0:	e282c001 	add	ip, r2, #1
400057a4:	e20c20ff 	and	r2, ip, #255	; 0xff
400057a8:	e15e0002 	cmp	lr, r2
400057ac:	e4814004 	str	r4, [r1], #4
400057b0:	8afffff9 	bhi	4000579c <ControlHandle+0x4e4>
400057b4:	e1580003 	cmp	r8, r3
400057b8:	159f0a80 	ldrne	r0, [pc, #2688]	; 40006240 <ControlHandle+0xf88>
400057bc:	0a000295 	beq	40006218 <ControlHandle+0xf60>
400057c0:	e080e003 	add	lr, r0, r3
400057c4:	e5de1050 	ldrb	r1, [lr, #80]	; 0x50
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400057c8:	e2836001 	add	r6, r3, #1
400057cc:	e20630ff 	and	r3, r6, #255	; 0xff
400057d0:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
400057d4:	e5ce105c 	strb	r1, [lr, #92]	; 0x5c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400057d8:	8afffff8 	bhi	400057c0 <ControlHandle+0x508>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057dc:	e5d0705b 	ldrb	r7, [r0, #91]	; 0x5b
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
400057e0:	e59f3a58 	ldr	r3, [pc, #2648]	; 40006240 <ControlHandle+0xf88>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057e4:	e35700ff 	cmp	r7, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
400057e8:	e5d04065 	ldrb	r4, [r0, #101]	; 0x65
			 		 sendData1 = glEp0Buffer[10];
400057ec:	e5d06066 	ldrb	r6, [r0, #102]	; 0x66
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
400057f0:	0affffd6 	beq	40005750 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
400057f4:	e5d32059 	ldrb	r2, [r3, #89]	; 0x59
400057f8:	e59f1a50 	ldr	r1, [pc, #2640]	; 40006250 <ControlHandle+0xf98>
400057fc:	e5d3305a 	ldrb	r3, [r3, #90]	; 0x5a
40005800:	e3a00004 	mov	r0, #4
40005804:	eb0036bc 	bl	400132fc <CyU3PDebugPrint>
40005808:	eaffffd0 	b	40005750 <ControlHandle+0x498>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
4000580c:	e5d6342d 	ldrb	r3, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40005810:	e3530002 	cmp	r3, #2
40005814:	92833004 	addls	r3, r3, #4
40005818:	920340ff 	andls	r4, r3, #255	; 0xff
4000581c:	8a000274 	bhi	400061f4 <ControlHandle+0xf3c>
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005820:	e59f3a18 	ldr	r3, [pc, #2584]	; 40006240 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
40005824:	e3a01000 	mov	r1, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005828:	e5c3405c 	strb	r4, [r3, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
4000582c:	e5c3105d 	strb	r1, [r3, #93]	; 0x5d
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005830:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005834:	eaffffc5 	b	40005750 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005838:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
4000583c:	e59fc9fc 	ldr	ip, [pc, #2556]	; 40006240 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005840:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
40005844:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005848:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
4000584c:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005850:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40005854:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005858:	e59f19f4 	ldr	r1, [pc, #2548]	; 40006254 <ControlHandle+0xf9c>
4000585c:	e1a02004 	mov	r2, r4
40005860:	e1a0300e 	mov	r3, lr
40005864:	e3a00004 	mov	r0, #4
40005868:	e88d4040 	stm	sp, {r6, lr}
4000586c:	eb0036a2 	bl	400132fc <CyU3PDebugPrint>
					 break;
40005870:	eaffffb6 	b	40005750 <ControlHandle+0x498>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005874:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
40005878:	e59f79c0 	ldr	r7, [pc, #2496]	; 40006240 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
4000587c:	e3a06000 	mov	r6, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005880:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005884:	e5c7605d 	strb	r6, [r7, #93]	; 0x5d
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005888:	e5c7405c 	strb	r4, [r7, #92]	; 0x5c
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
4000588c:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005890:	eaffffae 	b	40005750 <ControlHandle+0x498>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005894:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005898:	e5d621a5 	ldrb	r2, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
4000589c:	e3100002 	tst	r0, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058a0:	01a02122 	lsreq	r2, r2, #2
400058a4:	01e02c82 	mvneq	r2, r2, lsl #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400058a8:	11a00300 	lslne	r0, r0, #6
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058ac:	01e02ca2 	mvneq	r2, r2, lsr #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400058b0:	12004040 	andne	r4, r0, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058b4:	01820300 	orreq	r0, r2, r0, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400058b8:	11844122 	orrne	r4, r4, r2, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400058bc:	020040ff 	andeq	r4, r0, #255	; 0xff
400058c0:	eaffffd6 	b	40005820 <ControlHandle+0x568>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058c4:	e0843084 	add	r3, r4, r4, lsl #1
400058c8:	e0861183 	add	r1, r6, r3, lsl #3
400058cc:	e59f296c 	ldr	r2, [pc, #2412]	; 40006240 <ControlHandle+0xf88>
400058d0:	e5d1418d 	ldrb	r4, [r1, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
400058d4:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400058d8:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
400058dc:	e5c2405c 	strb	r4, [r2, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
400058e0:	e5c2005d 	strb	r0, [r2, #93]	; 0x5d
					 sendData = glEp0Buffer[0];
					 break;
400058e4:	eaffff99 	b	40005750 <ControlHandle+0x498>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400058e8:	e59fc950 	ldr	ip, [pc, #2384]	; 40006240 <ControlHandle+0xf88>
400058ec:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
400058f0:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
400058f4:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400058f8:	e5cc405c 	strb	r4, [ip, #92]	; 0x5c
					 glEp0Buffer[1] = 0;
400058fc:	e5cce05d 	strb	lr, [ip, #93]	; 0x5d
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005900:	e5cc605e 	strb	r6, [ip, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40005904:	e5cce05f 	strb	lr, [ip, #95]	; 0x5f
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005908:	eaffff90 	b	40005750 <ControlHandle+0x498>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000590c:	e59f4944 	ldr	r4, [pc, #2372]	; 40006258 <ControlHandle+0xfa0>
40005910:	e3e01000 	mvn	r1, #0
40005914:	e594001c 	ldr	r0, [r4, #28]
40005918:	eb001269 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
4000591c:	e3a01026 	mov	r1, #38	; 0x26
40005920:	e59dc014 	ldr	ip, [sp, #20]
40005924:	e3a0e000 	mov	lr, #0
40005928:	e1a0300a 	mov	r3, sl
4000592c:	e1a02009 	mov	r2, r9
40005930:	e1a00004 	mov	r0, r4
40005934:	e88d5000 	stm	sp, {ip, lr}
40005938:	ebfff6de 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000593c:	e594001c 	ldr	r0, [r4, #28]
40005940:	eb001294 	bl	4000a398 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005944:	e59d1014 	ldr	r1, [sp, #20]
40005948:	e0873087 	add	r3, r7, r7, lsl #1
4000594c:	e0866183 	add	r6, r6, r3, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005950:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005954:	e3a00001 	mov	r0, #1
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
40005958:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
4000595c:	e5c60010 	strb	r0, [r6, #16]
40005960:	e1a04001 	mov	r4, r1
40005964:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005968:	e1a0700c 	mov	r7, ip
4000596c:	eafffe74 	b	40005344 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID5: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005970:	e59f48e0 	ldr	r4, [pc, #2272]	; 40006258 <ControlHandle+0xfa0>
40005974:	e3e01000 	mvn	r1, #0
40005978:	e594001c 	ldr	r0, [r4, #28]
4000597c:	eb001250 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005980:	e3a01025 	mov	r1, #37	; 0x25
40005984:	eaffffe5 	b	40005920 <ControlHandle+0x668>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005988:	e59f48c8 	ldr	r4, [pc, #2248]	; 40006258 <ControlHandle+0xfa0>
4000598c:	e3e01000 	mvn	r1, #0
40005990:	e594001c 	ldr	r0, [r4, #28]
40005994:	eb00124a 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005998:	e59d2014 	ldr	r2, [sp, #20]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
4000599c:	e3a01024 	mov	r1, #36	; 0x24
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
400059a0:	e202807f 	and	r8, r2, #127	; 0x7f
400059a4:	e58d8018 	str	r8, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
400059a8:	e59dc018 	ldr	ip, [sp, #24]
400059ac:	e1a02009 	mov	r2, r9
400059b0:	e1a0300a 	mov	r3, sl
400059b4:	e1a00004 	mov	r0, r4
400059b8:	e58dc000 	str	ip, [sp]
400059bc:	e3a0c000 	mov	ip, #0
400059c0:	e58dc004 	str	ip, [sp, #4]
400059c4:	ebfff6bb 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
400059c8:	e59de01c 	ldr	lr, [sp, #28]
400059cc:	e3a08001 	mov	r8, #1
400059d0:	e3a01024 	mov	r1, #36	; 0x24
400059d4:	e1a0200b 	mov	r2, fp
400059d8:	e1a0300a 	mov	r3, sl
400059dc:	e1a00004 	mov	r0, r4
400059e0:	e58de000 	str	lr, [sp]
400059e4:	e58d8004 	str	r8, [sp, #4]
400059e8:	ebfff6b2 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400059ec:	e594001c 	ldr	r0, [r4, #28]
400059f0:	eb001268 	bl	4000a398 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
400059f4:	e087c087 	add	ip, r7, r7, lsl #1
400059f8:	e59d4018 	ldr	r4, [sp, #24]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
400059fc:	e59d701c 	ldr	r7, [sp, #28]
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005a00:	e086618c 	add	r6, r6, ip, lsl #3
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005a04:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005a08:	e5c6400d 	strb	r4, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005a0c:	e5c6700e 	strb	r7, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005a10:	e1a0e007 	mov	lr, r7
40005a14:	e5c68010 	strb	r8, [r6, #16]
40005a18:	e59d4014 	ldr	r4, [sp, #20]
							 break;
40005a1c:	e1a0700c 	mov	r7, ip
40005a20:	eafffe47 	b	40005344 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a24:	e3580000 	cmp	r8, #0
40005a28:	0a000018 	beq	40005a90 <ControlHandle+0x7d8>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a2c:	e1a0e128 	lsr	lr, r8, #2
40005a30:	e35e0000 	cmp	lr, #0
40005a34:	13580003 	cmpne	r8, #3
40005a38:	83a02000 	movhi	r2, #0
40005a3c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005a40:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a44:	9a0001f5 	bls	40006220 <ControlHandle+0xf68>
40005a48:	e59f180c 	ldr	r1, [pc, #2060]	; 4000625c <ControlHandle+0xfa4>
40005a4c:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a50:	e4907004 	ldr	r7, [r0], #4
40005a54:	e2822001 	add	r2, r2, #1
40005a58:	e20220ff 	and	r2, r2, #255	; 0xff
40005a5c:	e15e0002 	cmp	lr, r2
40005a60:	e4817004 	str	r7, [r1], #4
40005a64:	8afffff9 	bhi	40005a50 <ControlHandle+0x798>
40005a68:	e1580003 	cmp	r8, r3
40005a6c:	0a000007 	beq	40005a90 <ControlHandle+0x7d8>
40005a70:	e59fe7c8 	ldr	lr, [pc, #1992]	; 40006240 <ControlHandle+0xf88>
40005a74:	e08e0003 	add	r0, lr, r3
40005a78:	e5d0105c 	ldrb	r1, [r0, #92]	; 0x5c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a7c:	e2833001 	add	r3, r3, #1
40005a80:	e20330ff 	and	r3, r3, #255	; 0xff
40005a84:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a88:	e5c01050 	strb	r1, [r0, #80]	; 0x50
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a8c:	8afffff7 	bhi	40005a70 <ControlHandle+0x7b8>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a90:	ebfffda1 	bl	4000511c <I2CCmdHandler>
							 break;
40005a94:	e3a0c0ff 	mov	ip, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a98:	e59d4014 	ldr	r4, [sp, #20]
40005a9c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005aa0:	e1a0700c 	mov	r7, ip
40005aa4:	eafffe26 	b	40005344 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005aa8:	e59f77a8 	ldr	r7, [pc, #1960]	; 40006258 <ControlHandle+0xfa0>
40005aac:	e3e01000 	mvn	r1, #0
40005ab0:	e597001c 	ldr	r0, [r7, #28]
40005ab4:	eb001202 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ab8:	e59d4014 	ldr	r4, [sp, #20]
40005abc:	e3a0e000 	mov	lr, #0
40005ac0:	e274c001 	rsbs	ip, r4, #1
40005ac4:	33a0c000 	movcc	ip, #0
40005ac8:	e3a0101e 	mov	r1, #30
40005acc:	e1a02009 	mov	r2, r9
40005ad0:	e1a0300a 	mov	r3, sl
40005ad4:	e1a00007 	mov	r0, r7
40005ad8:	e88d5000 	stm	sp, {ip, lr}
40005adc:	ebfff675 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ae0:	e597001c 	ldr	r0, [r7, #28]
40005ae4:	eb00122b 	bl	4000a398 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ae8:	e3a0c0ff 	mov	ip, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005aec:	e3a00001 	mov	r0, #1
40005af0:	e5c60460 	strb	r0, [r6, #1120]	; 0x460
40005af4:	e59d4014 	ldr	r4, [sp, #20]
40005af8:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005afc:	e1a0700c 	mov	r7, ip
40005b00:	eafffe0f 	b	40005344 <ControlHandle+0x8c>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b04:	e59f474c 	ldr	r4, [pc, #1868]	; 40006258 <ControlHandle+0xfa0>
40005b08:	e3e01000 	mvn	r1, #0
40005b0c:	e594001c 	ldr	r0, [r4, #28]
40005b10:	eb0011eb 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005b14:	e59dc014 	ldr	ip, [sp, #20]
40005b18:	e3a0100b 	mov	r1, #11
40005b1c:	e1a02009 	mov	r2, r9
40005b20:	e1a0300a 	mov	r3, sl
40005b24:	e1a00004 	mov	r0, r4
40005b28:	e58dc000 	str	ip, [sp]
40005b2c:	e3a0c000 	mov	ip, #0
40005b30:	e58dc004 	str	ip, [sp, #4]
40005b34:	ebfff65f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005b38:	e59de018 	ldr	lr, [sp, #24]
40005b3c:	e3a07001 	mov	r7, #1
40005b40:	e3a0100b 	mov	r1, #11
40005b44:	e1a0200b 	mov	r2, fp
40005b48:	e1a0300a 	mov	r3, sl
40005b4c:	e1a00004 	mov	r0, r4
40005b50:	e58de000 	str	lr, [sp]
40005b54:	e58d7004 	str	r7, [sp, #4]
40005b58:	ebfff656 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b5c:	e594001c 	ldr	r0, [r4, #28]
40005b60:	eb00120c 	bl	4000a398 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005b64:	e59d1014 	ldr	r1, [sp, #20]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005b68:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005b6c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b70:	e5c67298 	strb	r7, [r6, #664]	; 0x298
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005b74:	e5c6148c 	strb	r1, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005b78:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b7c:	e1a04001 	mov	r4, r1
40005b80:	e1a0e002 	mov	lr, r2
							 break;
40005b84:	e1a0700c 	mov	r7, ip
40005b88:	eafffded 	b	40005344 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b8c:	e59f46c4 	ldr	r4, [pc, #1732]	; 40006258 <ControlHandle+0xfa0>
40005b90:	e3e01000 	mvn	r1, #0
40005b94:	e594001c 	ldr	r0, [r4, #28]
40005b98:	eb0011c9 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005b9c:	e59dc014 	ldr	ip, [sp, #20]
40005ba0:	e3a01006 	mov	r1, #6
40005ba4:	e1a02009 	mov	r2, r9
40005ba8:	e1a0300a 	mov	r3, sl
40005bac:	e1a00004 	mov	r0, r4
40005bb0:	e58dc000 	str	ip, [sp]
40005bb4:	e3a0c000 	mov	ip, #0
40005bb8:	e58dc004 	str	ip, [sp, #4]
40005bbc:	ebfff63d 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005bc0:	e59de014 	ldr	lr, [sp, #20]
40005bc4:	e3a07001 	mov	r7, #1
40005bc8:	e3a01006 	mov	r1, #6
40005bcc:	e1a0200b 	mov	r2, fp
40005bd0:	e1a0300a 	mov	r3, sl
40005bd4:	e1a00004 	mov	r0, r4
40005bd8:	e58de000 	str	lr, [sp]
40005bdc:	e58d7004 	str	r7, [sp, #4]
40005be0:	ebfff634 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005be4:	e594001c 	ldr	r0, [r4, #28]
40005be8:	eb0011ea 	bl	4000a398 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005bec:	e59d4014 	ldr	r4, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005bf0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005bf4:	e5c67220 	strb	r7, [r6, #544]	; 0x220
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005bf8:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005bfc:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005c00:	e1a0700c 	mov	r7, ip
40005c04:	eafffdce 	b	40005344 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c08:	e59f4648 	ldr	r4, [pc, #1608]	; 40006258 <ControlHandle+0xfa0>
40005c0c:	e3e01000 	mvn	r1, #0
40005c10:	e594001c 	ldr	r0, [r4, #28]
40005c14:	eb0011aa 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005c18:	e59d3014 	ldr	r3, [sp, #20]
40005c1c:	e3a0c000 	mov	ip, #0
40005c20:	e2430080 	sub	r0, r3, #128	; 0x80
40005c24:	e20070ff 	and	r7, r0, #255	; 0xff
40005c28:	e3a01005 	mov	r1, #5
40005c2c:	e1a02009 	mov	r2, r9
40005c30:	e1a0300a 	mov	r3, sl
40005c34:	e1a00004 	mov	r0, r4
40005c38:	e88d1080 	stm	sp, {r7, ip}
40005c3c:	ebfff61d 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005c40:	e59d1014 	ldr	r1, [sp, #20]
40005c44:	e3a020dc 	mov	r2, #220	; 0xdc
40005c48:	e2417076 	sub	r7, r1, #118	; 0x76
40005c4c:	e207c0ff 	and	ip, r7, #255	; 0xff
40005c50:	e3a01005 	mov	r1, #5
40005c54:	e3a07001 	mov	r7, #1
40005c58:	e1a0300a 	mov	r3, sl
40005c5c:	e1a00004 	mov	r0, r4
40005c60:	e58dc000 	str	ip, [sp]
40005c64:	e58d7004 	str	r7, [sp, #4]
40005c68:	ebfff612 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005c6c:	e59d2014 	ldr	r2, [sp, #20]
40005c70:	e3a01005 	mov	r1, #5
40005c74:	e282307e 	add	r3, r2, #126	; 0x7e
40005c78:	e203c0ff 	and	ip, r3, #255	; 0xff
40005c7c:	e3a020de 	mov	r2, #222	; 0xde
40005c80:	e1a0300a 	mov	r3, sl
40005c84:	e1a00004 	mov	r0, r4
40005c88:	e58dc000 	str	ip, [sp]
40005c8c:	e3a0c002 	mov	ip, #2
40005c90:	e58dc004 	str	ip, [sp, #4]
40005c94:	ebfff607 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005c98:	e59d0014 	ldr	r0, [sp, #20]
40005c9c:	e3a0e003 	mov	lr, #3
40005ca0:	e2801072 	add	r1, r0, #114	; 0x72
40005ca4:	e201c0ff 	and	ip, r1, #255	; 0xff
40005ca8:	e3a020e0 	mov	r2, #224	; 0xe0
40005cac:	e3a01005 	mov	r1, #5
40005cb0:	e1a0300a 	mov	r3, sl
40005cb4:	e1a00004 	mov	r0, r4
40005cb8:	e88d5000 	stm	sp, {ip, lr}
40005cbc:	ebfff5fd 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005cc0:	e59d2014 	ldr	r2, [sp, #20]
40005cc4:	e3a01005 	mov	r1, #5
40005cc8:	e242306f 	sub	r3, r2, #111	; 0x6f
40005ccc:	e203c0ff 	and	ip, r3, #255	; 0xff
40005cd0:	e3a020dd 	mov	r2, #221	; 0xdd
40005cd4:	e1a0300a 	mov	r3, sl
40005cd8:	e1a00004 	mov	r0, r4
40005cdc:	e58dc000 	str	ip, [sp]
40005ce0:	e3a0c004 	mov	ip, #4
40005ce4:	e58dc004 	str	ip, [sp, #4]
40005ce8:	ebfff5f2 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005cec:	e59f054c 	ldr	r0, [pc, #1356]	; 40006240 <ControlHandle+0xf88>
40005cf0:	e3a0e005 	mov	lr, #5
40005cf4:	e5d0105c 	ldrb	r1, [r0, #92]	; 0x5c
40005cf8:	e1a0300a 	mov	r3, sl
40005cfc:	e281207f 	add	r2, r1, #127	; 0x7f
40005d00:	e202c0ff 	and	ip, r2, #255	; 0xff
40005d04:	e1a0100e 	mov	r1, lr
40005d08:	e1a0200b 	mov	r2, fp
40005d0c:	e1a00004 	mov	r0, r4
40005d10:	e88d5000 	stm	sp, {ip, lr}
40005d14:	ebfff5e7 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d18:	e594001c 	ldr	r0, [r4, #28]
40005d1c:	eb00119d 	bl	4000a398 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005d20:	e59f3518 	ldr	r3, [pc, #1304]	; 40006240 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d24:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005d28:	e5d3005c 	ldrb	r0, [r3, #92]	; 0x5c
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d2c:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005d30:	e2401080 	sub	r1, r0, #128	; 0x80
40005d34:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d38:	e59d4014 	ldr	r4, [sp, #20]
40005d3c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005d40:	e1a0700c 	mov	r7, ip
40005d44:	eafffd7e 	b	40005344 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d48:	e59f4508 	ldr	r4, [pc, #1288]	; 40006258 <ControlHandle+0xfa0>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005d4c:	e2433001 	sub	r3, r3, #1
40005d50:	e20370ff 	and	r7, r3, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005d54:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d58:	e3e01000 	mvn	r1, #0
40005d5c:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005d60:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d64:	eb001156 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005d68:	e3a0c000 	mov	ip, #0
40005d6c:	e3a01004 	mov	r1, #4
40005d70:	e1a02009 	mov	r2, r9
40005d74:	e1a0300a 	mov	r3, sl
40005d78:	e1a00004 	mov	r0, r4
40005d7c:	e88d1080 	stm	sp, {r7, ip}
40005d80:	ebfff5cc 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d84:	e594001c 	ldr	r0, [r4, #28]
40005d88:	eb001182 	bl	4000a398 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d8c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d90:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005d94:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d98:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
40005d9c:	e59d4014 	ldr	r4, [sp, #20]
40005da0:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005da4:	e1a0700c 	mov	r7, ip
40005da8:	eafffd65 	b	40005344 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005dac:	e59f74a4 	ldr	r7, [pc, #1188]	; 40006258 <ControlHandle+0xfa0>
40005db0:	e3e01000 	mvn	r1, #0
40005db4:	e597001c 	ldr	r0, [r7, #28]
40005db8:	eb001141 	bl	4000a2c4 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005dbc:	e59dc014 	ldr	ip, [sp, #20]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005dc0:	e5d641a6 	ldrb	r4, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005dc4:	e31c0080 	tst	ip, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005dc8:	01a0232c 	lsreq	r2, ip, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005dcc:	11a02c8c 	lslne	r2, ip, #25
40005dd0:	13c44003 	bicne	r4, r4, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005dd4:	03c44003 	biceq	r4, r4, #3
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005dd8:	e3a0c000 	mov	ip, #0
40005ddc:	e58dc004 	str	ip, [sp, #4]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005de0:	03822002 	orreq	r2, r2, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005de4:	11844fa2 	orrne	r4, r4, r2, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005de8:	01824004 	orreq	r4, r2, r4
							  }
							 Data1 |= ~0x03;
40005dec:	e1e03f04 	mvn	r3, r4, lsl #30
40005df0:	e1e00f23 	mvn	r0, r3, lsr #30
							 Data1 &= 0xC7;
40005df4:	e20010c7 	and	r1, r0, #199	; 0xc7
40005df8:	e58d101c 	str	r1, [sp, #28]
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005dfc:	e59d801c 	ldr	r8, [sp, #28]
40005e00:	e3a01001 	mov	r1, #1
40005e04:	e1a0200b 	mov	r2, fp
40005e08:	e1a0300a 	mov	r3, sl
40005e0c:	e59f0444 	ldr	r0, [pc, #1092]	; 40006258 <ControlHandle+0xfa0>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005e10:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005e14:	e58d8000 	str	r8, [sp]
40005e18:	ebfff5a6 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005e1c:	e59d2014 	ldr	r2, [sp, #20]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005e20:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005e24:	e1a08102 	lsl	r8, r2, #2
40005e28:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005e2c:	e1a02009 	mov	r2, r9
40005e30:	e1a0300a 	mov	r3, sl
40005e34:	e59f041c 	ldr	r0, [pc, #1052]	; 40006258 <ControlHandle+0xfa0>
40005e38:	e58d4004 	str	r4, [sp, #4]
40005e3c:	e58d8000 	str	r8, [sp]
40005e40:	ebfff59c 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e44:	e597001c 	ldr	r0, [r7, #28]
40005e48:	eb001152 	bl	4000a398 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005e4c:	e59d701c 	ldr	r7, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005e50:	e3a0c0ff 	mov	ip, #255	; 0xff
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005e54:	e5c671a6 	strb	r7, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e58:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005e5c:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e60:	e59d4014 	ldr	r4, [sp, #20]
40005e64:	e59de018 	ldr	lr, [sp, #24]

							 break;
40005e68:	e1a0700c 	mov	r7, ip
40005e6c:	eafffd34 	b	40005344 <ControlHandle+0x8c>
40005e70:	e1a0c003 	mov	ip, r3
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
40005e74:	e3530003 	cmp	r3, #3

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005e78:	e5c6c18d 	strb	ip, [r6, #397]	; 0x18d
40005e7c:	e59f33b0 	ldr	r3, [pc, #944]	; 40006234 <ControlHandle+0xf7c>
							 if(Data0 == 3)
40005e80:	0a0000d6 	beq	400061e0 <ControlHandle+0xf28>
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e84:	e59fe3b4 	ldr	lr, [pc, #948]	; 40006240 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e88:	e35c0001 	cmp	ip, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e8c:	e3a00000 	mov	r0, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e90:	e3a01001 	mov	r1, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e94:	e58e007c 	str	r0, [lr, #124]	; 0x7c
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e98:	e5c31190 	strb	r1, [r3, #400]	; 0x190
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e9c:	91a0600c 	movls	r6, ip
40005ea0:	91a0700c 	movls	r7, ip
40005ea4:	9a000006 	bls	40005ec4 <ControlHandle+0xc0c>
					 				 ;//Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
40005ea8:	e3a00004 	mov	r0, #4
40005eac:	e59f13ac 	ldr	r1, [pc, #940]	; 40006260 <ControlHandle+0xfa8>
40005eb0:	e3a02001 	mov	r2, #1
40005eb4:	e59d3014 	ldr	r3, [sp, #20]
40005eb8:	eb00350f 	bl	400132fc <CyU3PDebugPrint>
40005ebc:	e3a06000 	mov	r6, #0
									Data0 = 0; //set to default.
40005ec0:	e1a07006 	mov	r7, r6
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ec4:	e59f438c 	ldr	r4, [pc, #908]	; 40006258 <ControlHandle+0xfa0>
40005ec8:	e3e01000 	mvn	r1, #0
40005ecc:	e594001c 	ldr	r0, [r4, #28]
40005ed0:	eb0010fb 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ed4:	e3a0c000 	mov	ip, #0
40005ed8:	e1a0100c 	mov	r1, ip
40005edc:	e1a02009 	mov	r2, r9
40005ee0:	e1a0300a 	mov	r3, sl
40005ee4:	e1a00004 	mov	r0, r4
40005ee8:	e88d1080 	stm	sp, {r7, ip}
40005eec:	ebfff571 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ef0:	e594001c 	ldr	r0, [r4, #28]
40005ef4:	eb001127 	bl	4000a398 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005ef8:	e59fc340 	ldr	ip, [pc, #832]	; 40006240 <ControlHandle+0xf88>
40005efc:	e59f1360 	ldr	r1, [pc, #864]	; 40006264 <ControlHandle+0xfac>
40005f00:	e5dc405e 	ldrb	r4, [ip, #94]	; 0x5e
40005f04:	e5dc705f 	ldrb	r7, [ip, #95]	; 0x5f
40005f08:	e3a00004 	mov	r0, #4
40005f0c:	e1a02006 	mov	r2, r6
40005f10:	e59c307c 	ldr	r3, [ip, #124]	; 0x7c
40005f14:	e88d0090 	stm	sp, {r4, r7}
40005f18:	eb0034f7 	bl	400132fc <CyU3PDebugPrint>

					 		 break;
40005f1c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005f20:	e59d4014 	ldr	r4, [sp, #20]
40005f24:	e59de018 	ldr	lr, [sp, #24]

					 		 break;
40005f28:	e1a0700c 	mov	r7, ip
40005f2c:	eafffd04 	b	40005344 <ControlHandle+0x8c>
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f30:	e59f7320 	ldr	r7, [pc, #800]	; 40006258 <ControlHandle+0xfa0>
40005f34:	e3e01000 	mvn	r1, #0
40005f38:	e597001c 	ldr	r0, [r7, #28]
40005f3c:	eb0010e0 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f40:	e59dc014 	ldr	ip, [sp, #20]
40005f44:	e1a01004 	mov	r1, r4
40005f48:	e1a02009 	mov	r2, r9
40005f4c:	e1a0300a 	mov	r3, sl
40005f50:	e1a00007 	mov	r0, r7
40005f54:	e58dc000 	str	ip, [sp]
40005f58:	e3a0c000 	mov	ip, #0
40005f5c:	e58dc004 	str	ip, [sp, #4]
40005f60:	ebfff554 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f64:	e597001c 	ldr	r0, [r7, #28]
40005f68:	eb00110a 	bl	4000a398 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40005f6c:	e59d2014 	ldr	r2, [sp, #20]
40005f70:	e0841084 	add	r1, r4, r4, lsl #1
40005f74:	e0866181 	add	r6, r6, r1, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005f78:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f7c:	e3a03001 	mov	r3, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005f80:	e5c6218d 	strb	r2, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f84:	e5c63190 	strb	r3, [r6, #400]	; 0x190
40005f88:	e1a04002 	mov	r4, r2
40005f8c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005f90:	e1a0700c 	mov	r7, ip
40005f94:	eafffcea 	b	40005344 <ControlHandle+0x8c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005f98:	e3a0c0ff 	mov	ip, #255	; 0xff
40005f9c:	e1a04003 	mov	r4, r3
40005fa0:	e1a0700c 	mov	r7, ip
40005fa4:	eafffce6 	b	40005344 <ControlHandle+0x8c>
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fa8:	e59f72a8 	ldr	r7, [pc, #680]	; 40006258 <ControlHandle+0xfa0>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40005fac:	e5c633fd 	strb	r3, [r6, #1021]	; 0x3fd
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fb0:	e3a03001 	mov	r3, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fb4:	e597001c 	ldr	r0, [r7, #28]
40005fb8:	e3e01000 	mvn	r1, #0
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fbc:	e5c63400 	strb	r3, [r6, #1024]	; 0x400
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fc0:	eb0010bf 	bl	4000a2c4 <_txe_mutex_get>
							 if(WDRflag)
40005fc4:	e59f3274 	ldr	r3, [pc, #628]	; 40006240 <ControlHandle+0xf88>
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005fc8:	e3a0101a 	mov	r1, #26
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005fcc:	e593407c 	ldr	r4, [r3, #124]	; 0x7c
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005fd0:	e1a00007 	mov	r0, r7
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005fd4:	e3540000 	cmp	r4, #0
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005fd8:	159d4014 	ldrne	r4, [sp, #20]
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005fdc:	059de014 	ldreq	lr, [sp, #20]
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005fe0:	158d4000 	strne	r4, [sp]
40005fe4:	11a0200b 	movne	r2, fp
40005fe8:	13a04000 	movne	r4, #0
40005fec:	11a0300a 	movne	r3, sl
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ff0:	01a02009 	moveq	r2, r9
40005ff4:	01a0300a 	moveq	r3, sl
40005ff8:	e58d4004 	str	r4, [sp, #4]
40005ffc:	058de000 	streq	lr, [sp]
40006000:	ebfff52c 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006004:	e597001c 	ldr	r0, [r7, #28]
40006008:	eb0010e2 	bl	4000a398 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "Exe level. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
4000600c:	e59f222c 	ldr	r2, [pc, #556]	; 40006240 <ControlHandle+0xf88>
40006010:	e59d4014 	ldr	r4, [sp, #20]
40006014:	e5d2c05e 	ldrb	ip, [r2, #94]	; 0x5e
40006018:	e5d2e05f 	ldrb	lr, [r2, #95]	; 0x5f
4000601c:	e592307c 	ldr	r3, [r2, #124]	; 0x7c
40006020:	e3a00004 	mov	r0, #4
40006024:	e59f123c 	ldr	r1, [pc, #572]	; 40006268 <ControlHandle+0xfb0>
40006028:	e1a02004 	mov	r2, r4
4000602c:	e88d5000 	stm	sp, {ip, lr}
40006030:	eb0034b1 	bl	400132fc <CyU3PDebugPrint>
40006034:	e3a0c0ff 	mov	ip, #255	; 0xff
40006038:	e59de018 	ldr	lr, [sp, #24]
4000603c:	e1a0700c 	mov	r7, ip
40006040:	eafffcbf 	b	40005344 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40006044:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006048:	e59f4208 	ldr	r4, [pc, #520]	; 40006258 <ControlHandle+0xfa0>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
4000604c:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006050:	e3e01000 	mvn	r1, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40006054:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40006058:	e5c623e6 	strb	r2, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000605c:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40006060:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006064:	eb001096 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40006068:	e59dc014 	ldr	ip, [sp, #20]
4000606c:	e3a01019 	mov	r1, #25
40006070:	e58dc000 	str	ip, [sp]
40006074:	e1a00004 	mov	r0, r4
40006078:	e3a0c000 	mov	ip, #0
4000607c:	e1a02009 	mov	r2, r9
40006080:	e1a0300a 	mov	r3, sl
40006084:	e58dc004 	str	ip, [sp, #4]
40006088:	ebfff50a 	bl	400034b8 <cmdSet>
							 if(getData != 0){
4000608c:	e59d1014 	ldr	r1, [sp, #20]
40006090:	e3510000 	cmp	r1, #0
40006094:	0a000007 	beq	400060b8 <ControlHandle+0xe00>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40006098:	e59de018 	ldr	lr, [sp, #24]
4000609c:	e1a00004 	mov	r0, r4
400060a0:	e3a01019 	mov	r1, #25
400060a4:	e1a0200b 	mov	r2, fp
400060a8:	e1a0300a 	mov	r3, sl
400060ac:	e58de000 	str	lr, [sp]
400060b0:	e58d7004 	str	r7, [sp, #4]
400060b4:	ebfff4ff 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060b8:	e594001c 	ldr	r0, [r4, #28]
400060bc:	eb0010b5 	bl	4000a398 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
400060c0:	e59f1178 	ldr	r1, [pc, #376]	; 40006240 <ControlHandle+0xf88>
400060c4:	e59f0174 	ldr	r0, [pc, #372]	; 40006240 <ControlHandle+0xf88>
400060c8:	e5d1405e 	ldrb	r4, [r1, #94]	; 0x5e
400060cc:	e5d0705f 	ldrb	r7, [r0, #95]	; 0x5f
400060d0:	e5d1205c 	ldrb	r2, [r1, #92]	; 0x5c
400060d4:	e5d1305d 	ldrb	r3, [r1, #93]	; 0x5d
400060d8:	e3a00004 	mov	r0, #4
400060dc:	e59f1188 	ldr	r1, [pc, #392]	; 4000626c <ControlHandle+0xfb4>
400060e0:	e88d0090 	stm	sp, {r4, r7}
400060e4:	eaffff8b 	b	40005f18 <ControlHandle+0xc60>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
400060e8:	e2530000 	subs	r0, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
400060ec:	e5c6030d 	strb	r0, [r6, #781]	; 0x30d
400060f0:	e59f313c 	ldr	r3, [pc, #316]	; 40006234 <ControlHandle+0xf7c>
							 if(Data0 == 0){//set exposure mode auto
400060f4:	1a000024 	bne	4000618c <ControlHandle+0xed4>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
400060f8:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
400060fc:	e3520002 	cmp	r2, #2
40006100:	13520008 	cmpne	r2, #8
40006104:	0a000003 	beq	40006118 <ControlHandle+0xe60>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40006108:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
4000610c:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40006110:	13a02002 	movne	r2, #2
40006114:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006118:	e59f4138 	ldr	r4, [pc, #312]	; 40006258 <ControlHandle+0xfa0>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
4000611c:	e3a03001 	mov	r3, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006120:	e3e01000 	mvn	r1, #0
40006124:	e594001c 	ldr	r0, [r4, #28]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40006128:	e5c63310 	strb	r3, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000612c:	eb001064 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006130:	e59dc014 	ldr	ip, [sp, #20]
40006134:	e3a0e000 	mov	lr, #0
40006138:	e3a01010 	mov	r1, #16
4000613c:	e1a02009 	mov	r2, r9
40006140:	e1a0300a 	mov	r3, sl
40006144:	e1a00004 	mov	r0, r4
40006148:	e88d5000 	stm	sp, {ip, lr}
4000614c:	ebfff4d9 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006150:	e594001c 	ldr	r0, [r4, #28]
40006154:	eb00108f 	bl	4000a398 <_txe_mutex_put>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40006158:	e3a0c0ff 	mov	ip, #255	; 0xff
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000615c:	e59d4014 	ldr	r4, [sp, #20]
40006160:	e59de018 	ldr	lr, [sp, #24]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40006164:	e1a0700c 	mov	r7, ip
40006168:	eafffc75 	b	40005344 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
4000616c:	e3a00004 	mov	r0, #4
40006170:	e59f10f8 	ldr	r1, [pc, #248]	; 40006270 <ControlHandle+0xfb8>
40006174:	eb003460 	bl	400132fc <CyU3PDebugPrint>
40006178:	e3a0c0ff 	mov	ip, #255	; 0xff
4000617c:	e1a0700c 	mov	r7, ip
40006180:	e1a0e00c 	mov	lr, ip
40006184:	e1a0400c 	mov	r4, ip
40006188:	eafffc6d 	b	40005344 <ControlHandle+0x8c>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
4000618c:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006190:	e2407001 	sub	r7, r0, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006194:	e3520004 	cmp	r2, #4
40006198:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
4000619c:	e20710ff 	and	r1, r7, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400061a0:	0a000003 	beq	400061b4 <ControlHandle+0xefc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
400061a4:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
400061a8:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
400061ac:	13a02004 	movne	r2, #4
400061b0:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
400061b4:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400061b8:	959f30b4 	ldrls	r3, [pc, #180]	; 40006274 <ControlHandle+0xfbc>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400061bc:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400061c0:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400061c4:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400061c8:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400061cc:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400061d0:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400061d4:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
400061d8:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
400061dc:	eaffffcd 	b	40006118 <ControlHandle+0xe60>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
400061e0:	e59f2058 	ldr	r2, [pc, #88]	; 40006240 <ControlHandle+0xf88>
400061e4:	e3a06001 	mov	r6, #1
400061e8:	e582607c 	str	r6, [r2, #124]	; 0x7c
							 else
								 WDRflag = CyFalse;
							 CtrlParArry[CtrlID][16] = CyTrue;
400061ec:	e5c36190 	strb	r6, [r3, #400]	; 0x190
400061f0:	eaffff2c 	b	40005ea8 <ControlHandle+0xbf0>
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
400061f4:	e3a02001 	mov	r2, #1
400061f8:	e3a00004 	mov	r0, #4
400061fc:	e59f105c 	ldr	r1, [pc, #92]	; 40006260 <ControlHandle+0xfa8>
40006200:	eb00343d 	bl	400132fc <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
40006204:	e59f3028 	ldr	r3, [pc, #40]	; 40006234 <ControlHandle+0xf7c>
40006208:	e3a02000 	mov	r2, #0
4000620c:	e3a04004 	mov	r4, #4
40006210:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
40006214:	eafffd81 	b	40005820 <ControlHandle+0x568>
40006218:	e59f0020 	ldr	r0, [pc, #32]	; 40006240 <ControlHandle+0xf88>
4000621c:	eafffd6e 	b	400057dc <ControlHandle+0x524>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40006220:	e3a03000 	mov	r3, #0
40006224:	eafffe11 	b	40005a70 <ControlHandle+0x7b8>
40006228:	e59f0010 	ldr	r0, [pc, #16]	; 40006240 <ControlHandle+0xf88>
4000622c:	e3a03000 	mov	r3, #0
40006230:	eafffd62 	b	400057c0 <ControlHandle+0x508>
40006234:	40030000 	.word	0x40030000
40006238:	40033144 	.word	0x40033144
4000623c:	40011734 	.word	0x40011734
40006240:	40030f90 	.word	0x40030f90
40006244:	40030fec 	.word	0x40030fec
40006248:	00010001 	.word	0x00010001
4000624c:	00ff00ff 	.word	0x00ff00ff
40006250:	40011640 	.word	0x40011640
40006254:	4001167c 	.word	0x4001167c
40006258:	40032ec4 	.word	0x40032ec4
4000625c:	40030fe0 	.word	0x40030fe0
40006260:	40011608 	.word	0x40011608
40006264:	400116ec 	.word	0x400116ec
40006268:	400116d0 	.word	0x400116d0
4000626c:	400116a4 	.word	0x400116a4
40006270:	40011704 	.word	0x40011704
40006274:	40011378 	.word	0x40011378

40006278 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006278:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000627c:	e59fa964 	ldr	sl, [pc, #2404]	; 40006be8 <CTControlHandle+0x970>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006280:	e59f8964 	ldr	r8, [pc, #2404]	; 40006bec <CTControlHandle+0x974>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006284:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006288:	e1a09080 	lsl	r9, r0, #1
4000628c:	e0892000 	add	r2, r9, r0
40006290:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006294:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006298:	e24dd05c 	sub	sp, sp, #92	; 0x5c
4000629c:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400062a0:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
400062a4:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400062a8:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062ac:	0a000076 	beq	4000648c <CTControlHandle+0x214>
400062b0:	9a000021 	bls	4000633c <CTControlHandle+0xc4>
400062b4:	e3550085 	cmp	r5, #133	; 0x85
400062b8:	0a000059 	beq	40006424 <CTControlHandle+0x1ac>
400062bc:	3a00004e 	bcc	400063fc <CTControlHandle+0x184>
400062c0:	e3550086 	cmp	r5, #134	; 0x86
400062c4:	0a000080 	beq	400064cc <CTControlHandle+0x254>
400062c8:	e3550087 	cmp	r5, #135	; 0x87
400062cc:	0a000076 	beq	400064ac <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400062d0:	e3a00000 	mov	r0, #0
400062d4:	e3a01001 	mov	r1, #1
400062d8:	e1a02000 	mov	r2, r0
400062dc:	eb005f6e 	bl	4001e09c <CyU3PUsbStall>
400062e0:	e59f4908 	ldr	r4, [pc, #2312]	; 40006bf0 <CTControlHandle+0x978>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400062e4:	e1a02006 	mov	r2, r6
400062e8:	e3a00004 	mov	r0, #4
400062ec:	e59f1900 	ldr	r1, [pc, #2304]	; 40006bf4 <CTControlHandle+0x97c>
400062f0:	e5da3000 	ldrb	r3, [sl]
400062f4:	eb003400 	bl	400132fc <CyU3PDebugPrint>
			  break;
400062f8:	e3a0c0ff 	mov	ip, #255	; 0xff
400062fc:	e1a0600c 	mov	r6, ip
40006300:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006304:	e5d4e05e 	ldrb	lr, [r4, #94]	; 0x5e
40006308:	e58dc008 	str	ip, [sp, #8]
4000630c:	e59f18e4 	ldr	r1, [pc, #2276]	; 40006bf8 <CTControlHandle+0x980>
40006310:	e3a0c0ff 	mov	ip, #255	; 0xff
40006314:	e1a02005 	mov	r2, r5
40006318:	e1a03008 	mov	r3, r8
4000631c:	e3a00004 	mov	r0, #4
40006320:	e88d4040 	stm	sp, {r6, lr}
40006324:	e58dc00c 	str	ip, [sp, #12]
40006328:	e58de010 	str	lr, [sp, #16]
4000632c:	e58d7014 	str	r7, [sp, #20]
40006330:	eb0033f1 	bl	400132fc <CyU3PDebugPrint>
}
40006334:	e28dd05c 	add	sp, sp, #92	; 0x5c
40006338:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000633c:	e3550081 	cmp	r5, #129	; 0x81
40006340:	0a000042 	beq	40006450 <CTControlHandle+0x1d8>
40006344:	9a000011 	bls	40006390 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006348:	e59f48a0 	ldr	r4, [pc, #2208]	; 40006bf0 <CTControlHandle+0x978>
4000634c:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006350:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006354:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006358:	e5c4105c 	strb	r1, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
4000635c:	e5c4605d 	strb	r6, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006360:	0a00002c 	beq	40006418 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
40006364:	e3a0e000 	mov	lr, #0
40006368:	e5c4e05e 	strb	lr, [r4, #94]	; 0x5e
			  glEp0Buffer[3] = 0;
4000636c:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006370:	e1a00007 	mov	r0, r7
40006374:	e59f1880 	ldr	r1, [pc, #2176]	; 40006bfc <CTControlHandle+0x984>
			  sendData = glEp0Buffer[0];
			  break;
40006378:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
4000637c:	e5c4305f 	strb	r3, [r4, #95]	; 0x5f
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006380:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006384:	eb005d19 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40006388:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
4000638c:	eaffffdc 	b	40006304 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006390:	e3550001 	cmp	r5, #1
40006394:	1affffcd 	bne	400062d0 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006398:	e59f4850 	ldr	r4, [pc, #2128]	; 40006bf0 <CTControlHandle+0x978>
4000639c:	e28d2056 	add	r2, sp, #86	; 0x56
400063a0:	e3a00020 	mov	r0, #32
400063a4:	e284105c 	add	r1, r4, #92	; 0x5c
400063a8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400063ac:	eb005aa1 	bl	4001ce38 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400063b0:	e5d4005c 	ldrb	r0, [r4, #92]	; 0x5c
			  Data1 = glEp0Buffer[1];
400063b4:	e5d4c05d 	ldrb	ip, [r4, #93]	; 0x5d
			  value = Data1;

			  switch(CtrlID)
400063b8:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400063bc:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
400063c0:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
400063c4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400063c8:	e3520009 	cmp	r2, #9
400063cc:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400063d0:	ea000155 	b	4000692c <CTControlHandle+0x6b4>
400063d4:	400068e8 	.word	0x400068e8
400063d8:	4000692c 	.word	0x4000692c
400063dc:	400065f8 	.word	0x400065f8
400063e0:	4000692c 	.word	0x4000692c
400063e4:	4000692c 	.word	0x4000692c
400063e8:	4000692c 	.word	0x4000692c
400063ec:	40006574 	.word	0x40006574
400063f0:	4000692c 	.word	0x4000692c
400063f4:	4000692c 	.word	0x4000692c
400063f8:	400064f8 	.word	0x400064f8
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400063fc:	e59f47ec 	ldr	r4, [pc, #2028]	; 40006bf0 <CTControlHandle+0x978>
40006400:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006404:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006408:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
4000640c:	e5c4805c 	strb	r8, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006410:	e5c4205d 	strb	r2, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006414:	1affffd2 	bne	40006364 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006418:	e3a01001 	mov	r1, #1
4000641c:	e5c4105e 	strb	r1, [r4, #94]	; 0x5e
40006420:	eaffffd1 	b	4000636c <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006424:	e59f47c4 	ldr	r4, [pc, #1988]	; 40006bf0 <CTControlHandle+0x978>
			  glEp0Buffer[1] = 0;
40006428:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000642c:	e3a00002 	mov	r0, #2
40006430:	e284105c 	add	r1, r4, #92	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
40006434:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006438:	e5c4705c 	strb	r7, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = 0;
4000643c:	e5c4305d 	strb	r3, [r4, #93]	; 0x5d
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006440:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006444:	eb005ce9 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40006448:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  break;
4000644c:	eaffffac 	b	40006304 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006450:	e59f4798 	ldr	r4, [pc, #1944]	; 40006bf0 <CTControlHandle+0x978>
40006454:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006458:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
4000645c:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006460:	e1a00007 	mov	r0, r7
40006464:	e284105c 	add	r1, r4, #92	; 0x5c

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006468:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
4000646c:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
					 glEp0Buffer[2] = 0;
40006470:	e5c4805e 	strb	r8, [r4, #94]	; 0x5e
					 glEp0Buffer[3] = 0;
40006474:	e5c4805f 	strb	r8, [r4, #95]	; 0x5f
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006478:	e5c4a05c 	strb	sl, [r4, #92]	; 0x5c
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
4000647c:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006480:	eb005cda 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40006484:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006488:	eaffff9d 	b	40006304 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
4000648c:	e59f475c 	ldr	r4, [pc, #1884]	; 40006bf0 <CTControlHandle+0x978>
40006490:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006494:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006498:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
4000649c:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400064a0:	e5c4e05d 	strb	lr, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064a4:	1affffae 	bne	40006364 <CTControlHandle+0xec>
400064a8:	eaffffda 	b	40006418 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400064ac:	e59f473c 	ldr	r4, [pc, #1852]	; 40006bf0 <CTControlHandle+0x978>
400064b0:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400064b4:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064b8:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400064bc:	e5c4605c 	strb	r6, [r4, #92]	; 0x5c
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400064c0:	e5c4c05d 	strb	ip, [r4, #93]	; 0x5d
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400064c4:	1affffa6 	bne	40006364 <CTControlHandle+0xec>
400064c8:	eaffffd2 	b	40006418 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400064cc:	e59f471c 	ldr	r4, [pc, #1820]	; 40006bf0 <CTControlHandle+0x978>
400064d0:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
400064d4:	e1a01004 	mov	r1, r4
400064d8:	e5e1005c 	strb	r0, [r1, #92]!	; 0x5c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400064dc:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400064e0:	e3a00001 	mov	r0, #1
400064e4:	eb005cc1 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400064e8:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400064ec:	e5d4c05c 	ldrb	ip, [r4, #92]	; 0x5c
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400064f0:	e3a07001 	mov	r7, #1
400064f4:	eaffff82 	b	40006304 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400064f8:	e59f6700 	ldr	r6, [pc, #1792]	; 40006c00 <CTControlHandle+0x988>
400064fc:	e3e01000 	mvn	r1, #0
40006500:	e596001c 	ldr	r0, [r6, #28]
40006504:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006508:	eb000f6d 	bl	4000a2c4 <_txe_mutex_get>
					  if(getData == 1)
4000650c:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006510:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006514:	e35e0001 	cmp	lr, #1
40006518:	0a0001aa 	beq	40006bc8 <CTControlHandle+0x950>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
4000651c:	e35e00ff 	cmp	lr, #255	; 0xff
40006520:	0a00019f 	beq	40006ba4 <CTControlHandle+0x92c>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, STOP, dataIdx);
40006524:	e3a08000 	mov	r8, #0
40006528:	e1a00006 	mov	r0, r6
4000652c:	e3a01023 	mov	r1, #35	; 0x23
40006530:	e1a0200b 	mov	r2, fp
40006534:	e58d8000 	str	r8, [sp]
40006538:	e58d8004 	str	r8, [sp, #4]
4000653c:	ebfff3dd 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006540:	e596001c 	ldr	r0, [r6, #28]
40006544:	eb000f93 	bl	4000a398 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
40006548:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000654c:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006550:	e5d4c05e 	ldrb	ip, [r4, #94]	; 0x5e
40006554:	e3a00004 	mov	r0, #4
40006558:	e59f16a4 	ldr	r1, [pc, #1700]	; 40006c04 <CTControlHandle+0x98c>
4000655c:	e1a02008 	mov	r2, r8
40006560:	e1a03006 	mov	r3, r6
40006564:	e58dc000 	str	ip, [sp]
40006568:	eb003363 	bl	400132fc <CyU3PDebugPrint>
					  break;
4000656c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006570:	eaffff63 	b	40006304 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
40006574:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
40006578:	e3580001 	cmp	r8, #1
4000657c:	13580008 	cmpne	r8, #8
40006580:	13a00000 	movne	r0, #0
40006584:	03a00001 	moveq	r0, #1
40006588:	1a000181 	bne	40006b94 <CTControlHandle+0x91c>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000658c:	e59f866c 	ldr	r8, [pc, #1644]	; 40006c00 <CTControlHandle+0x988>
40006590:	e3e01000 	mvn	r1, #0
40006594:	e598001c 	ldr	r0, [r8, #28]
40006598:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000659c:	eb000f48 	bl	4000a2c4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
400065a0:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400065a4:	e3a01022 	mov	r1, #34	; 0x22
400065a8:	e1a0200b 	mov	r2, fp
400065ac:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400065b0:	e3a0c000 	mov	ip, #0
400065b4:	e1a00008 	mov	r0, r8
400065b8:	e88d1400 	stm	sp, {sl, ip}
400065bc:	ebfff3bd 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400065c0:	e598001c 	ldr	r0, [r8, #28]
400065c4:	eb000f73 	bl	4000a398 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400065c8:	e59f061c 	ldr	r0, [pc, #1564]	; 40006bec <CTControlHandle+0x974>
							 CTCtrlParArry[CtrlID][14] = Data1;
400065cc:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400065d0:	e0891006 	add	r1, r9, r6
400065d4:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400065d8:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400065dc:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
400065e0:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400065e4:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400065e8:	e5d4805c 	ldrb	r8, [r4, #92]	; 0x5c
400065ec:	e5d4605d 	ldrb	r6, [r4, #93]	; 0x5d
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
400065f0:	e3a0c0ff 	mov	ip, #255	; 0xff
400065f4:	eaffff42 	b	40006304 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
400065f8:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
400065fc:	e3500001 	cmp	r0, #1
40006600:	13500004 	cmpne	r0, #4
40006604:	1a00015d 	bne	40006b80 <CTControlHandle+0x908>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
40006608:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000660c:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006610:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006614:	e35200f9 	cmp	r2, #249	; 0xf9
40006618:	8a000158 	bhi	40006b80 <CTControlHandle+0x908>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000661c:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006620:	e1a0c80a 	lsl	ip, sl, #16
40006624:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
40006628:	e262a027 	rsb	sl, r2, #39	; 0x27
4000662c:	e58da038 	str	sl, [sp, #56]	; 0x38
40006630:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006634:	e26210c8 	rsb	r1, r2, #200	; 0xc8
40006638:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000663c:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006640:	e1a01801 	lsl	r1, r1, #16
40006644:	e262e064 	rsb	lr, r2, #100	; 0x64
40006648:	81a0182a 	lsrhi	r1, sl, #16
4000664c:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006650:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006654:	e3520064 	cmp	r2, #100	; 0x64
40006658:	e1a0080e 	lsl	r0, lr, #16
4000665c:	81a0082c 	lsrhi	r0, ip, #16
40006660:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006664:	e242a014 	sub	sl, r2, #20
40006668:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
4000666c:	91a00820 	lsrls	r0, r0, #16
40006670:	e262a014 	rsb	sl, r2, #20
40006674:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006678:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
4000667c:	e1510000 	cmp	r1, r0
40006680:	31a0a001 	movcc	sl, r1
40006684:	21a0a000 	movcs	sl, r0
40006688:	e1a0c80c 	lsl	ip, ip, #16
4000668c:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006690:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006694:	91a0e82c 	lsrls	lr, ip, #16
40006698:	e59fc568 	ldr	ip, [pc, #1384]	; 40006c08 <CTControlHandle+0x990>
4000669c:	e58da020 	str	sl, [sp, #32]
400066a0:	e06ca001 	rsb	sl, ip, r1
400066a4:	81a0e82e 	lsrhi	lr, lr, #16
400066a8:	e27ac000 	rsbs	ip, sl, #0
400066ac:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066b0:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400066b4:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066b8:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400066bc:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066c0:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
400066c4:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066c8:	e242a00a 	sub	sl, r2, #10
400066cc:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400066d0:	e59da020 	ldr	sl, [sp, #32]
400066d4:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400066d8:	e15e000a 	cmp	lr, sl
400066dc:	31a0a00e 	movcc	sl, lr
400066e0:	e262c00a 	rsb	ip, r2, #10
400066e4:	e58dc040 	str	ip, [sp, #64]	; 0x40
400066e8:	e58da038 	str	sl, [sp, #56]	; 0x38
400066ec:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400066f0:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400066f4:	e3520014 	cmp	r2, #20
400066f8:	91a0a82c 	lsrls	sl, ip, #16
400066fc:	81a0a82a 	lsrhi	sl, sl, #16
40006700:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006704:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006708:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
4000670c:	33a0c001 	movcc	ip, #1
40006710:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006714:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006718:	e1a0a801 	lsl	sl, r1, #16
4000671c:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006720:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006724:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006728:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
4000672c:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006730:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
40006734:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006738:	e58d104c 	str	r1, [sp, #76]	; 0x4c
4000673c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006740:	e1a00800 	lsl	r0, r0, #16
40006744:	e15c000a 	cmp	ip, sl
40006748:	21a0c00a 	movcs	ip, sl
4000674c:	e352000a 	cmp	r2, #10
40006750:	e59da020 	ldr	sl, [sp, #32]
40006754:	81a00821 	lsrhi	r0, r1, #16
40006758:	91a00820 	lsrls	r0, r0, #16
4000675c:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006760:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006764:	e15e000a 	cmp	lr, sl
40006768:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000676c:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006770:	e58dc044 	str	ip, [sp, #68]	; 0x44
40006774:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006778:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
4000677c:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006780:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
40006784:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006788:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
4000678c:	e262a002 	rsb	sl, r2, #2
40006790:	e15e0000 	cmp	lr, r0
40006794:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006798:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000679c:	e3520005 	cmp	r2, #5
400067a0:	e58da040 	str	sl, [sp, #64]	; 0x40
400067a4:	e1a01801 	lsl	r1, r1, #16
400067a8:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400067ac:	81a0182c 	lsrhi	r1, ip, #16
400067b0:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400067b4:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400067b8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400067bc:	e59de040 	ldr	lr, [sp, #64]	; 0x40
400067c0:	91a01821 	lsrls	r1, r1, #16
400067c4:	e15a000c 	cmp	sl, ip
400067c8:	e58d1020 	str	r1, [sp, #32]
400067cc:	33a00003 	movcc	r0, #3
400067d0:	e58d0038 	str	r0, [sp, #56]	; 0x38
400067d4:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400067d8:	e1a0080e 	lsl	r0, lr, #16
400067dc:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067e0:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400067e4:	e15e000a 	cmp	lr, sl
400067e8:	21a0e00a 	movcs	lr, sl
400067ec:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400067f0:	e59da048 	ldr	sl, [sp, #72]	; 0x48
400067f4:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400067f8:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400067fc:	91a01820 	lsrls	r1, r0, #16
40006800:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006804:	81a01821 	lsrhi	r1, r1, #16
40006808:	e15a000c 	cmp	sl, ip
4000680c:	33a00004 	movcc	r0, #4
40006810:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006814:	e2420001 	sub	r0, r2, #1
40006818:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
4000681c:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006820:	e59d0020 	ldr	r0, [sp, #32]
40006824:	e262c001 	rsb	ip, r2, #1
40006828:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
4000682c:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006830:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006834:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006838:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
4000683c:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006840:	e3520001 	cmp	r2, #1
40006844:	91a02800 	lslls	r2, r0, #16
40006848:	81a0280a 	lslhi	r2, sl, #16
4000684c:	e151000e 	cmp	r1, lr
40006850:	31a0a001 	movcc	sl, r1
40006854:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006858:	e151000e 	cmp	r1, lr
4000685c:	21a0100c 	movcs	r1, ip
40006860:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006864:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006868:	e59fa390 	ldr	sl, [pc, #912]	; 40006c00 <CTControlHandle+0x988>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
4000686c:	91a02001 	movls	r2, r1
40006870:	83a02007 	movhi	r2, #7
40006874:	e2822001 	add	r2, r2, #1
40006878:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000687c:	e3e01000 	mvn	r1, #0
40006880:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006884:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006888:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000688c:	eb000e8c 	bl	4000a2c4 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006890:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006894:	e3a01003 	mov	r1, #3
40006898:	e1a0200b 	mov	r2, fp
4000689c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400068a0:	e58dc000 	str	ip, [sp]
400068a4:	e1a0000a 	mov	r0, sl
400068a8:	e3a0c000 	mov	ip, #0
400068ac:	e58dc004 	str	ip, [sp, #4]
400068b0:	ebfff300 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400068b4:	e59a001c 	ldr	r0, [sl, #28]
400068b8:	eb000eb6 	bl	4000a398 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400068bc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
400068c0:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400068c4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400068c8:	e0891006 	add	r1, r9, r6
400068cc:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400068d0:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400068d4:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
400068d8:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400068dc:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400068e0:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
400068e4:	eaffff3f 	b	400065e8 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400068e8:	e0892006 	add	r2, r9, r6
400068ec:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400068f0:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
400068f4:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400068f8:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400068fc:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006900:	e35e0007 	cmp	lr, #7
40006904:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006908:	ea000098 	b	40006b70 <CTControlHandle+0x8f8>
4000690c:	40006b04 	.word	0x40006b04
40006910:	40006a68 	.word	0x40006a68
40006914:	40006b70 	.word	0x40006b70
40006918:	40006a00 	.word	0x40006a00
4000691c:	40006b70 	.word	0x40006b70
40006920:	40006b70 	.word	0x40006b70
40006924:	40006b70 	.word	0x40006b70
40006928:	40006960 	.word	0x40006960
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
4000692c:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006930:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006934:	e0899006 	add	r9, r9, r6
40006938:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
4000693c:	e1a02006 	mov	r2, r6
40006940:	e3a00004 	mov	r0, #4
40006944:	e59f12c0 	ldr	r1, [pc, #704]	; 40006c0c <CTControlHandle+0x994>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006948:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
4000694c:	eb00326a 	bl	400132fc <CyU3PDebugPrint>
			  		 break;
40006950:	e3a0c0ff 	mov	ip, #255	; 0xff
40006954:	e1a0600c 	mov	r6, ip
40006958:	e1a0800c 	mov	r8, ip
4000695c:	eafffe68 	b	40006304 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006960:	e59f6298 	ldr	r6, [pc, #664]	; 40006c00 <CTControlHandle+0x988>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006964:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006968:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
4000696c:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006970:	e3e01000 	mvn	r1, #0
40006974:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006978:	eb000e51 	bl	4000a2c4 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
4000697c:	e1a0200b 	mov	r2, fp
40006980:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006984:	e3a01010 	mov	r1, #16
40006988:	e1a00006 	mov	r0, r6
4000698c:	e58da000 	str	sl, [sp]
40006990:	e58da004 	str	sl, [sp, #4]
40006994:	ebfff2c7 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006998:	e596001c 	ldr	r0, [r6, #28]
4000699c:	eb000e7d 	bl	4000a398 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069a0:	e3e01000 	mvn	r1, #0
400069a4:	e596001c 	ldr	r0, [r6, #28]
400069a8:	eb000e45 	bl	4000a2c4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400069ac:	e3a0c001 	mov	ip, #1
400069b0:	e3a01020 	mov	r1, #32
400069b4:	e3a02027 	mov	r2, #39	; 0x27
400069b8:	e3a03030 	mov	r3, #48	; 0x30
400069bc:	e1a00006 	mov	r0, r6
400069c0:	e58dc000 	str	ip, [sp]
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069c4:	e3a08002 	mov	r8, #2
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400069c8:	e58da004 	str	sl, [sp, #4]
400069cc:	ebfff2b9 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069d0:	e3a01021 	mov	r1, #33	; 0x21
400069d4:	e3a02025 	mov	r2, #37	; 0x25
400069d8:	e3a03030 	mov	r3, #48	; 0x30
400069dc:	e1a00006 	mov	r0, r6
400069e0:	e88d0500 	stm	sp, {r8, sl}
400069e4:	ebfff2b3 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069e8:	e596001c 	ldr	r0, [r6, #28]
400069ec:	eb000e69 	bl	4000a398 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
400069f0:	e3a0c0ff 	mov	ip, #255	; 0xff
400069f4:	e1a0600c 	mov	r6, ip
400069f8:	e3a08008 	mov	r8, #8
400069fc:	eafffe40 	b	40006304 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a00:	e59f61f8 	ldr	r6, [pc, #504]	; 40006c00 <CTControlHandle+0x988>
40006a04:	e3e01000 	mvn	r1, #0
40006a08:	e596001c 	ldr	r0, [r6, #28]
40006a0c:	eb000e2c 	bl	4000a2c4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a10:	e3a08000 	mov	r8, #0
40006a14:	e3a01020 	mov	r1, #32
40006a18:	e3a02027 	mov	r2, #39	; 0x27
40006a1c:	e3a03030 	mov	r3, #48	; 0x30
40006a20:	e1a00006 	mov	r0, r6
40006a24:	e58d8000 	str	r8, [sp]
40006a28:	e58d8004 	str	r8, [sp, #4]
40006a2c:	ebfff2a1 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a30:	e3a0c001 	mov	ip, #1
40006a34:	e3a01021 	mov	r1, #33	; 0x21
40006a38:	e3a02025 	mov	r2, #37	; 0x25
40006a3c:	e3a03030 	mov	r3, #48	; 0x30
40006a40:	e1a00006 	mov	r0, r6
40006a44:	e58dc000 	str	ip, [sp]
40006a48:	e58d8004 	str	r8, [sp, #4]
40006a4c:	ebfff299 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a50:	e596001c 	ldr	r0, [r6, #28]
40006a54:	eb000e4f 	bl	4000a398 <_txe_mutex_put>
40006a58:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a5c:	e1a0600c 	mov	r6, ip
40006a60:	e3a08004 	mov	r8, #4
40006a64:	eafffe26 	b	40006304 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a68:	e59f6190 	ldr	r6, [pc, #400]	; 40006c00 <CTControlHandle+0x988>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a6c:	e3a0a000 	mov	sl, #0
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a70:	e596001c 	ldr	r0, [r6, #28]
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006a74:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a78:	e3e01000 	mvn	r1, #0
40006a7c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a80:	eb000e0f 	bl	4000a2c4 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006a84:	e1a0200b 	mov	r2, fp
40006a88:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006a8c:	e3a01010 	mov	r1, #16
40006a90:	e1a00006 	mov	r0, r6
40006a94:	e58da000 	str	sl, [sp]
40006a98:	e58da004 	str	sl, [sp, #4]
40006a9c:	ebfff285 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006aa0:	e596001c 	ldr	r0, [r6, #28]
40006aa4:	eb000e3b 	bl	4000a398 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006aa8:	e3e01000 	mvn	r1, #0
40006aac:	e596001c 	ldr	r0, [r6, #28]
40006ab0:	eb000e03 	bl	4000a2c4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006ab4:	e3a01020 	mov	r1, #32
40006ab8:	e3a02027 	mov	r2, #39	; 0x27
40006abc:	e3a03030 	mov	r3, #48	; 0x30
40006ac0:	e1a00006 	mov	r0, r6
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006ac4:	e3a08001 	mov	r8, #1
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006ac8:	e58da000 	str	sl, [sp]
40006acc:	e58da004 	str	sl, [sp, #4]
40006ad0:	ebfff278 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006ad4:	e3a01021 	mov	r1, #33	; 0x21
40006ad8:	e3a02025 	mov	r2, #37	; 0x25
40006adc:	e3a03030 	mov	r3, #48	; 0x30
40006ae0:	e1a00006 	mov	r0, r6
40006ae4:	e88d0500 	stm	sp, {r8, sl}
40006ae8:	ebfff272 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006aec:	e596001c 	ldr	r0, [r6, #28]
40006af0:	eb000e28 	bl	4000a398 <_txe_mutex_put>
40006af4:	e3a0c0ff 	mov	ip, #255	; 0xff
40006af8:	e1a0600c 	mov	r6, ip
40006afc:	e3a08002 	mov	r8, #2
40006b00:	eafffdff 	b	40006304 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006b04:	e59f60f4 	ldr	r6, [pc, #244]	; 40006c00 <CTControlHandle+0x988>
40006b08:	e3e01000 	mvn	r1, #0
40006b0c:	e596001c 	ldr	r0, [r6, #28]
40006b10:	eb000deb 	bl	4000a2c4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006b14:	e3a08000 	mov	r8, #0
40006b18:	e3a0a001 	mov	sl, #1
40006b1c:	e3a01020 	mov	r1, #32
40006b20:	e3a02027 	mov	r2, #39	; 0x27
40006b24:	e3a03030 	mov	r3, #48	; 0x30
40006b28:	e1a00006 	mov	r0, r6
40006b2c:	e58d8004 	str	r8, [sp, #4]
40006b30:	e58da000 	str	sl, [sp]
40006b34:	ebfff25f 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006b38:	e3a0c002 	mov	ip, #2
40006b3c:	e3a01021 	mov	r1, #33	; 0x21
40006b40:	e3a02025 	mov	r2, #37	; 0x25
40006b44:	e3a03030 	mov	r3, #48	; 0x30
40006b48:	e1a00006 	mov	r0, r6
40006b4c:	e58dc000 	str	ip, [sp]
40006b50:	e58d8004 	str	r8, [sp, #4]
40006b54:	ebfff257 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006b58:	e596001c 	ldr	r0, [r6, #28]
40006b5c:	eb000e0d 	bl	4000a398 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006b60:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b64:	e1a0600c 	mov	r6, ip
40006b68:	e1a0800a 	mov	r8, sl
40006b6c:	eafffde4 	b	40006304 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006b70:	e3a0c0ff 	mov	ip, #255	; 0xff
40006b74:	e1a08000 	mov	r8, r0
40006b78:	e1a0600c 	mov	r6, ip
40006b7c:	eafffde0 	b	40006304 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b80:	e3a00000 	mov	r0, #0
40006b84:	e3a01001 	mov	r1, #1
40006b88:	e1a02000 	mov	r2, r0
40006b8c:	eb005d42 	bl	4001e09c <CyU3PUsbStall>
40006b90:	eafffe94 	b	400065e8 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b94:	e3a01001 	mov	r1, #1
40006b98:	e1a02000 	mov	r2, r0
40006b9c:	eb005d3e 	bl	4001e09c <CyU3PUsbStall>
40006ba0:	eafffe90 	b	400065e8 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006ba4:	e3a0e008 	mov	lr, #8
40006ba8:	e3a0c000 	mov	ip, #0
40006bac:	e1a00006 	mov	r0, r6
40006bb0:	e3a01023 	mov	r1, #35	; 0x23
40006bb4:	e1a0200b 	mov	r2, fp
40006bb8:	e58de000 	str	lr, [sp]
40006bbc:	e58dc004 	str	ip, [sp, #4]
40006bc0:	ebfff23c 	bl	400034b8 <cmdSet>
40006bc4:	eafffe5d 	b	40006540 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006bc8:	e3a08004 	mov	r8, #4
40006bcc:	e3a0e000 	mov	lr, #0
40006bd0:	e1a00006 	mov	r0, r6
40006bd4:	e3a01023 	mov	r1, #35	; 0x23
40006bd8:	e1a0200b 	mov	r2, fp
40006bdc:	e88d4100 	stm	sp, {r8, lr}
40006be0:	ebfff234 	bl	400034b8 <cmdSet>
40006be4:	eafffe55 	b	40006540 <CTControlHandle+0x2c8>
40006be8:	40033144 	.word	0x40033144
40006bec:	40030000 	.word	0x40030000
40006bf0:	40030f90 	.word	0x40030f90
40006bf4:	400117d0 	.word	0x400117d0
40006bf8:	400117f4 	.word	0x400117f4
40006bfc:	40030fec 	.word	0x40030fec
40006c00:	40032ec4 	.word	0x40032ec4
40006c04:	40011784 	.word	0x40011784
40006c08:	0000ffff 	.word	0x0000ffff
40006c0c:	400117ac 	.word	0x400117ac

40006c10 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006c10:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006c14:	e59f4b40 	ldr	r4, [pc, #2880]	; 4000775c <UVCAppEP0Thread_Entry+0xb4c>
40006c18:	e59f6b40 	ldr	r6, [pc, #2880]	; 40007760 <UVCAppEP0Thread_Entry+0xb50>
40006c1c:	e59fab40 	ldr	sl, [pc, #2880]	; 40007764 <UVCAppEP0Thread_Entry+0xb54>
40006c20:	e59f9b40 	ldr	r9, [pc, #2880]	; 40007768 <UVCAppEP0Thread_Entry+0xb58>
40006c24:	e59f8b40 	ldr	r8, [pc, #2880]	; 4000776c <UVCAppEP0Thread_Entry+0xb5c>
40006c28:	e59f7b40 	ldr	r7, [pc, #2880]	; 40007770 <UVCAppEP0Thread_Entry+0xb60>
40006c2c:	e24dd044 	sub	sp, sp, #68	; 0x44
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006c30:	e1a05004 	mov	r5, r4
40006c34:	e3e0c000 	mvn	ip, #0
40006c38:	e59f0b1c 	ldr	r0, [pc, #2844]	; 4000775c <UVCAppEP0Thread_Entry+0xb4c>
40006c3c:	e3a0104c 	mov	r1, #76	; 0x4c
40006c40:	e3a02001 	mov	r2, #1
40006c44:	e28d3038 	add	r3, sp, #56	; 0x38
40006c48:	e58dc000 	str	ip, [sp]
40006c4c:	eb000cd4 	bl	40009fa4 <_txe_event_flags_get>
40006c50:	e3500000 	cmp	r0, #0
40006c54:	1a000030 	bne	40006d1c <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006c58:	e5953030 	ldr	r3, [r5, #48]	; 0x30
40006c5c:	e3530000 	cmp	r3, #0
40006c60:	0a000089 	beq	40006e8c <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006c64:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006c68:	e313000c 	tst	r3, #12
40006c6c:	1a000072 	bne	40006e3c <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006c70:	e3130004 	tst	r3, #4
40006c74:	0a00001c 	beq	40006cec <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006c78:	e1d8e0b0 	ldrh	lr, [r8]
40006c7c:	e1a0242e 	lsr	r2, lr, #8
40006c80:	e3520003 	cmp	r2, #3
40006c84:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006c88:	ea000012 	b	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
40006c8c:	40006cd8 	.word	0x40006cd8
40006c90:	40006dbc 	.word	0x40006dbc
40006c94:	40006c9c 	.word	0x40006c9c
40006c98:	40006df8 	.word	0x40006df8
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006c9c:	e1d920b0 	ldrh	r2, [r9]
40006ca0:	e3520c06 	cmp	r2, #1536	; 0x600
40006ca4:	0a000203 	beq	400074b8 <UVCAppEP0Thread_Entry+0x8a8>
40006ca8:	8a0000d8 	bhi	40007010 <UVCAppEP0Thread_Entry+0x400>
40006cac:	e3520c03 	cmp	r2, #768	; 0x300
40006cb0:	0a0001fc 	beq	400074a8 <UVCAppEP0Thread_Entry+0x898>
40006cb4:	8a0001f3 	bhi	40007488 <UVCAppEP0Thread_Entry+0x878>
40006cb8:	e3520c01 	cmp	r2, #256	; 0x100
40006cbc:	0a000189 	beq	400072e8 <UVCAppEP0Thread_Entry+0x6d8>
40006cc0:	e3520c02 	cmp	r2, #512	; 0x200
40006cc4:	0a000183 	beq	400072d8 <UVCAppEP0Thread_Entry+0x6c8>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006cc8:	e59f1aa4 	ldr	r1, [pc, #2724]	; 40007774 <UVCAppEP0Thread_Entry+0xb64>
40006ccc:	e5da3000 	ldrb	r3, [sl]
40006cd0:	e3a00004 	mov	r0, #4
40006cd4:	eb003188 	bl	400132fc <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006cd8:	e3a00000 	mov	r0, #0
40006cdc:	e3a01001 	mov	r1, #1
40006ce0:	e1a02000 	mov	r2, r0
40006ce4:	eb005cec 	bl	4001e09c <CyU3PUsbStall>
40006ce8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006cec:	e3130008 	tst	r3, #8
40006cf0:	0a000007 	beq	40006d14 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006cf4:	e1d830b0 	ldrh	r3, [r8]
40006cf8:	e3530001 	cmp	r3, #1
40006cfc:	0a000068 	beq	40006ea4 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006d00:	e3a00000 	mov	r0, #0
40006d04:	e3a01001 	mov	r1, #1
40006d08:	e1a02000 	mov	r2, r0
40006d0c:	eb005ce2 	bl	4001e09c <CyU3PUsbStall>
40006d10:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006d14:	e3130040 	tst	r3, #64	; 0x40
40006d18:	1a000001 	bne	40006d24 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006d1c:	eb000f89 	bl	4000ab48 <_txe_thread_relinquish>
    }
40006d20:	eaffffc3 	b	40006c34 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006d24:	e3a00018 	mov	r0, #24
40006d28:	e28d1034 	add	r1, sp, #52	; 0x34
40006d2c:	eb0070a3 	bl	40022fc0 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006d30:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
40006d34:	e3530000 	cmp	r3, #0
40006d38:	0a00006d 	beq	40006ef4 <UVCAppEP0Thread_Entry+0x2e4>
40006d3c:	e5d63643 	ldrb	r3, [r6, #1603]	; 0x643
40006d40:	e3530000 	cmp	r3, #0
40006d44:	1afffff4 	bne	40006d1c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006d48:	e597c000 	ldr	ip, [r7]
40006d4c:	e3a0b002 	mov	fp, #2
40006d50:	e5ccb000 	strb	fp, [ip]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006d54:	e5971000 	ldr	r1, [r7]
40006d58:	e3a0b001 	mov	fp, #1
40006d5c:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006d60:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006d64:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006d68:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006d6c:	e5972000 	ldr	r2, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d70:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006d74:	e5c23003 	strb	r3, [r2, #3]

					interStabuf.buffer = glInterStaBuffer;
40006d78:	e597c000 	ldr	ip, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006d7c:	e3a02004 	mov	r2, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d80:	e59f09f0 	ldr	r0, [pc, #2544]	; 40007778 <UVCAppEP0Thread_Entry+0xb68>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006d84:	e1cd22bc 	strh	r2, [sp, #44]	; 0x2c
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006d88:	e1cde2be 	strh	lr, [sp, #46]	; 0x2e
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006d8c:	e58dc028 	str	ip, [sp, #40]	; 0x28
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006d90:	e1cd33b0 	strh	r3, [sp, #48]	; 0x30

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d94:	eb0040d4 	bl	400170ec <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006d98:	e59f09d8 	ldr	r0, [pc, #2520]	; 40007778 <UVCAppEP0Thread_Entry+0xb68>
40006d9c:	e28d1028 	add	r1, sp, #40	; 0x28
40006da0:	eb004043 	bl	40016eb4 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006da4:	e2502000 	subs	r2, r0, #0
40006da8:	1a000191 	bne	400073f4 <UVCAppEP0Thread_Entry+0x7e4>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006dac:	e59f39ac 	ldr	r3, [pc, #2476]	; 40007760 <UVCAppEP0Thread_Entry+0xb50>
40006db0:	e5c3b643 	strb	fp, [r3, #1603]	; 0x643
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006db4:	eb000f63 	bl	4000ab48 <_txe_thread_relinquish>
40006db8:	eaffff9d 	b	40006c34 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006dbc:	e1d920b0 	ldrh	r2, [r9]
40006dc0:	e3520c06 	cmp	r2, #1536	; 0x600
40006dc4:	0a0000ed 	beq	40007180 <UVCAppEP0Thread_Entry+0x570>
40006dc8:	8a00009b 	bhi	4000703c <UVCAppEP0Thread_Entry+0x42c>
40006dcc:	e3520c03 	cmp	r2, #768	; 0x300
40006dd0:	0a000138 	beq	400072b8 <UVCAppEP0Thread_Entry+0x6a8>
40006dd4:	8a00012f 	bhi	40007298 <UVCAppEP0Thread_Entry+0x688>
40006dd8:	e3520c01 	cmp	r2, #256	; 0x100
40006ddc:	0a000180 	beq	400073e4 <UVCAppEP0Thread_Entry+0x7d4>
40006de0:	e3520c02 	cmp	r2, #512	; 0x200
40006de4:	1affffb7 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006de8:	e3a00001 	mov	r0, #1
40006dec:	ebfffd21 	bl	40006278 <CTControlHandle>
40006df0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006df4:	eaffffbc 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006df8:	e1d930b0 	ldrh	r3, [r9]
40006dfc:	e3530c09 	cmp	r3, #2304	; 0x900
40006e00:	0a000246 	beq	40007720 <UVCAppEP0Thread_Entry+0xb10>
40006e04:	8a000094 	bhi	4000705c <UVCAppEP0Thread_Entry+0x44c>
40006e08:	e3530b01 	cmp	r3, #1024	; 0x400
40006e0c:	0a00023f 	beq	40007710 <UVCAppEP0Thread_Entry+0xb00>
40006e10:	8a0001b1 	bhi	400074dc <UVCAppEP0Thread_Entry+0x8cc>
40006e14:	e3530c02 	cmp	r3, #512	; 0x200
40006e18:	0a000238 	beq	40007700 <UVCAppEP0Thread_Entry+0xaf0>
40006e1c:	e3530c03 	cmp	r3, #768	; 0x300
40006e20:	0a000211 	beq	4000766c <UVCAppEP0Thread_Entry+0xa5c>
40006e24:	e3530c01 	cmp	r3, #256	; 0x100
40006e28:	1affffaa 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006e2c:	e3a00010 	mov	r0, #16
40006e30:	ebfff920 	bl	400052b8 <ControlHandle>
40006e34:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006e38:	eaffffab 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006e3c:	e59fb938 	ldr	fp, [pc, #2360]	; 4000777c <UVCAppEP0Thread_Entry+0xb6c>
40006e40:	e1d9c0b0 	ldrh	ip, [r9]
40006e44:	e1d800b0 	ldrh	r0, [r8]
40006e48:	e59f1930 	ldr	r1, [pc, #2352]	; 40007780 <UVCAppEP0Thread_Entry+0xb70>
40006e4c:	e5dbe000 	ldrb	lr, [fp]
40006e50:	e5dab000 	ldrb	fp, [sl]
40006e54:	e58d000c 	str	r0, [sp, #12]
40006e58:	e58dc008 	str	ip, [sp, #8]
40006e5c:	e1d1c0b0 	ldrh	ip, [r1]
40006e60:	e5d4204c 	ldrb	r2, [r4, #76]	; 0x4c
40006e64:	e58db004 	str	fp, [sp, #4]
40006e68:	e3a00004 	mov	r0, #4
40006e6c:	e59f1910 	ldr	r1, [pc, #2320]	; 40007784 <UVCAppEP0Thread_Entry+0xb74>
40006e70:	e3a0b000 	mov	fp, #0
40006e74:	e58de000 	str	lr, [sp]
40006e78:	e58dc010 	str	ip, [sp, #16]
40006e7c:	e58db014 	str	fp, [sp, #20]
40006e80:	eb00311d 	bl	400132fc <CyU3PDebugPrint>
40006e84:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006e88:	eaffff78 	b	40006c70 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e8c:	eb00585b 	bl	4001d000 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006e90:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e94:	e5c5004c 	strb	r0, [r5, #76]	; 0x4c
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006e98:	13a00001 	movne	r0, #1
40006e9c:	15850030 	strne	r0, [r5, #48]	; 0x30
40006ea0:	eaffff6f 	b	40006c64 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006ea4:	e1d920b0 	ldrh	r2, [r9]
40006ea8:	e3520c03 	cmp	r2, #768	; 0x300
40006eac:	0a00009c 	beq	40007124 <UVCAppEP0Thread_Entry+0x514>
40006eb0:	8a000032 	bhi	40006f80 <UVCAppEP0Thread_Entry+0x370>
40006eb4:	e3520c01 	cmp	r2, #256	; 0x100
40006eb8:	0a0000a6 	beq	40007158 <UVCAppEP0Thread_Entry+0x548>
40006ebc:	e3520c02 	cmp	r2, #512	; 0x200
40006ec0:	1affff8e 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006ec4:	e5da3000 	ldrb	r3, [sl]
40006ec8:	e3530081 	cmp	r3, #129	; 0x81
40006ecc:	0a0000a6 	beq	4000716c <UVCAppEP0Thread_Entry+0x55c>
40006ed0:	8a000150 	bhi	40007418 <UVCAppEP0Thread_Entry+0x808>
40006ed4:	e3530001 	cmp	r3, #1
40006ed8:	0a0001ae 	beq	40007598 <UVCAppEP0Thread_Entry+0x988>
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006edc:	e3a00000 	mov	r0, #0
40006ee0:	e3a01001 	mov	r1, #1
40006ee4:	e1a02000 	mov	r2, r0
40006ee8:	eb005c6b 	bl	4001e09c <CyU3PUsbStall>
40006eec:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006ef0:	eaffff87 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006ef4:	e5d6e643 	ldrb	lr, [r6, #1603]	; 0x643
40006ef8:	e35e0000 	cmp	lr, #0
40006efc:	0affff86 	beq	40006d1c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006f00:	e597c000 	ldr	ip, [r7]
40006f04:	e3a0b002 	mov	fp, #2
40006f08:	e5ccb000 	strb	fp, [ip]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006f0c:	e5971000 	ldr	r1, [r7]
40006f10:	e3a0e001 	mov	lr, #1
40006f14:	e5c1e001 	strb	lr, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006f18:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006f1c:	e3a0cb01 	mov	ip, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006f20:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006f24:	e5972000 	ldr	r2, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f28:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006f2c:	e5c2e003 	strb	lr, [r2, #3]

					interStabuf.buffer = glInterStaBuffer;
40006f30:	e597b000 	ldr	fp, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006f34:	e3a02004 	mov	r2, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f38:	e59f0838 	ldr	r0, [pc, #2104]	; 40007778 <UVCAppEP0Thread_Entry+0xb68>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006f3c:	e1cd22bc 	strh	r2, [sp, #44]	; 0x2c
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006f40:	e1cdc2be 	strh	ip, [sp, #46]	; 0x2e
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006f44:	e58db028 	str	fp, [sp, #40]	; 0x28
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006f48:	e1cd33b0 	strh	r3, [sp, #48]	; 0x30
40006f4c:	e1a0b003 	mov	fp, r3

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006f50:	eb004065 	bl	400170ec <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006f54:	e59f081c 	ldr	r0, [pc, #2076]	; 40007778 <UVCAppEP0Thread_Entry+0xb68>
40006f58:	e28d1028 	add	r1, sp, #40	; 0x28
40006f5c:	eb003fd4 	bl	40016eb4 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006f60:	e2502000 	subs	r2, r0, #0
40006f64:	1a0000e3 	bne	400072f8 <UVCAppEP0Thread_Entry+0x6e8>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006f68:	e59fe7f0 	ldr	lr, [pc, #2032]	; 40007760 <UVCAppEP0Thread_Entry+0xb50>
					stiflag = 0xFF;
40006f6c:	e3a030ff 	mov	r3, #255	; 0xff
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006f70:	e5ceb643 	strb	fp, [lr, #1603]	; 0x643
					stiflag = 0xFF;
40006f74:	e584303c 	str	r3, [r4, #60]	; 0x3c
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006f78:	eb000ef2 	bl	4000ab48 <_txe_thread_relinquish>
40006f7c:	eaffff2c 	b	40006c34 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006f80:	e3520b01 	cmp	r2, #1024	; 0x400
40006f84:	0a000041 	beq	40007090 <UVCAppEP0Thread_Entry+0x480>
40006f88:	e3520c05 	cmp	r2, #1280	; 0x500
40006f8c:	1affff5b 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006f90:	e5da2000 	ldrb	r2, [sl]
40006f94:	e3520081 	cmp	r2, #129	; 0x81
40006f98:	0a000073 	beq	4000716c <UVCAppEP0Thread_Entry+0x55c>
40006f9c:	8a000149 	bhi	400074c8 <UVCAppEP0Thread_Entry+0x8b8>
40006fa0:	e3520001 	cmp	r2, #1
40006fa4:	1affff55 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006fa8:	e3a00020 	mov	r0, #32
40006fac:	e59f17d4 	ldr	r1, [pc, #2004]	; 40007788 <UVCAppEP0Thread_Entry+0xb78>
40006fb0:	e28d203e 	add	r2, sp, #62	; 0x3e
40006fb4:	eb00579f 	bl	4001ce38 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006fb8:	e3500000 	cmp	r0, #0
40006fbc:	1a0001c9 	bne	400076e8 <UVCAppEP0Thread_Entry+0xad8>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
40006fc0:	e3a02000 	mov	r2, #0
40006fc4:	e59f0790 	ldr	r0, [pc, #1936]	; 4000775c <UVCAppEP0Thread_Entry+0xb4c>
40006fc8:	e3a01080 	mov	r1, #128	; 0x80
40006fcc:	eb000c24 	bl	4000a064 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006fd0:	e2502000 	subs	r2, r0, #0
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STIL_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
40006fd4:	03a0b0f0 	moveq	fp, #240	; 0xf0
40006fd8:	0585b03c 	streq	fp, [r5, #60]	; 0x3c
                        if (apiRetStatus == CY_U3P_SUCCESS)
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006fdc:	0a000002 	beq	40006fec <UVCAppEP0Thread_Entry+0x3dc>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STIL_EVENT failed %x\n", apiRetStatus);
40006fe0:	e59f17a4 	ldr	r1, [pc, #1956]	; 4000778c <UVCAppEP0Thread_Entry+0xb7c>
40006fe4:	e3a00004 	mov	r0, #4
40006fe8:	eb0030c3 	bl	400132fc <CyU3PDebugPrint>
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40006fec:	e5d4c081 	ldrb	ip, [r4, #129]	; 0x81
40006ff0:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
40006ff4:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40006ff8:	e3a00004 	mov	r0, #4
40006ffc:	e59f178c 	ldr	r1, [pc, #1932]	; 40007790 <UVCAppEP0Thread_Entry+0xb80>
40007000:	e58dc000 	str	ip, [sp]
40007004:	eb0030bc 	bl	400132fc <CyU3PDebugPrint>
40007008:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000700c:	eaffff40 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007010:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007014:	0a000113 	beq	40007468 <UVCAppEP0Thread_Entry+0x858>
40007018:	8a000108 	bhi	40007440 <UVCAppEP0Thread_Entry+0x830>
4000701c:	e3520c07 	cmp	r2, #1792	; 0x700
40007020:	0a000102 	beq	40007430 <UVCAppEP0Thread_Entry+0x820>
40007024:	e3520b02 	cmp	r2, #2048	; 0x800
40007028:	1affff26 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
4000702c:	e3a00007 	mov	r0, #7
40007030:	ebfff8a0 	bl	400052b8 <ControlHandle>
40007034:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007038:	eaffff2b 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
4000703c:	e3520c09 	cmp	r2, #2304	; 0x900
40007040:	0a000144 	beq	40007558 <UVCAppEP0Thread_Entry+0x948>
40007044:	8a000139 	bhi	40007530 <UVCAppEP0Thread_Entry+0x920>
40007048:	e3520c07 	cmp	r2, #1792	; 0x700
4000704c:	0a00012b 	beq	40007500 <UVCAppEP0Thread_Entry+0x8f0>
40007050:	e3520b02 	cmp	r2, #2048	; 0x800
40007054:	1affff1b 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
40007058:	eaffff23 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000705c:	e3530c0f 	cmp	r3, #3840	; 0xf00
40007060:	0a00019c 	beq	400076d8 <UVCAppEP0Thread_Entry+0xac8>
40007064:	8a000049 	bhi	40007190 <UVCAppEP0Thread_Entry+0x580>
40007068:	e3530c0b 	cmp	r3, #2816	; 0xb00
4000706c:	0a000195 	beq	400076c8 <UVCAppEP0Thread_Entry+0xab8>
40007070:	e3530c0d 	cmp	r3, #3328	; 0xd00
40007074:	0a00018f 	beq	400076b8 <UVCAppEP0Thread_Entry+0xaa8>
40007078:	e3530c0a 	cmp	r3, #2560	; 0xa00
4000707c:	1affff15 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007080:	e3a00019 	mov	r0, #25
40007084:	ebfff88b 	bl	400052b8 <ControlHandle>
40007088:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000708c:	eaffff16 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007090:	e5da2000 	ldrb	r2, [sl]
40007094:	e3520081 	cmp	r2, #129	; 0x81
40007098:	0a000026 	beq	40007138 <UVCAppEP0Thread_Entry+0x528>
4000709c:	8a00009e 	bhi	4000731c <UVCAppEP0Thread_Entry+0x70c>
400070a0:	e3520001 	cmp	r2, #1
400070a4:	1affff15 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070a8:	e3a00020 	mov	r0, #32
400070ac:	e59f16d4 	ldr	r1, [pc, #1748]	; 40007788 <UVCAppEP0Thread_Entry+0xb78>
400070b0:	e28d203e 	add	r2, sp, #62	; 0x3e
400070b4:	eb00575f 	bl	4001ce38 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400070b8:	e3500000 	cmp	r0, #0
400070bc:	1affff13 	bne	40006d10 <UVCAppEP0Thread_Entry+0x100>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
	#endif
                           switch (glCommitCtrl[1])
400070c0:	e5d53081 	ldrb	r3, [r5, #129]	; 0x81
400070c4:	e3530001 	cmp	r3, #1
400070c8:	0a000198 	beq	40007730 <UVCAppEP0Thread_Entry+0xb20>
400070cc:	e3530002 	cmp	r3, #2
400070d0:	1a000009 	bne	400070fc <UVCAppEP0Thread_Entry+0x4ec>
                             		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x1);
                             		break;
                            	case 2: //960
                             		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400070d4:	e3a01030 	mov	r1, #48	; 0x30
400070d8:	e3a02000 	mov	r2, #0
400070dc:	e3a03052 	mov	r3, #82	; 0x52
400070e0:	e3a0000b 	mov	r0, #11
400070e4:	ebfff58e 	bl	40004724 <SensorSetIrisControl>
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x0);
400070e8:	e3a00004 	mov	r0, #4
400070ec:	e59f16a0 	ldr	r1, [pc, #1696]	; 40007794 <UVCAppEP0Thread_Entry+0xb84>
400070f0:	e3a0200b 	mov	r2, #11
400070f4:	e3a03000 	mov	r3, #0
400070f8:	eb00307f 	bl	400132fc <CyU3PDebugPrint>
                             		break;
                              	default:
                             		break;
                             }
                            setstilRes = glCommitCtrl[1];
400070fc:	e5d4e081 	ldrb	lr, [r4, #129]	; 0x81

                        	CyU3PDebugPrint (4, "UVC still commit control set %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007100:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
40007104:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40007108:	e3a00004 	mov	r0, #4
4000710c:	e59f1684 	ldr	r1, [pc, #1668]	; 40007798 <UVCAppEP0Thread_Entry+0xb88>
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x0);
                             		break;
                              	default:
                             		break;
                             }
                            setstilRes = glCommitCtrl[1];
40007110:	e5c4e0a1 	strb	lr, [r4, #161]	; 0xa1

                        	CyU3PDebugPrint (4, "UVC still commit control set %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007114:	e58de000 	str	lr, [sp]
40007118:	eb003077 	bl	400132fc <CyU3PDebugPrint>
4000711c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007120:	eafffefb 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007124:	e5da2000 	ldrb	r2, [sl]
40007128:	e3520083 	cmp	r2, #131	; 0x83
4000712c:	8a0000a7 	bhi	400073d0 <UVCAppEP0Thread_Entry+0x7c0>
40007130:	e3520081 	cmp	r2, #129	; 0x81
40007134:	3a000083 	bcc	40007348 <UVCAppEP0Thread_Entry+0x738>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007138:	e5d4204c 	ldrb	r2, [r4, #76]	; 0x4c
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
4000713c:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007140:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40007144:	059f1650 	ldreq	r1, [pc, #1616]	; 4000779c <UVCAppEP0Thread_Entry+0xb8c>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007148:	159f1650 	ldrne	r1, [pc, #1616]	; 400077a0 <UVCAppEP0Thread_Entry+0xb90>
4000714c:	eb0059a7 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40007150:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007154:	eafffeee 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007158:	e5da2000 	ldrb	r2, [sl]
4000715c:	e3520083 	cmp	r2, #131	; 0x83
40007160:	8a000035 	bhi	4000723c <UVCAppEP0Thread_Entry+0x62c>
40007164:	e3520081 	cmp	r2, #129	; 0x81
40007168:	3a000011 	bcc	400071b4 <UVCAppEP0Thread_Entry+0x5a4>
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (1 || usbSpeed == CY_U3P_SUPER_SPEED)// support both SS and HS
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
4000716c:	e3a0001a 	mov	r0, #26
40007170:	e59f162c 	ldr	r1, [pc, #1580]	; 400077a4 <UVCAppEP0Thread_Entry+0xb94>
40007174:	eb00599d 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40007178:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000717c:	eafffee4 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007180:	e3a00005 	mov	r0, #5
40007184:	ebfffc3b 	bl	40006278 <CTControlHandle>
40007188:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000718c:	eafffed6 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007190:	e3530c11 	cmp	r3, #4352	; 0x1100
40007194:	0a0000fb 	beq	40007588 <UVCAppEP0Thread_Entry+0x978>
40007198:	8a000036 	bhi	40007278 <UVCAppEP0Thread_Entry+0x668>
4000719c:	e3530a01 	cmp	r3, #4096	; 0x1000
400071a0:	1afffecc 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
400071a4:	e3a0001f 	mov	r0, #31
400071a8:	ebfff842 	bl	400052b8 <ControlHandle>
400071ac:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400071b0:	eafffecd 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400071b4:	e3520001 	cmp	r2, #1
400071b8:	1affff47 	bne	40006edc <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400071bc:	e3a00020 	mov	r0, #32
400071c0:	e59f15c0 	ldr	r1, [pc, #1472]	; 40007788 <UVCAppEP0Thread_Entry+0xb78>
400071c4:	e28d203e 	add	r2, sp, #62	; 0x3e
400071c8:	eb00571a 	bl	4001ce38 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400071cc:	e3500000 	cmp	r0, #0
400071d0:	1afffece 	bne	40006d10 <UVCAppEP0Thread_Entry+0x100>
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
400071d4:	e5d5c084 	ldrb	ip, [r5, #132]	; 0x84
                    {
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400071d8:	e5d5b082 	ldrb	fp, [r5, #130]	; 0x82
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
400071dc:	e5d50085 	ldrb	r0, [r5, #133]	; 0x85
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
400071e0:	e58dc01c 	str	ip, [sp, #28]
                    {
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400071e4:	e5c6b612 	strb	fp, [r6, #1554]	; 0x612
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
400071e8:	e59db01c 	ldr	fp, [sp, #28]
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
400071ec:	e5d51086 	ldrb	r1, [r5, #134]	; 0x86
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
400071f0:	e58d0020 	str	r0, [sp, #32]
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
400071f4:	e5c6b614 	strb	fp, [r6, #1556]	; 0x614
                            glProbeCtrl[5] = glCommitCtrl[5];
400071f8:	e59db020 	ldr	fp, [sp, #32]
                            glProbeCtrl[6] = glCommitCtrl[6];
400071fc:	e58d1024 	str	r1, [sp, #36]	; 0x24
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
40007200:	e5d5e083 	ldrb	lr, [r5, #131]	; 0x83
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
                            glProbeCtrl[7] = glCommitCtrl[7];
40007204:	e5d5c087 	ldrb	ip, [r5, #135]	; 0x87
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
40007208:	e5c6b615 	strb	fp, [r6, #1557]	; 0x615
                            glProbeCtrl[6] = glCommitCtrl[6];
4000720c:	e59db024 	ldr	fp, [sp, #36]	; 0x24
                            glProbeCtrl[7] = glCommitCtrl[7];
                            CyU3PDebugPrint (4, "Get UVC Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[3]);
40007210:	e5d53080 	ldrb	r3, [r5, #128]	; 0x80
40007214:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40007218:	e3a00004 	mov	r0, #4
4000721c:	e59f1584 	ldr	r1, [pc, #1412]	; 400077a8 <UVCAppEP0Thread_Entry+0xb98>
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
40007220:	e5c6e613 	strb	lr, [r6, #1555]	; 0x613
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
40007224:	e5c6b616 	strb	fp, [r6, #1558]	; 0x616
                            glProbeCtrl[7] = glCommitCtrl[7];
40007228:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            CyU3PDebugPrint (4, "Get UVC Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[3]);
4000722c:	e58de000 	str	lr, [sp]
40007230:	eb003031 	bl	400132fc <CyU3PDebugPrint>
40007234:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007238:	eafffeb5 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
4000723c:	e3520086 	cmp	r2, #134	; 0x86
40007240:	0a000039 	beq	4000732c <UVCAppEP0Thread_Entry+0x71c>
40007244:	e3520087 	cmp	r2, #135	; 0x87
40007248:	0affffc7 	beq	4000716c <UVCAppEP0Thread_Entry+0x55c>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000724c:	e3520085 	cmp	r2, #133	; 0x85
40007250:	1affff21 	bne	40006edc <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007254:	e59f1550 	ldr	r1, [pc, #1360]	; 400077ac <UVCAppEP0Thread_Entry+0xb9c>
40007258:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
4000725c:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
40007260:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
                        glEp0Buffer[1] = 0;
40007264:	e3a03000 	mov	r3, #0
40007268:	e5c4305d 	strb	r3, [r4, #93]	; 0x5d
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000726c:	eb00595f 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40007270:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007274:	eafffea6 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007278:	e3530c12 	cmp	r3, #4608	; 0x1200
4000727c:	0a000109 	beq	400076a8 <UVCAppEP0Thread_Entry+0xa98>
40007280:	e3530c13 	cmp	r3, #4864	; 0x1300
40007284:	1afffe93 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID6-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCGridCtlID6);
40007288:	e3a00026 	mov	r0, #38	; 0x26
4000728c:	ebfff809 	bl	400052b8 <ControlHandle>
40007290:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007294:	eafffe94 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007298:	e3520b01 	cmp	r2, #1024	; 0x400
4000729c:	0a000009 	beq	400072c8 <UVCAppEP0Thread_Entry+0x6b8>
400072a0:	e3520c05 	cmp	r2, #1280	; 0x500
400072a4:	1afffe87 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
400072a8:	e3a00004 	mov	r0, #4
400072ac:	ebfffbf1 	bl	40006278 <CTControlHandle>
400072b0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072b4:	eafffe8c 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
400072b8:	e3a00002 	mov	r0, #2
400072bc:	ebfffbed 	bl	40006278 <CTControlHandle>
400072c0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072c4:	eafffe88 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
400072c8:	e3a00003 	mov	r0, #3
400072cc:	ebfffbe9 	bl	40006278 <CTControlHandle>
400072d0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072d4:	eafffe84 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
400072d8:	e3a00001 	mov	r0, #1
400072dc:	ebfff7f5 	bl	400052b8 <ControlHandle>
400072e0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072e4:	eafffe80 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
400072e8:	e3a00000 	mov	r0, #0
400072ec:	ebfff7f1 	bl	400052b8 <ControlHandle>
400072f0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072f4:	eafffe7c 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400072f8:	e3a00004 	mov	r0, #4
400072fc:	e59f14ac 	ldr	r1, [pc, #1196]	; 400077b0 <UVCAppEP0Thread_Entry+0xba0>
40007300:	eb002ffd 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007304:	e59f14a8 	ldr	r1, [pc, #1192]	; 400077b4 <UVCAppEP0Thread_Entry+0xba4>
40007308:	e3a00004 	mov	r0, #4
4000730c:	eb002ffa 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007310:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007314:	eb00065a 	bl	40008c84 <_tx_thread_sleep>
40007318:	eafffff9 	b	40007304 <UVCAppEP0Thread_Entry+0x6f4>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
4000731c:	e3520085 	cmp	r2, #133	; 0x85
40007320:	0affffcb 	beq	40007254 <UVCAppEP0Thread_Entry+0x644>
40007324:	e3520086 	cmp	r2, #134	; 0x86
40007328:	1afffe74 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000732c:	e1a00003 	mov	r0, r3

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007330:	e3a03003 	mov	r3, #3
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007334:	e59f1470 	ldr	r1, [pc, #1136]	; 400077ac <UVCAppEP0Thread_Entry+0xb9c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007338:	e5c4305c 	strb	r3, [r4, #92]	; 0x5c
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000733c:	eb00592b 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40007340:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007344:	eafffe72 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007348:	e3520001 	cmp	r2, #1
4000734c:	1afffee2 	bne	40006edc <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007350:	e3a00020 	mov	r0, #32
40007354:	e59f142c 	ldr	r1, [pc, #1068]	; 40007788 <UVCAppEP0Thread_Entry+0xb78>
40007358:	e28d203e 	add	r2, sp, #62	; 0x3e
4000735c:	eb0056b5 	bl	4001ce38 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007360:	e3500000 	cmp	r0, #0
40007364:	1afffe69 	bne	40006d10 <UVCAppEP0Thread_Entry+0x100>
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007368:	e5d5c083 	ldrb	ip, [r5, #131]	; 0x83
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
4000736c:	e5d5b082 	ldrb	fp, [r5, #130]	; 0x82
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007370:	e5d50084 	ldrb	r0, [r5, #132]	; 0x84
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007374:	e58dc01c 	str	ip, [sp, #28]
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007378:	e5c6b62e 	strb	fp, [r6, #1582]	; 0x62e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
4000737c:	e59db01c 	ldr	fp, [sp, #28]
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007380:	e5d51085 	ldrb	r1, [r5, #133]	; 0x85
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007384:	e58d0020 	str	r0, [sp, #32]
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007388:	e5c6b62f 	strb	fp, [r6, #1583]	; 0x62f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000738c:	e59db020 	ldr	fp, [sp, #32]
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007390:	e58d1024 	str	r1, [sp, #36]	; 0x24
                        {
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007394:	e5d5e081 	ldrb	lr, [r5, #129]	; 0x81
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007398:	e5d5c086 	ldrb	ip, [r5, #134]	; 0x86
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000739c:	e5c6b630 	strb	fp, [r6, #1584]	; 0x630
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400073a0:	e59db024 	ldr	fp, [sp, #36]	; 0x24
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
400073a4:	e5d53080 	ldrb	r3, [r5, #128]	; 0x80
400073a8:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
400073ac:	e3a00004 	mov	r0, #4
400073b0:	e59f1400 	ldr	r1, [pc, #1024]	; 400077b8 <UVCAppEP0Thread_Entry+0xba8>
                        {
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400073b4:	e5c6e62d 	strb	lr, [r6, #1581]	; 0x62d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400073b8:	e5c6b631 	strb	fp, [r6, #1585]	; 0x631
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400073bc:	e5c6c632 	strb	ip, [r6, #1586]	; 0x632
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
400073c0:	e58de000 	str	lr, [sp]
400073c4:	eb002fcc 	bl	400132fc <CyU3PDebugPrint>
400073c8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400073cc:	eafffe50 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400073d0:	e3520086 	cmp	r2, #134	; 0x86
400073d4:	0affffd4 	beq	4000732c <UVCAppEP0Thread_Entry+0x71c>
400073d8:	e3520087 	cmp	r2, #135	; 0x87
400073dc:	1affff9a 	bne	4000724c <UVCAppEP0Thread_Entry+0x63c>
400073e0:	eaffff54 	b	40007138 <UVCAppEP0Thread_Entry+0x528>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
400073e4:	e3a00000 	mov	r0, #0
400073e8:	ebfffba2 	bl	40006278 <CTControlHandle>
400073ec:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400073f0:	eafffe3d 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400073f4:	e3a00004 	mov	r0, #4
400073f8:	e59f13b0 	ldr	r1, [pc, #944]	; 400077b0 <UVCAppEP0Thread_Entry+0xba0>
400073fc:	eb002fbe 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007400:	e59f13ac 	ldr	r1, [pc, #940]	; 400077b4 <UVCAppEP0Thread_Entry+0xba4>
40007404:	e3a00004 	mov	r0, #4
40007408:	eb002fbb 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000740c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007410:	eb00061b 	bl	40008c84 <_tx_thread_sleep>
40007414:	eafffff9 	b	40007400 <UVCAppEP0Thread_Entry+0x7f0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007418:	e3530085 	cmp	r3, #133	; 0x85
4000741c:	0affff8c 	beq	40007254 <UVCAppEP0Thread_Entry+0x644>
40007420:	e3530086 	cmp	r3, #134	; 0x86
40007424:	1afffeac 	bne	40006edc <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007428:	e3a00001 	mov	r0, #1
4000742c:	eaffffbf 	b	40007330 <UVCAppEP0Thread_Entry+0x720>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
40007430:	e3a00006 	mov	r0, #6
40007434:	ebfff79f 	bl	400052b8 <ControlHandle>
40007438:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000743c:	eafffe2a 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007440:	e3520c0d 	cmp	r2, #3328	; 0xd00
40007444:	0a000007 	beq	40007468 <UVCAppEP0Thread_Entry+0x858>
40007448:	e3520c0e 	cmp	r2, #3584	; 0xe00
4000744c:	0a000009 	beq	40007478 <UVCAppEP0Thread_Entry+0x868>
40007450:	e3520b03 	cmp	r2, #3072	; 0xc00
40007454:	1afffe1b 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
40007458:	e3a0000b 	mov	r0, #11
4000745c:	ebfff795 	bl	400052b8 <ControlHandle>
40007460:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007464:	eafffe20 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
40007468:	e3a00009 	mov	r0, #9
4000746c:	ebfff791 	bl	400052b8 <ControlHandle>
40007470:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007474:	eafffe1c 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
40007478:	e3a0000e 	mov	r0, #14
4000747c:	ebfff78d 	bl	400052b8 <ControlHandle>
40007480:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007484:	eafffe18 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007488:	e3520b01 	cmp	r2, #1024	; 0x400
4000748c:	0afffe16 	beq	40006cec <UVCAppEP0Thread_Entry+0xdc>
40007490:	e3520c05 	cmp	r2, #1280	; 0x500
40007494:	1afffe0b 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007498:	e3a00004 	mov	r0, #4
4000749c:	ebfff785 	bl	400052b8 <ControlHandle>
400074a0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074a4:	eafffe10 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
400074a8:	e3a00002 	mov	r0, #2
400074ac:	ebfff781 	bl	400052b8 <ControlHandle>
400074b0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074b4:	eafffe0c 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
400074b8:	e3a00005 	mov	r0, #5
400074bc:	ebfff77d 	bl	400052b8 <ControlHandle>
400074c0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074c4:	eafffe08 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
400074c8:	e3520085 	cmp	r2, #133	; 0x85
400074cc:	0a000072 	beq	4000769c <UVCAppEP0Thread_Entry+0xa8c>
400074d0:	e3520086 	cmp	r2, #134	; 0x86
400074d4:	1afffe09 	bne	40006d00 <UVCAppEP0Thread_Entry+0xf0>
400074d8:	eaffffd2 	b	40007428 <UVCAppEP0Thread_Entry+0x818>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400074dc:	e3530c06 	cmp	r3, #1536	; 0x600
400074e0:	0a000069 	beq	4000768c <UVCAppEP0Thread_Entry+0xa7c>
400074e4:	8a000009 	bhi	40007510 <UVCAppEP0Thread_Entry+0x900>
400074e8:	e3530c05 	cmp	r3, #1280	; 0x500
400074ec:	1afffdf9 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
400074f0:	e3a00014 	mov	r0, #20
400074f4:	ebfff76f 	bl	400052b8 <ControlHandle>
400074f8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074fc:	eafffdfa 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007500:	e3a00006 	mov	r0, #6
40007504:	ebfffb5b 	bl	40006278 <CTControlHandle>
40007508:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000750c:	eafffdf6 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007510:	e3530c07 	cmp	r3, #1792	; 0x700
40007514:	0a000058 	beq	4000767c <UVCAppEP0Thread_Entry+0xa6c>
40007518:	e3530b02 	cmp	r3, #2048	; 0x800
4000751c:	1afffded 	bne	40006cd8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
40007520:	e3a00017 	mov	r0, #23
40007524:	ebfff763 	bl	400052b8 <ControlHandle>
40007528:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000752c:	eafffdee 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007530:	e3520c0b 	cmp	r2, #2816	; 0xb00
40007534:	0a00000f 	beq	40007578 <UVCAppEP0Thread_Entry+0x968>
40007538:	e3520b03 	cmp	r2, #3072	; 0xc00
4000753c:	0a000009 	beq	40007568 <UVCAppEP0Thread_Entry+0x958>
40007540:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007544:	1afffddf 	bne	40006cc8 <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007548:	e3a00008 	mov	r0, #8
4000754c:	ebfffb49 	bl	40006278 <CTControlHandle>
40007550:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007554:	eafffde4 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
40007558:	e3a00007 	mov	r0, #7
4000755c:	ebfffb45 	bl	40006278 <CTControlHandle>
40007560:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007564:	eafffde0 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
40007568:	e3a0000a 	mov	r0, #10
4000756c:	ebfffb41 	bl	40006278 <CTControlHandle>
40007570:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007574:	eafffddc 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
40007578:	e3a00009 	mov	r0, #9
4000757c:	ebfffb3d 	bl	40006278 <CTControlHandle>
40007580:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007584:	eafffdd8 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
40007588:	e3a00024 	mov	r0, #36	; 0x24
4000758c:	ebfff749 	bl	400052b8 <ControlHandle>
40007590:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007594:	eafffdd4 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007598:	e3a00020 	mov	r0, #32
4000759c:	e59f11e4 	ldr	r1, [pc, #484]	; 40007788 <UVCAppEP0Thread_Entry+0xb78>
400075a0:	e28d203e 	add	r2, sp, #62	; 0x3e
400075a4:	eb005623 	bl	4001ce38 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)//supports both SS and HS
400075a8:	e3500000 	cmp	r0, #0
400075ac:	1afffdd7 	bne	40006d10 <UVCAppEP0Thread_Entry+0x100>
                    {
                        switch (glCommitCtrl[3])
400075b0:	e5d43083 	ldrb	r3, [r4, #131]	; 0x83
400075b4:	e3530001 	cmp	r3, #1
400075b8:	0a00001e 	beq	40007638 <UVCAppEP0Thread_Entry+0xa28>
400075bc:	e3530002 	cmp	r3, #2
400075c0:	1a00000b 	bne	400075f4 <UVCAppEP0Thread_Entry+0x9e4>
                         		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(500);
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x0, 0x0b);
                         		break;
                         	case 2: //720 or 360
                         		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400075c4:	e3a01030 	mov	r1, #48	; 0x30
400075c8:	e3a02001 	mov	r2, #1
400075cc:	e3a03052 	mov	r3, #82	; 0x52
400075d0:	e3a0000b 	mov	r0, #11
400075d4:	ebfff452 	bl	40004724 <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
400075d8:	e3a00f7d 	mov	r0, #500	; 0x1f4
400075dc:	eb0005a8 	bl	40008c84 <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x1, 0x0b);
400075e0:	e3a00004 	mov	r0, #4
400075e4:	e59f11d0 	ldr	r1, [pc, #464]	; 400077bc <UVCAppEP0Thread_Entry+0xbac>
400075e8:	e3a02001 	mov	r2, #1
400075ec:	e3a0300b 	mov	r3, #11
400075f0:	eb002f41 	bl	400132fc <CyU3PDebugPrint>
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
400075f4:	e5d4e083 	ldrb	lr, [r4, #131]	; 0x83
                        CyU3PDebugPrint (4, "Set the video mode format setRes %d\n", setRes);
400075f8:	e59f11c0 	ldr	r1, [pc, #448]	; 400077c0 <UVCAppEP0Thread_Entry+0xbb0>
400075fc:	e1a0200e 	mov	r2, lr
40007600:	e3a00004 	mov	r0, #4
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x1, 0x0b);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007604:	e5c4e0a0 	strb	lr, [r4, #160]	; 0xa0
                        CyU3PDebugPrint (4, "Set the video mode format setRes %d\n", setRes);
40007608:	eb002f3b 	bl	400132fc <CyU3PDebugPrint>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
4000760c:	e3a02000 	mov	r2, #0
40007610:	e59f0144 	ldr	r0, [pc, #324]	; 4000775c <UVCAppEP0Thread_Entry+0xb4c>
40007614:	e3a01001 	mov	r1, #1
40007618:	eb000a91 	bl	4000a064 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000761c:	e2502000 	subs	r2, r0, #0
40007620:	0afffdba 	beq	40006d10 <UVCAppEP0Thread_Entry+0x100>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007624:	e3a00004 	mov	r0, #4
40007628:	e59f1194 	ldr	r1, [pc, #404]	; 400077c4 <UVCAppEP0Thread_Entry+0xbb4>
4000762c:	eb002f32 	bl	400132fc <CyU3PDebugPrint>
40007630:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007634:	eafffdb6 	b	40006d14 <UVCAppEP0Thread_Entry+0x104>
                    if (apiRetStatus == CY_U3P_SUCCESS)//supports both SS and HS
                    {
                        switch (glCommitCtrl[3])
                         {
                         	case 1: //960 or 480
                         		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007638:	e3a01030 	mov	r1, #48	; 0x30
4000763c:	e3a02000 	mov	r2, #0
40007640:	e3a03052 	mov	r3, #82	; 0x52
40007644:	e3a0000b 	mov	r0, #11
40007648:	ebfff435 	bl	40004724 <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
4000764c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007650:	eb00058b 	bl	40008c84 <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x0, 0x0b);
40007654:	e59f1160 	ldr	r1, [pc, #352]	; 400077bc <UVCAppEP0Thread_Entry+0xbac>
40007658:	e3a02000 	mov	r2, #0
4000765c:	e3a0300b 	mov	r3, #11
40007660:	e3a00004 	mov	r0, #4
40007664:	eb002f24 	bl	400132fc <CyU3PDebugPrint>
40007668:	eaffffe1 	b	400075f4 <UVCAppEP0Thread_Entry+0x9e4>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
4000766c:	e3a00012 	mov	r0, #18
40007670:	ebfff710 	bl	400052b8 <ControlHandle>
40007674:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007678:	eafffd9b 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
4000767c:	e3a00016 	mov	r0, #22
40007680:	ebfff70c 	bl	400052b8 <ControlHandle>
40007684:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007688:	eafffd97 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
4000768c:	e3a00015 	mov	r0, #21
40007690:	ebfff708 	bl	400052b8 <ControlHandle>
40007694:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007698:	eafffd93 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000769c:	e3a00002 	mov	r0, #2
400076a0:	e59f1104 	ldr	r1, [pc, #260]	; 400077ac <UVCAppEP0Thread_Entry+0xb9c>
400076a4:	eafffeed 	b	40007260 <UVCAppEP0Thread_Entry+0x650>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
400076a8:	e3a00025 	mov	r0, #37	; 0x25
400076ac:	ebfff701 	bl	400052b8 <ControlHandle>
400076b0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076b4:	eafffd8c 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
400076b8:	e3a0001c 	mov	r0, #28
400076bc:	ebfff6fd 	bl	400052b8 <ControlHandle>
400076c0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076c4:	eafffd88 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
400076c8:	e3a0001a 	mov	r0, #26
400076cc:	ebfff6f9 	bl	400052b8 <ControlHandle>
400076d0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076d4:	eafffd84 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
400076d8:	e3a0001e 	mov	r0, #30
400076dc:	ebfff6f5 	bl	400052b8 <ControlHandle>
400076e0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076e4:	eafffd80 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
400076e8:	e59f10d8 	ldr	r1, [pc, #216]	; 400077c8 <UVCAppEP0Thread_Entry+0xbb8>
400076ec:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
400076f0:	e5d43080 	ldrb	r3, [r4, #128]	; 0x80
400076f4:	e3a00004 	mov	r0, #4
400076f8:	eb002eff 	bl	400132fc <CyU3PDebugPrint>
400076fc:	eafffd7f 	b	40006d00 <UVCAppEP0Thread_Entry+0xf0>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007700:	e3a00011 	mov	r0, #17
40007704:	ebfff6eb 	bl	400052b8 <ControlHandle>
40007708:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000770c:	eafffd76 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007710:	e3a00013 	mov	r0, #19
40007714:	ebfff6e7 	bl	400052b8 <ControlHandle>
40007718:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000771c:	eafffd72 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
40007720:	e3a00018 	mov	r0, #24
40007724:	ebfff6e3 	bl	400052b8 <ControlHandle>
40007728:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000772c:	eafffd6e 	b	40006cec <UVCAppEP0Thread_Entry+0xdc>
                            }
	#endif
                           switch (glCommitCtrl[1])
                             {
                             	case 1: //720
                             		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007730:	e3a01030 	mov	r1, #48	; 0x30
40007734:	e3a02001 	mov	r2, #1
40007738:	e3a03052 	mov	r3, #82	; 0x52
4000773c:	e3a0000b 	mov	r0, #11
40007740:	ebfff3f7 	bl	40004724 <SensorSetIrisControl>
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x1);
40007744:	e59f1048 	ldr	r1, [pc, #72]	; 40007794 <UVCAppEP0Thread_Entry+0xb84>
40007748:	e3a0200b 	mov	r2, #11
4000774c:	e3a03001 	mov	r3, #1
40007750:	e3a00004 	mov	r0, #4
40007754:	eb002ee8 	bl	400132fc <CyU3PDebugPrint>
40007758:	eafffe67 	b	400070fc <UVCAppEP0Thread_Entry+0x4ec>
4000775c:	40030f90 	.word	0x40030f90
40007760:	40030000 	.word	0x40030000
40007764:	40033144 	.word	0x40033144
40007768:	40032fc0 	.word	0x40032fc0
4000776c:	40032ff0 	.word	0x40032ff0
40007770:	40033108 	.word	0x40033108
40007774:	400118d4 	.word	0x400118d4
40007778:	40033030 	.word	0x40033030
4000777c:	40032ec0 	.word	0x40032ec0
40007780:	40032ff2 	.word	0x40032ff2
40007784:	40011858 	.word	0x40011858
40007788:	40031010 	.word	0x40031010
4000778c:	40011a14 	.word	0x40011a14
40007790:	40011a38 	.word	0x40011a38
40007794:	400119c8 	.word	0x400119c8
40007798:	400119ec 	.word	0x400119ec
4000779c:	4003062c 	.word	0x4003062c
400077a0:	40030638 	.word	0x40030638
400077a4:	40030610 	.word	0x40030610
400077a8:	40011900 	.word	0x40011900
400077ac:	40030fec 	.word	0x40030fec
400077b0:	40011a8c 	.word	0x40011a8c
400077b4:	40011594 	.word	0x40011594
400077b8:	4001199c 	.word	0x4001199c
400077bc:	40011928 	.word	0x40011928
400077c0:	4001194c 	.word	0x4001194c
400077c4:	40011974 	.word	0x40011974
400077c8:	40011a64 	.word	0x40011a64

400077cc <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400077cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400077d0:	e59f42ac 	ldr	r4, [pc, #684]	; 40007a84 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077d4:	e59f22ac 	ldr	r2, [pc, #684]	; 40007a88 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
400077d8:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400077dc:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077e0:	e592001c 	ldr	r0, [r2, #28]
400077e4:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400077e8:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400077ec:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400077f0:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400077f4:	eb000ab2 	bl	4000a2c4 <_txe_mutex_get>
    if(Data1&0x80){
400077f8:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400077fc:	12066001 	andne	r6, r6, #1
40007800:	11e06006 	mvnne	r6, r6
40007804:	1206603b 	andne	r6, r6, #59	; 0x3b
40007808:	11e06006 	mvnne	r6, r6
4000780c:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
40007810:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007814:	e3a08000 	mov	r8, #0
40007818:	e1a0200a 	mov	r2, sl
4000781c:	e1a03007 	mov	r3, r7
40007820:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007824:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007828:	e59f0258 	ldr	r0, [pc, #600]	; 40007a88 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
4000782c:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007830:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007834:	e88d0140 	stm	sp, {r6, r8}
40007838:	ebffef1e 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
4000783c:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
40007840:	e1a01009 	mov	r1, r9
40007844:	e1a03007 	mov	r3, r7
40007848:	e59f0238 	ldr	r0, [pc, #568]	; 40007a88 <CamDefSet+0x2bc>
4000784c:	e88d0220 	stm	sp, {r5, r9}
40007850:	ebffef18 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007854:	e1a02006 	mov	r2, r6
40007858:	e1a03005 	mov	r3, r5
4000785c:	e59f1228 	ldr	r1, [pc, #552]	; 40007a8c <CamDefSet+0x2c0>
40007860:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
40007864:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007868:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
4000786c:	eb002ea2 	bl	400132fc <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007870:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
40007874:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007878:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
4000787c:	e3a01002 	mov	r1, #2
40007880:	e59f0200 	ldr	r0, [pc, #512]	; 40007a88 <CamDefSet+0x2bc>
40007884:	e58db000 	str	fp, [sp]
40007888:	e58d8004 	str	r8, [sp, #4]
4000788c:	ebffef09 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007890:	e1a0200b 	mov	r2, fp
40007894:	e1a03005 	mov	r3, r5
40007898:	e59f11ec 	ldr	r1, [pc, #492]	; 40007a8c <CamDefSet+0x2c0>
4000789c:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
400078a0:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400078a4:	eb002e94 	bl	400132fc <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400078a8:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
400078ac:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078b0:	e247b080 	sub	fp, r7, #128	; 0x80
400078b4:	e20b10ff 	and	r1, fp, #255	; 0xff
400078b8:	e58d1014 	str	r1, [sp, #20]
400078bc:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078c0:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078c4:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078c8:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078cc:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078d0:	e3a01005 	mov	r1, #5
400078d4:	e3a020df 	mov	r2, #223	; 0xdf
400078d8:	e59f01a8 	ldr	r0, [pc, #424]	; 40007a88 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078dc:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400078e0:	e58dc000 	str	ip, [sp]
400078e4:	e58d8004 	str	r8, [sp, #4]
400078e8:	ebffeef2 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078ec:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400078f0:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400078f4:	e20ac0ff 	and	ip, sl, #255	; 0xff
400078f8:	e1a03006 	mov	r3, r6
400078fc:	e3a01005 	mov	r1, #5
40007900:	e3a020dc 	mov	r2, #220	; 0xdc
40007904:	e59f017c 	ldr	r0, [pc, #380]	; 40007a88 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007908:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000790c:	e58dc000 	str	ip, [sp]
40007910:	e58d9004 	str	r9, [sp, #4]
40007914:	ebffeee7 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007918:	e59d001c 	ldr	r0, [sp, #28]
4000791c:	e3a0e002 	mov	lr, #2
40007920:	e200c0ff 	and	ip, r0, #255	; 0xff
40007924:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007928:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
4000792c:	e3a01005 	mov	r1, #5
40007930:	e3a020de 	mov	r2, #222	; 0xde
40007934:	e59f014c 	ldr	r0, [pc, #332]	; 40007a88 <CamDefSet+0x2bc>
40007938:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000793c:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007940:	e58dc000 	str	ip, [sp]
40007944:	ebffeedb 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007948:	e59da020 	ldr	sl, [sp, #32]
4000794c:	e1a03006 	mov	r3, r6
40007950:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007954:	e58dc000 	str	ip, [sp]
40007958:	e3a01005 	mov	r1, #5
4000795c:	e3a0c003 	mov	ip, #3
40007960:	e3a020e0 	mov	r2, #224	; 0xe0
40007964:	e59f011c 	ldr	r0, [pc, #284]	; 40007a88 <CamDefSet+0x2bc>
40007968:	e58dc004 	str	ip, [sp, #4]
4000796c:	ebffeed1 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007970:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40007974:	e3a0a004 	mov	sl, #4
40007978:	e200c0ff 	and	ip, r0, #255	; 0xff
4000797c:	e1a03006 	mov	r3, r6
40007980:	e3a01005 	mov	r1, #5
40007984:	e3a020dd 	mov	r2, #221	; 0xdd
40007988:	e59f00f8 	ldr	r0, [pc, #248]	; 40007a88 <CamDefSet+0x2bc>
4000798c:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007990:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007994:	e58da004 	str	sl, [sp, #4]
40007998:	ebffeec6 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
4000799c:	e3a0e005 	mov	lr, #5
400079a0:	e1a0100e 	mov	r1, lr
400079a4:	e1a03006 	mov	r3, r6
400079a8:	e3a020e1 	mov	r2, #225	; 0xe1
400079ac:	e20760ff 	and	r6, r7, #255	; 0xff
400079b0:	e59f00d0 	ldr	r0, [pc, #208]	; 40007a88 <CamDefSet+0x2bc>
400079b4:	e88d4040 	stm	sp, {r6, lr}
400079b8:	ebffeebe 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400079bc:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400079c0:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400079c4:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400079c8:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400079cc:	e59dc020 	ldr	ip, [sp, #32]
400079d0:	e1a0200b 	mov	r2, fp
400079d4:	e59d3018 	ldr	r3, [sp, #24]
400079d8:	e59f10b0 	ldr	r1, [pc, #176]	; 40007a90 <CamDefSet+0x2c4>
400079dc:	e1a0000a 	mov	r0, sl
400079e0:	e88d5040 	stm	sp, {r6, ip, lr}
400079e4:	e58d700c 	str	r7, [sp, #12]
400079e8:	eb002e43 	bl	400132fc <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
400079ec:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
400079f0:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
400079f4:	e1a03007 	mov	r3, r7
400079f8:	e3a01006 	mov	r1, #6
400079fc:	e3a02085 	mov	r2, #133	; 0x85
40007a00:	e59f0080 	ldr	r0, [pc, #128]	; 40007a88 <CamDefSet+0x2bc>
40007a04:	e88d0140 	stm	sp, {r6, r8}
40007a08:	ebffeeaa 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007a0c:	e1a03007 	mov	r3, r7
40007a10:	e3a01006 	mov	r1, #6
40007a14:	e3a02086 	mov	r2, #134	; 0x86
40007a18:	e59f0068 	ldr	r0, [pc, #104]	; 40007a88 <CamDefSet+0x2bc>
40007a1c:	e88d0240 	stm	sp, {r6, r9}
40007a20:	ebffeea4 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a24:	e1a02006 	mov	r2, r6
40007a28:	e1a03005 	mov	r3, r5
40007a2c:	e59f1058 	ldr	r1, [pc, #88]	; 40007a8c <CamDefSet+0x2c0>
40007a30:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
40007a34:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a38:	eb002e2f 	bl	400132fc <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007a3c:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
40007a40:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
40007a44:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007a48:	e3a01007 	mov	r1, #7
40007a4c:	e59f0034 	ldr	r0, [pc, #52]	; 40007a88 <CamDefSet+0x2bc>
40007a50:	e88d0140 	stm	sp, {r6, r8}
40007a54:	ebffee97 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a58:	e1a03005 	mov	r3, r5
40007a5c:	e1a0000a 	mov	r0, sl
40007a60:	e59f1024 	ldr	r1, [pc, #36]	; 40007a8c <CamDefSet+0x2c0>
40007a64:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007a68:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007a6c:	eb002e22 	bl	400132fc <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a70:	e59f3010 	ldr	r3, [pc, #16]	; 40007a88 <CamDefSet+0x2bc>
40007a74:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007a78:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007a7c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a80:	ea000a44 	b	4000a398 <_txe_mutex_put>
40007a84:	40030000 	.word	0x40030000
40007a88:	40032ec4 	.word	0x40032ec4
40007a8c:	40011ac0 	.word	0x40011ac0
40007a90:	40011ae0 	.word	0x40011ae0

40007a94 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a94:	e92d4038 	push	{r3, r4, r5, lr}
40007a98:	e1a04000 	mov	r4, r0
40007a9c:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40007aa0:	e59f0030 	ldr	r0, [pc, #48]	; 40007ad8 <CyFxUVCAddHeader+0x44>
40007aa4:	e3e01000 	mvn	r1, #0
40007aa8:	eb000a05 	bl	4000a2c4 <_txe_mutex_get>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007aac:	e1a00004 	mov	r0, r4
40007ab0:	e59f1024 	ldr	r1, [pc, #36]	; 40007adc <CyFxUVCAddHeader+0x48>
40007ab4:	e3a0200c 	mov	r2, #12
40007ab8:	ebffef85 	bl	400038d4 <CyU3PMemCopy>
	CyU3PMutexPut(&imgHdMux);
40007abc:	e59f0014 	ldr	r0, [pc, #20]	; 40007ad8 <CyFxUVCAddHeader+0x44>
40007ac0:	eb000a34 	bl	4000a398 <_txe_mutex_put>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007ac4:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007ac8:	15d43001 	ldrbne	r3, [r4, #1]
40007acc:	13833002 	orrne	r3, r3, #2
40007ad0:	15c43001 	strbne	r3, [r4, #1]
40007ad4:	e8bd8038 	pop	{r3, r4, r5, pc}
40007ad8:	400330d0 	.word	0x400330d0
40007adc:	40030480 	.word	0x40030480

40007ae0 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007ae0:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ae4:	e59f1010 	ldr	r1, [pc, #16]	; 40007afc <CyFxAppErrorHandler+0x1c>
40007ae8:	e3a00004 	mov	r0, #4
40007aec:	eb002e02 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007af0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007af4:	eb000462 	bl	40008c84 <_tx_thread_sleep>
40007af8:	eafffff9 	b	40007ae4 <CyFxAppErrorHandler+0x4>
40007afc:	40011594 	.word	0x40011594

40007b00 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007b00:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007b04:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007b08:	eb006d6c 	bl	400230c0 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b0c:	e2504000 	subs	r4, r0, #0
40007b10:	0a000004 	beq	40007b28 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007b14:	e3a00004 	mov	r0, #4
40007b18:	e59f1b28 	ldr	r1, [pc, #2856]	; 40008648 <UVCAppThread_Entry+0xb48>
40007b1c:	eb002df6 	bl	400132fc <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007b20:	e1a00004 	mov	r0, r4
40007b24:	ebffffed 	bl	40007ae0 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007b28:	e59fcb1c 	ldr	ip, [pc, #2844]	; 4000864c <UVCAppThread_Entry+0xb4c>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007b2c:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007b30:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007b34:	e28d0050 	add	r0, sp, #80	; 0x50
40007b38:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007b3c:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007b40:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007b44:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007b48:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007b4c:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007b50:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007b54:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007b58:	eb006dd1 	bl	400232a4 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b5c:	e3500000 	cmp	r0, #0
40007b60:	0a000000 	beq	40007b68 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b64:	ebffffdd 	bl	40007ae0 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007b68:	e3e00000 	mvn	r0, #0
40007b6c:	eb006e53 	bl	400234c0 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b70:	e3500000 	cmp	r0, #0
40007b74:	0a000000 	beq	40007b7c <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b78:	ebffffd8 	bl	40007ae0 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007b7c:	e3a00003 	mov	r0, #3
40007b80:	e3a01004 	mov	r1, #4
40007b84:	eb002d54 	bl	400130dc <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b88:	e3500000 	cmp	r0, #0
40007b8c:	0a000000 	beq	40007b94 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007b90:	ebffffd2 	bl	40007ae0 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007b94:	e3a00000 	mov	r0, #0
40007b98:	eb002dd3 	bl	400132ec <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007b9c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007ba0:	eb000437 	bl	40008c84 <_tx_thread_sleep>
40007ba4:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007ba8:	eb000435 	bl	40008c84 <_tx_thread_sleep>
40007bac:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007bb0:	eb000433 	bl	40008c84 <_tx_thread_sleep>
40007bb4:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007bb8:	eb000431 	bl	40008c84 <_tx_thread_sleep>
40007bbc:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007bc0:	eb00042f 	bl	40008c84 <_tx_thread_sleep>
40007bc4:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007bc8:	eb00042d 	bl	40008c84 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007bcc:	eb006ec9 	bl	400236f8 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007bd0:	e2502000 	subs	r2, r0, #0
40007bd4:	1a000107 	bne	40007ff8 <UVCAppThread_Entry+0x4f8>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007bd8:	e59f5a70 	ldr	r5, [pc, #2672]	; 40008650 <UVCAppThread_Entry+0xb50>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007bdc:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007be0:	e1a01002 	mov	r1, r2
40007be4:	e28d008c 	add	r0, sp, #140	; 0x8c
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007be8:	e58d508c 	str	r5, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007bec:	e58d2090 	str	r2, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
40007bf0:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007bf4:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007bf8:	eb006fb7 	bl	40023adc <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007bfc:	e2501000 	subs	r1, r0, #0
40007c00:	1a000105 	bne	4000801c <UVCAppThread_Entry+0x51c>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007c04:	e59f4a48 	ldr	r4, [pc, #2632]	; 40008654 <UVCAppThread_Entry+0xb54>
40007c08:	e3a02028 	mov	r2, #40	; 0x28
40007c0c:	e1a00004 	mov	r0, r4
40007c10:	eb000873 	bl	40009de4 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007c14:	e2502000 	subs	r2, r0, #0
40007c18:	1a000108 	bne	40008040 <UVCAppThread_Entry+0x540>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007c1c:	e3a07002 	mov	r7, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c20:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007c24:	e5842030 	str	r2, [r4, #48]	; 0x30
    clearFeatureRqtReceived = CyFalse;
40007c28:	e5842048 	str	r2, [r4, #72]	; 0x48
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c2c:	e28d009c 	add	r0, sp, #156	; 0x9c

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007c30:	e2876001 	add	r6, r7, #1
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007c34:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007c38:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007c3c:	e5cd709c 	strb	r7, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007c40:	e5cd709d 	strb	r7, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007c44:	e5cd60a5 	strb	r6, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007c48:	eb006bb2 	bl	40022b18 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007c4c:	e2502000 	subs	r2, r0, #0
40007c50:	1a00017d 	bne	4000824c <UVCAppThread_Entry+0x74c>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007c54:	e3a00016 	mov	r0, #22
40007c58:	e3a01001 	mov	r1, #1
40007c5c:	eb002c96 	bl	40012ebc <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c60:	e2502000 	subs	r2, r0, #0
40007c64:	1a00016f 	bne	40008228 <UVCAppThread_Entry+0x728>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007c68:	e3a00014 	mov	r0, #20
40007c6c:	e3a01001 	mov	r1, #1
40007c70:	eb002c91 	bl	40012ebc <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c74:	e2502000 	subs	r2, r0, #0
40007c78:	1a00017c 	bne	40008270 <UVCAppThread_Entry+0x770>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007c7c:	e3a00018 	mov	r0, #24
40007c80:	e3a01001 	mov	r1, #1
40007c84:	eb002c8c 	bl	40012ebc <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007c88:	e2502000 	subs	r2, r0, #0
40007c8c:	1a00015c 	bne	40008204 <UVCAppThread_Entry+0x704>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007c90:	e3a05001 	mov	r5, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007c94:	e3a00016 	mov	r0, #22
40007c98:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007c9c:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ca0:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007ca4:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007ca8:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007cac:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007cb0:	eb006c50 	bl	40022df8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cb4:	e2502000 	subs	r2, r0, #0
40007cb8:	1a000120 	bne	40008140 <UVCAppThread_Entry+0x640>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007cbc:	e3a00014 	mov	r0, #20
40007cc0:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007cc4:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007cc8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007ccc:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007cd0:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007cd4:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007cd8:	eb006c46 	bl	40022df8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cdc:	e2502000 	subs	r2, r0, #0
40007ce0:	1a00010d 	bne	4000811c <UVCAppThread_Entry+0x61c>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ce4:	e3a00018 	mov	r0, #24
40007ce8:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007cec:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007cf0:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007cf4:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007cf8:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007cfc:	e58d5074 	str	r5, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007d00:	eb006c3c 	bl	40022df8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d04:	e2502000 	subs	r2, r0, #0
40007d08:	1a0000fa 	bne	400080f8 <UVCAppThread_Entry+0x5f8>
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007d0c:	e3a08000 	mov	r8, #0
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007d10:	e3a07002 	mov	r7, #2
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007d14:	e3a06003 	mov	r6, #3
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007d18:	e3a00001 	mov	r0, #1
40007d1c:	e28d107c 	add	r1, sp, #124	; 0x7c
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007d20:	e1cd77bc 	strh	r7, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007d24:	e5cd6088 	strb	r6, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
40007d28:	e58d8084 	str	r8, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007d2c:	e58d8080 	str	r8, [sp, #128]	; 0x80

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007d30:	eb004cc9 	bl	4001b05c <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d34:	e2502000 	subs	r2, r0, #0
40007d38:	1a0001bf 	bne	4000843c <UVCAppThread_Entry+0x93c>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007d3c:	e59f0914 	ldr	r0, [pc, #2324]	; 40008658 <UVCAppThread_Entry+0xb58>
40007d40:	eb004f43 	bl	4001ba54 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007d44:	ebfff1db 	bl	400044b8 <SensorReset>
    SensorInit ();
40007d48:	ebfff20a 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007d4c:	eb0059b6 	bl	4001e42c <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d50:	e2508000 	subs	r8, r0, #0
40007d54:	1a0001ae 	bne	40008414 <UVCAppThread_Entry+0x914>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007d58:	e1a01008 	mov	r1, r8
40007d5c:	e59f08f8 	ldr	r0, [pc, #2296]	; 4000865c <UVCAppThread_Entry+0xb5c>
40007d60:	eb006468 	bl	40020f08 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007d64:	e59f08f4 	ldr	r0, [pc, #2292]	; 40008660 <UVCAppThread_Entry+0xb60>
40007d68:	eb006451 	bl	40020eb4 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007d6c:	e59f28f0 	ldr	r2, [pc, #2288]	; 40008664 <UVCAppThread_Entry+0xb64>
40007d70:	e1a01008 	mov	r1, r8
40007d74:	e3a00001 	mov	r0, #1
40007d78:	eb00578b 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007d7c:	e1a01008 	mov	r1, r8
40007d80:	e59f28e0 	ldr	r2, [pc, #2272]	; 40008668 <UVCAppThread_Entry+0xb68>
40007d84:	e1a00008 	mov	r0, r8
40007d88:	eb005787 	bl	4001dbac <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007d8c:	e1a01008 	mov	r1, r8
40007d90:	e59f28d4 	ldr	r2, [pc, #2260]	; 4000866c <UVCAppThread_Entry+0xb6c>
40007d94:	e3a00002 	mov	r0, #2
40007d98:	eb005783 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007d9c:	e1a01008 	mov	r1, r8
40007da0:	e59f28c8 	ldr	r2, [pc, #2248]	; 40008670 <UVCAppThread_Entry+0xb70>
40007da4:	e3a00007 	mov	r0, #7
40007da8:	eb00577f 	bl	4001dbac <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007dac:	e59f28c0 	ldr	r2, [pc, #2240]	; 40008674 <UVCAppThread_Entry+0xb74>
40007db0:	e1a01008 	mov	r1, r8
40007db4:	e3a00004 	mov	r0, #4
40007db8:	eb00577b 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007dbc:	e1a01008 	mov	r1, r8
40007dc0:	e59f28b0 	ldr	r2, [pc, #2224]	; 40008678 <UVCAppThread_Entry+0xb78>
40007dc4:	e1a00006 	mov	r0, r6
40007dc8:	eb005777 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007dcc:	e1a01008 	mov	r1, r8
40007dd0:	e59f28a4 	ldr	r2, [pc, #2212]	; 4000867c <UVCAppThread_Entry+0xb7c>
40007dd4:	e3a00006 	mov	r0, #6
40007dd8:	eb005773 	bl	4001dbac <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007ddc:	e1a01008 	mov	r1, r8
40007de0:	e59f2898 	ldr	r2, [pc, #2200]	; 40008680 <UVCAppThread_Entry+0xb80>
40007de4:	e3a00005 	mov	r0, #5
40007de8:	eb00576f 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007dec:	e3a01001 	mov	r1, #1
40007df0:	e59f288c 	ldr	r2, [pc, #2188]	; 40008684 <UVCAppThread_Entry+0xb84>
40007df4:	e3a00005 	mov	r0, #5
40007df8:	eb00576b 	bl	4001dbac <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007dfc:	e3a01002 	mov	r1, #2
40007e00:	e59f2880 	ldr	r2, [pc, #2176]	; 40008688 <UVCAppThread_Entry+0xb88>
40007e04:	e3a00005 	mov	r0, #5
40007e08:	eb005767 	bl	4001dbac <CyU3PUsbSetDesc>
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007e0c:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007e10:	e3a00082 	mov	r0, #130	; 0x82
40007e14:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007e18:	e3a0a040 	mov	sl, #64	; 0x40
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007e1c:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007e20:	e5cd60ac 	strb	r6, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
40007e24:	e1cdabb0 	strh	sl, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007e28:	e5cd80b3 	strb	r8, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007e2c:	e1cd8abe 	strh	r8, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007e30:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007e34:	eb0050c3 	bl	4001c148 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e38:	e2503000 	subs	r3, r0, #0
40007e3c:	1a00016a 	bne	400083ec <UVCAppThread_Entry+0x8ec>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007e40:	e59fc844 	ldr	ip, [pc, #2116]	; 4000868c <UVCAppThread_Entry+0xb8c>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007e44:	e59fe844 	ldr	lr, [pc, #2116]	; 40008690 <UVCAppThread_Entry+0xb90>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007e48:	e3a06b01 	mov	r6, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007e4c:	e3a0a010 	mov	sl, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007e50:	e59f083c 	ldr	r0, [pc, #2108]	; 40008694 <UVCAppThread_Entry+0xb94>
40007e54:	e3a01004 	mov	r1, #4
40007e58:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007e5c:	e1cd63b4 	strh	r6, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007e60:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007e64:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007e68:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007e6c:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007e70:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007e74:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007e78:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007e7c:	e5cd8044 	strb	r8, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007e80:	e58da048 	str	sl, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007e84:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007e88:	eb003731 	bl	40015b54 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e8c:	e2506000 	subs	r6, r0, #0
40007e90:	1a00014b 	bne	400083c4 <UVCAppThread_Entry+0x8c4>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007e94:	e3a00b01 	mov	r0, #1024	; 0x400
40007e98:	ebffefb2 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007e9c:	e59f17f4 	ldr	r1, [pc, #2036]	; 40008698 <UVCAppThread_Entry+0xb98>
    if (glInterStaBuffer == 0)
40007ea0:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007ea4:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007ea8:	0a000175 	beq	40008484 <UVCAppThread_Entry+0x984>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
40007eac:	e1a01006 	mov	r1, r6
40007eb0:	e1a02006 	mov	r2, r6
40007eb4:	e3a03038 	mov	r3, #56	; 0x38
40007eb8:	e59f07dc 	ldr	r0, [pc, #2012]	; 4000869c <UVCAppThread_Entry+0xb9c>
40007ebc:	eb000882 	bl	4000a0cc <_txe_mutex_create>
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007ec0:	e3a03004 	mov	r3, #4
40007ec4:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007ec8:	e59f37d0 	ldr	r3, [pc, #2000]	; 400086a0 <UVCAppThread_Entry+0xba0>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007ecc:	e3a0c901 	mov	ip, #16384	; 0x4000
40007ed0:	e1cdc0bc 	strh	ip, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007ed4:	e3a0cc01 	mov	ip, #256	; 0x100
40007ed8:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007edc:	e1cd31b4 	strh	r3, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007ee0:	e59fc7bc 	ldr	ip, [pc, #1980]	; 400086a4 <UVCAppThread_Entry+0xba4>
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007ee4:	e3a0300c 	mov	r3, #12
40007ee8:	e1cd32b4 	strh	r3, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007eec:	e59f37b4 	ldr	r3, [pc, #1972]	; 400086a8 <UVCAppThread_Entry+0xba8>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007ef0:	e28d200c 	add	r2, sp, #12
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007ef4:	e1cdc1ba 	strh	ip, [sp, #26]
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007ef8:	e5cd802a 	strb	r8, [sp, #42]	; 0x2a
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007efc:	e3a0c004 	mov	ip, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007f00:	e59f07a4 	ldr	r0, [pc, #1956]	; 400086ac <UVCAppThread_Entry+0xbac>
40007f04:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007f08:	e3a08018 	mov	r8, #24

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007f0c:	e1cd71b0 	strh	r7, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007f10:	e1cd62b2 	strh	r6, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007f14:	e1cdc2b6 	strh	ip, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007f18:	e1cd62b8 	strh	r6, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007f1c:	e58d802c 	str	r8, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007f20:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007f24:	eb00402a 	bl	40017fd4 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f28:	e2502000 	subs	r2, r0, #0
40007f2c:	1a00014b 	bne	40008460 <UVCAppThread_Entry+0x960>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007f30:	e1a00005 	mov	r0, r5
40007f34:	e1a01005 	mov	r1, r5
40007f38:	eb004f7e 	bl	4001bd38 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f3c:	e2502000 	subs	r2, r0, #0
40007f40:	1a000063 	bne	400080d4 <UVCAppThread_Entry+0x5d4>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007f44:	e3a00064 	mov	r0, #100	; 0x64
40007f48:	eb002e5c 	bl	400138c0 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007f4c:	eb00542b 	bl	4001d000 <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007f50:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007f54:	e5cd70ac 	strb	r7, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f58:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007f5c:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007f60:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007f64:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007f68:	e5c4004c 	strb	r0, [r4, #76]	; 0x4c
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f6c:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f70:	03a07b01 	moveq	r7, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007f74:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f78:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007f7c:	01cd7bb0 	strheq	r7, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007f80:	05cda0b2 	strbeq	sl, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40007f84:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007f88:	eb00506e 	bl	4001c148 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007f8c:	e2502000 	subs	r2, r0, #0
40007f90:	1a000046 	bne	400080b0 <UVCAppThread_Entry+0x5b0>
40007f94:	e59f7714 	ldr	r7, [pc, #1812]	; 400086b0 <UVCAppThread_Entry+0xbb0>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f98:	e59f56b4 	ldr	r5, [pc, #1716]	; 40008654 <UVCAppThread_Entry+0xb54>
40007f9c:	e1a06002 	mov	r6, r2
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40007fa0:	e3e0a000 	mvn	sl, #0
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007fa4:	e59f06a8 	ldr	r0, [pc, #1704]	; 40008654 <UVCAppThread_Entry+0xb54>
40007fa8:	e3a01001 	mov	r1, #1
40007fac:	e3a02002 	mov	r2, #2
40007fb0:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007fb4:	e58d6000 	str	r6, [sp]
40007fb8:	eb0007f9 	bl	40009fa4 <_txe_event_flags_get>
40007fbc:	e3500000 	cmp	r0, #0
40007fc0:	1a000027 	bne	40008064 <UVCAppThread_Entry+0x564>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007fc4:	e595e040 	ldr	lr, [r5, #64]	; 0x40
40007fc8:	e35e0000 	cmp	lr, #0
40007fcc:	0a000003 	beq	40007fe0 <UVCAppThread_Entry+0x4e0>
40007fd0:	e1d514b4 	ldrh	r1, [r5, #68]	; 0x44
40007fd4:	e1d584b6 	ldrh	r8, [r5, #70]	; 0x46
40007fd8:	e1510008 	cmp	r1, r8
40007fdc:	0a000060 	beq	40008164 <UVCAppThread_Entry+0x664>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007fe0:	e3a01040 	mov	r1, #64	; 0x40
40007fe4:	e3a02000 	mov	r2, #0
40007fe8:	e59f0664 	ldr	r0, [pc, #1636]	; 40008654 <UVCAppThread_Entry+0xb54>
40007fec:	eb00081c 	bl	4000a064 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007ff0:	eb000ad4 	bl	4000ab48 <_txe_thread_relinquish>
    }
40007ff4:	eaffffea 	b	40007fa4 <UVCAppThread_Entry+0x4a4>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007ff8:	e3a00004 	mov	r0, #4
40007ffc:	e59f16b0 	ldr	r1, [pc, #1712]	; 400086b4 <UVCAppThread_Entry+0xbb4>
40008000:	eb002cbd 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008004:	e59f16ac 	ldr	r1, [pc, #1708]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008008:	e3a00004 	mov	r0, #4
4000800c:	eb002cba 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008010:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008014:	eb00031a 	bl	40008c84 <_tx_thread_sleep>
40008018:	eafffff9 	b	40008004 <UVCAppThread_Entry+0x504>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
4000801c:	e3a00004 	mov	r0, #4
40008020:	e59f1694 	ldr	r1, [pc, #1684]	; 400086bc <UVCAppThread_Entry+0xbbc>
40008024:	eb002cb4 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008028:	e59f1688 	ldr	r1, [pc, #1672]	; 400086b8 <UVCAppThread_Entry+0xbb8>
4000802c:	e3a00004 	mov	r0, #4
40008030:	eb002cb1 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008034:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008038:	eb000311 	bl	40008c84 <_tx_thread_sleep>
4000803c:	eafffff9 	b	40008028 <UVCAppThread_Entry+0x528>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40008040:	e3a00004 	mov	r0, #4
40008044:	e59f1674 	ldr	r1, [pc, #1652]	; 400086c0 <UVCAppThread_Entry+0xbc0>
40008048:	eb002cab 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000804c:	e59f1664 	ldr	r1, [pc, #1636]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008050:	e3a00004 	mov	r0, #4
40008054:	eb002ca8 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008058:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000805c:	eb000308 	bl	40008c84 <_tx_thread_sleep>
40008060:	eafffff9 	b	4000804c <UVCAppThread_Entry+0x54c>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40008064:	e59f05e8 	ldr	r0, [pc, #1512]	; 40008654 <UVCAppThread_Entry+0xb54>
40008068:	e3a01002 	mov	r1, #2
4000806c:	e3a02003 	mov	r2, #3
40008070:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008074:	e58d6000 	str	r6, [sp]
40008078:	eb0007c9 	bl	40009fa4 <_txe_event_flags_get>
4000807c:	e3500000 	cmp	r0, #0
40008080:	1a00011a 	bne	400084f0 <UVCAppThread_Entry+0x9f0>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40008084:	e5953048 	ldr	r3, [r5, #72]	; 0x48
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40008088:	e5856040 	str	r6, [r5, #64]	; 0x40
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
4000808c:	e3530000 	cmp	r3, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40008090:	e1c564b4 	strh	r6, [r5, #68]	; 0x44
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40008094:	e1c563b4 	strh	r6, [r5, #52]	; 0x34
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40008098:	e1c564b6 	strh	r6, [r5, #70]	; 0x46
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
4000809c:	e1c563b6 	strh	r6, [r5, #54]	; 0x36
                pbc=0;
400080a0:	e1c563b8 	strh	r6, [r5, #56]	; 0x38

                if (!clearFeatureRqtReceived)
400080a4:	0a0000ff 	beq	400084a8 <UVCAppThread_Entry+0x9a8>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
400080a8:	e5846048 	str	r6, [r4, #72]	; 0x48
400080ac:	eaffffcb 	b	40007fe0 <UVCAppThread_Entry+0x4e0>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400080b0:	e3a00004 	mov	r0, #4
400080b4:	e59f1608 	ldr	r1, [pc, #1544]	; 400086c4 <UVCAppThread_Entry+0xbc4>
400080b8:	eb002c8f 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080bc:	e59f15f4 	ldr	r1, [pc, #1524]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400080c0:	e3a00004 	mov	r0, #4
400080c4:	eb002c8c 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080c8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080cc:	eb0002ec 	bl	40008c84 <_tx_thread_sleep>
400080d0:	eafffff9 	b	400080bc <UVCAppThread_Entry+0x5bc>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
400080d4:	e3a00004 	mov	r0, #4
400080d8:	e59f15e8 	ldr	r1, [pc, #1512]	; 400086c8 <UVCAppThread_Entry+0xbc8>
400080dc:	eb002c86 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080e0:	e59f15d0 	ldr	r1, [pc, #1488]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400080e4:	e3a00004 	mov	r0, #4
400080e8:	eb002c83 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080ec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080f0:	eb0002e3 	bl	40008c84 <_tx_thread_sleep>
400080f4:	eafffff9 	b	400080e0 <UVCAppThread_Entry+0x5e0>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
400080f8:	e3a00004 	mov	r0, #4
400080fc:	e59f15c8 	ldr	r1, [pc, #1480]	; 400086cc <UVCAppThread_Entry+0xbcc>
40008100:	eb002c7d 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008104:	e59f15ac 	ldr	r1, [pc, #1452]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008108:	e3a00004 	mov	r0, #4
4000810c:	eb002c7a 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008110:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008114:	eb0002da 	bl	40008c84 <_tx_thread_sleep>
40008118:	eafffff9 	b	40008104 <UVCAppThread_Entry+0x604>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
4000811c:	e3a00004 	mov	r0, #4
40008120:	e59f15a8 	ldr	r1, [pc, #1448]	; 400086d0 <UVCAppThread_Entry+0xbd0>
40008124:	eb002c74 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008128:	e59f1588 	ldr	r1, [pc, #1416]	; 400086b8 <UVCAppThread_Entry+0xbb8>
4000812c:	e3a00004 	mov	r0, #4
40008130:	eb002c71 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008134:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008138:	eb0002d1 	bl	40008c84 <_tx_thread_sleep>
4000813c:	eafffff9 	b	40008128 <UVCAppThread_Entry+0x628>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
40008140:	e3a00004 	mov	r0, #4
40008144:	e59f1588 	ldr	r1, [pc, #1416]	; 400086d4 <UVCAppThread_Entry+0xbd4>
40008148:	eb002c6b 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000814c:	e59f1564 	ldr	r1, [pc, #1380]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008150:	e3a00004 	mov	r0, #4
40008154:	eb002c68 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008158:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000815c:	eb0002c8 	bl	40008c84 <_tx_thread_sleep>
40008160:	eafffff9 	b	4000814c <UVCAppThread_Entry+0x64c>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40008164:	e1c564b4 	strh	r6, [r5, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008168:	e59f052c 	ldr	r0, [pc, #1324]	; 4000869c <UVCAppThread_Entry+0xb9c>
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
                consCount = 0;
4000816c:	e1c564b6 	strh	r6, [r5, #70]	; 0x46
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008170:	e3e01000 	mvn	r1, #0
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40008174:	e1c563b4 	strh	r6, [r5, #52]	; 0x34
            	pb=0;
40008178:	e1c563b6 	strh	r6, [r5, #54]	; 0x36
            	pbc=0;
4000817c:	e1c563b8 	strh	r6, [r5, #56]	; 0x38
                prodCount = 0;
                consCount = 0;
                hitFV     = CyFalse;
40008180:	e5856040 	str	r6, [r5, #64]	; 0x40
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
40008184:	eb00084e 	bl	4000a2c4 <_txe_mutex_get>
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40008188:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
4000818c:	e222c001 	eor	ip, r2, #1
40008190:	e5c7c481 	strb	ip, [r7, #1153]	; 0x481
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008194:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40008198:	e35300f0 	cmp	r3, #240	; 0xf0
4000819c:	0a00007c 	beq	40008394 <UVCAppThread_Entry+0x894>
                       	//SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late
400081a0:	e594e03c 	ldr	lr, [r4, #60]	; 0x3c
400081a4:	e35e00ff 	cmp	lr, #255	; 0xff
400081a8:	0a00006d 	beq	40008364 <UVCAppThread_Entry+0x864>
                 		/*if(IMcount > 0x4){
                			stiflag = 0x0F;
                			IMcount = 0;
                		}*/

                }else if(stiflag==0xAA){//recovery video stream res. after one still frame set.
400081ac:	e595003c 	ldr	r0, [r5, #60]	; 0x3c
400081b0:	e35000aa 	cmp	r0, #170	; 0xaa
400081b4:	0a000048 	beq	400082dc <UVCAppThread_Entry+0x7dc>
                    IMcount = 0;
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
                	}
                }
                CyU3PMutexPut(&imgHdMux);
400081b8:	e59f04dc 	ldr	r0, [pc, #1244]	; 4000869c <UVCAppThread_Entry+0xb9c>
400081bc:	eb000875 	bl	4000a398 <_txe_mutex_put>
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400081c0:	e59f04e4 	ldr	r0, [pc, #1252]	; 400086ac <UVCAppThread_Entry+0xbac>
400081c4:	eb004153 	bl	40018718 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
400081c8:	e2502000 	subs	r2, r0, #0
400081cc:	1a000039 	bne	400082b8 <UVCAppThread_Entry+0x7b8>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
400081d0:	e1a01002 	mov	r1, r2
400081d4:	e59f04d0 	ldr	r0, [pc, #1232]	; 400086ac <UVCAppThread_Entry+0xbac>
400081d8:	eb00423b 	bl	40018acc <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
400081dc:	e2502000 	subs	r2, r0, #0
400081e0:	1a00002b 	bne	40008294 <UVCAppThread_Entry+0x794>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400081e4:	e59f04b4 	ldr	r0, [pc, #1204]	; 400086a0 <UVCAppThread_Entry+0xba0>
400081e8:	e1a01002 	mov	r1, r2
400081ec:	e3a08002 	mov	r8, #2
400081f0:	e1a02000 	mov	r2, r0
400081f4:	e1a03001 	mov	r3, r1
400081f8:	e58d8000 	str	r8, [sp]
400081fc:	eb004e6d 	bl	4001bbb8 <CyU3PGpifSMSwitch>
40008200:	eaffff76 	b	40007fe0 <UVCAppThread_Entry+0x4e0>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
40008204:	e3a00004 	mov	r0, #4
40008208:	e59f14c8 	ldr	r1, [pc, #1224]	; 400086d8 <UVCAppThread_Entry+0xbd8>
4000820c:	eb002c3a 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008210:	e59f14a0 	ldr	r1, [pc, #1184]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008214:	e3a00004 	mov	r0, #4
40008218:	eb002c37 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000821c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008220:	eb000297 	bl	40008c84 <_tx_thread_sleep>
40008224:	eafffff9 	b	40008210 <UVCAppThread_Entry+0x710>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40008228:	e3a00004 	mov	r0, #4
4000822c:	e59f14a8 	ldr	r1, [pc, #1192]	; 400086dc <UVCAppThread_Entry+0xbdc>
40008230:	eb002c31 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008234:	e59f147c 	ldr	r1, [pc, #1148]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008238:	e3a00004 	mov	r0, #4
4000823c:	eb002c2e 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008240:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008244:	eb00028e 	bl	40008c84 <_tx_thread_sleep>
40008248:	eafffff9 	b	40008234 <UVCAppThread_Entry+0x734>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
4000824c:	e3a00004 	mov	r0, #4
40008250:	e59f1488 	ldr	r1, [pc, #1160]	; 400086e0 <UVCAppThread_Entry+0xbe0>
40008254:	eb002c28 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008258:	e59f1458 	ldr	r1, [pc, #1112]	; 400086b8 <UVCAppThread_Entry+0xbb8>
4000825c:	e3a00004 	mov	r0, #4
40008260:	eb002c25 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008264:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008268:	eb000285 	bl	40008c84 <_tx_thread_sleep>
4000826c:	eafffff9 	b	40008258 <UVCAppThread_Entry+0x758>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40008270:	e3a00004 	mov	r0, #4
40008274:	e59f1468 	ldr	r1, [pc, #1128]	; 400086e4 <UVCAppThread_Entry+0xbe4>
40008278:	eb002c1f 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000827c:	e59f1434 	ldr	r1, [pc, #1076]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008280:	e3a00004 	mov	r0, #4
40008284:	eb002c1c 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008288:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000828c:	eb00027c 	bl	40008c84 <_tx_thread_sleep>
40008290:	eafffff9 	b	4000827c <UVCAppThread_Entry+0x77c>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008294:	e3a00004 	mov	r0, #4
40008298:	e59f1448 	ldr	r1, [pc, #1096]	; 400086e8 <UVCAppThread_Entry+0xbe8>
4000829c:	eb002c16 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082a0:	e59f1410 	ldr	r1, [pc, #1040]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400082a4:	e3a00004 	mov	r0, #4
400082a8:	eb002c13 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082ac:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082b0:	eb000273 	bl	40008c84 <_tx_thread_sleep>
400082b4:	eafffff9 	b	400082a0 <UVCAppThread_Entry+0x7a0>
                CyU3PMutexPut(&imgHdMux);
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
400082b8:	e3a00004 	mov	r0, #4
400082bc:	e59f1428 	ldr	r1, [pc, #1064]	; 400086ec <UVCAppThread_Entry+0xbec>
400082c0:	eb002c0d 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082c4:	e59f13ec 	ldr	r1, [pc, #1004]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400082c8:	e3a00004 	mov	r0, #4
400082cc:	eb002c0a 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082d4:	eb00026a 	bl	40008c84 <_tx_thread_sleep>
400082d8:	eafffff9 	b	400082c4 <UVCAppThread_Entry+0x7c4>
                    //CyU3PThreadSleep(400);
                	//CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                   	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	//CyU3PMutexPut(&imgHdMux);

                	if(IMcount++ >= 0x3)
400082dc:	e5d510a2 	ldrb	r1, [r5, #162]	; 0xa2
400082e0:	e281e001 	add	lr, r1, #1
400082e4:	e3510002 	cmp	r1, #2
400082e8:	e5c5e0a2 	strb	lr, [r5, #162]	; 0xa2
400082ec:	9affffb1 	bls	400081b8 <UVCAppThread_Entry+0x6b8>
                	{
                    switch (setRes)
400082f0:	e5d530a0 	ldrb	r3, [r5, #160]	; 0xa0
400082f4:	e3530001 	cmp	r3, #1
400082f8:	0a00000e 	beq	40008338 <UVCAppThread_Entry+0x838>
400082fc:	e3530002 	cmp	r3, #2
40008300:	1a000009 	bne	4000832c <UVCAppThread_Entry+0x82c>
                 		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0xb, 0x0);
                 		break;
                 	case 2: //720
                 		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40008304:	e3a01030 	mov	r1, #48	; 0x30
40008308:	e3a02001 	mov	r2, #1
4000830c:	e3a03052 	mov	r3, #82	; 0x52
40008310:	e3a0000b 	mov	r0, #11
40008314:	ebfff102 	bl	40004724 <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0x0b, 0x1);
40008318:	e3a00004 	mov	r0, #4
4000831c:	e59f13cc 	ldr	r1, [pc, #972]	; 400086f0 <UVCAppThread_Entry+0xbf0>
40008320:	e3a0200b 	mov	r2, #11
40008324:	e3a03001 	mov	r3, #1
40008328:	eb002bf3 	bl	400132fc <CyU3PDebugPrint>
                 		break;
                 	default:
                 		break;
                     }
                    IMcount = 0;
4000832c:	e5c460a2 	strb	r6, [r4, #162]	; 0xa2
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
40008330:	e584603c 	str	r6, [r4, #60]	; 0x3c
40008334:	eaffff9f 	b	400081b8 <UVCAppThread_Entry+0x6b8>
                	if(IMcount++ >= 0x3)
                	{
                    switch (setRes)
                     {
                 	case 1: //960
                 		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40008338:	e3a01030 	mov	r1, #48	; 0x30
4000833c:	e3a02000 	mov	r2, #0
40008340:	e3a03052 	mov	r3, #82	; 0x52
40008344:	e3a0000b 	mov	r0, #11
40008348:	ebfff0f5 	bl	40004724 <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0xb, 0x0);
4000834c:	e59f139c 	ldr	r1, [pc, #924]	; 400086f0 <UVCAppThread_Entry+0xbf0>
40008350:	e3a0200b 	mov	r2, #11
40008354:	e3a03000 	mov	r3, #0
40008358:	e3a00004 	mov	r0, #4
4000835c:	eb002be6 	bl	400132fc <CyU3PDebugPrint>
                 		break;
40008360:	eafffff1 	b	4000832c <UVCAppThread_Entry+0x82c>
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
40008364:	e5d580a2 	ldrb	r8, [r5, #162]	; 0xa2
40008368:	e2881001 	add	r1, r8, #1
4000836c:	e3580002 	cmp	r8, #2
40008370:	e5c510a2 	strb	r1, [r5, #162]	; 0xa2
40008374:	9affff8f 	bls	400081b8 <UVCAppThread_Entry+0x6b8>
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
40008378:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
4000837c:	e3a0300f 	mov	r3, #15
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
40008380:	e382c020 	orr	ip, r2, #32
40008384:	e5c7c481 	strb	ip, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
                		IMcount = 0;
40008388:	e5c560a2 	strb	r6, [r5, #162]	; 0xa2
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = 0x0F;
4000838c:	e585303c 	str	r3, [r5, #60]	; 0x3c
40008390:	eaffff88 	b	400081b8 <UVCAppThread_Entry+0x6b8>
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008394:	e59f02b8 	ldr	r0, [pc, #696]	; 40008654 <UVCAppThread_Entry+0xb54>
40008398:	e3a01080 	mov	r1, #128	; 0x80
4000839c:	e3a02003 	mov	r2, #3
400083a0:	e28d30b4 	add	r3, sp, #180	; 0xb4
400083a4:	e58d6000 	str	r6, [sp]
400083a8:	eb0006fd 	bl	40009fa4 <_txe_event_flags_get>
400083ac:	e3500000 	cmp	r0, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){ //start full res.
                		//glUVCHeader[1] |= (1<<5);    //set still image flag
                       	//SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
400083b0:	03a000ff 	moveq	r0, #255	; 0xff
400083b4:	0585003c 	streq	r0, [r5, #60]	; 0x3c
                		IMcount = 0;
400083b8:	05c560a2 	strbeq	r6, [r5, #162]	; 0xa2
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
400083bc:	0affff7d 	beq	400081b8 <UVCAppThread_Entry+0x6b8>
400083c0:	eaffff76 	b	400081a0 <UVCAppThread_Entry+0x6a0>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400083c4:	e3a00004 	mov	r0, #4
400083c8:	e59f1324 	ldr	r1, [pc, #804]	; 400086f4 <UVCAppThread_Entry+0xbf4>
400083cc:	e1a02006 	mov	r2, r6
400083d0:	eb002bc9 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083d4:	e59f12dc 	ldr	r1, [pc, #732]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400083d8:	e3a00004 	mov	r0, #4
400083dc:	eb002bc6 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083e0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083e4:	eb000226 	bl	40008c84 <_tx_thread_sleep>
400083e8:	eafffff9 	b	400083d4 <UVCAppThread_Entry+0x8d4>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400083ec:	e3a00004 	mov	r0, #4
400083f0:	e59f12cc 	ldr	r1, [pc, #716]	; 400086c4 <UVCAppThread_Entry+0xbc4>
400083f4:	e1a02003 	mov	r2, r3
400083f8:	eb002bbf 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083fc:	e59f12b4 	ldr	r1, [pc, #692]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008400:	e3a00004 	mov	r0, #4
40008404:	eb002bbc 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008408:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000840c:	eb00021c 	bl	40008c84 <_tx_thread_sleep>
40008410:	eafffff9 	b	400083fc <UVCAppThread_Entry+0x8fc>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008414:	e3a00004 	mov	r0, #4
40008418:	e59f12d8 	ldr	r1, [pc, #728]	; 400086f8 <UVCAppThread_Entry+0xbf8>
4000841c:	e1a02008 	mov	r2, r8
40008420:	eb002bb5 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008424:	e59f128c 	ldr	r1, [pc, #652]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008428:	e3a00004 	mov	r0, #4
4000842c:	eb002bb2 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008430:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008434:	eb000212 	bl	40008c84 <_tx_thread_sleep>
40008438:	eafffff9 	b	40008424 <UVCAppThread_Entry+0x924>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
4000843c:	e3a00004 	mov	r0, #4
40008440:	e59f12b4 	ldr	r1, [pc, #692]	; 400086fc <UVCAppThread_Entry+0xbfc>
40008444:	eb002bac 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008448:	e59f1268 	ldr	r1, [pc, #616]	; 400086b8 <UVCAppThread_Entry+0xbb8>
4000844c:	e3a00004 	mov	r0, #4
40008450:	eb002ba9 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008454:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008458:	eb000209 	bl	40008c84 <_tx_thread_sleep>
4000845c:	eafffff9 	b	40008448 <UVCAppThread_Entry+0x948>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008460:	e3a00004 	mov	r0, #4
40008464:	e59f1294 	ldr	r1, [pc, #660]	; 40008700 <UVCAppThread_Entry+0xc00>
40008468:	eb002ba3 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000846c:	e59f1244 	ldr	r1, [pc, #580]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008470:	e3a00004 	mov	r0, #4
40008474:	eb002ba0 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008478:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000847c:	eb000200 	bl	40008c84 <_tx_thread_sleep>
40008480:	eafffff9 	b	4000846c <UVCAppThread_Entry+0x96c>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
40008484:	e2800004 	add	r0, r0, #4
40008488:	e59f1274 	ldr	r1, [pc, #628]	; 40008704 <UVCAppThread_Entry+0xc04>
4000848c:	eb002b9a 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008490:	e59f1220 	ldr	r1, [pc, #544]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008494:	e3a00004 	mov	r0, #4
40008498:	eb002b97 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000849c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084a0:	eb0001f7 	bl	40008c84 <_tx_thread_sleep>
400084a4:	eafffff9 	b	40008490 <UVCAppThread_Entry+0x990>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400084a8:	e59f01fc 	ldr	r0, [pc, #508]	; 400086ac <UVCAppThread_Entry+0xbac>
400084ac:	eb004099 	bl	40018718 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
400084b0:	e3500000 	cmp	r0, #0
400084b4:	1a000002 	bne	400084c4 <UVCAppThread_Entry+0x9c4>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
400084b8:	e3a00083 	mov	r0, #131	; 0x83
400084bc:	eb00522a 	bl	4001cd6c <CyU3PUsbFlushEp>
400084c0:	eafffef8 	b	400080a8 <UVCAppThread_Entry+0x5a8>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084c4:	e59f11ec 	ldr	r1, [pc, #492]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400084c8:	e3a00004 	mov	r0, #4
400084cc:	eb002b8a 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084d4:	eb0001ea 	bl	40008c84 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084d8:	e59f11d8 	ldr	r1, [pc, #472]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400084dc:	e3a00004 	mov	r0, #4
400084e0:	eb002b85 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084e4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084e8:	eb0001e5 	bl	40008c84 <_tx_thread_sleep>
400084ec:	eafffff4 	b	400084c4 <UVCAppThread_Entry+0x9c4>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
400084f0:	e3a01001 	mov	r1, #1
400084f4:	e3a02002 	mov	r2, #2
400084f8:	e28d30b4 	add	r3, sp, #180	; 0xb4
400084fc:	e59f0150 	ldr	r0, [pc, #336]	; 40008654 <UVCAppThread_Entry+0xb54>
40008500:	e58da000 	str	sl, [sp]
40008504:	eb0006a6 	bl	40009fa4 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008508:	e1a02006 	mov	r2, r6
4000850c:	e59f0198 	ldr	r0, [pc, #408]	; 400086ac <UVCAppThread_Entry+0xbac>
40008510:	e1a01006 	mov	r1, r6
40008514:	eb00416c 	bl	40018acc <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008518:	e2502000 	subs	r2, r0, #0
4000851c:	1a00000c 	bne	40008554 <UVCAppThread_Entry+0xa54>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008520:	e595c028 	ldr	ip, [r5, #40]	; 0x28
40008524:	e35c0000 	cmp	ip, #0
40008528:	1a000035 	bne	40008604 <UVCAppThread_Entry+0xb04>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000852c:	e5d5304c 	ldrb	r3, [r5, #76]	; 0x4c
40008530:	e3530003 	cmp	r3, #3
40008534:	0a00002b 	beq	400085e8 <UVCAppThread_Entry+0xae8>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008538:	e3530002 	cmp	r3, #2
4000853c:	0a00000d 	beq	40008578 <UVCAppThread_Entry+0xa78>
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
#endif
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008540:	e3a02001 	mov	r2, #1
40008544:	e5842028 	str	r2, [r4, #40]	; 0x28
                    CyU3PThreadSleep(200);
40008548:	e3a000c8 	mov	r0, #200	; 0xc8
4000854c:	eb0001cc 	bl	40008c84 <_tx_thread_sleep>
40008550:	eafffea2 	b	40007fe0 <UVCAppThread_Entry+0x4e0>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008554:	e3a00004 	mov	r0, #4
40008558:	e59f11a8 	ldr	r1, [pc, #424]	; 40008708 <UVCAppThread_Entry+0xc08>
4000855c:	eb002b66 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008560:	e59f1150 	ldr	r1, [pc, #336]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008564:	e3a00004 	mov	r0, #4
40008568:	eb002b63 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000856c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008570:	eb0001c3 	bl	40008c84 <_tx_thread_sleep>
40008574:	eafffff9 	b	40008560 <UVCAppThread_Entry+0xa60>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008578:	e59f118c 	ldr	r1, [pc, #396]	; 4000870c <UVCAppThread_Entry+0xc0c>
4000857c:	e3a00001 	mov	r0, #1
40008580:	eb002b5d 	bl	400132fc <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
40008584:	e59f0184 	ldr	r0, [pc, #388]	; 40008710 <UVCAppThread_Entry+0xc10>
40008588:	eb004c8f 	bl	4001b7cc <CyU3PGpifLoad>
4000858c:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008590:	e3520000 	cmp	r2, #0
40008594:	1a000022 	bne	40008624 <UVCAppThread_Entry+0xb24>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008598:	e5d4304c 	ldrb	r3, [r4, #76]	; 0x4c
4000859c:	e3530003 	cmp	r3, #3
400085a0:	0a000001 	beq	400085ac <UVCAppThread_Entry+0xaac>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
400085a4:	e3530002 	cmp	r3, #2
400085a8:	1affffe4 	bne	40008540 <UVCAppThread_Entry+0xa40>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400085ac:	e1a00002 	mov	r0, r2
400085b0:	e1a01002 	mov	r1, r2
400085b4:	eb004d2a 	bl	4001ba64 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400085b8:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400085bc:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400085c0:	0affffde 	beq	40008540 <UVCAppThread_Entry+0xa40>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400085c4:	e3a00004 	mov	r0, #4
400085c8:	e59f1144 	ldr	r1, [pc, #324]	; 40008714 <UVCAppThread_Entry+0xc14>
400085cc:	eb002b4a 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085d0:	e59f10e0 	ldr	r1, [pc, #224]	; 400086b8 <UVCAppThread_Entry+0xbb8>
400085d4:	e3a00004 	mov	r0, #4
400085d8:	eb002b47 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085dc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085e0:	eb0001a7 	bl	40008c84 <_tx_thread_sleep>
400085e4:	eafffff9 	b	400085d0 <UVCAppThread_Entry+0xad0>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400085e8:	e59f1128 	ldr	r1, [pc, #296]	; 40008718 <UVCAppThread_Entry+0xc18>
400085ec:	e3a00001 	mov	r0, #1
400085f0:	eb002b41 	bl	400132fc <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400085f4:	e59f0120 	ldr	r0, [pc, #288]	; 4000871c <UVCAppThread_Entry+0xc1c>
400085f8:	eb004c73 	bl	4001b7cc <CyU3PGpifLoad>
400085fc:	e1a02000 	mov	r2, r0
40008600:	eaffffe2 	b	40008590 <UVCAppThread_Entry+0xa90>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40008604:	e59f0094 	ldr	r0, [pc, #148]	; 400086a0 <UVCAppThread_Entry+0xba0>
40008608:	e3a0e002 	mov	lr, #2
4000860c:	e1a01006 	mov	r1, r6
40008610:	e1a02000 	mov	r2, r0
40008614:	e1a03006 	mov	r3, r6
40008618:	e58de000 	str	lr, [sp]
4000861c:	eb004d65 	bl	4001bbb8 <CyU3PGpifSMSwitch>
40008620:	eafffe6e 	b	40007fe0 <UVCAppThread_Entry+0x4e0>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
40008624:	e3a00004 	mov	r0, #4
40008628:	e59f10f0 	ldr	r1, [pc, #240]	; 40008720 <UVCAppThread_Entry+0xc20>
4000862c:	eb002b32 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008630:	e59f1080 	ldr	r1, [pc, #128]	; 400086b8 <UVCAppThread_Entry+0xbb8>
40008634:	e3a00004 	mov	r0, #4
40008638:	eb002b2f 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000863c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008640:	eb00018f 	bl	40008c84 <_tx_thread_sleep>
40008644:	eafffff9 	b	40008630 <UVCAppThread_Entry+0xb30>
40008648:	40011b18 	.word	0x40011b18
4000864c:	0001c200 	.word	0x0001c200
40008650:	000186a0 	.word	0x000186a0
40008654:	40030f90 	.word	0x40030f90
40008658:	40005020 	.word	0x40005020
4000865c:	40004d2c 	.word	0x40004d2c
40008660:	40004a00 	.word	0x40004a00
40008664:	40010f74 	.word	0x40010f74
40008668:	40010f88 	.word	0x40010f88
4000866c:	40010f9c 	.word	0x40010f9c
40008670:	400110b4 	.word	0x400110b4
40008674:	40010fb4 	.word	0x40010fb4
40008678:	40010fa8 	.word	0x40010fa8
4000867c:	400110cc 	.word	0x400110cc
40008680:	400111d8 	.word	0x400111d8
40008684:	400111dc 	.word	0x400111dc
40008688:	40011214 	.word	0x40011214
4000868c:	00003f01 	.word	0x00003f01
40008690:	00000302 	.word	0x00000302
40008694:	40033030 	.word	0x40033030
40008698:	40033108 	.word	0x40033108
4000869c:	400330d0 	.word	0x400330d0
400086a0:	00000101 	.word	0x00000101
400086a4:	00000303 	.word	0x00000303
400086a8:	40004b70 	.word	0x40004b70
400086ac:	40032ee4 	.word	0x40032ee4
400086b0:	40030000 	.word	0x40030000
400086b4:	40011b38 	.word	0x40011b38
400086b8:	40011594 	.word	0x40011594
400086bc:	40011b54 	.word	0x40011b54
400086c0:	40011b70 	.word	0x40011b70
400086c4:	40011d40 	.word	0x40011d40
400086c8:	40011e1c 	.word	0x40011e1c
400086cc:	40011ca8 	.word	0x40011ca8
400086d0:	40011c74 	.word	0x40011c74
400086d4:	40011c40 	.word	0x40011c40
400086d8:	40011c14 	.word	0x40011c14
400086dc:	40011bc0 	.word	0x40011bc0
400086e0:	40011b9c 	.word	0x40011b9c
400086e4:	40011be8 	.word	0x40011be8
400086e8:	40011e94 	.word	0x40011e94
400086ec:	40011e68 	.word	0x40011e68
400086f0:	40011e44 	.word	0x40011e44
400086f4:	40011d74 	.word	0x40011d74
400086f8:	40011d10 	.word	0x40011d10
400086fc:	40011ce0 	.word	0x40011ce0
40008700:	40011dec 	.word	0x40011dec
40008704:	40011db4 	.word	0x40011db4
40008708:	40011ec8 	.word	0x40011ec8
4000870c:	40011f0c 	.word	0x40011f0c
40008710:	400113a4 	.word	0x400113a4
40008714:	40011f54 	.word	0x40011f54
40008718:	40011efc 	.word	0x40011efc
4000871c:	40011388 	.word	0x40011388
40008720:	40011f1c 	.word	0x40011f1c

40008724 <CyFxUVCApplnI2CInit>:

/* I2C initialization. */
//static void
void
CyFxUVCApplnI2CInit (void)
{
40008724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40008728:	e24dd014 	sub	sp, sp, #20
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
4000872c:	eb006bf1 	bl	400236f8 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40008730:	e2502000 	subs	r2, r0, #0
40008734:	1a00000b 	bne	40008768 <CyFxUVCApplnI2CInit+0x44>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008738:	e59fc070 	ldr	ip, [pc, #112]	; 400087b0 <CyFxUVCApplnI2CInit+0x8c>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
4000873c:	e3e03000 	mvn	r3, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008740:	e1a0000d 	mov	r0, sp
40008744:	e1a01002 	mov	r1, r2
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008748:	e58dc000 	str	ip, [sp]
    i2cConfig.isDma      = CyFalse;
4000874c:	e98d000c 	stmib	sp, {r2, r3}
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;
40008750:	e1cd30bc 	strh	r3, [sp, #12]

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008754:	eb006ce0 	bl	40023adc <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40008758:	e3500000 	cmp	r0, #0
4000875c:	1a00000a 	bne	4000878c <CyFxUVCApplnI2CInit+0x68>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
        CyFxAppErrorHandler (status);
    }
}
40008760:	e28dd014 	add	sp, sp, #20
40008764:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40008768:	e3a00004 	mov	r0, #4
4000876c:	e59f1040 	ldr	r1, [pc, #64]	; 400087b4 <CyFxUVCApplnI2CInit+0x90>
40008770:	eb002ae1 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008774:	e59f103c 	ldr	r1, [pc, #60]	; 400087b8 <CyFxUVCApplnI2CInit+0x94>
40008778:	e3a00004 	mov	r0, #4
4000877c:	eb002ade 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008780:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008784:	eb00013e 	bl	40008c84 <_tx_thread_sleep>
40008788:	eafffff9 	b	40008774 <CyFxUVCApplnI2CInit+0x50>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
4000878c:	e3a00004 	mov	r0, #4
40008790:	e59f1024 	ldr	r1, [pc, #36]	; 400087bc <CyFxUVCApplnI2CInit+0x98>
40008794:	eb002ad8 	bl	400132fc <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008798:	e59f1018 	ldr	r1, [pc, #24]	; 400087b8 <CyFxUVCApplnI2CInit+0x94>
4000879c:	e3a00004 	mov	r0, #4
400087a0:	eb002ad5 	bl	400132fc <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400087a4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400087a8:	eb000135 	bl	40008c84 <_tx_thread_sleep>
400087ac:	eafffff9 	b	40008798 <CyFxUVCApplnI2CInit+0x74>
400087b0:	000186a0 	.word	0x000186a0
400087b4:	40011b38 	.word	0x40011b38
400087b8:	40011594 	.word	0x40011594
400087bc:	40011b54 	.word	0x40011b54

400087c0 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400087c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087c4:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400087c8:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087cc:	ebffeba8 	bl	40003674 <CyU3PMemAlloc>
400087d0:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087d4:	e3a00a01 	mov	r0, #4096	; 0x1000
400087d8:	ebffeba5 	bl	40003674 <CyU3PMemAlloc>
400087dc:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087e0:	e3a00a01 	mov	r0, #4096	; 0x1000
400087e4:	ebffeba2 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400087e8:	e35a0000 	cmp	sl, #0
400087ec:	135b0000 	cmpne	fp, #0
400087f0:	13a09000 	movne	r9, #0
400087f4:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087f8:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400087fc:	1a000000 	bne	40008804 <CyFxApplicationDefine+0x44>
40008800:	eafffffe 	b	40008800 <CyFxApplicationDefine+0x40>
40008804:	e3500000 	cmp	r0, #0
40008808:	0afffffc 	beq	40008800 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
4000880c:	e28d4028 	add	r4, sp, #40	; 0x28
40008810:	e1a00004 	mov	r0, r4
40008814:	e3a01040 	mov	r1, #64	; 0x40
40008818:	e59f2118 	ldr	r2, [pc, #280]	; 40008938 <CyFxApplicationDefine+0x178>
4000881c:	ebffeae7 	bl	400033c0 <cmdbufCreate>
40008820:	e1a05004 	mov	r5, r4
40008824:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008828:	e59f710c 	ldr	r7, [pc, #268]	; 4000893c <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000882c:	e59f810c 	ldr	r8, [pc, #268]	; 40008940 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008830:	e1a0c007 	mov	ip, r7
40008834:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008838:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000883c:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008840:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008844:	e59f20f8 	ldr	r2, [pc, #248]	; 40008944 <CyFxApplicationDefine+0x184>
40008848:	e1a00004 	mov	r0, r4
4000884c:	e3a01020 	mov	r1, #32
40008850:	ebffeada 	bl	400033c0 <cmdbufCreate>
40008854:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
40008858:	e1a0c008 	mov	ip, r8
4000885c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008860:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008864:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008868:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
4000886c:	e1a00007 	mov	r0, r7
40008870:	ebffeaea 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008874:	e1a00008 	mov	r0, r8
40008878:	ebffeae8 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000887c:	e3a050a8 	mov	r5, #168	; 0xa8
40008880:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008884:	e59f00bc 	ldr	r0, [pc, #188]	; 40008948 <CyFxApplicationDefine+0x188>
40008888:	e59f10bc 	ldr	r1, [pc, #188]	; 4000894c <CyFxApplicationDefine+0x18c>
4000888c:	e59f20bc 	ldr	r2, [pc, #188]	; 40008950 <CyFxApplicationDefine+0x190>
40008890:	e1a03009 	mov	r3, r9
40008894:	e88d1400 	stm	sp, {sl, ip}
40008898:	e58d6008 	str	r6, [sp, #8]
4000889c:	e58d600c 	str	r6, [sp, #12]
400088a0:	e58d9010 	str	r9, [sp, #16]
400088a4:	e58d4014 	str	r4, [sp, #20]
400088a8:	e58d5018 	str	r5, [sp, #24]
400088ac:	eb0007c7 	bl	4000a7d0 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400088b0:	e250c000 	subs	ip, r0, #0
400088b4:	1affffd1 	bne	40008800 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
400088b8:	e1a0300c 	mov	r3, ip
400088bc:	e3a07b02 	mov	r7, #2048	; 0x800
400088c0:	e59f008c 	ldr	r0, [pc, #140]	; 40008954 <CyFxApplicationDefine+0x194>
400088c4:	e59f108c 	ldr	r1, [pc, #140]	; 40008958 <CyFxApplicationDefine+0x198>
400088c8:	e59f208c 	ldr	r2, [pc, #140]	; 4000895c <CyFxApplicationDefine+0x19c>
400088cc:	e58dc010 	str	ip, [sp, #16]
400088d0:	e58db000 	str	fp, [sp]
400088d4:	e58d7004 	str	r7, [sp, #4]
400088d8:	e58d6008 	str	r6, [sp, #8]
400088dc:	e58d600c 	str	r6, [sp, #12]
400088e0:	e58d4014 	str	r4, [sp, #20]
400088e4:	e58d5018 	str	r5, [sp, #24]
400088e8:	eb0007b8 	bl	4000a7d0 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400088ec:	e250c000 	subs	ip, r0, #0
400088f0:	1affffc2 	bne	40008800 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400088f4:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400088f8:	e59f0060 	ldr	r0, [pc, #96]	; 40008960 <CyFxApplicationDefine+0x1a0>
400088fc:	e59f1060 	ldr	r1, [pc, #96]	; 40008964 <CyFxApplicationDefine+0x1a4>
40008900:	e59f2060 	ldr	r2, [pc, #96]	; 40008968 <CyFxApplicationDefine+0x1a8>
40008904:	e1a0300c 	mov	r3, ip
40008908:	e58de000 	str	lr, [sp]
4000890c:	e58d7004 	str	r7, [sp, #4]
40008910:	e58d6008 	str	r6, [sp, #8]
40008914:	e58d600c 	str	r6, [sp, #12]
40008918:	e58dc010 	str	ip, [sp, #16]
4000891c:	e58d4014 	str	r4, [sp, #20]
40008920:	e58d5018 	str	r5, [sp, #24]
40008924:	eb0007a9 	bl	4000a7d0 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008928:	e3500000 	cmp	r0, #0
4000892c:	1affffb3 	bne	40008800 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008930:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008934:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008938:	4003310c 	.word	0x4003310c
4000893c:	40032ec4 	.word	0x40032ec4
40008940:	40033148 	.word	0x40033148
40008944:	40032ff8 	.word	0x40032ff8
40008948:	40031034 	.word	0x40031034
4000894c:	40011f8c 	.word	0x40011f8c
40008950:	40007b00 	.word	0x40007b00
40008954:	400310dc 	.word	0x400310dc
40008958:	40011fa0 	.word	0x40011fa0
4000895c:	40006c10 	.word	0x40006c10
40008960:	40031184 	.word	0x40031184
40008964:	40011fb8 	.word	0x40011fb8
40008968:	400047c0 	.word	0x400047c0

4000896c <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
4000896c:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008970:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008974:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
40008978:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000897c:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008980:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008984:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008988:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
4000898c:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008990:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008994:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
40008998:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000899c:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400089a0:	eb00278d 	bl	400127dc <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400089a4:	e2504000 	subs	r4, r0, #0
400089a8:	0a000000 	beq	400089b0 <main+0x44>
400089ac:	eafffffe 	b	400089ac <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400089b0:	e1a01004 	mov	r1, r4
400089b4:	e1a02004 	mov	r2, r4
400089b8:	e1a00005 	mov	r0, r5
400089bc:	eb002760 	bl	40012744 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400089c0:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
400089c4:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
400089c8:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
400089cc:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
400089d0:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
400089d4:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
400089d8:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
400089dc:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400089e0:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400089e4:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400089e8:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400089ec:	eb002924 	bl	40012e84 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400089f0:	e2504000 	subs	r4, r0, #0
400089f4:	1affffec 	bne	400089ac <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400089f8:	eb000002 	bl	40008a08 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400089fc:	e1a00004 	mov	r0, r4
40008a00:	e28dd03c 	add	sp, sp, #60	; 0x3c
40008a04:	e8bd8030 	pop	{r4, r5, pc}

40008a08 <_tx_initialize_kernel_enter>:
40008a08:	e92d4010 	push	{r4, lr}
40008a0c:	e59f004c 	ldr	r0, [pc, #76]	; 40008a60 <_tx_initialize_kernel_enter+0x58>
40008a10:	e5900000 	ldr	r0, [r0]
40008a14:	e59f1048 	ldr	r1, [pc, #72]	; 40008a64 <_tx_initialize_kernel_enter+0x5c>
40008a18:	e1500001 	cmp	r0, r1
40008a1c:	0a000004 	beq	40008a34 <_tx_initialize_kernel_enter+0x2c>
40008a20:	e1e00221 	mvn	r0, r1, lsr #4
40008a24:	e59f1034 	ldr	r1, [pc, #52]	; 40008a60 <_tx_initialize_kernel_enter+0x58>
40008a28:	e5810000 	str	r0, [r1]
40008a2c:	eb0009ee 	bl	4000b1ec <_tx_initialize_low_level>
40008a30:	eb00105f 	bl	4000cbb4 <_tx_initialize_high_level>
40008a34:	e59f002c 	ldr	r0, [pc, #44]	; 40008a68 <_tx_initialize_kernel_enter+0x60>
40008a38:	e59f1020 	ldr	r1, [pc, #32]	; 40008a60 <_tx_initialize_kernel_enter+0x58>
40008a3c:	e5810000 	str	r0, [r1]
40008a40:	e59f0024 	ldr	r0, [pc, #36]	; 40008a6c <_tx_initialize_kernel_enter+0x64>
40008a44:	e5900000 	ldr	r0, [r0]
40008a48:	ebffeaf5 	bl	40003624 <tx_application_define>
40008a4c:	e3a00000 	mov	r0, #0
40008a50:	e59f1008 	ldr	r1, [pc, #8]	; 40008a60 <_tx_initialize_kernel_enter+0x58>
40008a54:	e5810000 	str	r0, [r1]
40008a58:	eb00091f 	bl	4000aedc <_tx_thread_schedule>
40008a5c:	e8bd8010 	pop	{r4, pc}
40008a60:	40030e2c 	.word	0x40030e2c
40008a64:	f0f0f0f1 	.word	0xf0f0f0f1
40008a68:	f0f0f0f0 	.word	0xf0f0f0f0
40008a6c:	40030dc4 	.word	0x40030dc4

40008a70 <_tx_thread_identify>:
40008a70:	e10f1000 	mrs	r1, CPSR
40008a74:	e3812080 	orr	r2, r1, #128	; 0x80
40008a78:	e121f002 	msr	CPSR_c, r2
40008a7c:	e59f30e0 	ldr	r3, [pc, #224]	; 40008b64 <_tx_thread_identify+0xf4>
40008a80:	e5930000 	ldr	r0, [r3]
40008a84:	e3500000 	cmp	r0, #0
40008a88:	0a000031 	beq	40008b54 <_tx_thread_identify+0xe4>
40008a8c:	e59f30d4 	ldr	r3, [pc, #212]	; 40008b68 <_tx_thread_identify+0xf8>
40008a90:	e5933000 	ldr	r3, [r3]
40008a94:	e2833001 	add	r3, r3, #1
40008a98:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008b68 <_tx_thread_identify+0xf8>
40008a9c:	e58c3000 	str	r3, [ip]
40008aa0:	e580300c 	str	r3, [r0, #12]
40008aa4:	e59f30c0 	ldr	r3, [pc, #192]	; 40008b6c <_tx_thread_identify+0xfc>
40008aa8:	e5933000 	ldr	r3, [r3]
40008aac:	e3530000 	cmp	r3, #0
40008ab0:	1a000006 	bne	40008ad0 <_tx_thread_identify+0x60>
40008ab4:	e59f30b4 	ldr	r3, [pc, #180]	; 40008b70 <_tx_thread_identify+0x100>
40008ab8:	e5933000 	ldr	r3, [r3]
40008abc:	e5803000 	str	r3, [r0]
40008ac0:	e5903000 	ldr	r3, [r0]
40008ac4:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008ac8:	e5803004 	str	r3, [r0, #4]
40008acc:	ea00000d 	b	40008b08 <_tx_thread_identify+0x98>
40008ad0:	e59f3094 	ldr	r3, [pc, #148]	; 40008b6c <_tx_thread_identify+0xfc>
40008ad4:	e5933000 	ldr	r3, [r3]
40008ad8:	e59fc094 	ldr	ip, [pc, #148]	; 40008b74 <_tx_thread_identify+0x104>
40008adc:	e153000c 	cmp	r3, ip
40008ae0:	2a000004 	bcs	40008af8 <_tx_thread_identify+0x88>
40008ae4:	e3e03000 	mvn	r3, #0
40008ae8:	e5803000 	str	r3, [r0]
40008aec:	e3a03000 	mov	r3, #0
40008af0:	e5803004 	str	r3, [r0, #4]
40008af4:	ea000003 	b	40008b08 <_tx_thread_identify+0x98>
40008af8:	e59f3074 	ldr	r3, [pc, #116]	; 40008b74 <_tx_thread_identify+0x104>
40008afc:	e5803000 	str	r3, [r0]
40008b00:	e3a03000 	mov	r3, #0
40008b04:	e5803004 	str	r3, [r0, #4]
40008b08:	e3a03067 	mov	r3, #103	; 0x67
40008b0c:	e5803008 	str	r3, [r0, #8]
40008b10:	e3a03000 	mov	r3, #0
40008b14:	e5803010 	str	r3, [r0, #16]
40008b18:	e5803014 	str	r3, [r0, #20]
40008b1c:	e5803018 	str	r3, [r0, #24]
40008b20:	e580301c 	str	r3, [r0, #28]
40008b24:	e2800020 	add	r0, r0, #32
40008b28:	e59f3048 	ldr	r3, [pc, #72]	; 40008b78 <_tx_thread_identify+0x108>
40008b2c:	e5933000 	ldr	r3, [r3]
40008b30:	e1500003 	cmp	r0, r3
40008b34:	3a000001 	bcc	40008b40 <_tx_thread_identify+0xd0>
40008b38:	e59f303c 	ldr	r3, [pc, #60]	; 40008b7c <_tx_thread_identify+0x10c>
40008b3c:	e5930000 	ldr	r0, [r3]
40008b40:	e59f301c 	ldr	r3, [pc, #28]	; 40008b64 <_tx_thread_identify+0xf4>
40008b44:	e5830000 	str	r0, [r3]
40008b48:	e59f3030 	ldr	r3, [pc, #48]	; 40008b80 <_tx_thread_identify+0x110>
40008b4c:	e5933000 	ldr	r3, [r3]
40008b50:	e5830020 	str	r0, [r3, #32]
40008b54:	e121f001 	msr	CPSR_c, r1
40008b58:	e59f0010 	ldr	r0, [pc, #16]	; 40008b70 <_tx_thread_identify+0x100>
40008b5c:	e5900000 	ldr	r0, [r0]
40008b60:	e12fff1e 	bx	lr
40008b64:	40030ea0 	.word	0x40030ea0
40008b68:	40030ea4 	.word	0x40030ea4
40008b6c:	40030e2c 	.word	0x40030e2c
40008b70:	40030e34 	.word	0x40030e34
40008b74:	f0f0f0f0 	.word	0xf0f0f0f0
40008b78:	40030e9c 	.word	0x40030e9c
40008b7c:	40030e98 	.word	0x40030e98
40008b80:	40030e8c 	.word	0x40030e8c

40008b84 <_tx_thread_initialize>:
40008b84:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008b88:	e3a00000 	mov	r0, #0
40008b8c:	e59f10c0 	ldr	r1, [pc, #192]	; 40008c54 <_tx_thread_initialize+0xd0>
40008b90:	e5810000 	str	r0, [r1]
40008b94:	e59f10bc 	ldr	r1, [pc, #188]	; 40008c58 <_tx_thread_initialize+0xd4>
40008b98:	e5810000 	str	r0, [r1]
40008b9c:	e59f00b8 	ldr	r0, [pc, #184]	; 40008c5c <_tx_thread_initialize+0xd8>
40008ba0:	e3a01000 	mov	r1, #0
40008ba4:	e5801000 	str	r1, [r0]
40008ba8:	e59f00b0 	ldr	r0, [pc, #176]	; 40008c60 <_tx_thread_initialize+0xdc>
40008bac:	e5801000 	str	r1, [r0]
40008bb0:	e3a00020 	mov	r0, #32
40008bb4:	e59f10a8 	ldr	r1, [pc, #168]	; 40008c64 <_tx_thread_initialize+0xe0>
40008bb8:	e5810000 	str	r0, [r1]
40008bbc:	e3a00000 	mov	r0, #0
40008bc0:	e59f10a0 	ldr	r1, [pc, #160]	; 40008c68 <_tx_thread_initialize+0xe4>
40008bc4:	e5c10000 	strb	r0, [r1]
40008bc8:	e2816001 	add	r6, r1, #1
40008bcc:	e3a04001 	mov	r4, #1
40008bd0:	ea000009 	b	40008bfc <_tx_thread_initialize+0x78>
40008bd4:	e1a07004 	mov	r7, r4
40008bd8:	e3a05000 	mov	r5, #0
40008bdc:	ea000002 	b	40008bec <_tx_thread_initialize+0x68>
40008be0:	e1a070a7 	lsr	r7, r7, #1
40008be4:	e2850001 	add	r0, r5, #1
40008be8:	e20050ff 	and	r5, r0, #255	; 0xff
40008bec:	e3170001 	tst	r7, #1
40008bf0:	0afffffa 	beq	40008be0 <_tx_thread_initialize+0x5c>
40008bf4:	e4c65001 	strb	r5, [r6], #1
40008bf8:	e2844001 	add	r4, r4, #1
40008bfc:	e3540c01 	cmp	r4, #256	; 0x100
40008c00:	3afffff3 	bcc	40008bd4 <_tx_thread_initialize+0x50>
40008c04:	e3a01080 	mov	r1, #128	; 0x80
40008c08:	e59f005c 	ldr	r0, [pc, #92]	; 40008c6c <_tx_thread_initialize+0xe8>
40008c0c:	eb002b50 	bl	40013954 <__aeabi_memclr4>
40008c10:	e3a00000 	mov	r0, #0
40008c14:	e59f1054 	ldr	r1, [pc, #84]	; 40008c70 <_tx_thread_initialize+0xec>
40008c18:	e5810000 	str	r0, [r1]
40008c1c:	e59f1050 	ldr	r1, [pc, #80]	; 40008c74 <_tx_thread_initialize+0xf0>
40008c20:	e5810000 	str	r0, [r1]
40008c24:	e59f104c 	ldr	r1, [pc, #76]	; 40008c78 <_tx_thread_initialize+0xf4>
40008c28:	e5810000 	str	r0, [r1]
40008c2c:	e59f1048 	ldr	r1, [pc, #72]	; 40008c7c <_tx_thread_initialize+0xf8>
40008c30:	e5810000 	str	r0, [r1]
40008c34:	e59f0044 	ldr	r0, [pc, #68]	; 40008c80 <_tx_thread_initialize+0xfc>
40008c38:	e5900000 	ldr	r0, [r0]
40008c3c:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008c40:	e3800c01 	orr	r0, r0, #256	; 0x100
40008c44:	e3800002 	orr	r0, r0, #2
40008c48:	e59f1030 	ldr	r1, [pc, #48]	; 40008c80 <_tx_thread_initialize+0xfc>
40008c4c:	e5810000 	str	r0, [r1]
40008c50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008c54:	40030e34 	.word	0x40030e34
40008c58:	40030e38 	.word	0x40030e38
40008c5c:	40030e44 	.word	0x40030e44
40008c60:	40030e48 	.word	0x40030e48
40008c64:	40030e4c 	.word	0x40030e4c
40008c68:	40032774 	.word	0x40032774
40008c6c:	40032874 	.word	0x40032874
40008c70:	40030e3c 	.word	0x40030e3c
40008c74:	40030e40 	.word	0x40030e40
40008c78:	40030e50 	.word	0x40030e50
40008c7c:	40030e58 	.word	0x40030e58
40008c80:	40030e54 	.word	0x40030e54

40008c84 <_tx_thread_sleep>:
40008c84:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008c88:	e1a04000 	mov	r4, r0
40008c8c:	e59f018c 	ldr	r0, [pc, #396]	; 40008e20 <_tx_thread_sleep+0x19c>
40008c90:	e5900000 	ldr	r0, [r0]
40008c94:	e58d0000 	str	r0, [sp]
40008c98:	e59d0000 	ldr	r0, [sp]
40008c9c:	e3500000 	cmp	r0, #0
40008ca0:	0a000007 	beq	40008cc4 <_tx_thread_sleep+0x40>
40008ca4:	e59f1178 	ldr	r1, [pc, #376]	; 40008e24 <_tx_thread_sleep+0x1a0>
40008ca8:	e59d0000 	ldr	r0, [sp]
40008cac:	e1500001 	cmp	r0, r1
40008cb0:	0a000003 	beq	40008cc4 <_tx_thread_sleep+0x40>
40008cb4:	e59f016c 	ldr	r0, [pc, #364]	; 40008e28 <_tx_thread_sleep+0x1a4>
40008cb8:	e5900000 	ldr	r0, [r0]
40008cbc:	e3500000 	cmp	r0, #0
40008cc0:	0a000001 	beq	40008ccc <_tx_thread_sleep+0x48>
40008cc4:	e3a00013 	mov	r0, #19
40008cc8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008ccc:	e3540000 	cmp	r4, #0
40008cd0:	1a000001 	bne	40008cdc <_tx_thread_sleep+0x58>
40008cd4:	e3a00000 	mov	r0, #0
40008cd8:	eafffffa 	b	40008cc8 <_tx_thread_sleep+0x44>
40008cdc:	e10f5000 	mrs	r5, CPSR
40008ce0:	e3856080 	orr	r6, r5, #128	; 0x80
40008ce4:	e121f006 	msr	CPSR_c, r6
40008ce8:	e59f113c 	ldr	r1, [pc, #316]	; 40008e2c <_tx_thread_sleep+0x1a8>
40008cec:	e5910000 	ldr	r0, [r1]
40008cf0:	e3500000 	cmp	r0, #0
40008cf4:	0a000033 	beq	40008dc8 <_tx_thread_sleep+0x144>
40008cf8:	e59f1130 	ldr	r1, [pc, #304]	; 40008e30 <_tx_thread_sleep+0x1ac>
40008cfc:	e5911000 	ldr	r1, [r1]
40008d00:	e2811001 	add	r1, r1, #1
40008d04:	e59f2124 	ldr	r2, [pc, #292]	; 40008e30 <_tx_thread_sleep+0x1ac>
40008d08:	e5821000 	str	r1, [r2]
40008d0c:	e580100c 	str	r1, [r0, #12]
40008d10:	e59f1110 	ldr	r1, [pc, #272]	; 40008e28 <_tx_thread_sleep+0x1a4>
40008d14:	e5911000 	ldr	r1, [r1]
40008d18:	e3510000 	cmp	r1, #0
40008d1c:	1a000006 	bne	40008d3c <_tx_thread_sleep+0xb8>
40008d20:	e59f10f8 	ldr	r1, [pc, #248]	; 40008e20 <_tx_thread_sleep+0x19c>
40008d24:	e5911000 	ldr	r1, [r1]
40008d28:	e5801000 	str	r1, [r0]
40008d2c:	e5901000 	ldr	r1, [r0]
40008d30:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008d34:	e5801004 	str	r1, [r0, #4]
40008d38:	ea00000d 	b	40008d74 <_tx_thread_sleep+0xf0>
40008d3c:	e59f10e4 	ldr	r1, [pc, #228]	; 40008e28 <_tx_thread_sleep+0x1a4>
40008d40:	e5911000 	ldr	r1, [r1]
40008d44:	e59f20e8 	ldr	r2, [pc, #232]	; 40008e34 <_tx_thread_sleep+0x1b0>
40008d48:	e1510002 	cmp	r1, r2
40008d4c:	2a000004 	bcs	40008d64 <_tx_thread_sleep+0xe0>
40008d50:	e3e01000 	mvn	r1, #0
40008d54:	e5801000 	str	r1, [r0]
40008d58:	e3a01000 	mov	r1, #0
40008d5c:	e5801004 	str	r1, [r0, #4]
40008d60:	ea000003 	b	40008d74 <_tx_thread_sleep+0xf0>
40008d64:	e59f10c8 	ldr	r1, [pc, #200]	; 40008e34 <_tx_thread_sleep+0x1b0>
40008d68:	e5801000 	str	r1, [r0]
40008d6c:	e3a01000 	mov	r1, #0
40008d70:	e5801004 	str	r1, [r0, #4]
40008d74:	e3a01070 	mov	r1, #112	; 0x70
40008d78:	e5801008 	str	r1, [r0, #8]
40008d7c:	e5804010 	str	r4, [r0, #16]
40008d80:	e59d1000 	ldr	r1, [sp]
40008d84:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008d88:	e5801014 	str	r1, [r0, #20]
40008d8c:	e580d018 	str	sp, [r0, #24]
40008d90:	e3a01000 	mov	r1, #0
40008d94:	e580101c 	str	r1, [r0, #28]
40008d98:	e2800020 	add	r0, r0, #32
40008d9c:	e59f1094 	ldr	r1, [pc, #148]	; 40008e38 <_tx_thread_sleep+0x1b4>
40008da0:	e5911000 	ldr	r1, [r1]
40008da4:	e1500001 	cmp	r0, r1
40008da8:	3a000001 	bcc	40008db4 <_tx_thread_sleep+0x130>
40008dac:	e59f1088 	ldr	r1, [pc, #136]	; 40008e3c <_tx_thread_sleep+0x1b8>
40008db0:	e5910000 	ldr	r0, [r1]
40008db4:	e59f1070 	ldr	r1, [pc, #112]	; 40008e2c <_tx_thread_sleep+0x1a8>
40008db8:	e5810000 	str	r0, [r1]
40008dbc:	e59f107c 	ldr	r1, [pc, #124]	; 40008e40 <_tx_thread_sleep+0x1bc>
40008dc0:	e5911000 	ldr	r1, [r1]
40008dc4:	e5810020 	str	r0, [r1, #32]
40008dc8:	e3a00004 	mov	r0, #4
40008dcc:	e59d1000 	ldr	r1, [sp]
40008dd0:	e5810030 	str	r0, [r1, #48]	; 0x30
40008dd4:	e3a00001 	mov	r0, #1
40008dd8:	e59d1000 	ldr	r1, [sp]
40008ddc:	e5810038 	str	r0, [r1, #56]	; 0x38
40008de0:	e3a00000 	mov	r0, #0
40008de4:	e59d1000 	ldr	r1, [sp]
40008de8:	e5810084 	str	r0, [r1, #132]	; 0x84
40008dec:	e59d0000 	ldr	r0, [sp]
40008df0:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008df4:	e59f0048 	ldr	r0, [pc, #72]	; 40008e44 <_tx_thread_sleep+0x1c0>
40008df8:	e5900000 	ldr	r0, [r0]
40008dfc:	e2800001 	add	r0, r0, #1
40008e00:	e59f103c 	ldr	r1, [pc, #60]	; 40008e44 <_tx_thread_sleep+0x1c0>
40008e04:	e5810000 	str	r0, [r1]
40008e08:	e121f005 	msr	CPSR_c, r5
40008e0c:	e59d0000 	ldr	r0, [sp]
40008e10:	eb00000c 	bl	40008e48 <_tx_thread_system_suspend>
40008e14:	e59d0000 	ldr	r0, [sp]
40008e18:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008e1c:	eaffffa9 	b	40008cc8 <_tx_thread_sleep+0x44>
40008e20:	40030e34 	.word	0x40030e34
40008e24:	40032974 	.word	0x40032974
40008e28:	40030e2c 	.word	0x40030e2c
40008e2c:	40030ea0 	.word	0x40030ea0
40008e30:	40030ea4 	.word	0x40030ea4
40008e34:	f0f0f0f0 	.word	0xf0f0f0f0
40008e38:	40030e9c 	.word	0x40030e9c
40008e3c:	40030e98 	.word	0x40030e98
40008e40:	40030e8c 	.word	0x40030e8c
40008e44:	40030e50 	.word	0x40030e50

40008e48 <_tx_thread_system_suspend>:
40008e48:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008e4c:	e1a04000 	mov	r4, r0
40008e50:	e3a0b000 	mov	fp, #0
40008e54:	e59f05b0 	ldr	r0, [pc, #1456]	; 4000940c <_tx_thread_system_suspend+0x5c4>
40008e58:	e5900000 	ldr	r0, [r0]
40008e5c:	e1540000 	cmp	r4, r0
40008e60:	1a000009 	bne	40008e8c <_tx_thread_system_suspend+0x44>
40008e64:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008e68:	e58d0000 	str	r0, [sp]
40008e6c:	e59d0000 	ldr	r0, [sp]
40008e70:	e3500000 	cmp	r0, #0
40008e74:	0a000004 	beq	40008e8c <_tx_thread_system_suspend+0x44>
40008e78:	e59d0000 	ldr	r0, [sp]
40008e7c:	e3700001 	cmn	r0, #1
40008e80:	0a000001 	beq	40008e8c <_tx_thread_system_suspend+0x44>
40008e84:	e284004c 	add	r0, r4, #76	; 0x4c
40008e88:	eb00020a 	bl	400096b8 <_tx_timer_system_activate>
40008e8c:	e5940008 	ldr	r0, [r4, #8]
40008e90:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008e94:	e1500001 	cmp	r0, r1
40008e98:	2a000001 	bcs	40008ea4 <_tx_thread_system_suspend+0x5c>
40008e9c:	e5940008 	ldr	r0, [r4, #8]
40008ea0:	e5840040 	str	r0, [r4, #64]	; 0x40
40008ea4:	e594000c 	ldr	r0, [r4, #12]
40008ea8:	e5900000 	ldr	r0, [r0]
40008eac:	e59f155c 	ldr	r1, [pc, #1372]	; 40009410 <_tx_thread_system_suspend+0x5c8>
40008eb0:	e1500001 	cmp	r0, r1
40008eb4:	1a000007 	bne	40008ed8 <_tx_thread_system_suspend+0x90>
40008eb8:	e5940010 	ldr	r0, [r4, #16]
40008ebc:	e5900001 	ldr	r0, [r0, #1]
40008ec0:	e1500001 	cmp	r0, r1
40008ec4:	1a000003 	bne	40008ed8 <_tx_thread_system_suspend+0x90>
40008ec8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ecc:	e594100c 	ldr	r1, [r4, #12]
40008ed0:	e1500001 	cmp	r0, r1
40008ed4:	2a000001 	bcs	40008ee0 <_tx_thread_system_suspend+0x98>
40008ed8:	e1a00004 	mov	r0, r4
40008edc:	eb001941 	bl	4000f3e8 <_tx_thread_stack_error_handler>
40008ee0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ee4:	e5100004 	ldr	r0, [r0, #-4]
40008ee8:	e59f1520 	ldr	r1, [pc, #1312]	; 40009410 <_tx_thread_system_suspend+0x5c8>
40008eec:	e1500001 	cmp	r0, r1
40008ef0:	0a000001 	beq	40008efc <_tx_thread_system_suspend+0xb4>
40008ef4:	e1a00004 	mov	r0, r4
40008ef8:	eb001905 	bl	4000f314 <_tx_thread_stack_analyze>
40008efc:	e10f5000 	mrs	r5, CPSR
40008f00:	e3856080 	orr	r6, r5, #128	; 0x80
40008f04:	e121f006 	msr	CPSR_c, r6
40008f08:	e59f0504 	ldr	r0, [pc, #1284]	; 40009414 <_tx_thread_system_suspend+0x5cc>
40008f0c:	e5900000 	ldr	r0, [r0]
40008f10:	e2400001 	sub	r0, r0, #1
40008f14:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009414 <_tx_thread_system_suspend+0x5cc>
40008f18:	e5810000 	str	r0, [r1]
40008f1c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008f20:	e3500000 	cmp	r0, #0
40008f24:	0a000112 	beq	40009374 <_tx_thread_system_suspend+0x52c>
40008f28:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009418 <_tx_thread_system_suspend+0x5d0>
40008f2c:	e590a000 	ldr	sl, [r0]
40008f30:	e2801000 	add	r1, r0, #0
40008f34:	e5910000 	ldr	r0, [r1]
40008f38:	e3500000 	cmp	r0, #0
40008f3c:	0a000034 	beq	40009014 <_tx_thread_system_suspend+0x1cc>
40008f40:	e59f14d4 	ldr	r1, [pc, #1236]	; 4000941c <_tx_thread_system_suspend+0x5d4>
40008f44:	e5911000 	ldr	r1, [r1]
40008f48:	e2811001 	add	r1, r1, #1
40008f4c:	e59f24c8 	ldr	r2, [pc, #1224]	; 4000941c <_tx_thread_system_suspend+0x5d4>
40008f50:	e5821000 	str	r1, [r2]
40008f54:	e580100c 	str	r1, [r0, #12]
40008f58:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009420 <_tx_thread_system_suspend+0x5d8>
40008f5c:	e5911000 	ldr	r1, [r1]
40008f60:	e3510000 	cmp	r1, #0
40008f64:	1a000006 	bne	40008f84 <_tx_thread_system_suspend+0x13c>
40008f68:	e59f149c 	ldr	r1, [pc, #1180]	; 4000940c <_tx_thread_system_suspend+0x5c4>
40008f6c:	e5911000 	ldr	r1, [r1]
40008f70:	e5801000 	str	r1, [r0]
40008f74:	e5901000 	ldr	r1, [r0]
40008f78:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008f7c:	e5801004 	str	r1, [r0, #4]
40008f80:	ea00000d 	b	40008fbc <_tx_thread_system_suspend+0x174>
40008f84:	e59f1494 	ldr	r1, [pc, #1172]	; 40009420 <_tx_thread_system_suspend+0x5d8>
40008f88:	e5911000 	ldr	r1, [r1]
40008f8c:	e59f2490 	ldr	r2, [pc, #1168]	; 40009424 <_tx_thread_system_suspend+0x5dc>
40008f90:	e1510002 	cmp	r1, r2
40008f94:	2a000004 	bcs	40008fac <_tx_thread_system_suspend+0x164>
40008f98:	e3e01000 	mvn	r1, #0
40008f9c:	e5801000 	str	r1, [r0]
40008fa0:	e3a01000 	mov	r1, #0
40008fa4:	e5801004 	str	r1, [r0, #4]
40008fa8:	ea000003 	b	40008fbc <_tx_thread_system_suspend+0x174>
40008fac:	e59f1470 	ldr	r1, [pc, #1136]	; 40009424 <_tx_thread_system_suspend+0x5dc>
40008fb0:	e5801000 	str	r1, [r0]
40008fb4:	e3a01000 	mov	r1, #0
40008fb8:	e5801004 	str	r1, [r0, #4]
40008fbc:	e3a01002 	mov	r1, #2
40008fc0:	e5801008 	str	r1, [r0, #8]
40008fc4:	e5804010 	str	r4, [r0, #16]
40008fc8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008fcc:	e5801014 	str	r1, [r0, #20]
40008fd0:	e28d1004 	add	r1, sp, #4
40008fd4:	e5801018 	str	r1, [r0, #24]
40008fd8:	e59f1448 	ldr	r1, [pc, #1096]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40008fdc:	e5911000 	ldr	r1, [r1]
40008fe0:	e580101c 	str	r1, [r0, #28]
40008fe4:	e2800020 	add	r0, r0, #32
40008fe8:	e59f143c 	ldr	r1, [pc, #1084]	; 4000942c <_tx_thread_system_suspend+0x5e4>
40008fec:	e5911000 	ldr	r1, [r1]
40008ff0:	e1500001 	cmp	r0, r1
40008ff4:	3a000001 	bcc	40009000 <_tx_thread_system_suspend+0x1b8>
40008ff8:	e59f1430 	ldr	r1, [pc, #1072]	; 40009430 <_tx_thread_system_suspend+0x5e8>
40008ffc:	e5910000 	ldr	r0, [r1]
40009000:	e59f1410 	ldr	r1, [pc, #1040]	; 40009418 <_tx_thread_system_suspend+0x5d0>
40009004:	e5810000 	str	r0, [r1]
40009008:	e59f1424 	ldr	r1, [pc, #1060]	; 40009434 <_tx_thread_system_suspend+0x5ec>
4000900c:	e5911000 	ldr	r1, [r1]
40009010:	e5810020 	str	r0, [r1, #32]
40009014:	e35a0000 	cmp	sl, #0
40009018:	0a000000 	beq	40009020 <_tx_thread_system_suspend+0x1d8>
4000901c:	e59ab00c 	ldr	fp, [sl, #12]
40009020:	e3a00000 	mov	r0, #0
40009024:	e5840038 	str	r0, [r4, #56]	; 0x38
40009028:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000902c:	e5940020 	ldr	r0, [r4, #32]
40009030:	e1500004 	cmp	r0, r4
40009034:	0a000029 	beq	400090e0 <_tx_thread_system_suspend+0x298>
40009038:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000903c:	e5941020 	ldr	r1, [r4, #32]
40009040:	e5810024 	str	r0, [r1, #36]	; 0x24
40009044:	e5940020 	ldr	r0, [r4, #32]
40009048:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000904c:	e5810020 	str	r0, [r1, #32]
40009050:	e59f03e0 	ldr	r0, [pc, #992]	; 40009438 <_tx_thread_system_suspend+0x5f0>
40009054:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009058:	e1500004 	cmp	r0, r4
4000905c:	1a0000c4 	bne	40009374 <_tx_thread_system_suspend+0x52c>
40009060:	e59f13d0 	ldr	r1, [pc, #976]	; 40009438 <_tx_thread_system_suspend+0x5f0>
40009064:	e5940020 	ldr	r0, [r4, #32]
40009068:	e7810107 	str	r0, [r1, r7, lsl #2]
4000906c:	e59f03c8 	ldr	r0, [pc, #968]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009070:	e5900000 	ldr	r0, [r0]
40009074:	e3500000 	cmp	r0, #0
40009078:	0a000005 	beq	40009094 <_tx_thread_system_suspend+0x24c>
4000907c:	e59f03b8 	ldr	r0, [pc, #952]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009080:	e5900000 	ldr	r0, [r0]
40009084:	e3a01001 	mov	r1, #1
40009088:	e1c00711 	bic	r0, r0, r1, lsl r7
4000908c:	e59f13a8 	ldr	r1, [pc, #936]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009090:	e5810000 	str	r0, [r1]
40009094:	e59f038c 	ldr	r0, [pc, #908]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009098:	e5900000 	ldr	r0, [r0]
4000909c:	e1540000 	cmp	r4, r0
400090a0:	1a0000b3 	bne	40009374 <_tx_thread_system_suspend+0x52c>
400090a4:	e59f038c 	ldr	r0, [pc, #908]	; 40009438 <_tx_thread_system_suspend+0x5f0>
400090a8:	e59f1390 	ldr	r1, [pc, #912]	; 40009440 <_tx_thread_system_suspend+0x5f8>
400090ac:	e5911000 	ldr	r1, [r1]
400090b0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
400090b4:	e59f136c 	ldr	r1, [pc, #876]	; 40009428 <_tx_thread_system_suspend+0x5e0>
400090b8:	e5810000 	str	r0, [r1]
400090bc:	e35a0000 	cmp	sl, #0
400090c0:	0a0000ab 	beq	40009374 <_tx_thread_system_suspend+0x52c>
400090c4:	e59a000c 	ldr	r0, [sl, #12]
400090c8:	e150000b 	cmp	r0, fp
400090cc:	1a0000a8 	bne	40009374 <_tx_thread_system_suspend+0x52c>
400090d0:	e2810000 	add	r0, r1, #0
400090d4:	e5900000 	ldr	r0, [r0]
400090d8:	e58a001c 	str	r0, [sl, #28]
400090dc:	ea0000a4 	b	40009374 <_tx_thread_system_suspend+0x52c>
400090e0:	e3a00000 	mov	r0, #0
400090e4:	e59f134c 	ldr	r1, [pc, #844]	; 40009438 <_tx_thread_system_suspend+0x5f0>
400090e8:	e7810107 	str	r0, [r1, r7, lsl #2]
400090ec:	e59f0350 	ldr	r0, [pc, #848]	; 40009444 <_tx_thread_system_suspend+0x5fc>
400090f0:	e5900000 	ldr	r0, [r0]
400090f4:	e3a01001 	mov	r1, #1
400090f8:	e1c00711 	bic	r0, r0, r1, lsl r7
400090fc:	e59f1340 	ldr	r1, [pc, #832]	; 40009444 <_tx_thread_system_suspend+0x5fc>
40009100:	e5810000 	str	r0, [r1]
40009104:	e59f0330 	ldr	r0, [pc, #816]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009108:	e5900000 	ldr	r0, [r0]
4000910c:	e3500000 	cmp	r0, #0
40009110:	0a000005 	beq	4000912c <_tx_thread_system_suspend+0x2e4>
40009114:	e59f0320 	ldr	r0, [pc, #800]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009118:	e5900000 	ldr	r0, [r0]
4000911c:	e3a01001 	mov	r1, #1
40009120:	e1c00711 	bic	r0, r0, r1, lsl r7
40009124:	e59f1310 	ldr	r1, [pc, #784]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009128:	e5810000 	str	r0, [r1]
4000912c:	e3a08000 	mov	r8, #0
40009130:	e59f030c 	ldr	r0, [pc, #780]	; 40009444 <_tx_thread_system_suspend+0x5fc>
40009134:	e5909000 	ldr	r9, [r0]
40009138:	e20900ff 	and	r0, r9, #255	; 0xff
4000913c:	e58d0004 	str	r0, [sp, #4]
40009140:	e59d0004 	ldr	r0, [sp, #4]
40009144:	e3500000 	cmp	r0, #0
40009148:	1a00002a 	bne	400091f8 <_tx_thread_system_suspend+0x3b0>
4000914c:	e1a09429 	lsr	r9, r9, #8
40009150:	e20900ff 	and	r0, r9, #255	; 0xff
40009154:	e58d0004 	str	r0, [sp, #4]
40009158:	e2888008 	add	r8, r8, #8
4000915c:	e59d0004 	ldr	r0, [sp, #4]
40009160:	e3500000 	cmp	r0, #0
40009164:	1a000023 	bne	400091f8 <_tx_thread_system_suspend+0x3b0>
40009168:	e1a09429 	lsr	r9, r9, #8
4000916c:	e20900ff 	and	r0, r9, #255	; 0xff
40009170:	e58d0004 	str	r0, [sp, #4]
40009174:	e2888008 	add	r8, r8, #8
40009178:	e59d0004 	ldr	r0, [sp, #4]
4000917c:	e3500000 	cmp	r0, #0
40009180:	1a00001c 	bne	400091f8 <_tx_thread_system_suspend+0x3b0>
40009184:	e1a09429 	lsr	r9, r9, #8
40009188:	e20900ff 	and	r0, r9, #255	; 0xff
4000918c:	e58d0004 	str	r0, [sp, #4]
40009190:	e2888008 	add	r8, r8, #8
40009194:	e59d0004 	ldr	r0, [sp, #4]
40009198:	e3500000 	cmp	r0, #0
4000919c:	1a000015 	bne	400091f8 <_tx_thread_system_suspend+0x3b0>
400091a0:	e3a00020 	mov	r0, #32
400091a4:	e59f1294 	ldr	r1, [pc, #660]	; 40009440 <_tx_thread_system_suspend+0x5f8>
400091a8:	e5810000 	str	r0, [r1]
400091ac:	e3a00000 	mov	r0, #0
400091b0:	e59f1270 	ldr	r1, [pc, #624]	; 40009428 <_tx_thread_system_suspend+0x5e0>
400091b4:	e5810000 	str	r0, [r1]
400091b8:	e35a0000 	cmp	sl, #0
400091bc:	0a000004 	beq	400091d4 <_tx_thread_system_suspend+0x38c>
400091c0:	e59a000c 	ldr	r0, [sl, #12]
400091c4:	e150000b 	cmp	r0, fp
400091c8:	1a000001 	bne	400091d4 <_tx_thread_system_suspend+0x38c>
400091cc:	e3a00000 	mov	r0, #0
400091d0:	e58a001c 	str	r0, [sl, #28]
400091d4:	e121f005 	msr	CPSR_c, r5
400091d8:	e59f0240 	ldr	r0, [pc, #576]	; 40009420 <_tx_thread_system_suspend+0x5d8>
400091dc:	e5900000 	ldr	r0, [r0]
400091e0:	e59f122c 	ldr	r1, [pc, #556]	; 40009414 <_tx_thread_system_suspend+0x5cc>
400091e4:	e5911000 	ldr	r1, [r1]
400091e8:	e1900001 	orrs	r0, r0, r1
400091ec:	1a000000 	bne	400091f4 <_tx_thread_system_suspend+0x3ac>
400091f0:	eb000725 	bl	4000ae8c <_tx_thread_system_return>
400091f4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400091f8:	e59f0248 	ldr	r0, [pc, #584]	; 40009448 <_tx_thread_system_suspend+0x600>
400091fc:	e59d1004 	ldr	r1, [sp, #4]
40009200:	e7d00001 	ldrb	r0, [r0, r1]
40009204:	e0800008 	add	r0, r0, r8
40009208:	e59f1230 	ldr	r1, [pc, #560]	; 40009440 <_tx_thread_system_suspend+0x5f8>
4000920c:	e5810000 	str	r0, [r1]
40009210:	e59f0210 	ldr	r0, [pc, #528]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009214:	e5900000 	ldr	r0, [r0]
40009218:	e1540000 	cmp	r4, r0
4000921c:	1a000054 	bne	40009374 <_tx_thread_system_suspend+0x52c>
40009220:	e59f0210 	ldr	r0, [pc, #528]	; 40009438 <_tx_thread_system_suspend+0x5f0>
40009224:	e5911000 	ldr	r1, [r1]
40009228:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000922c:	e59f11f4 	ldr	r1, [pc, #500]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009230:	e5810000 	str	r0, [r1]
40009234:	e35a0000 	cmp	sl, #0
40009238:	0a000005 	beq	40009254 <_tx_thread_system_suspend+0x40c>
4000923c:	e59a000c 	ldr	r0, [sl, #12]
40009240:	e150000b 	cmp	r0, fp
40009244:	1a000002 	bne	40009254 <_tx_thread_system_suspend+0x40c>
40009248:	e2810000 	add	r0, r1, #0
4000924c:	e5900000 	ldr	r0, [r0]
40009250:	e58a001c 	str	r0, [sl, #28]
40009254:	e59f01e0 	ldr	r0, [pc, #480]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009258:	e5900000 	ldr	r0, [r0]
4000925c:	e3500000 	cmp	r0, #0
40009260:	0a000043 	beq	40009374 <_tx_thread_system_suspend+0x52c>
40009264:	e59f01a8 	ldr	r0, [pc, #424]	; 40009414 <_tx_thread_system_suspend+0x5cc>
40009268:	e5900000 	ldr	r0, [r0]
4000926c:	e2800001 	add	r0, r0, #1
40009270:	e59f119c 	ldr	r1, [pc, #412]	; 40009414 <_tx_thread_system_suspend+0x5cc>
40009274:	e5810000 	str	r0, [r1]
40009278:	e121f005 	msr	CPSR_c, r5
4000927c:	e10f5000 	mrs	r5, CPSR
40009280:	e3856080 	orr	r6, r5, #128	; 0x80
40009284:	e121f006 	msr	CPSR_c, r6
40009288:	e2810000 	add	r0, r1, #0
4000928c:	e5900000 	ldr	r0, [r0]
40009290:	e2400001 	sub	r0, r0, #1
40009294:	e5810000 	str	r0, [r1]
40009298:	e3a08000 	mov	r8, #0
4000929c:	e59f0198 	ldr	r0, [pc, #408]	; 4000943c <_tx_thread_system_suspend+0x5f4>
400092a0:	e5909000 	ldr	r9, [r0]
400092a4:	e20900ff 	and	r0, r9, #255	; 0xff
400092a8:	e58d0004 	str	r0, [sp, #4]
400092ac:	e59d0004 	ldr	r0, [sp, #4]
400092b0:	e3500000 	cmp	r0, #0
400092b4:	1a000011 	bne	40009300 <_tx_thread_system_suspend+0x4b8>
400092b8:	e1a09429 	lsr	r9, r9, #8
400092bc:	e20900ff 	and	r0, r9, #255	; 0xff
400092c0:	e58d0004 	str	r0, [sp, #4]
400092c4:	e2888008 	add	r8, r8, #8
400092c8:	e59d0004 	ldr	r0, [sp, #4]
400092cc:	e3500000 	cmp	r0, #0
400092d0:	1a00000a 	bne	40009300 <_tx_thread_system_suspend+0x4b8>
400092d4:	e1a09429 	lsr	r9, r9, #8
400092d8:	e20900ff 	and	r0, r9, #255	; 0xff
400092dc:	e58d0004 	str	r0, [sp, #4]
400092e0:	e2888008 	add	r8, r8, #8
400092e4:	e59d0004 	ldr	r0, [sp, #4]
400092e8:	e3500000 	cmp	r0, #0
400092ec:	1a000003 	bne	40009300 <_tx_thread_system_suspend+0x4b8>
400092f0:	e1a09429 	lsr	r9, r9, #8
400092f4:	e20900ff 	and	r0, r9, #255	; 0xff
400092f8:	e58d0004 	str	r0, [sp, #4]
400092fc:	e2888008 	add	r8, r8, #8
40009300:	e59f0140 	ldr	r0, [pc, #320]	; 40009448 <_tx_thread_system_suspend+0x600>
40009304:	e59d1004 	ldr	r1, [sp, #4]
40009308:	e7d00001 	ldrb	r0, [r0, r1]
4000930c:	e0807008 	add	r7, r0, r8
40009310:	e59f0120 	ldr	r0, [pc, #288]	; 40009438 <_tx_thread_system_suspend+0x5f0>
40009314:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009318:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000931c:	e59f111c 	ldr	r1, [pc, #284]	; 40009440 <_tx_thread_system_suspend+0x5f8>
40009320:	e5911000 	ldr	r1, [r1]
40009324:	e1500001 	cmp	r0, r1
40009328:	8a000011 	bhi	40009374 <_tx_thread_system_suspend+0x52c>
4000932c:	e59f0104 	ldr	r0, [pc, #260]	; 40009438 <_tx_thread_system_suspend+0x5f0>
40009330:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009334:	e59f10ec 	ldr	r1, [pc, #236]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009338:	e5810000 	str	r0, [r1]
4000933c:	e35a0000 	cmp	sl, #0
40009340:	0a000005 	beq	4000935c <_tx_thread_system_suspend+0x514>
40009344:	e59a000c 	ldr	r0, [sl, #12]
40009348:	e150000b 	cmp	r0, fp
4000934c:	1a000002 	bne	4000935c <_tx_thread_system_suspend+0x514>
40009350:	e2810000 	add	r0, r1, #0
40009354:	e5900000 	ldr	r0, [r0]
40009358:	e58a001c 	str	r0, [sl, #28]
4000935c:	e59f00d8 	ldr	r0, [pc, #216]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009360:	e5900000 	ldr	r0, [r0]
40009364:	e3a01001 	mov	r1, #1
40009368:	e1c00711 	bic	r0, r0, r1, lsl r7
4000936c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000943c <_tx_thread_system_suspend+0x5f4>
40009370:	e5810000 	str	r0, [r1]
40009374:	e121f005 	msr	CPSR_c, r5
40009378:	e59f008c 	ldr	r0, [pc, #140]	; 4000940c <_tx_thread_system_suspend+0x5c4>
4000937c:	e5900000 	ldr	r0, [r0]
40009380:	e59f10a0 	ldr	r1, [pc, #160]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009384:	e5911000 	ldr	r1, [r1]
40009388:	e1500001 	cmp	r0, r1
4000938c:	0a00001d 	beq	40009408 <_tx_thread_system_suspend+0x5c0>
40009390:	e59f0090 	ldr	r0, [pc, #144]	; 40009428 <_tx_thread_system_suspend+0x5e0>
40009394:	e5904000 	ldr	r4, [r0]
40009398:	e5940008 	ldr	r0, [r4, #8]
4000939c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
400093a0:	e1500001 	cmp	r0, r1
400093a4:	2a000001 	bcs	400093b0 <_tx_thread_system_suspend+0x568>
400093a8:	e5940008 	ldr	r0, [r4, #8]
400093ac:	e5840040 	str	r0, [r4, #64]	; 0x40
400093b0:	e594000c 	ldr	r0, [r4, #12]
400093b4:	e5900000 	ldr	r0, [r0]
400093b8:	e59f1050 	ldr	r1, [pc, #80]	; 40009410 <_tx_thread_system_suspend+0x5c8>
400093bc:	e1500001 	cmp	r0, r1
400093c0:	1a000007 	bne	400093e4 <_tx_thread_system_suspend+0x59c>
400093c4:	e5940010 	ldr	r0, [r4, #16]
400093c8:	e5900001 	ldr	r0, [r0, #1]
400093cc:	e1500001 	cmp	r0, r1
400093d0:	1a000003 	bne	400093e4 <_tx_thread_system_suspend+0x59c>
400093d4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
400093d8:	e594100c 	ldr	r1, [r4, #12]
400093dc:	e1500001 	cmp	r0, r1
400093e0:	2a000001 	bcs	400093ec <_tx_thread_system_suspend+0x5a4>
400093e4:	e1a00004 	mov	r0, r4
400093e8:	eb0017fe 	bl	4000f3e8 <_tx_thread_stack_error_handler>
400093ec:	e59f002c 	ldr	r0, [pc, #44]	; 40009420 <_tx_thread_system_suspend+0x5d8>
400093f0:	e5900000 	ldr	r0, [r0]
400093f4:	e59f1018 	ldr	r1, [pc, #24]	; 40009414 <_tx_thread_system_suspend+0x5cc>
400093f8:	e5911000 	ldr	r1, [r1]
400093fc:	e1900001 	orrs	r0, r0, r1
40009400:	1a000000 	bne	40009408 <_tx_thread_system_suspend+0x5c0>
40009404:	eb0006a0 	bl	4000ae8c <_tx_thread_system_return>
40009408:	eaffff79 	b	400091f4 <_tx_thread_system_suspend+0x3ac>
4000940c:	40030e34 	.word	0x40030e34
40009410:	efefefef 	.word	0xefefefef
40009414:	40030e50 	.word	0x40030e50
40009418:	40030ea0 	.word	0x40030ea0
4000941c:	40030ea4 	.word	0x40030ea4
40009420:	40030e2c 	.word	0x40030e2c
40009424:	f0f0f0f0 	.word	0xf0f0f0f0
40009428:	40030e38 	.word	0x40030e38
4000942c:	40030e9c 	.word	0x40030e9c
40009430:	40030e98 	.word	0x40030e98
40009434:	40030e8c 	.word	0x40030e8c
40009438:	40032874 	.word	0x40032874
4000943c:	40030e48 	.word	0x40030e48
40009440:	40030e4c 	.word	0x40030e4c
40009444:	40030e44 	.word	0x40030e44
40009448:	40032774 	.word	0x40032774

4000944c <_tx_time_get>:
4000944c:	e92d4008 	push	{r3, lr}
40009450:	e10f1000 	mrs	r1, CPSR
40009454:	e3812080 	orr	r2, r1, #128	; 0x80
40009458:	e121f002 	msr	CPSR_c, r2
4000945c:	e59f00ec 	ldr	r0, [pc, #236]	; 40009550 <_tx_time_get+0x104>
40009460:	e5900000 	ldr	r0, [r0]
40009464:	e58d0000 	str	r0, [sp]
40009468:	e59f30e4 	ldr	r3, [pc, #228]	; 40009554 <_tx_time_get+0x108>
4000946c:	e5930000 	ldr	r0, [r3]
40009470:	e3500000 	cmp	r0, #0
40009474:	0a000032 	beq	40009544 <_tx_time_get+0xf8>
40009478:	e59f30d8 	ldr	r3, [pc, #216]	; 40009558 <_tx_time_get+0x10c>
4000947c:	e5933000 	ldr	r3, [r3]
40009480:	e2833001 	add	r3, r3, #1
40009484:	e59fc0cc 	ldr	ip, [pc, #204]	; 40009558 <_tx_time_get+0x10c>
40009488:	e58c3000 	str	r3, [ip]
4000948c:	e580300c 	str	r3, [r0, #12]
40009490:	e59f30c4 	ldr	r3, [pc, #196]	; 4000955c <_tx_time_get+0x110>
40009494:	e5933000 	ldr	r3, [r3]
40009498:	e3530000 	cmp	r3, #0
4000949c:	1a000006 	bne	400094bc <_tx_time_get+0x70>
400094a0:	e59f30b8 	ldr	r3, [pc, #184]	; 40009560 <_tx_time_get+0x114>
400094a4:	e5933000 	ldr	r3, [r3]
400094a8:	e5803000 	str	r3, [r0]
400094ac:	e5903000 	ldr	r3, [r0]
400094b0:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400094b4:	e5803004 	str	r3, [r0, #4]
400094b8:	ea00000d 	b	400094f4 <_tx_time_get+0xa8>
400094bc:	e59f3098 	ldr	r3, [pc, #152]	; 4000955c <_tx_time_get+0x110>
400094c0:	e5933000 	ldr	r3, [r3]
400094c4:	e59fc098 	ldr	ip, [pc, #152]	; 40009564 <_tx_time_get+0x118>
400094c8:	e153000c 	cmp	r3, ip
400094cc:	2a000004 	bcs	400094e4 <_tx_time_get+0x98>
400094d0:	e3e03000 	mvn	r3, #0
400094d4:	e5803000 	str	r3, [r0]
400094d8:	e3a03000 	mov	r3, #0
400094dc:	e5803004 	str	r3, [r0, #4]
400094e0:	ea000003 	b	400094f4 <_tx_time_get+0xa8>
400094e4:	e59f3078 	ldr	r3, [pc, #120]	; 40009564 <_tx_time_get+0x118>
400094e8:	e5803000 	str	r3, [r0]
400094ec:	e3a03000 	mov	r3, #0
400094f0:	e5803004 	str	r3, [r0, #4]
400094f4:	e3a03078 	mov	r3, #120	; 0x78
400094f8:	e5803008 	str	r3, [r0, #8]
400094fc:	e59d3000 	ldr	r3, [sp]
40009500:	e5803010 	str	r3, [r0, #16]
40009504:	e580d014 	str	sp, [r0, #20]
40009508:	e3a03000 	mov	r3, #0
4000950c:	e5803018 	str	r3, [r0, #24]
40009510:	e580301c 	str	r3, [r0, #28]
40009514:	e2800020 	add	r0, r0, #32
40009518:	e59f3048 	ldr	r3, [pc, #72]	; 40009568 <_tx_time_get+0x11c>
4000951c:	e5933000 	ldr	r3, [r3]
40009520:	e1500003 	cmp	r0, r3
40009524:	3a000001 	bcc	40009530 <_tx_time_get+0xe4>
40009528:	e59f303c 	ldr	r3, [pc, #60]	; 4000956c <_tx_time_get+0x120>
4000952c:	e5930000 	ldr	r0, [r3]
40009530:	e59f301c 	ldr	r3, [pc, #28]	; 40009554 <_tx_time_get+0x108>
40009534:	e5830000 	str	r0, [r3]
40009538:	e59f3030 	ldr	r3, [pc, #48]	; 40009570 <_tx_time_get+0x124>
4000953c:	e5933000 	ldr	r3, [r3]
40009540:	e5830020 	str	r0, [r3, #32]
40009544:	e121f001 	msr	CPSR_c, r1
40009548:	e59d0000 	ldr	r0, [sp]
4000954c:	e8bd8008 	pop	{r3, pc}
40009550:	40030e5c 	.word	0x40030e5c
40009554:	40030ea0 	.word	0x40030ea0
40009558:	40030ea4 	.word	0x40030ea4
4000955c:	40030e2c 	.word	0x40030e2c
40009560:	40030e34 	.word	0x40030e34
40009564:	f0f0f0f0 	.word	0xf0f0f0f0
40009568:	40030e9c 	.word	0x40030e9c
4000956c:	40030e98 	.word	0x40030e98
40009570:	40030e8c 	.word	0x40030e8c

40009574 <_tx_timer_initialize>:
40009574:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40009578:	e24dd01c 	sub	sp, sp, #28
4000957c:	e3a00000 	mov	r0, #0
40009580:	e59f10d8 	ldr	r1, [pc, #216]	; 40009660 <_tx_timer_initialize+0xec>
40009584:	e5810000 	str	r0, [r1]
40009588:	e59f10d4 	ldr	r1, [pc, #212]	; 40009664 <_tx_timer_initialize+0xf0>
4000958c:	e5810000 	str	r0, [r1]
40009590:	e59f10d0 	ldr	r1, [pc, #208]	; 40009668 <_tx_timer_initialize+0xf4>
40009594:	e5810000 	str	r0, [r1]
40009598:	e59f10cc 	ldr	r1, [pc, #204]	; 4000966c <_tx_timer_initialize+0xf8>
4000959c:	e5810000 	str	r0, [r1]
400095a0:	e3a01080 	mov	r1, #128	; 0x80
400095a4:	e59f00c4 	ldr	r0, [pc, #196]	; 40009670 <_tx_timer_initialize+0xfc>
400095a8:	eb0028e9 	bl	40013954 <__aeabi_memclr4>
400095ac:	e59f00bc 	ldr	r0, [pc, #188]	; 40009670 <_tx_timer_initialize+0xfc>
400095b0:	e59f10bc 	ldr	r1, [pc, #188]	; 40009674 <_tx_timer_initialize+0x100>
400095b4:	e5810000 	str	r0, [r1]
400095b8:	e59f10b8 	ldr	r1, [pc, #184]	; 40009678 <_tx_timer_initialize+0x104>
400095bc:	e5810000 	str	r0, [r1]
400095c0:	e280007c 	add	r0, r0, #124	; 0x7c
400095c4:	e59f10b0 	ldr	r1, [pc, #176]	; 4000967c <_tx_timer_initialize+0x108>
400095c8:	e5810000 	str	r0, [r1]
400095cc:	e2810000 	add	r0, r1, #0
400095d0:	e5900000 	ldr	r0, [r0]
400095d4:	e2800004 	add	r0, r0, #4
400095d8:	e5810000 	str	r0, [r1]
400095dc:	e59f009c 	ldr	r0, [pc, #156]	; 40009680 <_tx_timer_initialize+0x10c>
400095e0:	e59f109c 	ldr	r1, [pc, #156]	; 40009684 <_tx_timer_initialize+0x110>
400095e4:	e5810000 	str	r0, [r1]
400095e8:	e3a00b01 	mov	r0, #1024	; 0x400
400095ec:	e59f1094 	ldr	r1, [pc, #148]	; 40009688 <_tx_timer_initialize+0x114>
400095f0:	e5810000 	str	r0, [r1]
400095f4:	e3a00000 	mov	r0, #0
400095f8:	e59f108c 	ldr	r1, [pc, #140]	; 4000968c <_tx_timer_initialize+0x118>
400095fc:	e5810000 	str	r0, [r1]
40009600:	e3a03000 	mov	r3, #0
40009604:	e2810000 	add	r0, r1, #0
40009608:	e5901000 	ldr	r1, [r0]
4000960c:	e5900000 	ldr	r0, [r0]
40009610:	e28d2008 	add	r2, sp, #8
40009614:	e882000b 	stm	r2, {r0, r1, r3}
40009618:	e59f0068 	ldr	r0, [pc, #104]	; 40009688 <_tx_timer_initialize+0x114>
4000961c:	e58d3014 	str	r3, [sp, #20]
40009620:	e5903000 	ldr	r3, [r0]
40009624:	e59f0058 	ldr	r0, [pc, #88]	; 40009684 <_tx_timer_initialize+0x110>
40009628:	e5902000 	ldr	r2, [r0]
4000962c:	e1cd20f0 	strd	r2, [sp]
40009630:	e59f3058 	ldr	r3, [pc, #88]	; 40009690 <_tx_timer_initialize+0x11c>
40009634:	e59f2058 	ldr	r2, [pc, #88]	; 40009694 <_tx_timer_initialize+0x120>
40009638:	e28f1058 	add	r1, pc, #88	; 0x58
4000963c:	e59f0068 	ldr	r0, [pc, #104]	; 400096ac <_tx_timer_initialize+0x138>
40009640:	eb00143b 	bl	4000e734 <_tx_thread_create>
40009644:	e3a00000 	mov	r0, #0
40009648:	e59f1060 	ldr	r1, [pc, #96]	; 400096b0 <_tx_timer_initialize+0x13c>
4000964c:	e5810000 	str	r0, [r1]
40009650:	e59f105c 	ldr	r1, [pc, #92]	; 400096b4 <_tx_timer_initialize+0x140>
40009654:	e5810000 	str	r0, [r1]
40009658:	e28dd01c 	add	sp, sp, #28
4000965c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009660:	40030e5c 	.word	0x40030e5c
40009664:	40030e60 	.word	0x40030e60
40009668:	40030e64 	.word	0x40030e64
4000966c:	40030e74 	.word	0x40030e74
40009670:	400328f4 	.word	0x400328f4
40009674:	40030e68 	.word	0x40030e68
40009678:	40030e70 	.word	0x40030e70
4000967c:	40030e6c 	.word	0x40030e6c
40009680:	40032a1c 	.word	0x40032a1c
40009684:	40030e80 	.word	0x40030e80
40009688:	40030e84 	.word	0x40030e84
4000968c:	40030e88 	.word	0x40030e88
40009690:	4154494d 	.word	0x4154494d
40009694:	400097a4 	.word	0x400097a4
40009698:	74737953 	.word	0x74737953
4000969c:	54206d65 	.word	0x54206d65
400096a0:	72656d69 	.word	0x72656d69
400096a4:	72685420 	.word	0x72685420
400096a8:	00646165 	.word	0x00646165
400096ac:	40032974 	.word	0x40032974
400096b0:	40030e78 	.word	0x40030e78
400096b4:	40030e7c 	.word	0x40030e7c

400096b8 <_tx_timer_system_activate>:
400096b8:	e92d4010 	push	{r4, lr}
400096bc:	e1a01000 	mov	r1, r0
400096c0:	e10f2000 	mrs	r2, CPSR
400096c4:	e3823080 	orr	r3, r2, #128	; 0x80
400096c8:	e121f003 	msr	CPSR_c, r3
400096cc:	e5910000 	ldr	r0, [r1]
400096d0:	e3500000 	cmp	r0, #0
400096d4:	0a00002c 	beq	4000978c <_tx_timer_system_activate+0xd4>
400096d8:	e5910000 	ldr	r0, [r1]
400096dc:	e3700001 	cmn	r0, #1
400096e0:	0a000029 	beq	4000978c <_tx_timer_system_activate+0xd4>
400096e4:	e5910018 	ldr	r0, [r1, #24]
400096e8:	e3500000 	cmp	r0, #0
400096ec:	1a000026 	bne	4000978c <_tx_timer_system_activate+0xd4>
400096f0:	e5910000 	ldr	r0, [r1]
400096f4:	e3500020 	cmp	r0, #32
400096f8:	9a000001 	bls	40009704 <_tx_timer_system_activate+0x4c>
400096fc:	e3a0e01f 	mov	lr, #31
40009700:	ea000001 	b	4000970c <_tx_timer_system_activate+0x54>
40009704:	e5910000 	ldr	r0, [r1]
40009708:	e240e001 	sub	lr, r0, #1
4000970c:	e59f0084 	ldr	r0, [pc, #132]	; 40009798 <_tx_timer_system_activate+0xe0>
40009710:	e5900000 	ldr	r0, [r0]
40009714:	e080c10e 	add	ip, r0, lr, lsl #2
40009718:	e59f007c 	ldr	r0, [pc, #124]	; 4000979c <_tx_timer_system_activate+0xe4>
4000971c:	e5900000 	ldr	r0, [r0]
40009720:	e15c0000 	cmp	ip, r0
40009724:	3a000006 	bcc	40009744 <_tx_timer_system_activate+0x8c>
40009728:	e59f006c 	ldr	r0, [pc, #108]	; 4000979c <_tx_timer_system_activate+0xe4>
4000972c:	e5900000 	ldr	r0, [r0]
40009730:	e04c0000 	sub	r0, ip, r0
40009734:	e1a00140 	asr	r0, r0, #2
40009738:	e59f4060 	ldr	r4, [pc, #96]	; 400097a0 <_tx_timer_system_activate+0xe8>
4000973c:	e5944000 	ldr	r4, [r4]
40009740:	e084c100 	add	ip, r4, r0, lsl #2
40009744:	e59c0000 	ldr	r0, [ip]
40009748:	e3500000 	cmp	r0, #0
4000974c:	0a00000a 	beq	4000977c <_tx_timer_system_activate+0xc4>
40009750:	e59c0000 	ldr	r0, [ip]
40009754:	e5810010 	str	r0, [r1, #16]
40009758:	e59c0000 	ldr	r0, [ip]
4000975c:	e5900014 	ldr	r0, [r0, #20]
40009760:	e5810014 	str	r0, [r1, #20]
40009764:	e5910014 	ldr	r0, [r1, #20]
40009768:	e5801010 	str	r1, [r0, #16]
4000976c:	e59c0000 	ldr	r0, [ip]
40009770:	e5801014 	str	r1, [r0, #20]
40009774:	e581c018 	str	ip, [r1, #24]
40009778:	ea000003 	b	4000978c <_tx_timer_system_activate+0xd4>
4000977c:	e5811010 	str	r1, [r1, #16]
40009780:	e5811014 	str	r1, [r1, #20]
40009784:	e581c018 	str	ip, [r1, #24]
40009788:	e58c1000 	str	r1, [ip]
4000978c:	e121f002 	msr	CPSR_c, r2
40009790:	e3a00000 	mov	r0, #0
40009794:	e8bd8010 	pop	{r4, pc}
40009798:	40030e70 	.word	0x40030e70
4000979c:	40030e6c 	.word	0x40030e6c
400097a0:	40030e68 	.word	0x40030e68

400097a4 <_tx_timer_thread_entry>:
400097a4:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400097a8:	e1a04000 	mov	r4, r0
400097ac:	e3a09000 	mov	r9, #0
400097b0:	e59f0214 	ldr	r0, [pc, #532]	; 400099cc <_tx_timer_thread_entry+0x228>
400097b4:	e1540000 	cmp	r4, r0
400097b8:	0a000000 	beq	400097c0 <_tx_timer_thread_entry+0x1c>
400097bc:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400097c0:	e3a00000 	mov	r0, #0
400097c4:	e58d0000 	str	r0, [sp]
400097c8:	e1a00000 	nop			; (mov r0, r0)
400097cc:	e10f5000 	mrs	r5, CPSR
400097d0:	e3856080 	orr	r6, r5, #128	; 0x80
400097d4:	e121f006 	msr	CPSR_c, r6
400097d8:	e59f01f0 	ldr	r0, [pc, #496]	; 400099d0 <_tx_timer_thread_entry+0x22c>
400097dc:	e5900000 	ldr	r0, [r0]
400097e0:	e5900000 	ldr	r0, [r0]
400097e4:	e58d0004 	str	r0, [sp, #4]
400097e8:	e59d0004 	ldr	r0, [sp, #4]
400097ec:	e3500000 	cmp	r0, #0
400097f0:	0a000002 	beq	40009800 <_tx_timer_thread_entry+0x5c>
400097f4:	e28d0004 	add	r0, sp, #4
400097f8:	e59d1004 	ldr	r1, [sp, #4]
400097fc:	e5810018 	str	r0, [r1, #24]
40009800:	e3a00000 	mov	r0, #0
40009804:	e59f11c4 	ldr	r1, [pc, #452]	; 400099d0 <_tx_timer_thread_entry+0x22c>
40009808:	e5911000 	ldr	r1, [r1]
4000980c:	e5810000 	str	r0, [r1]
40009810:	e59f01b8 	ldr	r0, [pc, #440]	; 400099d0 <_tx_timer_thread_entry+0x22c>
40009814:	e5900000 	ldr	r0, [r0]
40009818:	e2800004 	add	r0, r0, #4
4000981c:	e59f11ac 	ldr	r1, [pc, #428]	; 400099d0 <_tx_timer_thread_entry+0x22c>
40009820:	e5810000 	str	r0, [r1]
40009824:	e2810000 	add	r0, r1, #0
40009828:	e5900000 	ldr	r0, [r0]
4000982c:	e59f11a0 	ldr	r1, [pc, #416]	; 400099d4 <_tx_timer_thread_entry+0x230>
40009830:	e5911000 	ldr	r1, [r1]
40009834:	e1500001 	cmp	r0, r1
40009838:	1a000003 	bne	4000984c <_tx_timer_thread_entry+0xa8>
4000983c:	e59f0194 	ldr	r0, [pc, #404]	; 400099d8 <_tx_timer_thread_entry+0x234>
40009840:	e5900000 	ldr	r0, [r0]
40009844:	e59f1184 	ldr	r1, [pc, #388]	; 400099d0 <_tx_timer_thread_entry+0x22c>
40009848:	e5810000 	str	r0, [r1]
4000984c:	e3a00000 	mov	r0, #0
40009850:	e59f1184 	ldr	r1, [pc, #388]	; 400099dc <_tx_timer_thread_entry+0x238>
40009854:	e5810000 	str	r0, [r1]
40009858:	e121f005 	msr	CPSR_c, r5
4000985c:	e10f5000 	mrs	r5, CPSR
40009860:	e3856080 	orr	r6, r5, #128	; 0x80
40009864:	e121f006 	msr	CPSR_c, r6
40009868:	ea000040 	b	40009970 <_tx_timer_thread_entry+0x1cc>
4000986c:	e59d7004 	ldr	r7, [sp, #4]
40009870:	e59d0004 	ldr	r0, [sp, #4]
40009874:	e5900010 	ldr	r0, [r0, #16]
40009878:	e1500007 	cmp	r0, r7
4000987c:	1a000002 	bne	4000988c <_tx_timer_thread_entry+0xe8>
40009880:	e3a00000 	mov	r0, #0
40009884:	e58d0004 	str	r0, [sp, #4]
40009888:	ea00000a 	b	400098b8 <_tx_timer_thread_entry+0x114>
4000988c:	e5970014 	ldr	r0, [r7, #20]
40009890:	e5971010 	ldr	r1, [r7, #16]
40009894:	e5810014 	str	r0, [r1, #20]
40009898:	e5970010 	ldr	r0, [r7, #16]
4000989c:	e5971014 	ldr	r1, [r7, #20]
400098a0:	e5810010 	str	r0, [r1, #16]
400098a4:	e28d0004 	add	r0, sp, #4
400098a8:	e5971010 	ldr	r1, [r7, #16]
400098ac:	e5810018 	str	r0, [r1, #24]
400098b0:	e5970010 	ldr	r0, [r7, #16]
400098b4:	e58d0004 	str	r0, [sp, #4]
400098b8:	e5970000 	ldr	r0, [r7]
400098bc:	e3500020 	cmp	r0, #32
400098c0:	9a000006 	bls	400098e0 <_tx_timer_thread_entry+0x13c>
400098c4:	e5970000 	ldr	r0, [r7]
400098c8:	e2400020 	sub	r0, r0, #32
400098cc:	e5870000 	str	r0, [r7]
400098d0:	e3a08000 	mov	r8, #0
400098d4:	e587d018 	str	sp, [r7, #24]
400098d8:	e5877010 	str	r7, [r7, #16]
400098dc:	ea00000b 	b	40009910 <_tx_timer_thread_entry+0x16c>
400098e0:	e5978008 	ldr	r8, [r7, #8]
400098e4:	e597900c 	ldr	r9, [r7, #12]
400098e8:	e5970004 	ldr	r0, [r7, #4]
400098ec:	e5870000 	str	r0, [r7]
400098f0:	e5970000 	ldr	r0, [r7]
400098f4:	e3500000 	cmp	r0, #0
400098f8:	0a000002 	beq	40009908 <_tx_timer_thread_entry+0x164>
400098fc:	e587d018 	str	sp, [r7, #24]
40009900:	e5877010 	str	r7, [r7, #16]
40009904:	ea000001 	b	40009910 <_tx_timer_thread_entry+0x16c>
40009908:	e3a00000 	mov	r0, #0
4000990c:	e5870018 	str	r0, [r7, #24]
40009910:	e121f005 	msr	CPSR_c, r5
40009914:	e3580000 	cmp	r8, #0
40009918:	0a000001 	beq	40009924 <_tx_timer_thread_entry+0x180>
4000991c:	e1a00009 	mov	r0, r9
40009920:	e12fff38 	blx	r8
40009924:	e10f5000 	mrs	r5, CPSR
40009928:	e3856080 	orr	r6, r5, #128	; 0x80
4000992c:	e121f006 	msr	CPSR_c, r6
40009930:	e1a0100d 	mov	r1, sp
40009934:	e5970018 	ldr	r0, [r7, #24]
40009938:	e1500001 	cmp	r0, r1
4000993c:	1a000007 	bne	40009960 <_tx_timer_thread_entry+0x1bc>
40009940:	e3a00000 	mov	r0, #0
40009944:	e5870018 	str	r0, [r7, #24]
40009948:	e121f005 	msr	CPSR_c, r5
4000994c:	e1a00007 	mov	r0, r7
40009950:	ebffff58 	bl	400096b8 <_tx_timer_system_activate>
40009954:	e10f5000 	mrs	r5, CPSR
40009958:	e3856080 	orr	r6, r5, #128	; 0x80
4000995c:	e121f006 	msr	CPSR_c, r6
40009960:	e121f005 	msr	CPSR_c, r5
40009964:	e10f5000 	mrs	r5, CPSR
40009968:	e3856080 	orr	r6, r5, #128	; 0x80
4000996c:	e121f006 	msr	CPSR_c, r6
40009970:	e59d0004 	ldr	r0, [sp, #4]
40009974:	e3500000 	cmp	r0, #0
40009978:	1affffbb 	bne	4000986c <_tx_timer_thread_entry+0xc8>
4000997c:	e59f0058 	ldr	r0, [pc, #88]	; 400099dc <_tx_timer_thread_entry+0x238>
40009980:	e5900000 	ldr	r0, [r0]
40009984:	e3500000 	cmp	r0, #0
40009988:	1a00000d 	bne	400099c4 <_tx_timer_thread_entry+0x220>
4000998c:	e59fa04c 	ldr	sl, [pc, #76]	; 400099e0 <_tx_timer_thread_entry+0x23c>
40009990:	e3a00003 	mov	r0, #3
40009994:	e58a0030 	str	r0, [sl, #48]	; 0x30
40009998:	e3a00001 	mov	r0, #1
4000999c:	e58a0038 	str	r0, [sl, #56]	; 0x38
400099a0:	e59f003c 	ldr	r0, [pc, #60]	; 400099e4 <_tx_timer_thread_entry+0x240>
400099a4:	e5900000 	ldr	r0, [r0]
400099a8:	e2800001 	add	r0, r0, #1
400099ac:	e59f1030 	ldr	r1, [pc, #48]	; 400099e4 <_tx_timer_thread_entry+0x240>
400099b0:	e5810000 	str	r0, [r1]
400099b4:	e121f005 	msr	CPSR_c, r5
400099b8:	e1a0000a 	mov	r0, sl
400099bc:	ebfffd21 	bl	40008e48 <_tx_thread_system_suspend>
400099c0:	ea000000 	b	400099c8 <_tx_timer_thread_entry+0x224>
400099c4:	e121f005 	msr	CPSR_c, r5
400099c8:	eaffff7f 	b	400097cc <_tx_timer_thread_entry+0x28>
400099cc:	4154494d 	.word	0x4154494d
400099d0:	40030e70 	.word	0x40030e70
400099d4:	40030e6c 	.word	0x40030e6c
400099d8:	40030e68 	.word	0x40030e68
400099dc:	40030e74 	.word	0x40030e74
400099e0:	40032974 	.word	0x40032974
400099e4:	40030e50 	.word	0x40030e50

400099e8 <_tx_trace_initialize>:
400099e8:	e3a00000 	mov	r0, #0
400099ec:	e59f102c 	ldr	r1, [pc, #44]	; 40009a20 <_tx_trace_initialize+0x38>
400099f0:	e5810000 	str	r0, [r1]
400099f4:	e59f1028 	ldr	r1, [pc, #40]	; 40009a24 <_tx_trace_initialize+0x3c>
400099f8:	e5810000 	str	r0, [r1]
400099fc:	e59f1024 	ldr	r1, [pc, #36]	; 40009a28 <_tx_trace_initialize+0x40>
40009a00:	e5810000 	str	r0, [r1]
40009a04:	e59f1020 	ldr	r1, [pc, #32]	; 40009a2c <_tx_trace_initialize+0x44>
40009a08:	e5810000 	str	r0, [r1]
40009a0c:	e59f101c 	ldr	r1, [pc, #28]	; 40009a30 <_tx_trace_initialize+0x48>
40009a10:	e5810000 	str	r0, [r1]
40009a14:	e59f1018 	ldr	r1, [pc, #24]	; 40009a34 <_tx_trace_initialize+0x4c>
40009a18:	e5810000 	str	r0, [r1]
40009a1c:	e12fff1e 	bx	lr
40009a20:	40030e8c 	.word	0x40030e8c
40009a24:	40030e90 	.word	0x40030e90
40009a28:	40030e94 	.word	0x40030e94
40009a2c:	40030e98 	.word	0x40030e98
40009a30:	40030e9c 	.word	0x40030e9c
40009a34:	40030ea0 	.word	0x40030ea0

40009a38 <_txe_byte_allocate>:
40009a38:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009a3c:	e1a04000 	mov	r4, r0
40009a40:	e1a05001 	mov	r5, r1
40009a44:	e1a06002 	mov	r6, r2
40009a48:	e1a07003 	mov	r7, r3
40009a4c:	e3540000 	cmp	r4, #0
40009a50:	0a000003 	beq	40009a64 <_txe_byte_allocate+0x2c>
40009a54:	e5940000 	ldr	r0, [r4]
40009a58:	e59f10d4 	ldr	r1, [pc, #212]	; 40009b34 <_txe_byte_allocate+0xfc>
40009a5c:	e1500001 	cmp	r0, r1
40009a60:	0a000001 	beq	40009a6c <_txe_byte_allocate+0x34>
40009a64:	e3a00002 	mov	r0, #2
40009a68:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009a6c:	e3550000 	cmp	r5, #0
40009a70:	1a000001 	bne	40009a7c <_txe_byte_allocate+0x44>
40009a74:	e3a00003 	mov	r0, #3
40009a78:	eafffffa 	b	40009a68 <_txe_byte_allocate+0x30>
40009a7c:	e3560000 	cmp	r6, #0
40009a80:	0a000002 	beq	40009a90 <_txe_byte_allocate+0x58>
40009a84:	e594001c 	ldr	r0, [r4, #28]
40009a88:	e1500006 	cmp	r0, r6
40009a8c:	2a000001 	bcs	40009a98 <_txe_byte_allocate+0x60>
40009a90:	e3a00005 	mov	r0, #5
40009a94:	eafffff3 	b	40009a68 <_txe_byte_allocate+0x30>
40009a98:	e59f0098 	ldr	r0, [pc, #152]	; 40009b38 <_txe_byte_allocate+0x100>
40009a9c:	e5908000 	ldr	r8, [r0]
40009aa0:	e3570000 	cmp	r7, #0
40009aa4:	0a000008 	beq	40009acc <_txe_byte_allocate+0x94>
40009aa8:	e59f008c 	ldr	r0, [pc, #140]	; 40009b3c <_txe_byte_allocate+0x104>
40009aac:	e5900000 	ldr	r0, [r0]
40009ab0:	e3500000 	cmp	r0, #0
40009ab4:	1a000002 	bne	40009ac4 <_txe_byte_allocate+0x8c>
40009ab8:	e59f0080 	ldr	r0, [pc, #128]	; 40009b40 <_txe_byte_allocate+0x108>
40009abc:	e1580000 	cmp	r8, r0
40009ac0:	1a000001 	bne	40009acc <_txe_byte_allocate+0x94>
40009ac4:	e3a00004 	mov	r0, #4
40009ac8:	eaffffe6 	b	40009a68 <_txe_byte_allocate+0x30>
40009acc:	e3580000 	cmp	r8, #0
40009ad0:	0a000008 	beq	40009af8 <_txe_byte_allocate+0xc0>
40009ad4:	e59f0064 	ldr	r0, [pc, #100]	; 40009b40 <_txe_byte_allocate+0x108>
40009ad8:	e1580000 	cmp	r8, r0
40009adc:	0a000003 	beq	40009af0 <_txe_byte_allocate+0xb8>
40009ae0:	e59f0054 	ldr	r0, [pc, #84]	; 40009b3c <_txe_byte_allocate+0x104>
40009ae4:	e5900000 	ldr	r0, [r0]
40009ae8:	e3500000 	cmp	r0, #0
40009aec:	0a000008 	beq	40009b14 <_txe_byte_allocate+0xdc>
40009af0:	e3a00013 	mov	r0, #19
40009af4:	eaffffdb 	b	40009a68 <_txe_byte_allocate+0x30>
40009af8:	e59f003c 	ldr	r0, [pc, #60]	; 40009b3c <_txe_byte_allocate+0x104>
40009afc:	e5900000 	ldr	r0, [r0]
40009b00:	e59f103c 	ldr	r1, [pc, #60]	; 40009b44 <_txe_byte_allocate+0x10c>
40009b04:	e1500001 	cmp	r0, r1
40009b08:	2a000001 	bcs	40009b14 <_txe_byte_allocate+0xdc>
40009b0c:	e3a00013 	mov	r0, #19
40009b10:	eaffffd4 	b	40009a68 <_txe_byte_allocate+0x30>
40009b14:	e1a03007 	mov	r3, r7
40009b18:	e1a02006 	mov	r2, r6
40009b1c:	e1a01005 	mov	r1, r5
40009b20:	e1a00004 	mov	r0, r4
40009b24:	eb0005bf 	bl	4000b228 <_tx_byte_allocate>
40009b28:	e1a09000 	mov	r9, r0
40009b2c:	e1a00009 	mov	r0, r9
40009b30:	eaffffcc 	b	40009a68 <_txe_byte_allocate+0x30>
40009b34:	42595445 	.word	0x42595445
40009b38:	40030e34 	.word	0x40030e34
40009b3c:	40030e2c 	.word	0x40030e2c
40009b40:	40032974 	.word	0x40032974
40009b44:	f0f0f0f0 	.word	0xf0f0f0f0

40009b48 <_txe_byte_pool_create>:
40009b48:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009b4c:	e1a04000 	mov	r4, r0
40009b50:	e1a05001 	mov	r5, r1
40009b54:	e1a06002 	mov	r6, r2
40009b58:	e1a07003 	mov	r7, r3
40009b5c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009b60:	e3540000 	cmp	r4, #0
40009b64:	0a000001 	beq	40009b70 <_txe_byte_pool_create+0x28>
40009b68:	e3580034 	cmp	r8, #52	; 0x34
40009b6c:	0a000001 	beq	40009b78 <_txe_byte_pool_create+0x30>
40009b70:	e3a00002 	mov	r0, #2
40009b74:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009b78:	e10f9000 	mrs	r9, CPSR
40009b7c:	e389a080 	orr	sl, r9, #128	; 0x80
40009b80:	e121f00a 	msr	CPSR_c, sl
40009b84:	e59f0130 	ldr	r0, [pc, #304]	; 40009cbc <_txe_byte_pool_create+0x174>
40009b88:	e5900000 	ldr	r0, [r0]
40009b8c:	e2800001 	add	r0, r0, #1
40009b90:	e59f1124 	ldr	r1, [pc, #292]	; 40009cbc <_txe_byte_pool_create+0x174>
40009b94:	e5810000 	str	r0, [r1]
40009b98:	e121f009 	msr	CPSR_c, r9
40009b9c:	e59f011c 	ldr	r0, [pc, #284]	; 40009cc0 <_txe_byte_pool_create+0x178>
40009ba0:	e5900000 	ldr	r0, [r0]
40009ba4:	e58d0004 	str	r0, [sp, #4]
40009ba8:	e3a0b000 	mov	fp, #0
40009bac:	ea000007 	b	40009bd0 <_txe_byte_pool_create+0x88>
40009bb0:	e59d0004 	ldr	r0, [sp, #4]
40009bb4:	e1540000 	cmp	r4, r0
40009bb8:	1a000000 	bne	40009bc0 <_txe_byte_pool_create+0x78>
40009bbc:	ea000007 	b	40009be0 <_txe_byte_pool_create+0x98>
40009bc0:	e59d0004 	ldr	r0, [sp, #4]
40009bc4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009bc8:	e58d0004 	str	r0, [sp, #4]
40009bcc:	e28bb001 	add	fp, fp, #1
40009bd0:	e59f00ec 	ldr	r0, [pc, #236]	; 40009cc4 <_txe_byte_pool_create+0x17c>
40009bd4:	e5900000 	ldr	r0, [r0]
40009bd8:	e15b0000 	cmp	fp, r0
40009bdc:	3afffff3 	bcc	40009bb0 <_txe_byte_pool_create+0x68>
40009be0:	e1a00000 	nop			; (mov r0, r0)
40009be4:	e10f9000 	mrs	r9, CPSR
40009be8:	e389a080 	orr	sl, r9, #128	; 0x80
40009bec:	e121f00a 	msr	CPSR_c, sl
40009bf0:	e59f00c4 	ldr	r0, [pc, #196]	; 40009cbc <_txe_byte_pool_create+0x174>
40009bf4:	e5900000 	ldr	r0, [r0]
40009bf8:	e2400001 	sub	r0, r0, #1
40009bfc:	e59f10b8 	ldr	r1, [pc, #184]	; 40009cbc <_txe_byte_pool_create+0x174>
40009c00:	e5810000 	str	r0, [r1]
40009c04:	e121f009 	msr	CPSR_c, r9
40009c08:	eb001609 	bl	4000f434 <_tx_thread_system_preempt_check>
40009c0c:	e59d0004 	ldr	r0, [sp, #4]
40009c10:	e1540000 	cmp	r4, r0
40009c14:	1a000001 	bne	40009c20 <_txe_byte_pool_create+0xd8>
40009c18:	e3a00002 	mov	r0, #2
40009c1c:	eaffffd4 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009c20:	e3560000 	cmp	r6, #0
40009c24:	1a000001 	bne	40009c30 <_txe_byte_pool_create+0xe8>
40009c28:	e3a00003 	mov	r0, #3
40009c2c:	eaffffd0 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009c30:	e3570064 	cmp	r7, #100	; 0x64
40009c34:	2a000001 	bcs	40009c40 <_txe_byte_pool_create+0xf8>
40009c38:	e3a00005 	mov	r0, #5
40009c3c:	eaffffcc 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009c40:	e59f0080 	ldr	r0, [pc, #128]	; 40009cc8 <_txe_byte_pool_create+0x180>
40009c44:	e5900000 	ldr	r0, [r0]
40009c48:	e58d0000 	str	r0, [sp]
40009c4c:	e59d0000 	ldr	r0, [sp]
40009c50:	e3500000 	cmp	r0, #0
40009c54:	0a000009 	beq	40009c80 <_txe_byte_pool_create+0x138>
40009c58:	e59f106c 	ldr	r1, [pc, #108]	; 40009ccc <_txe_byte_pool_create+0x184>
40009c5c:	e59d0000 	ldr	r0, [sp]
40009c60:	e1500001 	cmp	r0, r1
40009c64:	0a000003 	beq	40009c78 <_txe_byte_pool_create+0x130>
40009c68:	e59f0060 	ldr	r0, [pc, #96]	; 40009cd0 <_txe_byte_pool_create+0x188>
40009c6c:	e5900000 	ldr	r0, [r0]
40009c70:	e3500000 	cmp	r0, #0
40009c74:	0a000008 	beq	40009c9c <_txe_byte_pool_create+0x154>
40009c78:	e3a00013 	mov	r0, #19
40009c7c:	eaffffbc 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009c80:	e59f0048 	ldr	r0, [pc, #72]	; 40009cd0 <_txe_byte_pool_create+0x188>
40009c84:	e5900000 	ldr	r0, [r0]
40009c88:	e59f1044 	ldr	r1, [pc, #68]	; 40009cd4 <_txe_byte_pool_create+0x18c>
40009c8c:	e1500001 	cmp	r0, r1
40009c90:	2a000001 	bcs	40009c9c <_txe_byte_pool_create+0x154>
40009c94:	e3a00013 	mov	r0, #19
40009c98:	eaffffb5 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009c9c:	e1a03007 	mov	r3, r7
40009ca0:	e1a02006 	mov	r2, r6
40009ca4:	e1a01005 	mov	r1, r5
40009ca8:	e1a00004 	mov	r0, r4
40009cac:	eb000643 	bl	4000b5c0 <_tx_byte_pool_create>
40009cb0:	e58d0008 	str	r0, [sp, #8]
40009cb4:	e59d0008 	ldr	r0, [sp, #8]
40009cb8:	eaffffad 	b	40009b74 <_txe_byte_pool_create+0x2c>
40009cbc:	40030e50 	.word	0x40030e50
40009cc0:	40030ed0 	.word	0x40030ed0
40009cc4:	40030ed4 	.word	0x40030ed4
40009cc8:	40030e34 	.word	0x40030e34
40009ccc:	40032974 	.word	0x40032974
40009cd0:	40030e2c 	.word	0x40030e2c
40009cd4:	f0f0f0f0 	.word	0xf0f0f0f0

40009cd8 <_txe_byte_pool_delete>:
40009cd8:	e92d4070 	push	{r4, r5, r6, lr}
40009cdc:	e1a04000 	mov	r4, r0
40009ce0:	e3540000 	cmp	r4, #0
40009ce4:	0a000003 	beq	40009cf8 <_txe_byte_pool_delete+0x20>
40009ce8:	e5940000 	ldr	r0, [r4]
40009cec:	e59f1054 	ldr	r1, [pc, #84]	; 40009d48 <_txe_byte_pool_delete+0x70>
40009cf0:	e1500001 	cmp	r0, r1
40009cf4:	0a000001 	beq	40009d00 <_txe_byte_pool_delete+0x28>
40009cf8:	e3a00002 	mov	r0, #2
40009cfc:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d00:	e59f0044 	ldr	r0, [pc, #68]	; 40009d4c <_txe_byte_pool_delete+0x74>
40009d04:	e5905000 	ldr	r5, [r0]
40009d08:	e3550000 	cmp	r5, #0
40009d0c:	0a000006 	beq	40009d2c <_txe_byte_pool_delete+0x54>
40009d10:	e59f0038 	ldr	r0, [pc, #56]	; 40009d50 <_txe_byte_pool_delete+0x78>
40009d14:	e5900000 	ldr	r0, [r0]
40009d18:	e3500000 	cmp	r0, #0
40009d1c:	1a000002 	bne	40009d2c <_txe_byte_pool_delete+0x54>
40009d20:	e59f002c 	ldr	r0, [pc, #44]	; 40009d54 <_txe_byte_pool_delete+0x7c>
40009d24:	e1550000 	cmp	r5, r0
40009d28:	1a000001 	bne	40009d34 <_txe_byte_pool_delete+0x5c>
40009d2c:	e3a00013 	mov	r0, #19
40009d30:	eafffff1 	b	40009cfc <_txe_byte_pool_delete+0x24>
40009d34:	e1a00004 	mov	r0, r4
40009d38:	eb0006b6 	bl	4000b818 <_tx_byte_pool_delete>
40009d3c:	e1a06000 	mov	r6, r0
40009d40:	e1a00006 	mov	r0, r6
40009d44:	eaffffec 	b	40009cfc <_txe_byte_pool_delete+0x24>
40009d48:	42595445 	.word	0x42595445
40009d4c:	40030e34 	.word	0x40030e34
40009d50:	40030e2c 	.word	0x40030e2c
40009d54:	40032974 	.word	0x40032974

40009d58 <_txe_byte_release>:
40009d58:	e92d4070 	push	{r4, r5, r6, lr}
40009d5c:	e1a04000 	mov	r4, r0
40009d60:	e3540000 	cmp	r4, #0
40009d64:	1a000001 	bne	40009d70 <_txe_byte_release+0x18>
40009d68:	e3a00003 	mov	r0, #3
40009d6c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d70:	e59f005c 	ldr	r0, [pc, #92]	; 40009dd4 <_txe_byte_release+0x7c>
40009d74:	e5905000 	ldr	r5, [r0]
40009d78:	e3550000 	cmp	r5, #0
40009d7c:	0a000008 	beq	40009da4 <_txe_byte_release+0x4c>
40009d80:	e59f0050 	ldr	r0, [pc, #80]	; 40009dd8 <_txe_byte_release+0x80>
40009d84:	e1550000 	cmp	r5, r0
40009d88:	0a000003 	beq	40009d9c <_txe_byte_release+0x44>
40009d8c:	e59f0048 	ldr	r0, [pc, #72]	; 40009ddc <_txe_byte_release+0x84>
40009d90:	e5900000 	ldr	r0, [r0]
40009d94:	e3500000 	cmp	r0, #0
40009d98:	0a000008 	beq	40009dc0 <_txe_byte_release+0x68>
40009d9c:	e3a00013 	mov	r0, #19
40009da0:	eafffff1 	b	40009d6c <_txe_byte_release+0x14>
40009da4:	e59f0030 	ldr	r0, [pc, #48]	; 40009ddc <_txe_byte_release+0x84>
40009da8:	e5900000 	ldr	r0, [r0]
40009dac:	e59f102c 	ldr	r1, [pc, #44]	; 40009de0 <_txe_byte_release+0x88>
40009db0:	e1500001 	cmp	r0, r1
40009db4:	2a000001 	bcs	40009dc0 <_txe_byte_release+0x68>
40009db8:	e3a00013 	mov	r0, #19
40009dbc:	eaffffea 	b	40009d6c <_txe_byte_release+0x14>
40009dc0:	e1a00004 	mov	r0, r4
40009dc4:	eb000794 	bl	4000bc1c <_tx_byte_release>
40009dc8:	e1a06000 	mov	r6, r0
40009dcc:	e1a00006 	mov	r0, r6
40009dd0:	eaffffe5 	b	40009d6c <_txe_byte_release+0x14>
40009dd4:	40030e34 	.word	0x40030e34
40009dd8:	40032974 	.word	0x40032974
40009ddc:	40030e2c 	.word	0x40030e2c
40009de0:	f0f0f0f0 	.word	0xf0f0f0f0

40009de4 <_txe_event_flags_create>:
40009de4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009de8:	e1a04000 	mov	r4, r0
40009dec:	e1a05001 	mov	r5, r1
40009df0:	e1a06002 	mov	r6, r2
40009df4:	e3540000 	cmp	r4, #0
40009df8:	0a000001 	beq	40009e04 <_txe_event_flags_create+0x20>
40009dfc:	e3560028 	cmp	r6, #40	; 0x28
40009e00:	0a000001 	beq	40009e0c <_txe_event_flags_create+0x28>
40009e04:	e3a00006 	mov	r0, #6
40009e08:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009e0c:	e10f7000 	mrs	r7, CPSR
40009e10:	e3878080 	orr	r8, r7, #128	; 0x80
40009e14:	e121f008 	msr	CPSR_c, r8
40009e18:	e59f00e8 	ldr	r0, [pc, #232]	; 40009f08 <_txe_event_flags_create+0x124>
40009e1c:	e5900000 	ldr	r0, [r0]
40009e20:	e2800001 	add	r0, r0, #1
40009e24:	e59f10dc 	ldr	r1, [pc, #220]	; 40009f08 <_txe_event_flags_create+0x124>
40009e28:	e5810000 	str	r0, [r1]
40009e2c:	e121f007 	msr	CPSR_c, r7
40009e30:	e59f00d4 	ldr	r0, [pc, #212]	; 40009f0c <_txe_event_flags_create+0x128>
40009e34:	e590a000 	ldr	sl, [r0]
40009e38:	e3a09000 	mov	r9, #0
40009e3c:	ea000004 	b	40009e54 <_txe_event_flags_create+0x70>
40009e40:	e154000a 	cmp	r4, sl
40009e44:	1a000000 	bne	40009e4c <_txe_event_flags_create+0x68>
40009e48:	ea000005 	b	40009e64 <_txe_event_flags_create+0x80>
40009e4c:	e59aa018 	ldr	sl, [sl, #24]
40009e50:	e2899001 	add	r9, r9, #1
40009e54:	e59f00b4 	ldr	r0, [pc, #180]	; 40009f10 <_txe_event_flags_create+0x12c>
40009e58:	e5900000 	ldr	r0, [r0]
40009e5c:	e1590000 	cmp	r9, r0
40009e60:	3afffff6 	bcc	40009e40 <_txe_event_flags_create+0x5c>
40009e64:	e1a00000 	nop			; (mov r0, r0)
40009e68:	e10f7000 	mrs	r7, CPSR
40009e6c:	e3878080 	orr	r8, r7, #128	; 0x80
40009e70:	e121f008 	msr	CPSR_c, r8
40009e74:	e59f008c 	ldr	r0, [pc, #140]	; 40009f08 <_txe_event_flags_create+0x124>
40009e78:	e5900000 	ldr	r0, [r0]
40009e7c:	e2400001 	sub	r0, r0, #1
40009e80:	e59f1080 	ldr	r1, [pc, #128]	; 40009f08 <_txe_event_flags_create+0x124>
40009e84:	e5810000 	str	r0, [r1]
40009e88:	e121f007 	msr	CPSR_c, r7
40009e8c:	eb001568 	bl	4000f434 <_tx_thread_system_preempt_check>
40009e90:	e154000a 	cmp	r4, sl
40009e94:	1a000001 	bne	40009ea0 <_txe_event_flags_create+0xbc>
40009e98:	e3a00006 	mov	r0, #6
40009e9c:	eaffffd9 	b	40009e08 <_txe_event_flags_create+0x24>
40009ea0:	e59f006c 	ldr	r0, [pc, #108]	; 40009f14 <_txe_event_flags_create+0x130>
40009ea4:	e590b000 	ldr	fp, [r0]
40009ea8:	e35b0000 	cmp	fp, #0
40009eac:	0a000008 	beq	40009ed4 <_txe_event_flags_create+0xf0>
40009eb0:	e59f0060 	ldr	r0, [pc, #96]	; 40009f18 <_txe_event_flags_create+0x134>
40009eb4:	e15b0000 	cmp	fp, r0
40009eb8:	0a000003 	beq	40009ecc <_txe_event_flags_create+0xe8>
40009ebc:	e59f0058 	ldr	r0, [pc, #88]	; 40009f1c <_txe_event_flags_create+0x138>
40009ec0:	e5900000 	ldr	r0, [r0]
40009ec4:	e3500000 	cmp	r0, #0
40009ec8:	0a000008 	beq	40009ef0 <_txe_event_flags_create+0x10c>
40009ecc:	e3a00013 	mov	r0, #19
40009ed0:	eaffffcc 	b	40009e08 <_txe_event_flags_create+0x24>
40009ed4:	e59f0040 	ldr	r0, [pc, #64]	; 40009f1c <_txe_event_flags_create+0x138>
40009ed8:	e5900000 	ldr	r0, [r0]
40009edc:	e59f103c 	ldr	r1, [pc, #60]	; 40009f20 <_txe_event_flags_create+0x13c>
40009ee0:	e1500001 	cmp	r0, r1
40009ee4:	2a000001 	bcs	40009ef0 <_txe_event_flags_create+0x10c>
40009ee8:	e3a00013 	mov	r0, #19
40009eec:	eaffffc5 	b	40009e08 <_txe_event_flags_create+0x24>
40009ef0:	e1a01005 	mov	r1, r5
40009ef4:	e1a00004 	mov	r0, r4
40009ef8:	eb0007f9 	bl	4000bee4 <_tx_event_flags_create>
40009efc:	e58d0000 	str	r0, [sp]
40009f00:	e59d0000 	ldr	r0, [sp]
40009f04:	eaffffbf 	b	40009e08 <_txe_event_flags_create+0x24>
40009f08:	40030e50 	.word	0x40030e50
40009f0c:	40030eb8 	.word	0x40030eb8
40009f10:	40030ebc 	.word	0x40030ebc
40009f14:	40030e34 	.word	0x40030e34
40009f18:	40032974 	.word	0x40032974
40009f1c:	40030e2c 	.word	0x40030e2c
40009f20:	f0f0f0f0 	.word	0xf0f0f0f0

40009f24 <_txe_event_flags_delete>:
40009f24:	e92d4070 	push	{r4, r5, r6, lr}
40009f28:	e1a04000 	mov	r4, r0
40009f2c:	e3540000 	cmp	r4, #0
40009f30:	0a000003 	beq	40009f44 <_txe_event_flags_delete+0x20>
40009f34:	e5940000 	ldr	r0, [r4]
40009f38:	e59f1054 	ldr	r1, [pc, #84]	; 40009f94 <_txe_event_flags_delete+0x70>
40009f3c:	e1500001 	cmp	r0, r1
40009f40:	0a000001 	beq	40009f4c <_txe_event_flags_delete+0x28>
40009f44:	e3a00006 	mov	r0, #6
40009f48:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f4c:	e59f0044 	ldr	r0, [pc, #68]	; 40009f98 <_txe_event_flags_delete+0x74>
40009f50:	e5905000 	ldr	r5, [r0]
40009f54:	e3550000 	cmp	r5, #0
40009f58:	0a000006 	beq	40009f78 <_txe_event_flags_delete+0x54>
40009f5c:	e59f0038 	ldr	r0, [pc, #56]	; 40009f9c <_txe_event_flags_delete+0x78>
40009f60:	e5900000 	ldr	r0, [r0]
40009f64:	e3500000 	cmp	r0, #0
40009f68:	1a000002 	bne	40009f78 <_txe_event_flags_delete+0x54>
40009f6c:	e59f002c 	ldr	r0, [pc, #44]	; 40009fa0 <_txe_event_flags_delete+0x7c>
40009f70:	e1550000 	cmp	r5, r0
40009f74:	1a000001 	bne	40009f80 <_txe_event_flags_delete+0x5c>
40009f78:	e3a00013 	mov	r0, #19
40009f7c:	eafffff1 	b	40009f48 <_txe_event_flags_delete+0x24>
40009f80:	e1a00004 	mov	r0, r4
40009f84:	eb000849 	bl	4000c0b0 <_tx_event_flags_delete>
40009f88:	e1a06000 	mov	r6, r0
40009f8c:	e1a00006 	mov	r0, r6
40009f90:	eaffffec 	b	40009f48 <_txe_event_flags_delete+0x24>
40009f94:	4456444e 	.word	0x4456444e
40009f98:	40030e34 	.word	0x40030e34
40009f9c:	40030e2c 	.word	0x40030e2c
40009fa0:	40032974 	.word	0x40032974

40009fa4 <_txe_event_flags_get>:
40009fa4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009fa8:	e1a04000 	mov	r4, r0
40009fac:	e1a05001 	mov	r5, r1
40009fb0:	e1a06002 	mov	r6, r2
40009fb4:	e1a08003 	mov	r8, r3
40009fb8:	e59d9020 	ldr	r9, [sp, #32]
40009fbc:	e3540000 	cmp	r4, #0
40009fc0:	0a000003 	beq	40009fd4 <_txe_event_flags_get+0x30>
40009fc4:	e5940000 	ldr	r0, [r4]
40009fc8:	e59f1084 	ldr	r1, [pc, #132]	; 4000a054 <_txe_event_flags_get+0xb0>
40009fcc:	e1500001 	cmp	r0, r1
40009fd0:	0a000001 	beq	40009fdc <_txe_event_flags_get+0x38>
40009fd4:	e3a00006 	mov	r0, #6
40009fd8:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009fdc:	e3580000 	cmp	r8, #0
40009fe0:	1a000001 	bne	40009fec <_txe_event_flags_get+0x48>
40009fe4:	e3a00003 	mov	r0, #3
40009fe8:	eafffffa 	b	40009fd8 <_txe_event_flags_get+0x34>
40009fec:	e3590000 	cmp	r9, #0
40009ff0:	0a00000a 	beq	4000a020 <_txe_event_flags_get+0x7c>
40009ff4:	e59f005c 	ldr	r0, [pc, #92]	; 4000a058 <_txe_event_flags_get+0xb4>
40009ff8:	e5900000 	ldr	r0, [r0]
40009ffc:	e3500000 	cmp	r0, #0
4000a000:	1a000004 	bne	4000a018 <_txe_event_flags_get+0x74>
4000a004:	e59f0050 	ldr	r0, [pc, #80]	; 4000a05c <_txe_event_flags_get+0xb8>
4000a008:	e5900000 	ldr	r0, [r0]
4000a00c:	e59f104c 	ldr	r1, [pc, #76]	; 4000a060 <_txe_event_flags_get+0xbc>
4000a010:	e1500001 	cmp	r0, r1
4000a014:	1a000001 	bne	4000a020 <_txe_event_flags_get+0x7c>
4000a018:	e3a00004 	mov	r0, #4
4000a01c:	eaffffed 	b	40009fd8 <_txe_event_flags_get+0x34>
4000a020:	e3560003 	cmp	r6, #3
4000a024:	9a000001 	bls	4000a030 <_txe_event_flags_get+0x8c>
4000a028:	e3a00008 	mov	r0, #8
4000a02c:	eaffffe9 	b	40009fd8 <_txe_event_flags_get+0x34>
4000a030:	e1a03008 	mov	r3, r8
4000a034:	e1a02006 	mov	r2, r6
4000a038:	e1a01005 	mov	r1, r5
4000a03c:	e1a00004 	mov	r0, r4
4000a040:	e58d9000 	str	r9, [sp]
4000a044:	eb0008ac 	bl	4000c2fc <_tx_event_flags_get>
4000a048:	e1a07000 	mov	r7, r0
4000a04c:	e1a00007 	mov	r0, r7
4000a050:	eaffffe0 	b	40009fd8 <_txe_event_flags_get+0x34>
4000a054:	4456444e 	.word	0x4456444e
4000a058:	40030e2c 	.word	0x40030e2c
4000a05c:	40030e34 	.word	0x40030e34
4000a060:	40032974 	.word	0x40032974

4000a064 <_txe_event_flags_set>:
4000a064:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a068:	e1a04000 	mov	r4, r0
4000a06c:	e1a05001 	mov	r5, r1
4000a070:	e1a06002 	mov	r6, r2
4000a074:	e3540000 	cmp	r4, #0
4000a078:	0a000003 	beq	4000a08c <_txe_event_flags_set+0x28>
4000a07c:	e5940000 	ldr	r0, [r4]
4000a080:	e59f1040 	ldr	r1, [pc, #64]	; 4000a0c8 <_txe_event_flags_set+0x64>
4000a084:	e1500001 	cmp	r0, r1
4000a088:	0a000001 	beq	4000a094 <_txe_event_flags_set+0x30>
4000a08c:	e3a00006 	mov	r0, #6
4000a090:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a094:	e3560002 	cmp	r6, #2
4000a098:	0a000003 	beq	4000a0ac <_txe_event_flags_set+0x48>
4000a09c:	e3560000 	cmp	r6, #0
4000a0a0:	0a000001 	beq	4000a0ac <_txe_event_flags_set+0x48>
4000a0a4:	e3a00008 	mov	r0, #8
4000a0a8:	eafffff8 	b	4000a090 <_txe_event_flags_set+0x2c>
4000a0ac:	e1a02006 	mov	r2, r6
4000a0b0:	e1a01005 	mov	r1, r5
4000a0b4:	e1a00004 	mov	r0, r4
4000a0b8:	eb000943 	bl	4000c5cc <_tx_event_flags_set>
4000a0bc:	e1a07000 	mov	r7, r0
4000a0c0:	e1a00007 	mov	r0, r7
4000a0c4:	eafffff1 	b	4000a090 <_txe_event_flags_set+0x2c>
4000a0c8:	4456444e 	.word	0x4456444e

4000a0cc <_txe_mutex_create>:
4000a0cc:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000a0d0:	e1a04000 	mov	r4, r0
4000a0d4:	e1a05001 	mov	r5, r1
4000a0d8:	e1a06002 	mov	r6, r2
4000a0dc:	e1a07003 	mov	r7, r3
4000a0e0:	e3540000 	cmp	r4, #0
4000a0e4:	0a000001 	beq	4000a0f0 <_txe_mutex_create+0x24>
4000a0e8:	e3570038 	cmp	r7, #56	; 0x38
4000a0ec:	0a000001 	beq	4000a0f8 <_txe_mutex_create+0x2c>
4000a0f0:	e3a0001c 	mov	r0, #28
4000a0f4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000a0f8:	e10f0000 	mrs	r0, CPSR
4000a0fc:	e58d0004 	str	r0, [sp, #4]
4000a100:	e59d0004 	ldr	r0, [sp, #4]
4000a104:	e3808080 	orr	r8, r0, #128	; 0x80
4000a108:	e121f008 	msr	CPSR_c, r8
4000a10c:	e59f0114 	ldr	r0, [pc, #276]	; 4000a228 <_txe_mutex_create+0x15c>
4000a110:	e5900000 	ldr	r0, [r0]
4000a114:	e2800001 	add	r0, r0, #1
4000a118:	e59f1108 	ldr	r1, [pc, #264]	; 4000a228 <_txe_mutex_create+0x15c>
4000a11c:	e5810000 	str	r0, [r1]
4000a120:	e59d0004 	ldr	r0, [sp, #4]
4000a124:	e121f000 	msr	CPSR_c, r0
4000a128:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a22c <_txe_mutex_create+0x160>
4000a12c:	e590a000 	ldr	sl, [r0]
4000a130:	e3a09000 	mov	r9, #0
4000a134:	ea000004 	b	4000a14c <_txe_mutex_create+0x80>
4000a138:	e154000a 	cmp	r4, sl
4000a13c:	1a000000 	bne	4000a144 <_txe_mutex_create+0x78>
4000a140:	ea000005 	b	4000a15c <_txe_mutex_create+0x90>
4000a144:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
4000a148:	e2899001 	add	r9, r9, #1
4000a14c:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a230 <_txe_mutex_create+0x164>
4000a150:	e5900000 	ldr	r0, [r0]
4000a154:	e1590000 	cmp	r9, r0
4000a158:	3afffff6 	bcc	4000a138 <_txe_mutex_create+0x6c>
4000a15c:	e1a00000 	nop			; (mov r0, r0)
4000a160:	e10f0000 	mrs	r0, CPSR
4000a164:	e58d0004 	str	r0, [sp, #4]
4000a168:	e59d0004 	ldr	r0, [sp, #4]
4000a16c:	e3808080 	orr	r8, r0, #128	; 0x80
4000a170:	e121f008 	msr	CPSR_c, r8
4000a174:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a228 <_txe_mutex_create+0x15c>
4000a178:	e5900000 	ldr	r0, [r0]
4000a17c:	e2400001 	sub	r0, r0, #1
4000a180:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a228 <_txe_mutex_create+0x15c>
4000a184:	e5810000 	str	r0, [r1]
4000a188:	e59d0004 	ldr	r0, [sp, #4]
4000a18c:	e121f000 	msr	CPSR_c, r0
4000a190:	eb0014a7 	bl	4000f434 <_tx_thread_system_preempt_check>
4000a194:	e154000a 	cmp	r4, sl
4000a198:	1a000001 	bne	4000a1a4 <_txe_mutex_create+0xd8>
4000a19c:	e3a0001c 	mov	r0, #28
4000a1a0:	eaffffd3 	b	4000a0f4 <_txe_mutex_create+0x28>
4000a1a4:	e3560001 	cmp	r6, #1
4000a1a8:	0a000003 	beq	4000a1bc <_txe_mutex_create+0xf0>
4000a1ac:	e3560000 	cmp	r6, #0
4000a1b0:	0a000001 	beq	4000a1bc <_txe_mutex_create+0xf0>
4000a1b4:	e3a0001f 	mov	r0, #31
4000a1b8:	eaffffcd 	b	4000a0f4 <_txe_mutex_create+0x28>
4000a1bc:	e59f0070 	ldr	r0, [pc, #112]	; 4000a234 <_txe_mutex_create+0x168>
4000a1c0:	e590b000 	ldr	fp, [r0]
4000a1c4:	e35b0000 	cmp	fp, #0
4000a1c8:	0a000008 	beq	4000a1f0 <_txe_mutex_create+0x124>
4000a1cc:	e59f0064 	ldr	r0, [pc, #100]	; 4000a238 <_txe_mutex_create+0x16c>
4000a1d0:	e15b0000 	cmp	fp, r0
4000a1d4:	0a000003 	beq	4000a1e8 <_txe_mutex_create+0x11c>
4000a1d8:	e59f005c 	ldr	r0, [pc, #92]	; 4000a23c <_txe_mutex_create+0x170>
4000a1dc:	e5900000 	ldr	r0, [r0]
4000a1e0:	e3500000 	cmp	r0, #0
4000a1e4:	0a000008 	beq	4000a20c <_txe_mutex_create+0x140>
4000a1e8:	e3a00013 	mov	r0, #19
4000a1ec:	eaffffc0 	b	4000a0f4 <_txe_mutex_create+0x28>
4000a1f0:	e59f0044 	ldr	r0, [pc, #68]	; 4000a23c <_txe_mutex_create+0x170>
4000a1f4:	e5900000 	ldr	r0, [r0]
4000a1f8:	e59f1040 	ldr	r1, [pc, #64]	; 4000a240 <_txe_mutex_create+0x174>
4000a1fc:	e1500001 	cmp	r0, r1
4000a200:	2a000001 	bcs	4000a20c <_txe_mutex_create+0x140>
4000a204:	e3a00013 	mov	r0, #19
4000a208:	eaffffb9 	b	4000a0f4 <_txe_mutex_create+0x28>
4000a20c:	e1a02006 	mov	r2, r6
4000a210:	e1a01005 	mov	r1, r5
4000a214:	e1a00004 	mov	r0, r4
4000a218:	eb000a8f 	bl	4000cc5c <_tx_mutex_create>
4000a21c:	e58d0000 	str	r0, [sp]
4000a220:	e59d0000 	ldr	r0, [sp]
4000a224:	eaffffb2 	b	4000a0f4 <_txe_mutex_create+0x28>
4000a228:	40030e50 	.word	0x40030e50
4000a22c:	40030ec0 	.word	0x40030ec0
4000a230:	40030ec4 	.word	0x40030ec4
4000a234:	40030e34 	.word	0x40030e34
4000a238:	40032974 	.word	0x40032974
4000a23c:	40030e2c 	.word	0x40030e2c
4000a240:	f0f0f0f0 	.word	0xf0f0f0f0

4000a244 <_txe_mutex_delete>:
4000a244:	e92d4070 	push	{r4, r5, r6, lr}
4000a248:	e1a04000 	mov	r4, r0
4000a24c:	e3540000 	cmp	r4, #0
4000a250:	0a000003 	beq	4000a264 <_txe_mutex_delete+0x20>
4000a254:	e5940000 	ldr	r0, [r4]
4000a258:	e59f1054 	ldr	r1, [pc, #84]	; 4000a2b4 <_txe_mutex_delete+0x70>
4000a25c:	e1500001 	cmp	r0, r1
4000a260:	0a000001 	beq	4000a26c <_txe_mutex_delete+0x28>
4000a264:	e3a0001c 	mov	r0, #28
4000a268:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a26c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a2b8 <_txe_mutex_delete+0x74>
4000a270:	e5905000 	ldr	r5, [r0]
4000a274:	e3550000 	cmp	r5, #0
4000a278:	0a000006 	beq	4000a298 <_txe_mutex_delete+0x54>
4000a27c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a2bc <_txe_mutex_delete+0x78>
4000a280:	e5900000 	ldr	r0, [r0]
4000a284:	e3500000 	cmp	r0, #0
4000a288:	1a000002 	bne	4000a298 <_txe_mutex_delete+0x54>
4000a28c:	e59f002c 	ldr	r0, [pc, #44]	; 4000a2c0 <_txe_mutex_delete+0x7c>
4000a290:	e1550000 	cmp	r5, r0
4000a294:	1a000001 	bne	4000a2a0 <_txe_mutex_delete+0x5c>
4000a298:	e3a00013 	mov	r0, #19
4000a29c:	eafffff1 	b	4000a268 <_txe_mutex_delete+0x24>
4000a2a0:	e1a00004 	mov	r0, r4
4000a2a4:	eb000ae2 	bl	4000ce34 <_tx_mutex_delete>
4000a2a8:	e1a06000 	mov	r6, r0
4000a2ac:	e1a00006 	mov	r0, r6
4000a2b0:	eaffffec 	b	4000a268 <_txe_mutex_delete+0x24>
4000a2b4:	4d555445 	.word	0x4d555445
4000a2b8:	40030e34 	.word	0x40030e34
4000a2bc:	40030e2c 	.word	0x40030e2c
4000a2c0:	40032974 	.word	0x40032974

4000a2c4 <_txe_mutex_get>:
4000a2c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a2c8:	e1a04000 	mov	r4, r0
4000a2cc:	e1a05001 	mov	r5, r1
4000a2d0:	e3540000 	cmp	r4, #0
4000a2d4:	0a000003 	beq	4000a2e8 <_txe_mutex_get+0x24>
4000a2d8:	e5940000 	ldr	r0, [r4]
4000a2dc:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a384 <_txe_mutex_get+0xc0>
4000a2e0:	e1500001 	cmp	r0, r1
4000a2e4:	0a000001 	beq	4000a2f0 <_txe_mutex_get+0x2c>
4000a2e8:	e3a0001c 	mov	r0, #28
4000a2ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a2f0:	e59f0090 	ldr	r0, [pc, #144]	; 4000a388 <_txe_mutex_get+0xc4>
4000a2f4:	e5906000 	ldr	r6, [r0]
4000a2f8:	e3550000 	cmp	r5, #0
4000a2fc:	0a000008 	beq	4000a324 <_txe_mutex_get+0x60>
4000a300:	e59f0084 	ldr	r0, [pc, #132]	; 4000a38c <_txe_mutex_get+0xc8>
4000a304:	e5900000 	ldr	r0, [r0]
4000a308:	e3500000 	cmp	r0, #0
4000a30c:	1a000002 	bne	4000a31c <_txe_mutex_get+0x58>
4000a310:	e59f0078 	ldr	r0, [pc, #120]	; 4000a390 <_txe_mutex_get+0xcc>
4000a314:	e1560000 	cmp	r6, r0
4000a318:	1a000001 	bne	4000a324 <_txe_mutex_get+0x60>
4000a31c:	e3a00004 	mov	r0, #4
4000a320:	eafffff1 	b	4000a2ec <_txe_mutex_get+0x28>
4000a324:	e3560000 	cmp	r6, #0
4000a328:	0a000008 	beq	4000a350 <_txe_mutex_get+0x8c>
4000a32c:	e59f005c 	ldr	r0, [pc, #92]	; 4000a390 <_txe_mutex_get+0xcc>
4000a330:	e1560000 	cmp	r6, r0
4000a334:	0a000003 	beq	4000a348 <_txe_mutex_get+0x84>
4000a338:	e59f004c 	ldr	r0, [pc, #76]	; 4000a38c <_txe_mutex_get+0xc8>
4000a33c:	e5900000 	ldr	r0, [r0]
4000a340:	e3500000 	cmp	r0, #0
4000a344:	0a000008 	beq	4000a36c <_txe_mutex_get+0xa8>
4000a348:	e3a00013 	mov	r0, #19
4000a34c:	eaffffe6 	b	4000a2ec <_txe_mutex_get+0x28>
4000a350:	e59f0034 	ldr	r0, [pc, #52]	; 4000a38c <_txe_mutex_get+0xc8>
4000a354:	e5900000 	ldr	r0, [r0]
4000a358:	e59f1034 	ldr	r1, [pc, #52]	; 4000a394 <_txe_mutex_get+0xd0>
4000a35c:	e1500001 	cmp	r0, r1
4000a360:	2a000001 	bcs	4000a36c <_txe_mutex_get+0xa8>
4000a364:	e3a00013 	mov	r0, #19
4000a368:	eaffffdf 	b	4000a2ec <_txe_mutex_get+0x28>
4000a36c:	e1a01005 	mov	r1, r5
4000a370:	e1a00004 	mov	r0, r4
4000a374:	eb000b65 	bl	4000d110 <_tx_mutex_get>
4000a378:	e1a07000 	mov	r7, r0
4000a37c:	e1a00007 	mov	r0, r7
4000a380:	eaffffd9 	b	4000a2ec <_txe_mutex_get+0x28>
4000a384:	4d555445 	.word	0x4d555445
4000a388:	40030e34 	.word	0x40030e34
4000a38c:	40030e2c 	.word	0x40030e2c
4000a390:	40032974 	.word	0x40032974
4000a394:	f0f0f0f0 	.word	0xf0f0f0f0

4000a398 <_txe_mutex_put>:
4000a398:	e92d4070 	push	{r4, r5, r6, lr}
4000a39c:	e1a04000 	mov	r4, r0
4000a3a0:	e3540000 	cmp	r4, #0
4000a3a4:	0a000003 	beq	4000a3b8 <_txe_mutex_put+0x20>
4000a3a8:	e5940000 	ldr	r0, [r4]
4000a3ac:	e59f1070 	ldr	r1, [pc, #112]	; 4000a424 <_txe_mutex_put+0x8c>
4000a3b0:	e1500001 	cmp	r0, r1
4000a3b4:	0a000001 	beq	4000a3c0 <_txe_mutex_put+0x28>
4000a3b8:	e3a0001c 	mov	r0, #28
4000a3bc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a3c0:	e59f0060 	ldr	r0, [pc, #96]	; 4000a428 <_txe_mutex_put+0x90>
4000a3c4:	e5905000 	ldr	r5, [r0]
4000a3c8:	e3550000 	cmp	r5, #0
4000a3cc:	0a000008 	beq	4000a3f4 <_txe_mutex_put+0x5c>
4000a3d0:	e59f0054 	ldr	r0, [pc, #84]	; 4000a42c <_txe_mutex_put+0x94>
4000a3d4:	e1550000 	cmp	r5, r0
4000a3d8:	0a000003 	beq	4000a3ec <_txe_mutex_put+0x54>
4000a3dc:	e59f004c 	ldr	r0, [pc, #76]	; 4000a430 <_txe_mutex_put+0x98>
4000a3e0:	e5900000 	ldr	r0, [r0]
4000a3e4:	e3500000 	cmp	r0, #0
4000a3e8:	0a000008 	beq	4000a410 <_txe_mutex_put+0x78>
4000a3ec:	e3a00013 	mov	r0, #19
4000a3f0:	eafffff1 	b	4000a3bc <_txe_mutex_put+0x24>
4000a3f4:	e59f0034 	ldr	r0, [pc, #52]	; 4000a430 <_txe_mutex_put+0x98>
4000a3f8:	e5900000 	ldr	r0, [r0]
4000a3fc:	e59f1030 	ldr	r1, [pc, #48]	; 4000a434 <_txe_mutex_put+0x9c>
4000a400:	e1500001 	cmp	r0, r1
4000a404:	2a000001 	bcs	4000a410 <_txe_mutex_put+0x78>
4000a408:	e3a00013 	mov	r0, #19
4000a40c:	eaffffea 	b	4000a3bc <_txe_mutex_put+0x24>
4000a410:	e1a00004 	mov	r0, r4
4000a414:	eb000c1c 	bl	4000d48c <_tx_mutex_put>
4000a418:	e1a06000 	mov	r6, r0
4000a41c:	e1a00006 	mov	r0, r6
4000a420:	eaffffe5 	b	4000a3bc <_txe_mutex_put+0x24>
4000a424:	4d555445 	.word	0x4d555445
4000a428:	40030e34 	.word	0x40030e34
4000a42c:	40032974 	.word	0x40032974
4000a430:	40030e2c 	.word	0x40030e2c
4000a434:	f0f0f0f0 	.word	0xf0f0f0f0

4000a438 <_txe_queue_create>:
4000a438:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a43c:	e24dd014 	sub	sp, sp, #20
4000a440:	e1a04000 	mov	r4, r0
4000a444:	e1a05002 	mov	r5, r2
4000a448:	e1a06003 	mov	r6, r3
4000a44c:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a450:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a454:	e3540000 	cmp	r4, #0
4000a458:	0a000001 	beq	4000a464 <_txe_queue_create+0x2c>
4000a45c:	e358003c 	cmp	r8, #60	; 0x3c
4000a460:	0a000002 	beq	4000a470 <_txe_queue_create+0x38>
4000a464:	e3a00009 	mov	r0, #9
4000a468:	e28dd024 	add	sp, sp, #36	; 0x24
4000a46c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a470:	e10f9000 	mrs	r9, CPSR
4000a474:	e389a080 	orr	sl, r9, #128	; 0x80
4000a478:	e121f00a 	msr	CPSR_c, sl
4000a47c:	e59f0150 	ldr	r0, [pc, #336]	; 4000a5d4 <_txe_queue_create+0x19c>
4000a480:	e5900000 	ldr	r0, [r0]
4000a484:	e2800001 	add	r0, r0, #1
4000a488:	e59f1144 	ldr	r1, [pc, #324]	; 4000a5d4 <_txe_queue_create+0x19c>
4000a48c:	e5810000 	str	r0, [r1]
4000a490:	e121f009 	msr	CPSR_c, r9
4000a494:	e59f013c 	ldr	r0, [pc, #316]	; 4000a5d8 <_txe_queue_create+0x1a0>
4000a498:	e5900000 	ldr	r0, [r0]
4000a49c:	e58d0008 	str	r0, [sp, #8]
4000a4a0:	e3a00000 	mov	r0, #0
4000a4a4:	e58d000c 	str	r0, [sp, #12]
4000a4a8:	ea000009 	b	4000a4d4 <_txe_queue_create+0x9c>
4000a4ac:	e59d0008 	ldr	r0, [sp, #8]
4000a4b0:	e1540000 	cmp	r4, r0
4000a4b4:	1a000000 	bne	4000a4bc <_txe_queue_create+0x84>
4000a4b8:	ea00000a 	b	4000a4e8 <_txe_queue_create+0xb0>
4000a4bc:	e59d0008 	ldr	r0, [sp, #8]
4000a4c0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a4c4:	e58d0008 	str	r0, [sp, #8]
4000a4c8:	e59d000c 	ldr	r0, [sp, #12]
4000a4cc:	e2800001 	add	r0, r0, #1
4000a4d0:	e58d000c 	str	r0, [sp, #12]
4000a4d4:	e59f1100 	ldr	r1, [pc, #256]	; 4000a5dc <_txe_queue_create+0x1a4>
4000a4d8:	e59d000c 	ldr	r0, [sp, #12]
4000a4dc:	e5911000 	ldr	r1, [r1]
4000a4e0:	e1500001 	cmp	r0, r1
4000a4e4:	3afffff0 	bcc	4000a4ac <_txe_queue_create+0x74>
4000a4e8:	e1a00000 	nop			; (mov r0, r0)
4000a4ec:	e10f9000 	mrs	r9, CPSR
4000a4f0:	e389a080 	orr	sl, r9, #128	; 0x80
4000a4f4:	e121f00a 	msr	CPSR_c, sl
4000a4f8:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a5d4 <_txe_queue_create+0x19c>
4000a4fc:	e5900000 	ldr	r0, [r0]
4000a500:	e2400001 	sub	r0, r0, #1
4000a504:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a5d4 <_txe_queue_create+0x19c>
4000a508:	e5810000 	str	r0, [r1]
4000a50c:	e121f009 	msr	CPSR_c, r9
4000a510:	eb0013c7 	bl	4000f434 <_tx_thread_system_preempt_check>
4000a514:	e59d0008 	ldr	r0, [sp, #8]
4000a518:	e1540000 	cmp	r4, r0
4000a51c:	1a000001 	bne	4000a528 <_txe_queue_create+0xf0>
4000a520:	e3a00009 	mov	r0, #9
4000a524:	eaffffcf 	b	4000a468 <_txe_queue_create+0x30>
4000a528:	e3560000 	cmp	r6, #0
4000a52c:	1a000001 	bne	4000a538 <_txe_queue_create+0x100>
4000a530:	e3a00003 	mov	r0, #3
4000a534:	eaffffcb 	b	4000a468 <_txe_queue_create+0x30>
4000a538:	e3550000 	cmp	r5, #0
4000a53c:	0a000001 	beq	4000a548 <_txe_queue_create+0x110>
4000a540:	e3550010 	cmp	r5, #16
4000a544:	9a000001 	bls	4000a550 <_txe_queue_create+0x118>
4000a548:	e3a00005 	mov	r0, #5
4000a54c:	eaffffc5 	b	4000a468 <_txe_queue_create+0x30>
4000a550:	e1550127 	cmp	r5, r7, lsr #2
4000a554:	9a000001 	bls	4000a560 <_txe_queue_create+0x128>
4000a558:	e3a00005 	mov	r0, #5
4000a55c:	eaffffc1 	b	4000a468 <_txe_queue_create+0x30>
4000a560:	e59f0078 	ldr	r0, [pc, #120]	; 4000a5e0 <_txe_queue_create+0x1a8>
4000a564:	e590b000 	ldr	fp, [r0]
4000a568:	e35b0000 	cmp	fp, #0
4000a56c:	0a000008 	beq	4000a594 <_txe_queue_create+0x15c>
4000a570:	e59f006c 	ldr	r0, [pc, #108]	; 4000a5e4 <_txe_queue_create+0x1ac>
4000a574:	e15b0000 	cmp	fp, r0
4000a578:	0a000003 	beq	4000a58c <_txe_queue_create+0x154>
4000a57c:	e59f0064 	ldr	r0, [pc, #100]	; 4000a5e8 <_txe_queue_create+0x1b0>
4000a580:	e5900000 	ldr	r0, [r0]
4000a584:	e3500000 	cmp	r0, #0
4000a588:	0a000008 	beq	4000a5b0 <_txe_queue_create+0x178>
4000a58c:	e3a00013 	mov	r0, #19
4000a590:	eaffffb4 	b	4000a468 <_txe_queue_create+0x30>
4000a594:	e59f004c 	ldr	r0, [pc, #76]	; 4000a5e8 <_txe_queue_create+0x1b0>
4000a598:	e5900000 	ldr	r0, [r0]
4000a59c:	e59f1048 	ldr	r1, [pc, #72]	; 4000a5ec <_txe_queue_create+0x1b4>
4000a5a0:	e1500001 	cmp	r0, r1
4000a5a4:	2a000001 	bcs	4000a5b0 <_txe_queue_create+0x178>
4000a5a8:	e3a00013 	mov	r0, #19
4000a5ac:	eaffffad 	b	4000a468 <_txe_queue_create+0x30>
4000a5b0:	e1a03006 	mov	r3, r6
4000a5b4:	e1a02005 	mov	r2, r5
4000a5b8:	e58d7000 	str	r7, [sp]
4000a5bc:	e1a00004 	mov	r0, r4
4000a5c0:	e59d1018 	ldr	r1, [sp, #24]
4000a5c4:	eb000ce5 	bl	4000d960 <_tx_queue_create>
4000a5c8:	e58d0010 	str	r0, [sp, #16]
4000a5cc:	e59d0010 	ldr	r0, [sp, #16]
4000a5d0:	eaffffa4 	b	4000a468 <_txe_queue_create+0x30>
4000a5d4:	40030e50 	.word	0x40030e50
4000a5d8:	40030eb0 	.word	0x40030eb0
4000a5dc:	40030eb4 	.word	0x40030eb4
4000a5e0:	40030e34 	.word	0x40030e34
4000a5e4:	40032974 	.word	0x40032974
4000a5e8:	40030e2c 	.word	0x40030e2c
4000a5ec:	f0f0f0f0 	.word	0xf0f0f0f0

4000a5f0 <_txe_queue_front_send>:
4000a5f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a5f4:	e1a04000 	mov	r4, r0
4000a5f8:	e1a05001 	mov	r5, r1
4000a5fc:	e1a06002 	mov	r6, r2
4000a600:	e3540000 	cmp	r4, #0
4000a604:	0a000003 	beq	4000a618 <_txe_queue_front_send+0x28>
4000a608:	e5940000 	ldr	r0, [r4]
4000a60c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a680 <_txe_queue_front_send+0x90>
4000a610:	e1500001 	cmp	r0, r1
4000a614:	0a000001 	beq	4000a620 <_txe_queue_front_send+0x30>
4000a618:	e3a00009 	mov	r0, #9
4000a61c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a620:	e3550000 	cmp	r5, #0
4000a624:	1a000001 	bne	4000a630 <_txe_queue_front_send+0x40>
4000a628:	e3a00003 	mov	r0, #3
4000a62c:	eafffffa 	b	4000a61c <_txe_queue_front_send+0x2c>
4000a630:	e3560000 	cmp	r6, #0
4000a634:	0a00000a 	beq	4000a664 <_txe_queue_front_send+0x74>
4000a638:	e59f0044 	ldr	r0, [pc, #68]	; 4000a684 <_txe_queue_front_send+0x94>
4000a63c:	e5900000 	ldr	r0, [r0]
4000a640:	e3500000 	cmp	r0, #0
4000a644:	1a000004 	bne	4000a65c <_txe_queue_front_send+0x6c>
4000a648:	e59f0038 	ldr	r0, [pc, #56]	; 4000a688 <_txe_queue_front_send+0x98>
4000a64c:	e5900000 	ldr	r0, [r0]
4000a650:	e59f1034 	ldr	r1, [pc, #52]	; 4000a68c <_txe_queue_front_send+0x9c>
4000a654:	e1500001 	cmp	r0, r1
4000a658:	1a000001 	bne	4000a664 <_txe_queue_front_send+0x74>
4000a65c:	e3a00004 	mov	r0, #4
4000a660:	eaffffed 	b	4000a61c <_txe_queue_front_send+0x2c>
4000a664:	e1a02006 	mov	r2, r6
4000a668:	e1a01005 	mov	r1, r5
4000a66c:	e1a00004 	mov	r0, r4
4000a670:	eb000d3d 	bl	4000db6c <_tx_queue_front_send>
4000a674:	e1a07000 	mov	r7, r0
4000a678:	e1a00007 	mov	r0, r7
4000a67c:	eaffffe6 	b	4000a61c <_txe_queue_front_send+0x2c>
4000a680:	51554555 	.word	0x51554555
4000a684:	40030e2c 	.word	0x40030e2c
4000a688:	40030e34 	.word	0x40030e34
4000a68c:	40032974 	.word	0x40032974

4000a690 <_txe_queue_receive>:
4000a690:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a694:	e1a04000 	mov	r4, r0
4000a698:	e1a05001 	mov	r5, r1
4000a69c:	e1a06002 	mov	r6, r2
4000a6a0:	e3540000 	cmp	r4, #0
4000a6a4:	0a000003 	beq	4000a6b8 <_txe_queue_receive+0x28>
4000a6a8:	e5940000 	ldr	r0, [r4]
4000a6ac:	e59f106c 	ldr	r1, [pc, #108]	; 4000a720 <_txe_queue_receive+0x90>
4000a6b0:	e1500001 	cmp	r0, r1
4000a6b4:	0a000001 	beq	4000a6c0 <_txe_queue_receive+0x30>
4000a6b8:	e3a00009 	mov	r0, #9
4000a6bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a6c0:	e3550000 	cmp	r5, #0
4000a6c4:	1a000001 	bne	4000a6d0 <_txe_queue_receive+0x40>
4000a6c8:	e3a00003 	mov	r0, #3
4000a6cc:	eafffffa 	b	4000a6bc <_txe_queue_receive+0x2c>
4000a6d0:	e3560000 	cmp	r6, #0
4000a6d4:	0a00000a 	beq	4000a704 <_txe_queue_receive+0x74>
4000a6d8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a724 <_txe_queue_receive+0x94>
4000a6dc:	e5900000 	ldr	r0, [r0]
4000a6e0:	e3500000 	cmp	r0, #0
4000a6e4:	1a000004 	bne	4000a6fc <_txe_queue_receive+0x6c>
4000a6e8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a728 <_txe_queue_receive+0x98>
4000a6ec:	e5900000 	ldr	r0, [r0]
4000a6f0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a72c <_txe_queue_receive+0x9c>
4000a6f4:	e1500001 	cmp	r0, r1
4000a6f8:	1a000001 	bne	4000a704 <_txe_queue_receive+0x74>
4000a6fc:	e3a00004 	mov	r0, #4
4000a700:	eaffffed 	b	4000a6bc <_txe_queue_receive+0x2c>
4000a704:	e1a02006 	mov	r2, r6
4000a708:	e1a01005 	mov	r1, r5
4000a70c:	e1a00004 	mov	r0, r4
4000a710:	eb000e04 	bl	4000df28 <_tx_queue_receive>
4000a714:	e1a07000 	mov	r7, r0
4000a718:	e1a00007 	mov	r0, r7
4000a71c:	eaffffe6 	b	4000a6bc <_txe_queue_receive+0x2c>
4000a720:	51554555 	.word	0x51554555
4000a724:	40030e2c 	.word	0x40030e2c
4000a728:	40030e34 	.word	0x40030e34
4000a72c:	40032974 	.word	0x40032974

4000a730 <_txe_queue_send>:
4000a730:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a734:	e1a04000 	mov	r4, r0
4000a738:	e1a05001 	mov	r5, r1
4000a73c:	e1a06002 	mov	r6, r2
4000a740:	e3540000 	cmp	r4, #0
4000a744:	0a000003 	beq	4000a758 <_txe_queue_send+0x28>
4000a748:	e5940000 	ldr	r0, [r4]
4000a74c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a7c0 <_txe_queue_send+0x90>
4000a750:	e1500001 	cmp	r0, r1
4000a754:	0a000001 	beq	4000a760 <_txe_queue_send+0x30>
4000a758:	e3a00009 	mov	r0, #9
4000a75c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a760:	e3550000 	cmp	r5, #0
4000a764:	1a000001 	bne	4000a770 <_txe_queue_send+0x40>
4000a768:	e3a00003 	mov	r0, #3
4000a76c:	eafffffa 	b	4000a75c <_txe_queue_send+0x2c>
4000a770:	e3560000 	cmp	r6, #0
4000a774:	0a00000a 	beq	4000a7a4 <_txe_queue_send+0x74>
4000a778:	e59f0044 	ldr	r0, [pc, #68]	; 4000a7c4 <_txe_queue_send+0x94>
4000a77c:	e5900000 	ldr	r0, [r0]
4000a780:	e3500000 	cmp	r0, #0
4000a784:	1a000004 	bne	4000a79c <_txe_queue_send+0x6c>
4000a788:	e59f0038 	ldr	r0, [pc, #56]	; 4000a7c8 <_txe_queue_send+0x98>
4000a78c:	e5900000 	ldr	r0, [r0]
4000a790:	e59f1034 	ldr	r1, [pc, #52]	; 4000a7cc <_txe_queue_send+0x9c>
4000a794:	e1500001 	cmp	r0, r1
4000a798:	1a000001 	bne	4000a7a4 <_txe_queue_send+0x74>
4000a79c:	e3a00004 	mov	r0, #4
4000a7a0:	eaffffed 	b	4000a75c <_txe_queue_send+0x2c>
4000a7a4:	e1a02006 	mov	r2, r6
4000a7a8:	e1a01005 	mov	r1, r5
4000a7ac:	e1a00004 	mov	r0, r4
4000a7b0:	eb000ef4 	bl	4000e388 <_tx_queue_send>
4000a7b4:	e1a07000 	mov	r7, r0
4000a7b8:	e1a00007 	mov	r0, r7
4000a7bc:	eaffffe6 	b	4000a75c <_txe_queue_send+0x2c>
4000a7c0:	51554555 	.word	0x51554555
4000a7c4:	40030e2c 	.word	0x40030e2c
4000a7c8:	40030e34 	.word	0x40030e34
4000a7cc:	40032974 	.word	0x40032974

4000a7d0 <_txe_thread_create>:
4000a7d0:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a7d4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a7d8:	e1a04000 	mov	r4, r0
4000a7dc:	e1a05002 	mov	r5, r2
4000a7e0:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a7e4:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a7e8:	e3540000 	cmp	r4, #0
4000a7ec:	0a000002 	beq	4000a7fc <_txe_thread_create+0x2c>
4000a7f0:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a7f4:	e35000a8 	cmp	r0, #168	; 0xa8
4000a7f8:	0a000002 	beq	4000a808 <_txe_thread_create+0x38>
4000a7fc:	e3a0000e 	mov	r0, #14
4000a800:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a804:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a808:	e10f0000 	mrs	r0, CPSR
4000a80c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a810:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a814:	e3800080 	orr	r0, r0, #128	; 0x80
4000a818:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a81c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a820:	e121f000 	msr	CPSR_c, r0
4000a824:	e59f01ec 	ldr	r0, [pc, #492]	; 4000aa18 <_txe_thread_create+0x248>
4000a828:	e5900000 	ldr	r0, [r0]
4000a82c:	e2800001 	add	r0, r0, #1
4000a830:	e59f11e0 	ldr	r1, [pc, #480]	; 4000aa18 <_txe_thread_create+0x248>
4000a834:	e5810000 	str	r0, [r1]
4000a838:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a83c:	e121f000 	msr	CPSR_c, r0
4000a840:	e59f01d4 	ldr	r0, [pc, #468]	; 4000aa1c <_txe_thread_create+0x24c>
4000a844:	e5900000 	ldr	r0, [r0]
4000a848:	e58d0018 	str	r0, [sp, #24]
4000a84c:	e2470001 	sub	r0, r7, #1
4000a850:	e080b006 	add	fp, r0, r6
4000a854:	e3a00000 	mov	r0, #0
4000a858:	e58d001c 	str	r0, [sp, #28]
4000a85c:	ea00001d 	b	4000a8d8 <_txe_thread_create+0x108>
4000a860:	e59d0018 	ldr	r0, [sp, #24]
4000a864:	e1540000 	cmp	r4, r0
4000a868:	1a000000 	bne	4000a870 <_txe_thread_create+0xa0>
4000a86c:	ea00001e 	b	4000a8ec <_txe_thread_create+0x11c>
4000a870:	e59d0018 	ldr	r0, [sp, #24]
4000a874:	e590000c 	ldr	r0, [r0, #12]
4000a878:	e1500006 	cmp	r0, r6
4000a87c:	8a000005 	bhi	4000a898 <_txe_thread_create+0xc8>
4000a880:	e59d0018 	ldr	r0, [sp, #24]
4000a884:	e5900010 	ldr	r0, [r0, #16]
4000a888:	e1500006 	cmp	r0, r6
4000a88c:	9a000001 	bls	4000a898 <_txe_thread_create+0xc8>
4000a890:	e3a06000 	mov	r6, #0
4000a894:	ea000014 	b	4000a8ec <_txe_thread_create+0x11c>
4000a898:	e59d0018 	ldr	r0, [sp, #24]
4000a89c:	e590000c 	ldr	r0, [r0, #12]
4000a8a0:	e150000b 	cmp	r0, fp
4000a8a4:	8a000005 	bhi	4000a8c0 <_txe_thread_create+0xf0>
4000a8a8:	e59d0018 	ldr	r0, [sp, #24]
4000a8ac:	e5900010 	ldr	r0, [r0, #16]
4000a8b0:	e150000b 	cmp	r0, fp
4000a8b4:	9a000001 	bls	4000a8c0 <_txe_thread_create+0xf0>
4000a8b8:	e3a06000 	mov	r6, #0
4000a8bc:	ea00000a 	b	4000a8ec <_txe_thread_create+0x11c>
4000a8c0:	e59d0018 	ldr	r0, [sp, #24]
4000a8c4:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a8c8:	e58d0018 	str	r0, [sp, #24]
4000a8cc:	e59d001c 	ldr	r0, [sp, #28]
4000a8d0:	e2800001 	add	r0, r0, #1
4000a8d4:	e58d001c 	str	r0, [sp, #28]
4000a8d8:	e59f1140 	ldr	r1, [pc, #320]	; 4000aa20 <_txe_thread_create+0x250>
4000a8dc:	e59d001c 	ldr	r0, [sp, #28]
4000a8e0:	e5911000 	ldr	r1, [r1]
4000a8e4:	e1500001 	cmp	r0, r1
4000a8e8:	3affffdc 	bcc	4000a860 <_txe_thread_create+0x90>
4000a8ec:	e1a00000 	nop			; (mov r0, r0)
4000a8f0:	e10f0000 	mrs	r0, CPSR
4000a8f4:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a8f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a8fc:	e3800080 	orr	r0, r0, #128	; 0x80
4000a900:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a904:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a908:	e121f000 	msr	CPSR_c, r0
4000a90c:	e59f0104 	ldr	r0, [pc, #260]	; 4000aa18 <_txe_thread_create+0x248>
4000a910:	e5900000 	ldr	r0, [r0]
4000a914:	e2400001 	sub	r0, r0, #1
4000a918:	e59f10f8 	ldr	r1, [pc, #248]	; 4000aa18 <_txe_thread_create+0x248>
4000a91c:	e5810000 	str	r0, [r1]
4000a920:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a924:	e121f000 	msr	CPSR_c, r0
4000a928:	eb0012c1 	bl	4000f434 <_tx_thread_system_preempt_check>
4000a92c:	e59d0018 	ldr	r0, [sp, #24]
4000a930:	e1540000 	cmp	r4, r0
4000a934:	1a000001 	bne	4000a940 <_txe_thread_create+0x170>
4000a938:	e3a0000e 	mov	r0, #14
4000a93c:	eaffffaf 	b	4000a800 <_txe_thread_create+0x30>
4000a940:	e3560000 	cmp	r6, #0
4000a944:	0a000001 	beq	4000a950 <_txe_thread_create+0x180>
4000a948:	e3550000 	cmp	r5, #0
4000a94c:	1a000001 	bne	4000a958 <_txe_thread_create+0x188>
4000a950:	e3a00003 	mov	r0, #3
4000a954:	eaffffa9 	b	4000a800 <_txe_thread_create+0x30>
4000a958:	e35700c8 	cmp	r7, #200	; 0xc8
4000a95c:	2a000001 	bcs	4000a968 <_txe_thread_create+0x198>
4000a960:	e3a00005 	mov	r0, #5
4000a964:	eaffffa5 	b	4000a800 <_txe_thread_create+0x30>
4000a968:	e3580020 	cmp	r8, #32
4000a96c:	3a000001 	bcc	4000a978 <_txe_thread_create+0x1a8>
4000a970:	e3a0000f 	mov	r0, #15
4000a974:	eaffffa1 	b	4000a800 <_txe_thread_create+0x30>
4000a978:	e1590008 	cmp	r9, r8
4000a97c:	9a000001 	bls	4000a988 <_txe_thread_create+0x1b8>
4000a980:	e3a00018 	mov	r0, #24
4000a984:	eaffff9d 	b	4000a800 <_txe_thread_create+0x30>
4000a988:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a98c:	e3500001 	cmp	r0, #1
4000a990:	9a000001 	bls	4000a99c <_txe_thread_create+0x1cc>
4000a994:	e3a00010 	mov	r0, #16
4000a998:	eaffff98 	b	4000a800 <_txe_thread_create+0x30>
4000a99c:	e59f0080 	ldr	r0, [pc, #128]	; 4000aa24 <_txe_thread_create+0x254>
4000a9a0:	e590a000 	ldr	sl, [r0]
4000a9a4:	e35a0000 	cmp	sl, #0
4000a9a8:	0a000008 	beq	4000a9d0 <_txe_thread_create+0x200>
4000a9ac:	e59f0074 	ldr	r0, [pc, #116]	; 4000aa28 <_txe_thread_create+0x258>
4000a9b0:	e15a0000 	cmp	sl, r0
4000a9b4:	0a000003 	beq	4000a9c8 <_txe_thread_create+0x1f8>
4000a9b8:	e59f006c 	ldr	r0, [pc, #108]	; 4000aa2c <_txe_thread_create+0x25c>
4000a9bc:	e5900000 	ldr	r0, [r0]
4000a9c0:	e3500000 	cmp	r0, #0
4000a9c4:	0a000008 	beq	4000a9ec <_txe_thread_create+0x21c>
4000a9c8:	e3a00013 	mov	r0, #19
4000a9cc:	eaffff8b 	b	4000a800 <_txe_thread_create+0x30>
4000a9d0:	e59f0054 	ldr	r0, [pc, #84]	; 4000aa2c <_txe_thread_create+0x25c>
4000a9d4:	e5900000 	ldr	r0, [r0]
4000a9d8:	e59f1050 	ldr	r1, [pc, #80]	; 4000aa30 <_txe_thread_create+0x260>
4000a9dc:	e1500001 	cmp	r0, r1
4000a9e0:	2a000001 	bcs	4000a9ec <_txe_thread_create+0x21c>
4000a9e4:	e3a00013 	mov	r0, #19
4000a9e8:	eaffff84 	b	4000a800 <_txe_thread_create+0x30>
4000a9ec:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a9f0:	e1cd21f0 	strd	r2, [sp, #16]
4000a9f4:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a9f8:	e1a02005 	mov	r2, r5
4000a9fc:	e1a00004 	mov	r0, r4
4000aa00:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000aa04:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000aa08:	eb000f49 	bl	4000e734 <_tx_thread_create>
4000aa0c:	e58d0020 	str	r0, [sp, #32]
4000aa10:	e59d0020 	ldr	r0, [sp, #32]
4000aa14:	eaffff79 	b	4000a800 <_txe_thread_create+0x30>
4000aa18:	40030e50 	.word	0x40030e50
4000aa1c:	40030e3c 	.word	0x40030e3c
4000aa20:	40030e40 	.word	0x40030e40
4000aa24:	40030e34 	.word	0x40030e34
4000aa28:	40032974 	.word	0x40032974
4000aa2c:	40030e2c 	.word	0x40030e2c
4000aa30:	f0f0f0f0 	.word	0xf0f0f0f0

4000aa34 <_txe_thread_info_get>:
4000aa34:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aa38:	e24dd01c 	sub	sp, sp, #28
4000aa3c:	e1a04000 	mov	r4, r0
4000aa40:	e1a05001 	mov	r5, r1
4000aa44:	e1a06002 	mov	r6, r2
4000aa48:	e1a07003 	mov	r7, r3
4000aa4c:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000aa50:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000aa54:	e3540000 	cmp	r4, #0
4000aa58:	0a000003 	beq	4000aa6c <_txe_thread_info_get+0x38>
4000aa5c:	e5940000 	ldr	r0, [r4]
4000aa60:	e59f103c 	ldr	r1, [pc, #60]	; 4000aaa4 <_txe_thread_info_get+0x70>
4000aa64:	e1500001 	cmp	r0, r1
4000aa68:	0a000002 	beq	4000aa78 <_txe_thread_info_get+0x44>
4000aa6c:	e3a0000e 	mov	r0, #14
4000aa70:	e28dd01c 	add	sp, sp, #28
4000aa74:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000aa78:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000aa7c:	e58d3010 	str	r3, [sp, #16]
4000aa80:	e1a03007 	mov	r3, r7
4000aa84:	e1a02006 	mov	r2, r6
4000aa88:	e1a01005 	mov	r1, r5
4000aa8c:	e1a00004 	mov	r0, r4
4000aa90:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000aa94:	eb000ff5 	bl	4000ea70 <_tx_thread_info_get>
4000aa98:	e58d0018 	str	r0, [sp, #24]
4000aa9c:	e59d0018 	ldr	r0, [sp, #24]
4000aaa0:	eafffff2 	b	4000aa70 <_txe_thread_info_get+0x3c>
4000aaa4:	54485244 	.word	0x54485244

4000aaa8 <_txe_thread_priority_change>:
4000aaa8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000aaac:	e1a04000 	mov	r4, r0
4000aab0:	e1a05001 	mov	r5, r1
4000aab4:	e1a06002 	mov	r6, r2
4000aab8:	e3540000 	cmp	r4, #0
4000aabc:	0a000003 	beq	4000aad0 <_txe_thread_priority_change+0x28>
4000aac0:	e5940000 	ldr	r0, [r4]
4000aac4:	e59f1070 	ldr	r1, [pc, #112]	; 4000ab3c <_txe_thread_priority_change+0x94>
4000aac8:	e1500001 	cmp	r0, r1
4000aacc:	0a000001 	beq	4000aad8 <_txe_thread_priority_change+0x30>
4000aad0:	e3a0000e 	mov	r0, #14
4000aad4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000aad8:	e3560000 	cmp	r6, #0
4000aadc:	1a000001 	bne	4000aae8 <_txe_thread_priority_change+0x40>
4000aae0:	e3a00003 	mov	r0, #3
4000aae4:	eafffffa 	b	4000aad4 <_txe_thread_priority_change+0x2c>
4000aae8:	e3550020 	cmp	r5, #32
4000aaec:	3a000001 	bcc	4000aaf8 <_txe_thread_priority_change+0x50>
4000aaf0:	e3a0000f 	mov	r0, #15
4000aaf4:	eafffff6 	b	4000aad4 <_txe_thread_priority_change+0x2c>
4000aaf8:	e59f0040 	ldr	r0, [pc, #64]	; 4000ab40 <_txe_thread_priority_change+0x98>
4000aafc:	e5900000 	ldr	r0, [r0]
4000ab00:	e3500000 	cmp	r0, #0
4000ab04:	0a000003 	beq	4000ab18 <_txe_thread_priority_change+0x70>
4000ab08:	e59f0034 	ldr	r0, [pc, #52]	; 4000ab44 <_txe_thread_priority_change+0x9c>
4000ab0c:	e5900000 	ldr	r0, [r0]
4000ab10:	e3500000 	cmp	r0, #0
4000ab14:	0a000001 	beq	4000ab20 <_txe_thread_priority_change+0x78>
4000ab18:	e3a00013 	mov	r0, #19
4000ab1c:	eaffffec 	b	4000aad4 <_txe_thread_priority_change+0x2c>
4000ab20:	e1a02006 	mov	r2, r6
4000ab24:	e1a01005 	mov	r1, r5
4000ab28:	e1a00004 	mov	r0, r4
4000ab2c:	eb001039 	bl	4000ec18 <_tx_thread_priority_change>
4000ab30:	e1a07000 	mov	r7, r0
4000ab34:	e1a00007 	mov	r0, r7
4000ab38:	eaffffe5 	b	4000aad4 <_txe_thread_priority_change+0x2c>
4000ab3c:	54485244 	.word	0x54485244
4000ab40:	40030e34 	.word	0x40030e34
4000ab44:	40030e2c 	.word	0x40030e2c

4000ab48 <_txe_thread_relinquish>:
4000ab48:	e92d4010 	push	{r4, lr}
4000ab4c:	e59f0020 	ldr	r0, [pc, #32]	; 4000ab74 <_txe_thread_relinquish+0x2c>
4000ab50:	e5900000 	ldr	r0, [r0]
4000ab54:	e3500000 	cmp	r0, #0
4000ab58:	0a000004 	beq	4000ab70 <_txe_thread_relinquish+0x28>
4000ab5c:	e59f0014 	ldr	r0, [pc, #20]	; 4000ab78 <_txe_thread_relinquish+0x30>
4000ab60:	e5900000 	ldr	r0, [r0]
4000ab64:	e3500000 	cmp	r0, #0
4000ab68:	1a000000 	bne	4000ab70 <_txe_thread_relinquish+0x28>
4000ab6c:	eb001091 	bl	4000edb8 <_tx_thread_relinquish>
4000ab70:	e8bd8010 	pop	{r4, pc}
4000ab74:	40030e34 	.word	0x40030e34
4000ab78:	40030e2c 	.word	0x40030e2c

4000ab7c <_txe_thread_resume>:
4000ab7c:	e92d4070 	push	{r4, r5, r6, lr}
4000ab80:	e1a04000 	mov	r4, r0
4000ab84:	e3540000 	cmp	r4, #0
4000ab88:	0a000003 	beq	4000ab9c <_txe_thread_resume+0x20>
4000ab8c:	e5940000 	ldr	r0, [r4]
4000ab90:	e59f1020 	ldr	r1, [pc, #32]	; 4000abb8 <_txe_thread_resume+0x3c>
4000ab94:	e1500001 	cmp	r0, r1
4000ab98:	0a000001 	beq	4000aba4 <_txe_thread_resume+0x28>
4000ab9c:	e3a0000e 	mov	r0, #14
4000aba0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000aba4:	e1a00004 	mov	r0, r4
4000aba8:	eb00113e 	bl	4000f0a8 <_tx_thread_resume>
4000abac:	e1a05000 	mov	r5, r0
4000abb0:	e1a00005 	mov	r0, r5
4000abb4:	eafffff9 	b	4000aba0 <_txe_thread_resume+0x24>
4000abb8:	54485244 	.word	0x54485244

4000abbc <_txe_timer_activate>:
4000abbc:	e92d4070 	push	{r4, r5, r6, lr}
4000abc0:	e1a04000 	mov	r4, r0
4000abc4:	e3540000 	cmp	r4, #0
4000abc8:	0a000003 	beq	4000abdc <_txe_timer_activate+0x20>
4000abcc:	e5940000 	ldr	r0, [r4]
4000abd0:	e59f1020 	ldr	r1, [pc, #32]	; 4000abf8 <_txe_timer_activate+0x3c>
4000abd4:	e1500001 	cmp	r0, r1
4000abd8:	0a000001 	beq	4000abe4 <_txe_timer_activate+0x28>
4000abdc:	e3a00015 	mov	r0, #21
4000abe0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000abe4:	e1a00004 	mov	r0, r4
4000abe8:	eb0013a4 	bl	4000fa80 <_tx_timer_activate>
4000abec:	e1a05000 	mov	r5, r0
4000abf0:	e1a00005 	mov	r0, r5
4000abf4:	eafffff9 	b	4000abe0 <_txe_timer_activate+0x24>
4000abf8:	4154494d 	.word	0x4154494d

4000abfc <_txe_timer_change>:
4000abfc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ac00:	e1a04000 	mov	r4, r0
4000ac04:	e1a05001 	mov	r5, r1
4000ac08:	e1a06002 	mov	r6, r2
4000ac0c:	e3540000 	cmp	r4, #0
4000ac10:	0a000003 	beq	4000ac24 <_txe_timer_change+0x28>
4000ac14:	e5940000 	ldr	r0, [r4]
4000ac18:	e59f1058 	ldr	r1, [pc, #88]	; 4000ac78 <_txe_timer_change+0x7c>
4000ac1c:	e1500001 	cmp	r0, r1
4000ac20:	0a000001 	beq	4000ac2c <_txe_timer_change+0x30>
4000ac24:	e3a00015 	mov	r0, #21
4000ac28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ac2c:	e3550000 	cmp	r5, #0
4000ac30:	1a000001 	bne	4000ac3c <_txe_timer_change+0x40>
4000ac34:	e3a00016 	mov	r0, #22
4000ac38:	eafffffa 	b	4000ac28 <_txe_timer_change+0x2c>
4000ac3c:	e59f0038 	ldr	r0, [pc, #56]	; 4000ac7c <_txe_timer_change+0x80>
4000ac40:	e5900000 	ldr	r0, [r0]
4000ac44:	e3c0000f 	bic	r0, r0, #15
4000ac48:	e59f1030 	ldr	r1, [pc, #48]	; 4000ac80 <_txe_timer_change+0x84>
4000ac4c:	e1500001 	cmp	r0, r1
4000ac50:	1a000001 	bne	4000ac5c <_txe_timer_change+0x60>
4000ac54:	e3a00013 	mov	r0, #19
4000ac58:	eafffff2 	b	4000ac28 <_txe_timer_change+0x2c>
4000ac5c:	e1a02006 	mov	r2, r6
4000ac60:	e1a01005 	mov	r1, r5
4000ac64:	e1a00004 	mov	r0, r4
4000ac68:	eb0013d4 	bl	4000fbc0 <_tx_timer_change>
4000ac6c:	e1a07000 	mov	r7, r0
4000ac70:	e1a00007 	mov	r0, r7
4000ac74:	eaffffeb 	b	4000ac28 <_txe_timer_change+0x2c>
4000ac78:	4154494d 	.word	0x4154494d
4000ac7c:	40030e2c 	.word	0x40030e2c
4000ac80:	f0f0f0f0 	.word	0xf0f0f0f0

4000ac84 <_txe_timer_create>:
4000ac84:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac88:	e24dd01c 	sub	sp, sp, #28
4000ac8c:	e1a04000 	mov	r4, r0
4000ac90:	e1a05001 	mov	r5, r1
4000ac94:	e1a06002 	mov	r6, r2
4000ac98:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000ac9c:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000aca0:	e3540000 	cmp	r4, #0
4000aca4:	0a000001 	beq	4000acb0 <_txe_timer_create+0x2c>
4000aca8:	e358002c 	cmp	r8, #44	; 0x2c
4000acac:	0a000002 	beq	4000acbc <_txe_timer_create+0x38>
4000acb0:	e3a00015 	mov	r0, #21
4000acb4:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000acb8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000acbc:	e10f9000 	mrs	r9, CPSR
4000acc0:	e389a080 	orr	sl, r9, #128	; 0x80
4000acc4:	e121f00a 	msr	CPSR_c, sl
4000acc8:	e59f0160 	ldr	r0, [pc, #352]	; 4000ae30 <_txe_timer_create+0x1ac>
4000accc:	e5900000 	ldr	r0, [r0]
4000acd0:	e2800001 	add	r0, r0, #1
4000acd4:	e59f1154 	ldr	r1, [pc, #340]	; 4000ae30 <_txe_timer_create+0x1ac>
4000acd8:	e5810000 	str	r0, [r1]
4000acdc:	e121f009 	msr	CPSR_c, r9
4000ace0:	e59f014c 	ldr	r0, [pc, #332]	; 4000ae34 <_txe_timer_create+0x1b0>
4000ace4:	e5900000 	ldr	r0, [r0]
4000ace8:	e58d0014 	str	r0, [sp, #20]
4000acec:	e3a00000 	mov	r0, #0
4000acf0:	e58d0018 	str	r0, [sp, #24]
4000acf4:	ea000009 	b	4000ad20 <_txe_timer_create+0x9c>
4000acf8:	e59d0014 	ldr	r0, [sp, #20]
4000acfc:	e1540000 	cmp	r4, r0
4000ad00:	1a000000 	bne	4000ad08 <_txe_timer_create+0x84>
4000ad04:	ea00000a 	b	4000ad34 <_txe_timer_create+0xb0>
4000ad08:	e59d0014 	ldr	r0, [sp, #20]
4000ad0c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ad10:	e58d0014 	str	r0, [sp, #20]
4000ad14:	e59d0018 	ldr	r0, [sp, #24]
4000ad18:	e2800001 	add	r0, r0, #1
4000ad1c:	e58d0018 	str	r0, [sp, #24]
4000ad20:	e59f1110 	ldr	r1, [pc, #272]	; 4000ae38 <_txe_timer_create+0x1b4>
4000ad24:	e59d0018 	ldr	r0, [sp, #24]
4000ad28:	e5911000 	ldr	r1, [r1]
4000ad2c:	e1500001 	cmp	r0, r1
4000ad30:	3afffff0 	bcc	4000acf8 <_txe_timer_create+0x74>
4000ad34:	e1a00000 	nop			; (mov r0, r0)
4000ad38:	e10f9000 	mrs	r9, CPSR
4000ad3c:	e389a080 	orr	sl, r9, #128	; 0x80
4000ad40:	e121f00a 	msr	CPSR_c, sl
4000ad44:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ae30 <_txe_timer_create+0x1ac>
4000ad48:	e5900000 	ldr	r0, [r0]
4000ad4c:	e2400001 	sub	r0, r0, #1
4000ad50:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ae30 <_txe_timer_create+0x1ac>
4000ad54:	e5810000 	str	r0, [r1]
4000ad58:	e121f009 	msr	CPSR_c, r9
4000ad5c:	eb0011b4 	bl	4000f434 <_tx_thread_system_preempt_check>
4000ad60:	e59d0014 	ldr	r0, [sp, #20]
4000ad64:	e1540000 	cmp	r4, r0
4000ad68:	1a000001 	bne	4000ad74 <_txe_timer_create+0xf0>
4000ad6c:	e3a00015 	mov	r0, #21
4000ad70:	eaffffcf 	b	4000acb4 <_txe_timer_create+0x30>
4000ad74:	e3570000 	cmp	r7, #0
4000ad78:	1a000001 	bne	4000ad84 <_txe_timer_create+0x100>
4000ad7c:	e3a00016 	mov	r0, #22
4000ad80:	eaffffcb 	b	4000acb4 <_txe_timer_create+0x30>
4000ad84:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ad88:	e3500001 	cmp	r0, #1
4000ad8c:	0a000004 	beq	4000ada4 <_txe_timer_create+0x120>
4000ad90:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ad94:	e3500000 	cmp	r0, #0
4000ad98:	0a000001 	beq	4000ada4 <_txe_timer_create+0x120>
4000ad9c:	e3a00017 	mov	r0, #23
4000ada0:	eaffffc3 	b	4000acb4 <_txe_timer_create+0x30>
4000ada4:	e59f0090 	ldr	r0, [pc, #144]	; 4000ae3c <_txe_timer_create+0x1b8>
4000ada8:	e5900000 	ldr	r0, [r0]
4000adac:	e58d0010 	str	r0, [sp, #16]
4000adb0:	e59d0010 	ldr	r0, [sp, #16]
4000adb4:	e3500000 	cmp	r0, #0
4000adb8:	0a000009 	beq	4000ade4 <_txe_timer_create+0x160>
4000adbc:	e59f107c 	ldr	r1, [pc, #124]	; 4000ae40 <_txe_timer_create+0x1bc>
4000adc0:	e59d0010 	ldr	r0, [sp, #16]
4000adc4:	e1500001 	cmp	r0, r1
4000adc8:	0a000003 	beq	4000addc <_txe_timer_create+0x158>
4000adcc:	e59f0070 	ldr	r0, [pc, #112]	; 4000ae44 <_txe_timer_create+0x1c0>
4000add0:	e5900000 	ldr	r0, [r0]
4000add4:	e3500000 	cmp	r0, #0
4000add8:	0a000008 	beq	4000ae00 <_txe_timer_create+0x17c>
4000addc:	e3a00013 	mov	r0, #19
4000ade0:	eaffffb3 	b	4000acb4 <_txe_timer_create+0x30>
4000ade4:	e59f0058 	ldr	r0, [pc, #88]	; 4000ae44 <_txe_timer_create+0x1c0>
4000ade8:	e5900000 	ldr	r0, [r0]
4000adec:	e59f1054 	ldr	r1, [pc, #84]	; 4000ae48 <_txe_timer_create+0x1c4>
4000adf0:	e1500001 	cmp	r0, r1
4000adf4:	2a000001 	bcs	4000ae00 <_txe_timer_create+0x17c>
4000adf8:	e3a00013 	mov	r0, #19
4000adfc:	eaffffac 	b	4000acb4 <_txe_timer_create+0x30>
4000ae00:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000ae04:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000ae08:	e98d000c 	stmib	sp, {r2, r3}
4000ae0c:	e58d7000 	str	r7, [sp]
4000ae10:	e1a02006 	mov	r2, r6
4000ae14:	e1a01005 	mov	r1, r5
4000ae18:	e1a00004 	mov	r0, r4
4000ae1c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ae20:	eb0013b1 	bl	4000fcec <_tx_timer_create>
4000ae24:	e1a0b000 	mov	fp, r0
4000ae28:	e1a0000b 	mov	r0, fp
4000ae2c:	eaffffa0 	b	4000acb4 <_txe_timer_create+0x30>
4000ae30:	40030e50 	.word	0x40030e50
4000ae34:	40030e78 	.word	0x40030e78
4000ae38:	40030e7c 	.word	0x40030e7c
4000ae3c:	40030e34 	.word	0x40030e34
4000ae40:	40032974 	.word	0x40032974
4000ae44:	40030e2c 	.word	0x40030e2c
4000ae48:	f0f0f0f0 	.word	0xf0f0f0f0

4000ae4c <_txe_timer_deactivate>:
4000ae4c:	e92d4070 	push	{r4, r5, r6, lr}
4000ae50:	e1a04000 	mov	r4, r0
4000ae54:	e3540000 	cmp	r4, #0
4000ae58:	0a000003 	beq	4000ae6c <_txe_timer_deactivate+0x20>
4000ae5c:	e5940000 	ldr	r0, [r4]
4000ae60:	e59f1020 	ldr	r1, [pc, #32]	; 4000ae88 <_txe_timer_deactivate+0x3c>
4000ae64:	e1500001 	cmp	r0, r1
4000ae68:	0a000001 	beq	4000ae74 <_txe_timer_deactivate+0x28>
4000ae6c:	e3a00015 	mov	r0, #21
4000ae70:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ae74:	e1a00004 	mov	r0, r4
4000ae78:	eb00141a 	bl	4000fee8 <_tx_timer_deactivate>
4000ae7c:	e1a05000 	mov	r5, r0
4000ae80:	e1a00005 	mov	r0, r5
4000ae84:	eafffff9 	b	4000ae70 <_txe_timer_deactivate+0x24>
4000ae88:	4154494d 	.word	0x4154494d

4000ae8c <_tx_thread_system_return>:
4000ae8c:	e3a00000 	mov	r0, #0
4000ae90:	e10f1000 	mrs	r1, CPSR
4000ae94:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ae98:	e3812080 	orr	r2, r1, #128	; 0x80
4000ae9c:	e12ff002 	msr	CPSR_fsxc, r2
4000aea0:	e59f302c 	ldr	r3, [pc, #44]	; 4000aed4 <_tx_thread_system_return+0x48>
4000aea4:	e5930000 	ldr	r0, [r3]
4000aea8:	e59f2028 	ldr	r2, [pc, #40]	; 4000aed8 <_tx_thread_system_return+0x4c>
4000aeac:	e5921000 	ldr	r1, [r2]
4000aeb0:	e580d008 	str	sp, [r0, #8]
4000aeb4:	e3a04000 	mov	r4, #0
4000aeb8:	e3510000 	cmp	r1, #0
4000aebc:	0a000002 	beq	4000aecc <_tx_thread_system_return+0x40>
4000aec0:	e590101c 	ldr	r1, [r0, #28]
4000aec4:	e5824000 	str	r4, [r2]
4000aec8:	e5801018 	str	r1, [r0, #24]
4000aecc:	e5834000 	str	r4, [r3]
4000aed0:	ea000001 	b	4000aedc <_tx_thread_schedule>
4000aed4:	40030e34 	.word	0x40030e34
4000aed8:	40030e60 	.word	0x40030e60

4000aedc <_tx_thread_schedule>:
4000aedc:	e10f2000 	mrs	r2, CPSR
4000aee0:	e3c20080 	bic	r0, r2, #128	; 0x80
4000aee4:	e12ff000 	msr	CPSR_fsxc, r0
4000aee8:	e59f104c 	ldr	r1, [pc, #76]	; 4000af3c <_tx_thread_schedule+0x60>
4000aeec:	e5910000 	ldr	r0, [r1]
4000aef0:	e3500000 	cmp	r0, #0
4000aef4:	0afffffc 	beq	4000aeec <_tx_thread_schedule+0x10>
4000aef8:	e12ff002 	msr	CPSR_fsxc, r2
4000aefc:	e59f103c 	ldr	r1, [pc, #60]	; 4000af40 <_tx_thread_schedule+0x64>
4000af00:	e5810000 	str	r0, [r1]
4000af04:	e5902004 	ldr	r2, [r0, #4]
4000af08:	e5903018 	ldr	r3, [r0, #24]
4000af0c:	e2822001 	add	r2, r2, #1
4000af10:	e5802004 	str	r2, [r0, #4]
4000af14:	e59f2028 	ldr	r2, [pc, #40]	; 4000af44 <_tx_thread_schedule+0x68>
4000af18:	e590d008 	ldr	sp, [r0, #8]
4000af1c:	e5823000 	str	r3, [r2]
4000af20:	e8bd0003 	pop	{r0, r1}
4000af24:	e3500000 	cmp	r0, #0
4000af28:	116ff001 	msrne	SPSR_fsxc, r1
4000af2c:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000af30:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af34:	e12ff001 	msr	CPSR_fsxc, r1
4000af38:	e12fff1e 	bx	lr
4000af3c:	40030e38 	.word	0x40030e38
4000af40:	40030e34 	.word	0x40030e34
4000af44:	40030e60 	.word	0x40030e60

4000af48 <_tx_thread_vectored_context_save>:
4000af48:	e59f3044 	ldr	r3, [pc, #68]	; 4000af94 <_tx_thread_vectored_context_save+0x4c>
4000af4c:	e5932000 	ldr	r2, [r3]
4000af50:	e3520000 	cmp	r2, #0
4000af54:	0a000003 	beq	4000af68 <_tx_thread_vectored_context_save+0x20>
4000af58:	e2822001 	add	r2, r2, #1
4000af5c:	e5832000 	str	r2, [r3]
4000af60:	e3a0a000 	mov	sl, #0
4000af64:	e12fff1e 	bx	lr
4000af68:	e2822001 	add	r2, r2, #1
4000af6c:	e5832000 	str	r2, [r3]
4000af70:	e59f1020 	ldr	r1, [pc, #32]	; 4000af98 <_tx_thread_vectored_context_save+0x50>
4000af74:	e5910000 	ldr	r0, [r1]
4000af78:	e3500000 	cmp	r0, #0
4000af7c:	0a000001 	beq	4000af88 <_tx_thread_vectored_context_save+0x40>
4000af80:	e3a0a000 	mov	sl, #0
4000af84:	e12fff1e 	bx	lr
4000af88:	e3a0a000 	mov	sl, #0
4000af8c:	e28dd020 	add	sp, sp, #32
4000af90:	e12fff1e 	bx	lr
4000af94:	40030e2c 	.word	0x40030e2c
4000af98:	40030e34 	.word	0x40030e34

4000af9c <_tx_timer_interrupt>:
4000af9c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b070 <_tx_timer_interrupt+0xd4>
4000afa0:	e5910000 	ldr	r0, [r1]
4000afa4:	e2800001 	add	r0, r0, #1
4000afa8:	e5810000 	str	r0, [r1]
4000afac:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b074 <_tx_timer_interrupt+0xd8>
4000afb0:	e5932000 	ldr	r2, [r3]
4000afb4:	e3520000 	cmp	r2, #0
4000afb8:	0a000006 	beq	4000afd8 <_tx_timer_interrupt+0x3c>
4000afbc:	e2422001 	sub	r2, r2, #1
4000afc0:	e5832000 	str	r2, [r3]
4000afc4:	e3520000 	cmp	r2, #0
4000afc8:	1a000002 	bne	4000afd8 <_tx_timer_interrupt+0x3c>
4000afcc:	e59f30a4 	ldr	r3, [pc, #164]	; 4000b078 <_tx_timer_interrupt+0xdc>
4000afd0:	e3a00001 	mov	r0, #1
4000afd4:	e5830000 	str	r0, [r3]
4000afd8:	e59f109c 	ldr	r1, [pc, #156]	; 4000b07c <_tx_timer_interrupt+0xe0>
4000afdc:	e5910000 	ldr	r0, [r1]
4000afe0:	e5902000 	ldr	r2, [r0]
4000afe4:	e3520000 	cmp	r2, #0
4000afe8:	0a000003 	beq	4000affc <_tx_timer_interrupt+0x60>
4000afec:	e59f308c 	ldr	r3, [pc, #140]	; 4000b080 <_tx_timer_interrupt+0xe4>
4000aff0:	e3a02001 	mov	r2, #1
4000aff4:	e5832000 	str	r2, [r3]
4000aff8:	ea000007 	b	4000b01c <_tx_timer_interrupt+0x80>
4000affc:	e2800004 	add	r0, r0, #4
4000b000:	e59f307c 	ldr	r3, [pc, #124]	; 4000b084 <_tx_timer_interrupt+0xe8>
4000b004:	e5932000 	ldr	r2, [r3]
4000b008:	e1500002 	cmp	r0, r2
4000b00c:	1a000001 	bne	4000b018 <_tx_timer_interrupt+0x7c>
4000b010:	e59f3070 	ldr	r3, [pc, #112]	; 4000b088 <_tx_timer_interrupt+0xec>
4000b014:	e5930000 	ldr	r0, [r3]
4000b018:	e5810000 	str	r0, [r1]
4000b01c:	e59f3054 	ldr	r3, [pc, #84]	; 4000b078 <_tx_timer_interrupt+0xdc>
4000b020:	e5932000 	ldr	r2, [r3]
4000b024:	e3520000 	cmp	r2, #0
4000b028:	1a000003 	bne	4000b03c <_tx_timer_interrupt+0xa0>
4000b02c:	e59f104c 	ldr	r1, [pc, #76]	; 4000b080 <_tx_timer_interrupt+0xe4>
4000b030:	e5910000 	ldr	r0, [r1]
4000b034:	e3500000 	cmp	r0, #0
4000b038:	0a00000b 	beq	4000b06c <_tx_timer_interrupt+0xd0>
4000b03c:	e92d4001 	push	{r0, lr}
4000b040:	e59f1038 	ldr	r1, [pc, #56]	; 4000b080 <_tx_timer_interrupt+0xe4>
4000b044:	e5910000 	ldr	r0, [r1]
4000b048:	e3500000 	cmp	r0, #0
4000b04c:	0a000000 	beq	4000b054 <_tx_timer_interrupt+0xb8>
4000b050:	eb001441 	bl	4001015c <_tx_timer_expiration_process>
4000b054:	e59f301c 	ldr	r3, [pc, #28]	; 4000b078 <_tx_timer_interrupt+0xdc>
4000b058:	e5932000 	ldr	r2, [r3]
4000b05c:	e3520000 	cmp	r2, #0
4000b060:	0a000000 	beq	4000b068 <_tx_timer_interrupt+0xcc>
4000b064:	eb001210 	bl	4000f8ac <_tx_thread_time_slice>
4000b068:	e8bd4001 	pop	{r0, lr}
4000b06c:	e12fff1e 	bx	lr
4000b070:	40030e5c 	.word	0x40030e5c
4000b074:	40030e60 	.word	0x40030e60
4000b078:	40030e64 	.word	0x40030e64
4000b07c:	40030e70 	.word	0x40030e70
4000b080:	40030e74 	.word	0x40030e74
4000b084:	40030e6c 	.word	0x40030e6c
4000b088:	40030e68 	.word	0x40030e68

4000b08c <_tx_thread_context_restore>:
4000b08c:	e10f3000 	mrs	r3, CPSR
4000b090:	e3830080 	orr	r0, r3, #128	; 0x80
4000b094:	e12ff000 	msr	CPSR_fsxc, r0
4000b098:	e59f30f0 	ldr	r3, [pc, #240]	; 4000b190 <_tx_thread_context_restore+0x104>
4000b09c:	e5932000 	ldr	r2, [r3]
4000b0a0:	e2422001 	sub	r2, r2, #1
4000b0a4:	e5832000 	str	r2, [r3]
4000b0a8:	e3520000 	cmp	r2, #0
4000b0ac:	0a000003 	beq	4000b0c0 <_tx_thread_context_restore+0x34>
4000b0b0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b0b4:	e16ff000 	msr	SPSR_fsxc, r0
4000b0b8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b0bc:	e1b0f00e 	movs	pc, lr
4000b0c0:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b194 <_tx_thread_context_restore+0x108>
4000b0c4:	e5910000 	ldr	r0, [r1]
4000b0c8:	e3500000 	cmp	r0, #0
4000b0cc:	0a00002a 	beq	4000b17c <_tx_thread_context_restore+0xf0>
4000b0d0:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b198 <_tx_thread_context_restore+0x10c>
4000b0d4:	e5932000 	ldr	r2, [r3]
4000b0d8:	e3520000 	cmp	r2, #0
4000b0dc:	1a000003 	bne	4000b0f0 <_tx_thread_context_restore+0x64>
4000b0e0:	e59f30b4 	ldr	r3, [pc, #180]	; 4000b19c <_tx_thread_context_restore+0x110>
4000b0e4:	e5932000 	ldr	r2, [r3]
4000b0e8:	e1500002 	cmp	r0, r2
4000b0ec:	1a000003 	bne	4000b100 <_tx_thread_context_restore+0x74>
4000b0f0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b0f4:	e16ff000 	msr	SPSR_fsxc, r0
4000b0f8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b0fc:	e1b0f00e 	movs	pc, lr
4000b100:	e8bd5408 	pop	{r3, sl, ip, lr}
4000b104:	e1a0100e 	mov	r1, lr
4000b108:	e3a020d3 	mov	r2, #211	; 0xd3
4000b10c:	e121f002 	msr	CPSR_c, r2
4000b110:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000b114:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000b118:	e1a04003 	mov	r4, r3
4000b11c:	e3a020d2 	mov	r2, #210	; 0xd2
4000b120:	e121f002 	msr	CPSR_c, r2
4000b124:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b128:	e3a050d3 	mov	r5, #211	; 0xd3
4000b12c:	e121f005 	msr	CPSR_c, r5
4000b130:	e92d000f 	push	{r0, r1, r2, r3}
4000b134:	e3a03001 	mov	r3, #1
4000b138:	e92d0018 	push	{r3, r4}
4000b13c:	e59f1050 	ldr	r1, [pc, #80]	; 4000b194 <_tx_thread_context_restore+0x108>
4000b140:	e5910000 	ldr	r0, [r1]
4000b144:	e580d008 	str	sp, [r0, #8]
4000b148:	e3c44020 	bic	r4, r4, #32
4000b14c:	e3843080 	orr	r3, r4, #128	; 0x80
4000b150:	e12ff003 	msr	CPSR_fsxc, r3
4000b154:	e59f3044 	ldr	r3, [pc, #68]	; 4000b1a0 <_tx_thread_context_restore+0x114>
4000b158:	e5932000 	ldr	r2, [r3]
4000b15c:	e3520000 	cmp	r2, #0
4000b160:	0a000002 	beq	4000b170 <_tx_thread_context_restore+0xe4>
4000b164:	e5802018 	str	r2, [r0, #24]
4000b168:	e3a02000 	mov	r2, #0
4000b16c:	e5832000 	str	r2, [r3]
4000b170:	e3a00000 	mov	r0, #0
4000b174:	e5810000 	str	r0, [r1]
4000b178:	eaffff57 	b	4000aedc <_tx_thread_schedule>
4000b17c:	e10f3000 	mrs	r3, CPSR
4000b180:	e3c3301f 	bic	r3, r3, #31
4000b184:	e3833013 	orr	r3, r3, #19
4000b188:	e12ff003 	msr	CPSR_fsxc, r3
4000b18c:	eaffff52 	b	4000aedc <_tx_thread_schedule>
4000b190:	40030e2c 	.word	0x40030e2c
4000b194:	40030e34 	.word	0x40030e34
4000b198:	40030e50 	.word	0x40030e50
4000b19c:	40030e38 	.word	0x40030e38
4000b1a0:	40030e60 	.word	0x40030e60

4000b1a4 <_tx_thread_irq_nesting_end>:
4000b1a4:	e1a0300e 	mov	r3, lr
4000b1a8:	e10f0000 	mrs	r0, CPSR
4000b1ac:	e3800080 	orr	r0, r0, #128	; 0x80
4000b1b0:	e12ff000 	msr	CPSR_fsxc, r0
4000b1b4:	e8bd4002 	pop	{r1, lr}
4000b1b8:	e3c0001f 	bic	r0, r0, #31
4000b1bc:	e3800012 	orr	r0, r0, #18
4000b1c0:	e12ff000 	msr	CPSR_fsxc, r0
4000b1c4:	e12fff13 	bx	r3

4000b1c8 <_tx_thread_irq_nesting_start>:
4000b1c8:	e1a0300e 	mov	r3, lr
4000b1cc:	e10f0000 	mrs	r0, CPSR
4000b1d0:	e3c0001f 	bic	r0, r0, #31
4000b1d4:	e380001f 	orr	r0, r0, #31
4000b1d8:	e12ff000 	msr	CPSR_fsxc, r0
4000b1dc:	e92d4002 	push	{r1, lr}
4000b1e0:	e3c00080 	bic	r0, r0, #128	; 0x80
4000b1e4:	e12ff000 	msr	CPSR_fsxc, r0
4000b1e8:	e12fff13 	bx	r3

4000b1ec <_tx_initialize_low_level>:
4000b1ec:	e1a0100d 	mov	r1, sp
4000b1f0:	e59f3024 	ldr	r3, [pc, #36]	; 4000b21c <_tx_initialize_low_level+0x30>
4000b1f4:	e5831000 	str	r1, [r3]
4000b1f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b1fc:	e3a00000 	mov	r0, #0
4000b200:	eb005be0 	bl	40022188 <CyU3POsTimerInit>
4000b204:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000b208:	e12fff1e 	bx	lr
4000b20c:	e59f200c 	ldr	r2, [pc, #12]	; 4000b220 <_tx_initialize_low_level+0x34>
4000b210:	e5920000 	ldr	r0, [r2]
4000b214:	e59f2008 	ldr	r2, [pc, #8]	; 4000b224 <_tx_initialize_low_level+0x38>
4000b218:	e5920000 	ldr	r0, [r2]
4000b21c:	40030e30 	.word	0x40030e30
4000b220:	40030e54 	.word	0x40030e54
4000b224:	40030dc8 	.word	0x40030dc8

4000b228 <_tx_byte_allocate>:
4000b228:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b22c:	e1a04000 	mov	r4, r0
4000b230:	e1a05001 	mov	r5, r1
4000b234:	e1a06002 	mov	r6, r2
4000b238:	e1a07003 	mov	r7, r3
4000b23c:	e3a00000 	mov	r0, #0
4000b240:	e58d0000 	str	r0, [sp]
4000b244:	e59f027c 	ldr	r0, [pc, #636]	; 4000b4c8 <_tx_byte_allocate+0x2a0>
4000b248:	e590a000 	ldr	sl, [r0]
4000b24c:	e10f8000 	mrs	r8, CPSR
4000b250:	e3889080 	orr	r9, r8, #128	; 0x80
4000b254:	e121f009 	msr	CPSR_c, r9
4000b258:	e2860003 	add	r0, r6, #3
4000b25c:	e1a00120 	lsr	r0, r0, #2
4000b260:	e1a06100 	lsl	r6, r0, #2
4000b264:	e59f0260 	ldr	r0, [pc, #608]	; 4000b4cc <_tx_byte_allocate+0x2a4>
4000b268:	e5900000 	ldr	r0, [r0]
4000b26c:	e58d0004 	str	r0, [sp, #4]
4000b270:	e59f1254 	ldr	r1, [pc, #596]	; 4000b4cc <_tx_byte_allocate+0x2a4>
4000b274:	e5910000 	ldr	r0, [r1]
4000b278:	e3500000 	cmp	r0, #0
4000b27c:	0a000031 	beq	4000b348 <_tx_byte_allocate+0x120>
4000b280:	e59f1248 	ldr	r1, [pc, #584]	; 4000b4d0 <_tx_byte_allocate+0x2a8>
4000b284:	e5911000 	ldr	r1, [r1]
4000b288:	e2811001 	add	r1, r1, #1
4000b28c:	e59f223c 	ldr	r2, [pc, #572]	; 4000b4d0 <_tx_byte_allocate+0x2a8>
4000b290:	e5821000 	str	r1, [r2]
4000b294:	e580100c 	str	r1, [r0, #12]
4000b298:	e59f1234 	ldr	r1, [pc, #564]	; 4000b4d4 <_tx_byte_allocate+0x2ac>
4000b29c:	e5911000 	ldr	r1, [r1]
4000b2a0:	e3510000 	cmp	r1, #0
4000b2a4:	1a000006 	bne	4000b2c4 <_tx_byte_allocate+0x9c>
4000b2a8:	e59f1218 	ldr	r1, [pc, #536]	; 4000b4c8 <_tx_byte_allocate+0x2a0>
4000b2ac:	e5911000 	ldr	r1, [r1]
4000b2b0:	e5801000 	str	r1, [r0]
4000b2b4:	e5901000 	ldr	r1, [r0]
4000b2b8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b2bc:	e5801004 	str	r1, [r0, #4]
4000b2c0:	ea00000d 	b	4000b2fc <_tx_byte_allocate+0xd4>
4000b2c4:	e59f1208 	ldr	r1, [pc, #520]	; 4000b4d4 <_tx_byte_allocate+0x2ac>
4000b2c8:	e5911000 	ldr	r1, [r1]
4000b2cc:	e59f2204 	ldr	r2, [pc, #516]	; 4000b4d8 <_tx_byte_allocate+0x2b0>
4000b2d0:	e1510002 	cmp	r1, r2
4000b2d4:	2a000004 	bcs	4000b2ec <_tx_byte_allocate+0xc4>
4000b2d8:	e3e01000 	mvn	r1, #0
4000b2dc:	e5801000 	str	r1, [r0]
4000b2e0:	e3a01000 	mov	r1, #0
4000b2e4:	e5801004 	str	r1, [r0, #4]
4000b2e8:	ea000003 	b	4000b2fc <_tx_byte_allocate+0xd4>
4000b2ec:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b4d8 <_tx_byte_allocate+0x2b0>
4000b2f0:	e5801000 	str	r1, [r0]
4000b2f4:	e3a01000 	mov	r1, #0
4000b2f8:	e5801004 	str	r1, [r0, #4]
4000b2fc:	e3a01014 	mov	r1, #20
4000b300:	e5801008 	str	r1, [r0, #8]
4000b304:	e5804010 	str	r4, [r0, #16]
4000b308:	e3a01000 	mov	r1, #0
4000b30c:	e5801014 	str	r1, [r0, #20]
4000b310:	e5806018 	str	r6, [r0, #24]
4000b314:	e580701c 	str	r7, [r0, #28]
4000b318:	e2800020 	add	r0, r0, #32
4000b31c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b4dc <_tx_byte_allocate+0x2b4>
4000b320:	e5911000 	ldr	r1, [r1]
4000b324:	e1500001 	cmp	r0, r1
4000b328:	3a000001 	bcc	4000b334 <_tx_byte_allocate+0x10c>
4000b32c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b4e0 <_tx_byte_allocate+0x2b8>
4000b330:	e5910000 	ldr	r0, [r1]
4000b334:	e59f1190 	ldr	r1, [pc, #400]	; 4000b4cc <_tx_byte_allocate+0x2a4>
4000b338:	e5810000 	str	r0, [r1]
4000b33c:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b4e4 <_tx_byte_allocate+0x2bc>
4000b340:	e5911000 	ldr	r1, [r1]
4000b344:	e5810020 	str	r0, [r1, #32]
4000b348:	e59d0004 	ldr	r0, [sp, #4]
4000b34c:	e3500000 	cmp	r0, #0
4000b350:	0a000002 	beq	4000b360 <_tx_byte_allocate+0x138>
4000b354:	e59d0004 	ldr	r0, [sp, #4]
4000b358:	e590000c 	ldr	r0, [r0, #12]
4000b35c:	e58d0000 	str	r0, [sp]
4000b360:	e1a00000 	nop			; (mov r0, r0)
4000b364:	e584a020 	str	sl, [r4, #32]
4000b368:	e121f008 	msr	CPSR_c, r8
4000b36c:	e1a01006 	mov	r1, r6
4000b370:	e1a00004 	mov	r0, r4
4000b374:	eb0001ba 	bl	4000ba64 <_tx_byte_pool_search>
4000b378:	e1a0b000 	mov	fp, r0
4000b37c:	e10f8000 	mrs	r8, CPSR
4000b380:	e3889080 	orr	r9, r8, #128	; 0x80
4000b384:	e121f009 	msr	CPSR_c, r9
4000b388:	e35b0000 	cmp	fp, #0
4000b38c:	1a000002 	bne	4000b39c <_tx_byte_allocate+0x174>
4000b390:	e5940020 	ldr	r0, [r4, #32]
4000b394:	e150000a 	cmp	r0, sl
4000b398:	1afffff1 	bne	4000b364 <_tx_byte_allocate+0x13c>
4000b39c:	e35b0000 	cmp	fp, #0
4000b3a0:	0a00000e 	beq	4000b3e0 <_tx_byte_allocate+0x1b8>
4000b3a4:	e585b000 	str	fp, [r5]
4000b3a8:	e59d0004 	ldr	r0, [sp, #4]
4000b3ac:	e3500000 	cmp	r0, #0
4000b3b0:	0a000007 	beq	4000b3d4 <_tx_byte_allocate+0x1ac>
4000b3b4:	e59d0004 	ldr	r0, [sp, #4]
4000b3b8:	e590100c 	ldr	r1, [r0, #12]
4000b3bc:	e59d0000 	ldr	r0, [sp]
4000b3c0:	e1510000 	cmp	r1, r0
4000b3c4:	1a000002 	bne	4000b3d4 <_tx_byte_allocate+0x1ac>
4000b3c8:	e5950000 	ldr	r0, [r5]
4000b3cc:	e59d1004 	ldr	r1, [sp, #4]
4000b3d0:	e5810014 	str	r0, [r1, #20]
4000b3d4:	e3a00000 	mov	r0, #0
4000b3d8:	e58d0008 	str	r0, [sp, #8]
4000b3dc:	ea000036 	b	4000b4bc <_tx_byte_allocate+0x294>
4000b3e0:	e3570000 	cmp	r7, #0
4000b3e4:	0a000032 	beq	4000b4b4 <_tx_byte_allocate+0x28c>
4000b3e8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b4e8 <_tx_byte_allocate+0x2c0>
4000b3ec:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b3f0:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b3f4:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b3f8:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b3fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b400:	e3500000 	cmp	r0, #0
4000b404:	0a00000a 	beq	4000b434 <_tx_byte_allocate+0x20c>
4000b408:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b40c:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b410:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b414:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b418:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b41c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b420:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b424:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b428:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b42c:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b430:	ea000002 	b	4000b440 <_tx_byte_allocate+0x218>
4000b434:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b438:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b43c:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b440:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b444:	e2800001 	add	r0, r0, #1
4000b448:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b44c:	e3a00009 	mov	r0, #9
4000b450:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b454:	e3a00001 	mov	r0, #1
4000b458:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b45c:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b460:	e59f0084 	ldr	r0, [pc, #132]	; 4000b4ec <_tx_byte_allocate+0x2c4>
4000b464:	e5900000 	ldr	r0, [r0]
4000b468:	e2800001 	add	r0, r0, #1
4000b46c:	e59f1078 	ldr	r1, [pc, #120]	; 4000b4ec <_tx_byte_allocate+0x2c4>
4000b470:	e5810000 	str	r0, [r1]
4000b474:	e121f008 	msr	CPSR_c, r8
4000b478:	e1a0000a 	mov	r0, sl
4000b47c:	ebfff671 	bl	40008e48 <_tx_thread_system_suspend>
4000b480:	e59d0004 	ldr	r0, [sp, #4]
4000b484:	e3500000 	cmp	r0, #0
4000b488:	0a000007 	beq	4000b4ac <_tx_byte_allocate+0x284>
4000b48c:	e59d0004 	ldr	r0, [sp, #4]
4000b490:	e590100c 	ldr	r1, [r0, #12]
4000b494:	e59d0000 	ldr	r0, [sp]
4000b498:	e1510000 	cmp	r1, r0
4000b49c:	1a000002 	bne	4000b4ac <_tx_byte_allocate+0x284>
4000b4a0:	e5950000 	ldr	r0, [r5]
4000b4a4:	e59d1004 	ldr	r1, [sp, #4]
4000b4a8:	e5810014 	str	r0, [r1, #20]
4000b4ac:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b4b0:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b4b4:	e3a00010 	mov	r0, #16
4000b4b8:	e58d0008 	str	r0, [sp, #8]
4000b4bc:	e121f008 	msr	CPSR_c, r8
4000b4c0:	e59d0008 	ldr	r0, [sp, #8]
4000b4c4:	eafffff9 	b	4000b4b0 <_tx_byte_allocate+0x288>
4000b4c8:	40030e34 	.word	0x40030e34
4000b4cc:	40030ea0 	.word	0x40030ea0
4000b4d0:	40030ea4 	.word	0x40030ea4
4000b4d4:	40030e2c 	.word	0x40030e2c
4000b4d8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b4dc:	40030e9c 	.word	0x40030e9c
4000b4e0:	40030e98 	.word	0x40030e98
4000b4e4:	40030e8c 	.word	0x40030e8c
4000b4e8:	4000b4f0 	.word	0x4000b4f0
4000b4ec:	40030e50 	.word	0x40030e50

4000b4f0 <_tx_byte_pool_cleanup>:
4000b4f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b4f4:	e1a04000 	mov	r4, r0
4000b4f8:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b4fc:	e10f5000 	mrs	r5, CPSR
4000b500:	e3856080 	orr	r6, r5, #128	; 0x80
4000b504:	e121f006 	msr	CPSR_c, r6
4000b508:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b50c:	e3500000 	cmp	r0, #0
4000b510:	0a000026 	beq	4000b5b0 <_tx_byte_pool_cleanup+0xc0>
4000b514:	e3570000 	cmp	r7, #0
4000b518:	0a000024 	beq	4000b5b0 <_tx_byte_pool_cleanup+0xc0>
4000b51c:	e5970000 	ldr	r0, [r7]
4000b520:	e59f1090 	ldr	r1, [pc, #144]	; 4000b5b8 <_tx_byte_pool_cleanup+0xc8>
4000b524:	e1500001 	cmp	r0, r1
4000b528:	1a000020 	bne	4000b5b0 <_tx_byte_pool_cleanup+0xc0>
4000b52c:	e3a00000 	mov	r0, #0
4000b530:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b534:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b538:	e1500004 	cmp	r0, r4
4000b53c:	1a000002 	bne	4000b54c <_tx_byte_pool_cleanup+0x5c>
4000b540:	e3a00000 	mov	r0, #0
4000b544:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b548:	ea000007 	b	4000b56c <_tx_byte_pool_cleanup+0x7c>
4000b54c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b550:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b554:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b558:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b55c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b560:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b564:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b568:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b56c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b570:	e2400001 	sub	r0, r0, #1
4000b574:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b578:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b57c:	e3500009 	cmp	r0, #9
4000b580:	1a00000a 	bne	4000b5b0 <_tx_byte_pool_cleanup+0xc0>
4000b584:	e3a00010 	mov	r0, #16
4000b588:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b58c:	e59f0028 	ldr	r0, [pc, #40]	; 4000b5bc <_tx_byte_pool_cleanup+0xcc>
4000b590:	e5900000 	ldr	r0, [r0]
4000b594:	e2800001 	add	r0, r0, #1
4000b598:	e59f101c 	ldr	r1, [pc, #28]	; 4000b5bc <_tx_byte_pool_cleanup+0xcc>
4000b59c:	e5810000 	str	r0, [r1]
4000b5a0:	e121f005 	msr	CPSR_c, r5
4000b5a4:	e1a00004 	mov	r0, r4
4000b5a8:	eb000fcd 	bl	4000f4e4 <_tx_thread_system_resume>
4000b5ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b5b0:	e121f005 	msr	CPSR_c, r5
4000b5b4:	eafffffc 	b	4000b5ac <_tx_byte_pool_cleanup+0xbc>
4000b5b8:	42595445 	.word	0x42595445
4000b5bc:	40030e50 	.word	0x40030e50

4000b5c0 <_tx_byte_pool_create>:
4000b5c0:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b5c4:	e1a04000 	mov	r4, r0
4000b5c8:	e1a05001 	mov	r5, r1
4000b5cc:	e1a06002 	mov	r6, r2
4000b5d0:	e1a07003 	mov	r7, r3
4000b5d4:	e3a01034 	mov	r1, #52	; 0x34
4000b5d8:	e1a00004 	mov	r0, r4
4000b5dc:	eb0020dc 	bl	40013954 <__aeabi_memclr4>
4000b5e0:	e1a00127 	lsr	r0, r7, #2
4000b5e4:	e1a07100 	lsl	r7, r0, #2
4000b5e8:	e5845004 	str	r5, [r4, #4]
4000b5ec:	e5846018 	str	r6, [r4, #24]
4000b5f0:	e584701c 	str	r7, [r4, #28]
4000b5f4:	e5846010 	str	r6, [r4, #16]
4000b5f8:	e5846014 	str	r6, [r4, #20]
4000b5fc:	e2470008 	sub	r0, r7, #8
4000b600:	e5840008 	str	r0, [r4, #8]
4000b604:	e3a00002 	mov	r0, #2
4000b608:	e584000c 	str	r0, [r4, #12]
4000b60c:	e0860007 	add	r0, r6, r7
4000b610:	e58d0004 	str	r0, [sp, #4]
4000b614:	e59d0004 	ldr	r0, [sp, #4]
4000b618:	e2400004 	sub	r0, r0, #4
4000b61c:	e58d0004 	str	r0, [sp, #4]
4000b620:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b7e4 <_tx_byte_pool_create+0x224>
4000b624:	e59d1004 	ldr	r1, [sp, #4]
4000b628:	e5810000 	str	r0, [r1]
4000b62c:	e59d0004 	ldr	r0, [sp, #4]
4000b630:	e2400004 	sub	r0, r0, #4
4000b634:	e58d0004 	str	r0, [sp, #4]
4000b638:	e59d0004 	ldr	r0, [sp, #4]
4000b63c:	e5806000 	str	r6, [r0]
4000b640:	e59d0004 	ldr	r0, [sp, #4]
4000b644:	e5860000 	str	r0, [r6]
4000b648:	e58d6004 	str	r6, [sp, #4]
4000b64c:	e59d0004 	ldr	r0, [sp, #4]
4000b650:	e2800004 	add	r0, r0, #4
4000b654:	e58d0004 	str	r0, [sp, #4]
4000b658:	e59f0188 	ldr	r0, [pc, #392]	; 4000b7e8 <_tx_byte_pool_create+0x228>
4000b65c:	e59d1004 	ldr	r1, [sp, #4]
4000b660:	e5810000 	str	r0, [r1]
4000b664:	e3a00000 	mov	r0, #0
4000b668:	e5840020 	str	r0, [r4, #32]
4000b66c:	e10f8000 	mrs	r8, CPSR
4000b670:	e3889080 	orr	r9, r8, #128	; 0x80
4000b674:	e121f009 	msr	CPSR_c, r9
4000b678:	e59f016c 	ldr	r0, [pc, #364]	; 4000b7ec <_tx_byte_pool_create+0x22c>
4000b67c:	e5840000 	str	r0, [r4]
4000b680:	e59f0168 	ldr	r0, [pc, #360]	; 4000b7f0 <_tx_byte_pool_create+0x230>
4000b684:	e5900000 	ldr	r0, [r0]
4000b688:	e3500000 	cmp	r0, #0
4000b68c:	0a00000b 	beq	4000b6c0 <_tx_byte_pool_create+0x100>
4000b690:	e59f0158 	ldr	r0, [pc, #344]	; 4000b7f0 <_tx_byte_pool_create+0x230>
4000b694:	e5900000 	ldr	r0, [r0]
4000b698:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b69c:	e59f014c 	ldr	r0, [pc, #332]	; 4000b7f0 <_tx_byte_pool_create+0x230>
4000b6a0:	e5900000 	ldr	r0, [r0]
4000b6a4:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b6a8:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b6ac:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b6b0:	e59f0138 	ldr	r0, [pc, #312]	; 4000b7f0 <_tx_byte_pool_create+0x230>
4000b6b4:	e5900000 	ldr	r0, [r0]
4000b6b8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b6bc:	ea000003 	b	4000b6d0 <_tx_byte_pool_create+0x110>
4000b6c0:	e59f0128 	ldr	r0, [pc, #296]	; 4000b7f0 <_tx_byte_pool_create+0x230>
4000b6c4:	e5804000 	str	r4, [r0]
4000b6c8:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b6cc:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b6d0:	e59f011c 	ldr	r0, [pc, #284]	; 4000b7f4 <_tx_byte_pool_create+0x234>
4000b6d4:	e5900000 	ldr	r0, [r0]
4000b6d8:	e2800001 	add	r0, r0, #1
4000b6dc:	e59f1110 	ldr	r1, [pc, #272]	; 4000b7f4 <_tx_byte_pool_create+0x234>
4000b6e0:	e5810000 	str	r0, [r1]
4000b6e4:	e3a03000 	mov	r3, #0
4000b6e8:	e58d3000 	str	r3, [sp]
4000b6ec:	e1a03007 	mov	r3, r7
4000b6f0:	e1a02005 	mov	r2, r5
4000b6f4:	e1a01004 	mov	r1, r4
4000b6f8:	e3a00008 	mov	r0, #8
4000b6fc:	eb0012ce 	bl	4001023c <_tx_trace_object_register>
4000b700:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b7f8 <_tx_byte_pool_create+0x238>
4000b704:	e5910000 	ldr	r0, [r1]
4000b708:	e3500000 	cmp	r0, #0
4000b70c:	0a000031 	beq	4000b7d8 <_tx_byte_pool_create+0x218>
4000b710:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b7fc <_tx_byte_pool_create+0x23c>
4000b714:	e5911000 	ldr	r1, [r1]
4000b718:	e2811001 	add	r1, r1, #1
4000b71c:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b7fc <_tx_byte_pool_create+0x23c>
4000b720:	e5821000 	str	r1, [r2]
4000b724:	e580100c 	str	r1, [r0, #12]
4000b728:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b800 <_tx_byte_pool_create+0x240>
4000b72c:	e5911000 	ldr	r1, [r1]
4000b730:	e3510000 	cmp	r1, #0
4000b734:	1a000006 	bne	4000b754 <_tx_byte_pool_create+0x194>
4000b738:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b804 <_tx_byte_pool_create+0x244>
4000b73c:	e5911000 	ldr	r1, [r1]
4000b740:	e5801000 	str	r1, [r0]
4000b744:	e5901000 	ldr	r1, [r0]
4000b748:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b74c:	e5801004 	str	r1, [r0, #4]
4000b750:	ea00000d 	b	4000b78c <_tx_byte_pool_create+0x1cc>
4000b754:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b800 <_tx_byte_pool_create+0x240>
4000b758:	e5911000 	ldr	r1, [r1]
4000b75c:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b808 <_tx_byte_pool_create+0x248>
4000b760:	e1510002 	cmp	r1, r2
4000b764:	2a000004 	bcs	4000b77c <_tx_byte_pool_create+0x1bc>
4000b768:	e3e01000 	mvn	r1, #0
4000b76c:	e5801000 	str	r1, [r0]
4000b770:	e3a01000 	mov	r1, #0
4000b774:	e5801004 	str	r1, [r0, #4]
4000b778:	ea000003 	b	4000b78c <_tx_byte_pool_create+0x1cc>
4000b77c:	e59f1084 	ldr	r1, [pc, #132]	; 4000b808 <_tx_byte_pool_create+0x248>
4000b780:	e5801000 	str	r1, [r0]
4000b784:	e3a01000 	mov	r1, #0
4000b788:	e5801004 	str	r1, [r0, #4]
4000b78c:	e3a01015 	mov	r1, #21
4000b790:	e5801008 	str	r1, [r0, #8]
4000b794:	e5804010 	str	r4, [r0, #16]
4000b798:	e5806014 	str	r6, [r0, #20]
4000b79c:	e5807018 	str	r7, [r0, #24]
4000b7a0:	e28d1004 	add	r1, sp, #4
4000b7a4:	e580101c 	str	r1, [r0, #28]
4000b7a8:	e2800020 	add	r0, r0, #32
4000b7ac:	e59f1058 	ldr	r1, [pc, #88]	; 4000b80c <_tx_byte_pool_create+0x24c>
4000b7b0:	e5911000 	ldr	r1, [r1]
4000b7b4:	e1500001 	cmp	r0, r1
4000b7b8:	3a000001 	bcc	4000b7c4 <_tx_byte_pool_create+0x204>
4000b7bc:	e59f104c 	ldr	r1, [pc, #76]	; 4000b810 <_tx_byte_pool_create+0x250>
4000b7c0:	e5910000 	ldr	r0, [r1]
4000b7c4:	e59f102c 	ldr	r1, [pc, #44]	; 4000b7f8 <_tx_byte_pool_create+0x238>
4000b7c8:	e5810000 	str	r0, [r1]
4000b7cc:	e59f1040 	ldr	r1, [pc, #64]	; 4000b814 <_tx_byte_pool_create+0x254>
4000b7d0:	e5911000 	ldr	r1, [r1]
4000b7d4:	e5810020 	str	r0, [r1, #32]
4000b7d8:	e121f008 	msr	CPSR_c, r8
4000b7dc:	e3a00000 	mov	r0, #0
4000b7e0:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b7e4:	aaaaaaaa 	.word	0xaaaaaaaa
4000b7e8:	ffffeeee 	.word	0xffffeeee
4000b7ec:	42595445 	.word	0x42595445
4000b7f0:	40030ed0 	.word	0x40030ed0
4000b7f4:	40030ed4 	.word	0x40030ed4
4000b7f8:	40030ea0 	.word	0x40030ea0
4000b7fc:	40030ea4 	.word	0x40030ea4
4000b800:	40030e2c 	.word	0x40030e2c
4000b804:	40030e34 	.word	0x40030e34
4000b808:	f0f0f0f0 	.word	0xf0f0f0f0
4000b80c:	40030e9c 	.word	0x40030e9c
4000b810:	40030e98 	.word	0x40030e98
4000b814:	40030e8c 	.word	0x40030e8c

4000b818 <_tx_byte_pool_delete>:
4000b818:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b81c:	e1a04000 	mov	r4, r0
4000b820:	e10f5000 	mrs	r5, CPSR
4000b824:	e3856080 	orr	r6, r5, #128	; 0x80
4000b828:	e121f006 	msr	CPSR_c, r6
4000b82c:	e59f1204 	ldr	r1, [pc, #516]	; 4000ba38 <_tx_byte_pool_delete+0x220>
4000b830:	e5910000 	ldr	r0, [r1]
4000b834:	e3500000 	cmp	r0, #0
4000b838:	0a000031 	beq	4000b904 <_tx_byte_pool_delete+0xec>
4000b83c:	e59f11f8 	ldr	r1, [pc, #504]	; 4000ba3c <_tx_byte_pool_delete+0x224>
4000b840:	e5911000 	ldr	r1, [r1]
4000b844:	e2811001 	add	r1, r1, #1
4000b848:	e59f21ec 	ldr	r2, [pc, #492]	; 4000ba3c <_tx_byte_pool_delete+0x224>
4000b84c:	e5821000 	str	r1, [r2]
4000b850:	e580100c 	str	r1, [r0, #12]
4000b854:	e59f11e4 	ldr	r1, [pc, #484]	; 4000ba40 <_tx_byte_pool_delete+0x228>
4000b858:	e5911000 	ldr	r1, [r1]
4000b85c:	e3510000 	cmp	r1, #0
4000b860:	1a000006 	bne	4000b880 <_tx_byte_pool_delete+0x68>
4000b864:	e59f11d8 	ldr	r1, [pc, #472]	; 4000ba44 <_tx_byte_pool_delete+0x22c>
4000b868:	e5911000 	ldr	r1, [r1]
4000b86c:	e5801000 	str	r1, [r0]
4000b870:	e5901000 	ldr	r1, [r0]
4000b874:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b878:	e5801004 	str	r1, [r0, #4]
4000b87c:	ea00000d 	b	4000b8b8 <_tx_byte_pool_delete+0xa0>
4000b880:	e59f11b8 	ldr	r1, [pc, #440]	; 4000ba40 <_tx_byte_pool_delete+0x228>
4000b884:	e5911000 	ldr	r1, [r1]
4000b888:	e59f21b8 	ldr	r2, [pc, #440]	; 4000ba48 <_tx_byte_pool_delete+0x230>
4000b88c:	e1510002 	cmp	r1, r2
4000b890:	2a000004 	bcs	4000b8a8 <_tx_byte_pool_delete+0x90>
4000b894:	e3e01000 	mvn	r1, #0
4000b898:	e5801000 	str	r1, [r0]
4000b89c:	e3a01000 	mov	r1, #0
4000b8a0:	e5801004 	str	r1, [r0, #4]
4000b8a4:	ea000003 	b	4000b8b8 <_tx_byte_pool_delete+0xa0>
4000b8a8:	e59f1198 	ldr	r1, [pc, #408]	; 4000ba48 <_tx_byte_pool_delete+0x230>
4000b8ac:	e5801000 	str	r1, [r0]
4000b8b0:	e3a01000 	mov	r1, #0
4000b8b4:	e5801004 	str	r1, [r0, #4]
4000b8b8:	e3a01016 	mov	r1, #22
4000b8bc:	e5801008 	str	r1, [r0, #8]
4000b8c0:	e5804010 	str	r4, [r0, #16]
4000b8c4:	e580d014 	str	sp, [r0, #20]
4000b8c8:	e3a01000 	mov	r1, #0
4000b8cc:	e5801018 	str	r1, [r0, #24]
4000b8d0:	e580101c 	str	r1, [r0, #28]
4000b8d4:	e2800020 	add	r0, r0, #32
4000b8d8:	e59f116c 	ldr	r1, [pc, #364]	; 4000ba4c <_tx_byte_pool_delete+0x234>
4000b8dc:	e5911000 	ldr	r1, [r1]
4000b8e0:	e1500001 	cmp	r0, r1
4000b8e4:	3a000001 	bcc	4000b8f0 <_tx_byte_pool_delete+0xd8>
4000b8e8:	e59f1160 	ldr	r1, [pc, #352]	; 4000ba50 <_tx_byte_pool_delete+0x238>
4000b8ec:	e5910000 	ldr	r0, [r1]
4000b8f0:	e59f1140 	ldr	r1, [pc, #320]	; 4000ba38 <_tx_byte_pool_delete+0x220>
4000b8f4:	e5810000 	str	r0, [r1]
4000b8f8:	e59f1154 	ldr	r1, [pc, #340]	; 4000ba54 <_tx_byte_pool_delete+0x23c>
4000b8fc:	e5911000 	ldr	r1, [r1]
4000b900:	e5810020 	str	r0, [r1, #32]
4000b904:	e1a00004 	mov	r0, r4
4000b908:	eb0012b6 	bl	400103e8 <_tx_trace_object_unregister>
4000b90c:	e59f0144 	ldr	r0, [pc, #324]	; 4000ba58 <_tx_byte_pool_delete+0x240>
4000b910:	e5900000 	ldr	r0, [r0]
4000b914:	e2400001 	sub	r0, r0, #1
4000b918:	e59f1138 	ldr	r1, [pc, #312]	; 4000ba58 <_tx_byte_pool_delete+0x240>
4000b91c:	e5810000 	str	r0, [r1]
4000b920:	e3a00000 	mov	r0, #0
4000b924:	e5840000 	str	r0, [r4]
4000b928:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b92c:	e1500004 	cmp	r0, r4
4000b930:	1a000003 	bne	4000b944 <_tx_byte_pool_delete+0x12c>
4000b934:	e3a00000 	mov	r0, #0
4000b938:	e59f111c 	ldr	r1, [pc, #284]	; 4000ba5c <_tx_byte_pool_delete+0x244>
4000b93c:	e5810000 	str	r0, [r1]
4000b940:	ea00000c 	b	4000b978 <_tx_byte_pool_delete+0x160>
4000b944:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b948:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b94c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b950:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b954:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b958:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b95c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000ba5c <_tx_byte_pool_delete+0x244>
4000b960:	e5900000 	ldr	r0, [r0]
4000b964:	e1500004 	cmp	r0, r4
4000b968:	1a000002 	bne	4000b978 <_tx_byte_pool_delete+0x160>
4000b96c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ba5c <_tx_byte_pool_delete+0x244>
4000b970:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b974:	e5810000 	str	r0, [r1]
4000b978:	e59f00e0 	ldr	r0, [pc, #224]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000b97c:	e5900000 	ldr	r0, [r0]
4000b980:	e2800001 	add	r0, r0, #1
4000b984:	e59f10d4 	ldr	r1, [pc, #212]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000b988:	e5810000 	str	r0, [r1]
4000b98c:	e121f005 	msr	CPSR_c, r5
4000b990:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b994:	e58d0000 	str	r0, [sp]
4000b998:	ea000017 	b	4000b9fc <_tx_byte_pool_delete+0x1e4>
4000b99c:	e10f5000 	mrs	r5, CPSR
4000b9a0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b9a4:	e121f006 	msr	CPSR_c, r6
4000b9a8:	e3a00000 	mov	r0, #0
4000b9ac:	e59d1000 	ldr	r1, [sp]
4000b9b0:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b9b4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000b9b8:	e5900000 	ldr	r0, [r0]
4000b9bc:	e2800001 	add	r0, r0, #1
4000b9c0:	e59f1098 	ldr	r1, [pc, #152]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000b9c4:	e5810000 	str	r0, [r1]
4000b9c8:	e121f005 	msr	CPSR_c, r5
4000b9cc:	e3a00001 	mov	r0, #1
4000b9d0:	e59d1000 	ldr	r1, [sp]
4000b9d4:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b9d8:	e59d0000 	ldr	r0, [sp]
4000b9dc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b9e0:	e58d0000 	str	r0, [sp]
4000b9e4:	e59d1000 	ldr	r1, [sp]
4000b9e8:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b9ec:	eb000ebc 	bl	4000f4e4 <_tx_thread_system_resume>
4000b9f0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b9f4:	e2400001 	sub	r0, r0, #1
4000b9f8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b9fc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000ba00:	e3500000 	cmp	r0, #0
4000ba04:	1affffe4 	bne	4000b99c <_tx_byte_pool_delete+0x184>
4000ba08:	e10f5000 	mrs	r5, CPSR
4000ba0c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba10:	e121f006 	msr	CPSR_c, r6
4000ba14:	e59f0044 	ldr	r0, [pc, #68]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000ba18:	e5900000 	ldr	r0, [r0]
4000ba1c:	e2400001 	sub	r0, r0, #1
4000ba20:	e59f1038 	ldr	r1, [pc, #56]	; 4000ba60 <_tx_byte_pool_delete+0x248>
4000ba24:	e5810000 	str	r0, [r1]
4000ba28:	e121f005 	msr	CPSR_c, r5
4000ba2c:	eb000e80 	bl	4000f434 <_tx_thread_system_preempt_check>
4000ba30:	e3a00000 	mov	r0, #0
4000ba34:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ba38:	40030ea0 	.word	0x40030ea0
4000ba3c:	40030ea4 	.word	0x40030ea4
4000ba40:	40030e2c 	.word	0x40030e2c
4000ba44:	40030e34 	.word	0x40030e34
4000ba48:	f0f0f0f0 	.word	0xf0f0f0f0
4000ba4c:	40030e9c 	.word	0x40030e9c
4000ba50:	40030e98 	.word	0x40030e98
4000ba54:	40030e8c 	.word	0x40030e8c
4000ba58:	40030ed4 	.word	0x40030ed4
4000ba5c:	40030ed0 	.word	0x40030ed0
4000ba60:	40030e50 	.word	0x40030e50

4000ba64 <_tx_byte_pool_search>:
4000ba64:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ba68:	e1a02000 	mov	r2, r0
4000ba6c:	e3a08000 	mov	r8, #0
4000ba70:	e10f3000 	mrs	r3, CPSR
4000ba74:	e383c080 	orr	ip, r3, #128	; 0x80
4000ba78:	e121f00c 	msr	CPSR_c, ip
4000ba7c:	e5920008 	ldr	r0, [r2, #8]
4000ba80:	e1500001 	cmp	r0, r1
4000ba84:	8a000002 	bhi	4000ba94 <_tx_byte_pool_search+0x30>
4000ba88:	e121f003 	msr	CPSR_c, r3
4000ba8c:	e3a00000 	mov	r0, #0
4000ba90:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000ba94:	e5925014 	ldr	r5, [r2, #20]
4000ba98:	e1a0e005 	mov	lr, r5
4000ba9c:	e592000c 	ldr	r0, [r2, #12]
4000baa0:	e2807001 	add	r7, r0, #1
4000baa4:	e3a06000 	mov	r6, #0
4000baa8:	e1a00000 	nop			; (mov r0, r0)
4000baac:	e59e0004 	ldr	r0, [lr, #4]
4000bab0:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bab4:	e29aa012 	adds	sl, sl, #18
4000bab8:	1a000020 	bne	4000bb40 <_tx_byte_pool_search+0xdc>
4000babc:	e3580000 	cmp	r8, #0
4000bac0:	1a000004 	bne	4000bad8 <_tx_byte_pool_search+0x74>
4000bac4:	e5920014 	ldr	r0, [r2, #20]
4000bac8:	e1500005 	cmp	r0, r5
4000bacc:	1a000000 	bne	4000bad4 <_tx_byte_pool_search+0x70>
4000bad0:	e582e014 	str	lr, [r2, #20]
4000bad4:	e3a08001 	mov	r8, #1
4000bad8:	e59e4000 	ldr	r4, [lr]
4000badc:	e044000e 	sub	r0, r4, lr
4000bae0:	e2406008 	sub	r6, r0, #8
4000bae4:	e1560001 	cmp	r6, r1
4000bae8:	3a000000 	bcc	4000baf0 <_tx_byte_pool_search+0x8c>
4000baec:	ea000026 	b	4000bb8c <_tx_byte_pool_search+0x128>
4000baf0:	e3a06000 	mov	r6, #0
4000baf4:	e5940004 	ldr	r0, [r4, #4]
4000baf8:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000bafc:	e29aa012 	adds	sl, sl, #18
4000bb00:	1a000009 	bne	4000bb2c <_tx_byte_pool_search+0xc8>
4000bb04:	e5940000 	ldr	r0, [r4]
4000bb08:	e58e0000 	str	r0, [lr]
4000bb0c:	e592000c 	ldr	r0, [r2, #12]
4000bb10:	e2400001 	sub	r0, r0, #1
4000bb14:	e582000c 	str	r0, [r2, #12]
4000bb18:	e5920014 	ldr	r0, [r2, #20]
4000bb1c:	e1500004 	cmp	r0, r4
4000bb20:	1a000007 	bne	4000bb44 <_tx_byte_pool_search+0xe0>
4000bb24:	e582e014 	str	lr, [r2, #20]
4000bb28:	ea000005 	b	4000bb44 <_tx_byte_pool_search+0xe0>
4000bb2c:	e594e000 	ldr	lr, [r4]
4000bb30:	e3570000 	cmp	r7, #0
4000bb34:	0a000002 	beq	4000bb44 <_tx_byte_pool_search+0xe0>
4000bb38:	e2477001 	sub	r7, r7, #1
4000bb3c:	ea000000 	b	4000bb44 <_tx_byte_pool_search+0xe0>
4000bb40:	e59ee000 	ldr	lr, [lr]
4000bb44:	e3570000 	cmp	r7, #0
4000bb48:	0a000000 	beq	4000bb50 <_tx_byte_pool_search+0xec>
4000bb4c:	e2477001 	sub	r7, r7, #1
4000bb50:	e121f003 	msr	CPSR_c, r3
4000bb54:	e10f3000 	mrs	r3, CPSR
4000bb58:	e383c080 	orr	ip, r3, #128	; 0x80
4000bb5c:	e121f00c 	msr	CPSR_c, ip
4000bb60:	e59f00ac 	ldr	r0, [pc, #172]	; 4000bc14 <_tx_byte_pool_search+0x1b0>
4000bb64:	e5909000 	ldr	r9, [r0]
4000bb68:	e5920020 	ldr	r0, [r2, #32]
4000bb6c:	e1500009 	cmp	r0, r9
4000bb70:	0a000003 	beq	4000bb84 <_tx_byte_pool_search+0x120>
4000bb74:	e592e014 	ldr	lr, [r2, #20]
4000bb78:	e592000c 	ldr	r0, [r2, #12]
4000bb7c:	e2807001 	add	r7, r0, #1
4000bb80:	e5829020 	str	r9, [r2, #32]
4000bb84:	e3570000 	cmp	r7, #0
4000bb88:	1affffc7 	bne	4000baac <_tx_byte_pool_search+0x48>
4000bb8c:	e1a00000 	nop			; (mov r0, r0)
4000bb90:	e3560000 	cmp	r6, #0
4000bb94:	0a00001a 	beq	4000bc04 <_tx_byte_pool_search+0x1a0>
4000bb98:	e0460001 	sub	r0, r6, r1
4000bb9c:	e3500014 	cmp	r0, #20
4000bba0:	3a00000a 	bcc	4000bbd0 <_tx_byte_pool_search+0x16c>
4000bba4:	e08e0001 	add	r0, lr, r1
4000bba8:	e2804008 	add	r4, r0, #8
4000bbac:	e59e0000 	ldr	r0, [lr]
4000bbb0:	e5840000 	str	r0, [r4]
4000bbb4:	e59f005c 	ldr	r0, [pc, #92]	; 4000bc18 <_tx_byte_pool_search+0x1b4>
4000bbb8:	e5840004 	str	r0, [r4, #4]
4000bbbc:	e592000c 	ldr	r0, [r2, #12]
4000bbc0:	e2800001 	add	r0, r0, #1
4000bbc4:	e582000c 	str	r0, [r2, #12]
4000bbc8:	e58e4000 	str	r4, [lr]
4000bbcc:	e1a06001 	mov	r6, r1
4000bbd0:	e58e2004 	str	r2, [lr, #4]
4000bbd4:	e5920008 	ldr	r0, [r2, #8]
4000bbd8:	e0400006 	sub	r0, r0, r6
4000bbdc:	e2400008 	sub	r0, r0, #8
4000bbe0:	e5820008 	str	r0, [r2, #8]
4000bbe4:	e5920014 	ldr	r0, [r2, #20]
4000bbe8:	e150000e 	cmp	r0, lr
4000bbec:	1a000001 	bne	4000bbf8 <_tx_byte_pool_search+0x194>
4000bbf0:	e59e0000 	ldr	r0, [lr]
4000bbf4:	e5820014 	str	r0, [r2, #20]
4000bbf8:	e121f003 	msr	CPSR_c, r3
4000bbfc:	e28ee008 	add	lr, lr, #8
4000bc00:	ea000001 	b	4000bc0c <_tx_byte_pool_search+0x1a8>
4000bc04:	e121f003 	msr	CPSR_c, r3
4000bc08:	e3a0e000 	mov	lr, #0
4000bc0c:	e1a0000e 	mov	r0, lr
4000bc10:	eaffff9e 	b	4000ba90 <_tx_byte_pool_search+0x2c>
4000bc14:	40030e34 	.word	0x40030e34
4000bc18:	ffffeeee 	.word	0xffffeeee

4000bc1c <_tx_byte_release>:
4000bc1c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bc20:	e1a04000 	mov	r4, r0
4000bc24:	e1a09004 	mov	r9, r4
4000bc28:	e1b04009 	movs	r4, r9
4000bc2c:	0a00000f 	beq	4000bc70 <_tx_byte_release+0x54>
4000bc30:	e2499008 	sub	r9, r9, #8
4000bc34:	e5990004 	ldr	r0, [r9, #4]
4000bc38:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000bc3c:	e2911012 	adds	r1, r1, #18
4000bc40:	0a000008 	beq	4000bc68 <_tx_byte_release+0x4c>
4000bc44:	e5997004 	ldr	r7, [r9, #4]
4000bc48:	e3570000 	cmp	r7, #0
4000bc4c:	0a000003 	beq	4000bc60 <_tx_byte_release+0x44>
4000bc50:	e5970000 	ldr	r0, [r7]
4000bc54:	e59f125c 	ldr	r1, [pc, #604]	; 4000beb8 <_tx_byte_release+0x29c>
4000bc58:	e1500001 	cmp	r0, r1
4000bc5c:	0a000005 	beq	4000bc78 <_tx_byte_release+0x5c>
4000bc60:	e3a00003 	mov	r0, #3
4000bc64:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bc68:	e3a00003 	mov	r0, #3
4000bc6c:	eafffffc 	b	4000bc64 <_tx_byte_release+0x48>
4000bc70:	e3a00003 	mov	r0, #3
4000bc74:	eafffffa 	b	4000bc64 <_tx_byte_release+0x48>
4000bc78:	e59f023c 	ldr	r0, [pc, #572]	; 4000bebc <_tx_byte_release+0x2a0>
4000bc7c:	e5908000 	ldr	r8, [r0]
4000bc80:	e5878020 	str	r8, [r7, #32]
4000bc84:	e10f5000 	mrs	r5, CPSR
4000bc88:	e3856080 	orr	r6, r5, #128	; 0x80
4000bc8c:	e121f006 	msr	CPSR_c, r6
4000bc90:	e59f1228 	ldr	r1, [pc, #552]	; 4000bec0 <_tx_byte_release+0x2a4>
4000bc94:	e5910000 	ldr	r0, [r1]
4000bc98:	e3500000 	cmp	r0, #0
4000bc9c:	0a000032 	beq	4000bd6c <_tx_byte_release+0x150>
4000bca0:	e59f121c 	ldr	r1, [pc, #540]	; 4000bec4 <_tx_byte_release+0x2a8>
4000bca4:	e5911000 	ldr	r1, [r1]
4000bca8:	e2811001 	add	r1, r1, #1
4000bcac:	e59f2210 	ldr	r2, [pc, #528]	; 4000bec4 <_tx_byte_release+0x2a8>
4000bcb0:	e5821000 	str	r1, [r2]
4000bcb4:	e580100c 	str	r1, [r0, #12]
4000bcb8:	e59f1208 	ldr	r1, [pc, #520]	; 4000bec8 <_tx_byte_release+0x2ac>
4000bcbc:	e5911000 	ldr	r1, [r1]
4000bcc0:	e3510000 	cmp	r1, #0
4000bcc4:	1a000006 	bne	4000bce4 <_tx_byte_release+0xc8>
4000bcc8:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bebc <_tx_byte_release+0x2a0>
4000bccc:	e5911000 	ldr	r1, [r1]
4000bcd0:	e5801000 	str	r1, [r0]
4000bcd4:	e5901000 	ldr	r1, [r0]
4000bcd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bcdc:	e5801004 	str	r1, [r0, #4]
4000bce0:	ea00000d 	b	4000bd1c <_tx_byte_release+0x100>
4000bce4:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bec8 <_tx_byte_release+0x2ac>
4000bce8:	e5911000 	ldr	r1, [r1]
4000bcec:	e59f21d8 	ldr	r2, [pc, #472]	; 4000becc <_tx_byte_release+0x2b0>
4000bcf0:	e1510002 	cmp	r1, r2
4000bcf4:	2a000004 	bcs	4000bd0c <_tx_byte_release+0xf0>
4000bcf8:	e3e01000 	mvn	r1, #0
4000bcfc:	e5801000 	str	r1, [r0]
4000bd00:	e3a01000 	mov	r1, #0
4000bd04:	e5801004 	str	r1, [r0, #4]
4000bd08:	ea000003 	b	4000bd1c <_tx_byte_release+0x100>
4000bd0c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000becc <_tx_byte_release+0x2b0>
4000bd10:	e5801000 	str	r1, [r0]
4000bd14:	e3a01000 	mov	r1, #0
4000bd18:	e5801004 	str	r1, [r0, #4]
4000bd1c:	e3a0101b 	mov	r1, #27
4000bd20:	e5801008 	str	r1, [r0, #8]
4000bd24:	e5807010 	str	r7, [r0, #16]
4000bd28:	e5804014 	str	r4, [r0, #20]
4000bd2c:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000bd30:	e5801018 	str	r1, [r0, #24]
4000bd34:	e5971008 	ldr	r1, [r7, #8]
4000bd38:	e580101c 	str	r1, [r0, #28]
4000bd3c:	e2800020 	add	r0, r0, #32
4000bd40:	e59f1188 	ldr	r1, [pc, #392]	; 4000bed0 <_tx_byte_release+0x2b4>
4000bd44:	e5911000 	ldr	r1, [r1]
4000bd48:	e1500001 	cmp	r0, r1
4000bd4c:	3a000001 	bcc	4000bd58 <_tx_byte_release+0x13c>
4000bd50:	e59f117c 	ldr	r1, [pc, #380]	; 4000bed4 <_tx_byte_release+0x2b8>
4000bd54:	e5910000 	ldr	r0, [r1]
4000bd58:	e59f1160 	ldr	r1, [pc, #352]	; 4000bec0 <_tx_byte_release+0x2a4>
4000bd5c:	e5810000 	str	r0, [r1]
4000bd60:	e59f1170 	ldr	r1, [pc, #368]	; 4000bed8 <_tx_byte_release+0x2bc>
4000bd64:	e5911000 	ldr	r1, [r1]
4000bd68:	e5810020 	str	r0, [r1, #32]
4000bd6c:	e59f0168 	ldr	r0, [pc, #360]	; 4000bedc <_tx_byte_release+0x2c0>
4000bd70:	e5890004 	str	r0, [r9, #4]
4000bd74:	e5970008 	ldr	r0, [r7, #8]
4000bd78:	e5991000 	ldr	r1, [r9]
4000bd7c:	e0411009 	sub	r1, r1, r9
4000bd80:	e0800001 	add	r0, r0, r1
4000bd84:	e5870008 	str	r0, [r7, #8]
4000bd88:	e5970014 	ldr	r0, [r7, #20]
4000bd8c:	e1500009 	cmp	r0, r9
4000bd90:	9a000000 	bls	4000bd98 <_tx_byte_release+0x17c>
4000bd94:	e5879014 	str	r9, [r7, #20]
4000bd98:	ea00003e 	b	4000be98 <_tx_byte_release+0x27c>
4000bd9c:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bda0:	e121f005 	msr	CPSR_c, r5
4000bda4:	e1a00007 	mov	r0, r7
4000bda8:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bdac:	ebffff2c 	bl	4000ba64 <_tx_byte_pool_search>
4000bdb0:	e1a09000 	mov	r9, r0
4000bdb4:	e10f5000 	mrs	r5, CPSR
4000bdb8:	e3856080 	orr	r6, r5, #128	; 0x80
4000bdbc:	e121f006 	msr	CPSR_c, r6
4000bdc0:	e3590000 	cmp	r9, #0
4000bdc4:	1a000000 	bne	4000bdcc <_tx_byte_release+0x1b0>
4000bdc8:	ea000035 	b	4000bea4 <_tx_byte_release+0x288>
4000bdcc:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bdd0:	e150000a 	cmp	r0, sl
4000bdd4:	0a00000c 	beq	4000be0c <_tx_byte_release+0x1f0>
4000bdd8:	e2499008 	sub	r9, r9, #8
4000bddc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bedc <_tx_byte_release+0x2c0>
4000bde0:	e5890004 	str	r0, [r9, #4]
4000bde4:	e5970008 	ldr	r0, [r7, #8]
4000bde8:	e5991000 	ldr	r1, [r9]
4000bdec:	e0411009 	sub	r1, r1, r9
4000bdf0:	e0800001 	add	r0, r0, r1
4000bdf4:	e5870008 	str	r0, [r7, #8]
4000bdf8:	e5970014 	ldr	r0, [r7, #20]
4000bdfc:	e1500009 	cmp	r0, r9
4000be00:	9a000000 	bls	4000be08 <_tx_byte_release+0x1ec>
4000be04:	e5879014 	str	r9, [r7, #20]
4000be08:	ea000022 	b	4000be98 <_tx_byte_release+0x27c>
4000be0c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be10:	e150000a 	cmp	r0, sl
4000be14:	1a000002 	bne	4000be24 <_tx_byte_release+0x208>
4000be18:	e3a00000 	mov	r0, #0
4000be1c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be20:	ea000007 	b	4000be44 <_tx_byte_release+0x228>
4000be24:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be28:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be2c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000be30:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000be34:	e5810074 	str	r0, [r1, #116]	; 0x74
4000be38:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be3c:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000be40:	e5810070 	str	r0, [r1, #112]	; 0x70
4000be44:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000be48:	e2400001 	sub	r0, r0, #1
4000be4c:	e5870028 	str	r0, [r7, #40]	; 0x28
4000be50:	e3a00000 	mov	r0, #0
4000be54:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000be58:	e59f0080 	ldr	r0, [pc, #128]	; 4000bee0 <_tx_byte_release+0x2c4>
4000be5c:	e5900000 	ldr	r0, [r0]
4000be60:	e2800001 	add	r0, r0, #1
4000be64:	e59f1074 	ldr	r1, [pc, #116]	; 4000bee0 <_tx_byte_release+0x2c4>
4000be68:	e5810000 	str	r0, [r1]
4000be6c:	e121f005 	msr	CPSR_c, r5
4000be70:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000be74:	e5809000 	str	r9, [r0]
4000be78:	e3a00000 	mov	r0, #0
4000be7c:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000be80:	e1a0000a 	mov	r0, sl
4000be84:	eb000d96 	bl	4000f4e4 <_tx_thread_system_resume>
4000be88:	e10f5000 	mrs	r5, CPSR
4000be8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000be90:	e121f006 	msr	CPSR_c, r6
4000be94:	e1a00000 	nop			; (mov r0, r0)
4000be98:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000be9c:	e3500000 	cmp	r0, #0
4000bea0:	1affffbd 	bne	4000bd9c <_tx_byte_release+0x180>
4000bea4:	e1a00000 	nop			; (mov r0, r0)
4000bea8:	e121f005 	msr	CPSR_c, r5
4000beac:	eb000d60 	bl	4000f434 <_tx_thread_system_preempt_check>
4000beb0:	e3a00000 	mov	r0, #0
4000beb4:	eaffff6a 	b	4000bc64 <_tx_byte_release+0x48>
4000beb8:	42595445 	.word	0x42595445
4000bebc:	40030e34 	.word	0x40030e34
4000bec0:	40030ea0 	.word	0x40030ea0
4000bec4:	40030ea4 	.word	0x40030ea4
4000bec8:	40030e2c 	.word	0x40030e2c
4000becc:	f0f0f0f0 	.word	0xf0f0f0f0
4000bed0:	40030e9c 	.word	0x40030e9c
4000bed4:	40030e98 	.word	0x40030e98
4000bed8:	40030e8c 	.word	0x40030e8c
4000bedc:	ffffeeee 	.word	0xffffeeee
4000bee0:	40030e50 	.word	0x40030e50

4000bee4 <_tx_event_flags_create>:
4000bee4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bee8:	e1a04000 	mov	r4, r0
4000beec:	e1a05001 	mov	r5, r1
4000bef0:	e3a01028 	mov	r1, #40	; 0x28
4000bef4:	e1a00004 	mov	r0, r4
4000bef8:	eb001e95 	bl	40013954 <__aeabi_memclr4>
4000befc:	e5845004 	str	r5, [r4, #4]
4000bf00:	e10f6000 	mrs	r6, CPSR
4000bf04:	e3867080 	orr	r7, r6, #128	; 0x80
4000bf08:	e121f007 	msr	CPSR_c, r7
4000bf0c:	e59f0170 	ldr	r0, [pc, #368]	; 4000c084 <_tx_event_flags_create+0x1a0>
4000bf10:	e5840000 	str	r0, [r4]
4000bf14:	e59f016c 	ldr	r0, [pc, #364]	; 4000c088 <_tx_event_flags_create+0x1a4>
4000bf18:	e5900000 	ldr	r0, [r0]
4000bf1c:	e3500000 	cmp	r0, #0
4000bf20:	0a00000e 	beq	4000bf60 <_tx_event_flags_create+0x7c>
4000bf24:	e59f015c 	ldr	r0, [pc, #348]	; 4000c088 <_tx_event_flags_create+0x1a4>
4000bf28:	e5900000 	ldr	r0, [r0]
4000bf2c:	e590001c 	ldr	r0, [r0, #28]
4000bf30:	e58d0004 	str	r0, [sp, #4]
4000bf34:	e59f014c 	ldr	r0, [pc, #332]	; 4000c088 <_tx_event_flags_create+0x1a4>
4000bf38:	e5900000 	ldr	r0, [r0]
4000bf3c:	e580401c 	str	r4, [r0, #28]
4000bf40:	e59d0004 	ldr	r0, [sp, #4]
4000bf44:	e5804018 	str	r4, [r0, #24]
4000bf48:	e59d0004 	ldr	r0, [sp, #4]
4000bf4c:	e584001c 	str	r0, [r4, #28]
4000bf50:	e59f0130 	ldr	r0, [pc, #304]	; 4000c088 <_tx_event_flags_create+0x1a4>
4000bf54:	e5900000 	ldr	r0, [r0]
4000bf58:	e5840018 	str	r0, [r4, #24]
4000bf5c:	ea000003 	b	4000bf70 <_tx_event_flags_create+0x8c>
4000bf60:	e59f0120 	ldr	r0, [pc, #288]	; 4000c088 <_tx_event_flags_create+0x1a4>
4000bf64:	e5804000 	str	r4, [r0]
4000bf68:	e5844018 	str	r4, [r4, #24]
4000bf6c:	e584401c 	str	r4, [r4, #28]
4000bf70:	e59f0114 	ldr	r0, [pc, #276]	; 4000c08c <_tx_event_flags_create+0x1a8>
4000bf74:	e5900000 	ldr	r0, [r0]
4000bf78:	e2800001 	add	r0, r0, #1
4000bf7c:	e59f1108 	ldr	r1, [pc, #264]	; 4000c08c <_tx_event_flags_create+0x1a8>
4000bf80:	e5810000 	str	r0, [r1]
4000bf84:	e3a03000 	mov	r3, #0
4000bf88:	e1a02005 	mov	r2, r5
4000bf8c:	e1a01004 	mov	r1, r4
4000bf90:	e3a00006 	mov	r0, #6
4000bf94:	e58d3000 	str	r3, [sp]
4000bf98:	eb0010a7 	bl	4001023c <_tx_trace_object_register>
4000bf9c:	e59f10ec 	ldr	r1, [pc, #236]	; 4000c090 <_tx_event_flags_create+0x1ac>
4000bfa0:	e5910000 	ldr	r0, [r1]
4000bfa4:	e3500000 	cmp	r0, #0
4000bfa8:	0a000032 	beq	4000c078 <_tx_event_flags_create+0x194>
4000bfac:	e59f10e0 	ldr	r1, [pc, #224]	; 4000c094 <_tx_event_flags_create+0x1b0>
4000bfb0:	e5911000 	ldr	r1, [r1]
4000bfb4:	e2811001 	add	r1, r1, #1
4000bfb8:	e59f20d4 	ldr	r2, [pc, #212]	; 4000c094 <_tx_event_flags_create+0x1b0>
4000bfbc:	e5821000 	str	r1, [r2]
4000bfc0:	e580100c 	str	r1, [r0, #12]
4000bfc4:	e59f10cc 	ldr	r1, [pc, #204]	; 4000c098 <_tx_event_flags_create+0x1b4>
4000bfc8:	e5911000 	ldr	r1, [r1]
4000bfcc:	e3510000 	cmp	r1, #0
4000bfd0:	1a000006 	bne	4000bff0 <_tx_event_flags_create+0x10c>
4000bfd4:	e59f10c0 	ldr	r1, [pc, #192]	; 4000c09c <_tx_event_flags_create+0x1b8>
4000bfd8:	e5911000 	ldr	r1, [r1]
4000bfdc:	e5801000 	str	r1, [r0]
4000bfe0:	e5901000 	ldr	r1, [r0]
4000bfe4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bfe8:	e5801004 	str	r1, [r0, #4]
4000bfec:	ea00000d 	b	4000c028 <_tx_event_flags_create+0x144>
4000bff0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000c098 <_tx_event_flags_create+0x1b4>
4000bff4:	e5911000 	ldr	r1, [r1]
4000bff8:	e59f20a0 	ldr	r2, [pc, #160]	; 4000c0a0 <_tx_event_flags_create+0x1bc>
4000bffc:	e1510002 	cmp	r1, r2
4000c000:	2a000004 	bcs	4000c018 <_tx_event_flags_create+0x134>
4000c004:	e3e01000 	mvn	r1, #0
4000c008:	e5801000 	str	r1, [r0]
4000c00c:	e3a01000 	mov	r1, #0
4000c010:	e5801004 	str	r1, [r0, #4]
4000c014:	ea000003 	b	4000c028 <_tx_event_flags_create+0x144>
4000c018:	e59f1080 	ldr	r1, [pc, #128]	; 4000c0a0 <_tx_event_flags_create+0x1bc>
4000c01c:	e5801000 	str	r1, [r0]
4000c020:	e3a01000 	mov	r1, #0
4000c024:	e5801004 	str	r1, [r0, #4]
4000c028:	e3a0101e 	mov	r1, #30
4000c02c:	e5801008 	str	r1, [r0, #8]
4000c030:	e5804010 	str	r4, [r0, #16]
4000c034:	e28d1004 	add	r1, sp, #4
4000c038:	e5801014 	str	r1, [r0, #20]
4000c03c:	e3a01000 	mov	r1, #0
4000c040:	e5801018 	str	r1, [r0, #24]
4000c044:	e580101c 	str	r1, [r0, #28]
4000c048:	e2800020 	add	r0, r0, #32
4000c04c:	e59f1050 	ldr	r1, [pc, #80]	; 4000c0a4 <_tx_event_flags_create+0x1c0>
4000c050:	e5911000 	ldr	r1, [r1]
4000c054:	e1500001 	cmp	r0, r1
4000c058:	3a000001 	bcc	4000c064 <_tx_event_flags_create+0x180>
4000c05c:	e59f1044 	ldr	r1, [pc, #68]	; 4000c0a8 <_tx_event_flags_create+0x1c4>
4000c060:	e5910000 	ldr	r0, [r1]
4000c064:	e59f1024 	ldr	r1, [pc, #36]	; 4000c090 <_tx_event_flags_create+0x1ac>
4000c068:	e5810000 	str	r0, [r1]
4000c06c:	e59f1038 	ldr	r1, [pc, #56]	; 4000c0ac <_tx_event_flags_create+0x1c8>
4000c070:	e5911000 	ldr	r1, [r1]
4000c074:	e5810020 	str	r0, [r1, #32]
4000c078:	e121f006 	msr	CPSR_c, r6
4000c07c:	e3a00000 	mov	r0, #0
4000c080:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000c084:	4456444e 	.word	0x4456444e
4000c088:	40030eb8 	.word	0x40030eb8
4000c08c:	40030ebc 	.word	0x40030ebc
4000c090:	40030ea0 	.word	0x40030ea0
4000c094:	40030ea4 	.word	0x40030ea4
4000c098:	40030e2c 	.word	0x40030e2c
4000c09c:	40030e34 	.word	0x40030e34
4000c0a0:	f0f0f0f0 	.word	0xf0f0f0f0
4000c0a4:	40030e9c 	.word	0x40030e9c
4000c0a8:	40030e98 	.word	0x40030e98
4000c0ac:	40030e8c 	.word	0x40030e8c

4000c0b0 <_tx_event_flags_delete>:
4000c0b0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000c0b4:	e1a04000 	mov	r4, r0
4000c0b8:	e10f5000 	mrs	r5, CPSR
4000c0bc:	e3856080 	orr	r6, r5, #128	; 0x80
4000c0c0:	e121f006 	msr	CPSR_c, r6
4000c0c4:	e59f1204 	ldr	r1, [pc, #516]	; 4000c2d0 <_tx_event_flags_delete+0x220>
4000c0c8:	e5910000 	ldr	r0, [r1]
4000c0cc:	e3500000 	cmp	r0, #0
4000c0d0:	0a000031 	beq	4000c19c <_tx_event_flags_delete+0xec>
4000c0d4:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c2d4 <_tx_event_flags_delete+0x224>
4000c0d8:	e5911000 	ldr	r1, [r1]
4000c0dc:	e2811001 	add	r1, r1, #1
4000c0e0:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c2d4 <_tx_event_flags_delete+0x224>
4000c0e4:	e5821000 	str	r1, [r2]
4000c0e8:	e580100c 	str	r1, [r0, #12]
4000c0ec:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c2d8 <_tx_event_flags_delete+0x228>
4000c0f0:	e5911000 	ldr	r1, [r1]
4000c0f4:	e3510000 	cmp	r1, #0
4000c0f8:	1a000006 	bne	4000c118 <_tx_event_flags_delete+0x68>
4000c0fc:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c2dc <_tx_event_flags_delete+0x22c>
4000c100:	e5911000 	ldr	r1, [r1]
4000c104:	e5801000 	str	r1, [r0]
4000c108:	e5901000 	ldr	r1, [r0]
4000c10c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c110:	e5801004 	str	r1, [r0, #4]
4000c114:	ea00000d 	b	4000c150 <_tx_event_flags_delete+0xa0>
4000c118:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c2d8 <_tx_event_flags_delete+0x228>
4000c11c:	e5911000 	ldr	r1, [r1]
4000c120:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c2e0 <_tx_event_flags_delete+0x230>
4000c124:	e1510002 	cmp	r1, r2
4000c128:	2a000004 	bcs	4000c140 <_tx_event_flags_delete+0x90>
4000c12c:	e3e01000 	mvn	r1, #0
4000c130:	e5801000 	str	r1, [r0]
4000c134:	e3a01000 	mov	r1, #0
4000c138:	e5801004 	str	r1, [r0, #4]
4000c13c:	ea000003 	b	4000c150 <_tx_event_flags_delete+0xa0>
4000c140:	e59f1198 	ldr	r1, [pc, #408]	; 4000c2e0 <_tx_event_flags_delete+0x230>
4000c144:	e5801000 	str	r1, [r0]
4000c148:	e3a01000 	mov	r1, #0
4000c14c:	e5801004 	str	r1, [r0, #4]
4000c150:	e3a0101f 	mov	r1, #31
4000c154:	e5801008 	str	r1, [r0, #8]
4000c158:	e5804010 	str	r4, [r0, #16]
4000c15c:	e580d014 	str	sp, [r0, #20]
4000c160:	e3a01000 	mov	r1, #0
4000c164:	e5801018 	str	r1, [r0, #24]
4000c168:	e580101c 	str	r1, [r0, #28]
4000c16c:	e2800020 	add	r0, r0, #32
4000c170:	e59f116c 	ldr	r1, [pc, #364]	; 4000c2e4 <_tx_event_flags_delete+0x234>
4000c174:	e5911000 	ldr	r1, [r1]
4000c178:	e1500001 	cmp	r0, r1
4000c17c:	3a000001 	bcc	4000c188 <_tx_event_flags_delete+0xd8>
4000c180:	e59f1160 	ldr	r1, [pc, #352]	; 4000c2e8 <_tx_event_flags_delete+0x238>
4000c184:	e5910000 	ldr	r0, [r1]
4000c188:	e59f1140 	ldr	r1, [pc, #320]	; 4000c2d0 <_tx_event_flags_delete+0x220>
4000c18c:	e5810000 	str	r0, [r1]
4000c190:	e59f1154 	ldr	r1, [pc, #340]	; 4000c2ec <_tx_event_flags_delete+0x23c>
4000c194:	e5911000 	ldr	r1, [r1]
4000c198:	e5810020 	str	r0, [r1, #32]
4000c19c:	e1a00004 	mov	r0, r4
4000c1a0:	eb001090 	bl	400103e8 <_tx_trace_object_unregister>
4000c1a4:	e59f0144 	ldr	r0, [pc, #324]	; 4000c2f0 <_tx_event_flags_delete+0x240>
4000c1a8:	e5900000 	ldr	r0, [r0]
4000c1ac:	e2400001 	sub	r0, r0, #1
4000c1b0:	e59f1138 	ldr	r1, [pc, #312]	; 4000c2f0 <_tx_event_flags_delete+0x240>
4000c1b4:	e5810000 	str	r0, [r1]
4000c1b8:	e3a00000 	mov	r0, #0
4000c1bc:	e5840000 	str	r0, [r4]
4000c1c0:	e5940018 	ldr	r0, [r4, #24]
4000c1c4:	e1500004 	cmp	r0, r4
4000c1c8:	1a000003 	bne	4000c1dc <_tx_event_flags_delete+0x12c>
4000c1cc:	e3a00000 	mov	r0, #0
4000c1d0:	e59f111c 	ldr	r1, [pc, #284]	; 4000c2f4 <_tx_event_flags_delete+0x244>
4000c1d4:	e5810000 	str	r0, [r1]
4000c1d8:	ea00000c 	b	4000c210 <_tx_event_flags_delete+0x160>
4000c1dc:	e594001c 	ldr	r0, [r4, #28]
4000c1e0:	e5941018 	ldr	r1, [r4, #24]
4000c1e4:	e581001c 	str	r0, [r1, #28]
4000c1e8:	e5940018 	ldr	r0, [r4, #24]
4000c1ec:	e594101c 	ldr	r1, [r4, #28]
4000c1f0:	e5810018 	str	r0, [r1, #24]
4000c1f4:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c2f4 <_tx_event_flags_delete+0x244>
4000c1f8:	e5900000 	ldr	r0, [r0]
4000c1fc:	e1500004 	cmp	r0, r4
4000c200:	1a000002 	bne	4000c210 <_tx_event_flags_delete+0x160>
4000c204:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c2f4 <_tx_event_flags_delete+0x244>
4000c208:	e5940018 	ldr	r0, [r4, #24]
4000c20c:	e5810000 	str	r0, [r1]
4000c210:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c214:	e5900000 	ldr	r0, [r0]
4000c218:	e2800001 	add	r0, r0, #1
4000c21c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c220:	e5810000 	str	r0, [r1]
4000c224:	e121f005 	msr	CPSR_c, r5
4000c228:	e5940010 	ldr	r0, [r4, #16]
4000c22c:	e58d0000 	str	r0, [sp]
4000c230:	ea000017 	b	4000c294 <_tx_event_flags_delete+0x1e4>
4000c234:	e10f5000 	mrs	r5, CPSR
4000c238:	e3856080 	orr	r6, r5, #128	; 0x80
4000c23c:	e121f006 	msr	CPSR_c, r6
4000c240:	e3a00000 	mov	r0, #0
4000c244:	e59d1000 	ldr	r1, [sp]
4000c248:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c24c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c250:	e5900000 	ldr	r0, [r0]
4000c254:	e2800001 	add	r0, r0, #1
4000c258:	e59f1098 	ldr	r1, [pc, #152]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c25c:	e5810000 	str	r0, [r1]
4000c260:	e121f005 	msr	CPSR_c, r5
4000c264:	e3a00001 	mov	r0, #1
4000c268:	e59d1000 	ldr	r1, [sp]
4000c26c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c270:	e59d0000 	ldr	r0, [sp]
4000c274:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c278:	e58d0000 	str	r0, [sp]
4000c27c:	e59d1000 	ldr	r1, [sp]
4000c280:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c284:	eb000c96 	bl	4000f4e4 <_tx_thread_system_resume>
4000c288:	e5940014 	ldr	r0, [r4, #20]
4000c28c:	e2400001 	sub	r0, r0, #1
4000c290:	e5840014 	str	r0, [r4, #20]
4000c294:	e5940014 	ldr	r0, [r4, #20]
4000c298:	e3500000 	cmp	r0, #0
4000c29c:	1affffe4 	bne	4000c234 <_tx_event_flags_delete+0x184>
4000c2a0:	e10f5000 	mrs	r5, CPSR
4000c2a4:	e3856080 	orr	r6, r5, #128	; 0x80
4000c2a8:	e121f006 	msr	CPSR_c, r6
4000c2ac:	e59f0044 	ldr	r0, [pc, #68]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c2b0:	e5900000 	ldr	r0, [r0]
4000c2b4:	e2400001 	sub	r0, r0, #1
4000c2b8:	e59f1038 	ldr	r1, [pc, #56]	; 4000c2f8 <_tx_event_flags_delete+0x248>
4000c2bc:	e5810000 	str	r0, [r1]
4000c2c0:	e121f005 	msr	CPSR_c, r5
4000c2c4:	eb000c5a 	bl	4000f434 <_tx_thread_system_preempt_check>
4000c2c8:	e3a00000 	mov	r0, #0
4000c2cc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c2d0:	40030ea0 	.word	0x40030ea0
4000c2d4:	40030ea4 	.word	0x40030ea4
4000c2d8:	40030e2c 	.word	0x40030e2c
4000c2dc:	40030e34 	.word	0x40030e34
4000c2e0:	f0f0f0f0 	.word	0xf0f0f0f0
4000c2e4:	40030e9c 	.word	0x40030e9c
4000c2e8:	40030e98 	.word	0x40030e98
4000c2ec:	40030e8c 	.word	0x40030e8c
4000c2f0:	40030ebc 	.word	0x40030ebc
4000c2f4:	40030eb8 	.word	0x40030eb8
4000c2f8:	40030e50 	.word	0x40030e50

4000c2fc <_tx_event_flags_get>:
4000c2fc:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c300:	e1a04000 	mov	r4, r0
4000c304:	e1a05001 	mov	r5, r1
4000c308:	e1a06002 	mov	r6, r2
4000c30c:	e1a07003 	mov	r7, r3
4000c310:	e10f8000 	mrs	r8, CPSR
4000c314:	e3880080 	orr	r0, r8, #128	; 0x80
4000c318:	e58d0004 	str	r0, [sp, #4]
4000c31c:	e59d0004 	ldr	r0, [sp, #4]
4000c320:	e121f000 	msr	CPSR_c, r0
4000c324:	e59f1278 	ldr	r1, [pc, #632]	; 4000c5a4 <_tx_event_flags_get+0x2a8>
4000c328:	e5910000 	ldr	r0, [r1]
4000c32c:	e3500000 	cmp	r0, #0
4000c330:	0a000031 	beq	4000c3fc <_tx_event_flags_get+0x100>
4000c334:	e59f126c 	ldr	r1, [pc, #620]	; 4000c5a8 <_tx_event_flags_get+0x2ac>
4000c338:	e5911000 	ldr	r1, [r1]
4000c33c:	e2811001 	add	r1, r1, #1
4000c340:	e59f2260 	ldr	r2, [pc, #608]	; 4000c5a8 <_tx_event_flags_get+0x2ac>
4000c344:	e5821000 	str	r1, [r2]
4000c348:	e580100c 	str	r1, [r0, #12]
4000c34c:	e59f1258 	ldr	r1, [pc, #600]	; 4000c5ac <_tx_event_flags_get+0x2b0>
4000c350:	e5911000 	ldr	r1, [r1]
4000c354:	e3510000 	cmp	r1, #0
4000c358:	1a000006 	bne	4000c378 <_tx_event_flags_get+0x7c>
4000c35c:	e59f124c 	ldr	r1, [pc, #588]	; 4000c5b0 <_tx_event_flags_get+0x2b4>
4000c360:	e5911000 	ldr	r1, [r1]
4000c364:	e5801000 	str	r1, [r0]
4000c368:	e5901000 	ldr	r1, [r0]
4000c36c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c370:	e5801004 	str	r1, [r0, #4]
4000c374:	ea00000d 	b	4000c3b0 <_tx_event_flags_get+0xb4>
4000c378:	e59f122c 	ldr	r1, [pc, #556]	; 4000c5ac <_tx_event_flags_get+0x2b0>
4000c37c:	e5911000 	ldr	r1, [r1]
4000c380:	e59f222c 	ldr	r2, [pc, #556]	; 4000c5b4 <_tx_event_flags_get+0x2b8>
4000c384:	e1510002 	cmp	r1, r2
4000c388:	2a000004 	bcs	4000c3a0 <_tx_event_flags_get+0xa4>
4000c38c:	e3e01000 	mvn	r1, #0
4000c390:	e5801000 	str	r1, [r0]
4000c394:	e3a01000 	mov	r1, #0
4000c398:	e5801004 	str	r1, [r0, #4]
4000c39c:	ea000003 	b	4000c3b0 <_tx_event_flags_get+0xb4>
4000c3a0:	e59f120c 	ldr	r1, [pc, #524]	; 4000c5b4 <_tx_event_flags_get+0x2b8>
4000c3a4:	e5801000 	str	r1, [r0]
4000c3a8:	e3a01000 	mov	r1, #0
4000c3ac:	e5801004 	str	r1, [r0, #4]
4000c3b0:	e3a01020 	mov	r1, #32
4000c3b4:	e5801008 	str	r1, [r0, #8]
4000c3b8:	e5804010 	str	r4, [r0, #16]
4000c3bc:	e5805014 	str	r5, [r0, #20]
4000c3c0:	e5941008 	ldr	r1, [r4, #8]
4000c3c4:	e5801018 	str	r1, [r0, #24]
4000c3c8:	e580601c 	str	r6, [r0, #28]
4000c3cc:	e2800020 	add	r0, r0, #32
4000c3d0:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c5b8 <_tx_event_flags_get+0x2bc>
4000c3d4:	e5911000 	ldr	r1, [r1]
4000c3d8:	e1500001 	cmp	r0, r1
4000c3dc:	3a000001 	bcc	4000c3e8 <_tx_event_flags_get+0xec>
4000c3e0:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c5bc <_tx_event_flags_get+0x2c0>
4000c3e4:	e5910000 	ldr	r0, [r1]
4000c3e8:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c5a4 <_tx_event_flags_get+0x2a8>
4000c3ec:	e5810000 	str	r0, [r1]
4000c3f0:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c5c0 <_tx_event_flags_get+0x2c4>
4000c3f4:	e5911000 	ldr	r1, [r1]
4000c3f8:	e5810020 	str	r0, [r1, #32]
4000c3fc:	e594a008 	ldr	sl, [r4, #8]
4000c400:	e594b020 	ldr	fp, [r4, #32]
4000c404:	e35b0000 	cmp	fp, #0
4000c408:	0a000000 	beq	4000c410 <_tx_event_flags_get+0x114>
4000c40c:	e1caa00b 	bic	sl, sl, fp
4000c410:	e3160002 	tst	r6, #2
4000c414:	0a000006 	beq	4000c434 <_tx_event_flags_get+0x138>
4000c418:	e00a0005 	and	r0, sl, r5
4000c41c:	e1500005 	cmp	r0, r5
4000c420:	1a000001 	bne	4000c42c <_tx_event_flags_get+0x130>
4000c424:	e3a09000 	mov	r9, #0
4000c428:	ea000006 	b	4000c448 <_tx_event_flags_get+0x14c>
4000c42c:	e3a09007 	mov	r9, #7
4000c430:	ea000004 	b	4000c448 <_tx_event_flags_get+0x14c>
4000c434:	e11a0005 	tst	sl, r5
4000c438:	0a000001 	beq	4000c444 <_tx_event_flags_get+0x148>
4000c43c:	e3a09000 	mov	r9, #0
4000c440:	ea000000 	b	4000c448 <_tx_event_flags_get+0x14c>
4000c444:	e3a09007 	mov	r9, #7
4000c448:	e3590000 	cmp	r9, #0
4000c44c:	1a000010 	bne	4000c494 <_tx_event_flags_get+0x198>
4000c450:	e587a000 	str	sl, [r7]
4000c454:	e3160001 	tst	r6, #1
4000c458:	0a00004e 	beq	4000c598 <_tx_event_flags_get+0x29c>
4000c45c:	e5940014 	ldr	r0, [r4, #20]
4000c460:	e3500000 	cmp	r0, #0
4000c464:	0a000006 	beq	4000c484 <_tx_event_flags_get+0x188>
4000c468:	e5940010 	ldr	r0, [r4, #16]
4000c46c:	e3500000 	cmp	r0, #0
4000c470:	1a000003 	bne	4000c484 <_tx_event_flags_get+0x188>
4000c474:	e5940020 	ldr	r0, [r4, #32]
4000c478:	e1800005 	orr	r0, r0, r5
4000c47c:	e5840020 	str	r0, [r4, #32]
4000c480:	ea000044 	b	4000c598 <_tx_event_flags_get+0x29c>
4000c484:	e5940008 	ldr	r0, [r4, #8]
4000c488:	e1c00005 	bic	r0, r0, r5
4000c48c:	e5840008 	str	r0, [r4, #8]
4000c490:	ea000040 	b	4000c598 <_tx_event_flags_get+0x29c>
4000c494:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c498:	e3500000 	cmp	r0, #0
4000c49c:	0a00003c 	beq	4000c594 <_tx_event_flags_get+0x298>
4000c4a0:	e59f0108 	ldr	r0, [pc, #264]	; 4000c5b0 <_tx_event_flags_get+0x2b4>
4000c4a4:	e5900000 	ldr	r0, [r0]
4000c4a8:	e58d0000 	str	r0, [sp]
4000c4ac:	e59f1110 	ldr	r1, [pc, #272]	; 4000c5c4 <_tx_event_flags_get+0x2c8>
4000c4b0:	e59d0000 	ldr	r0, [sp]
4000c4b4:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c4b8:	e59d0000 	ldr	r0, [sp]
4000c4bc:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c4c0:	e59d0000 	ldr	r0, [sp]
4000c4c4:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c4c8:	e59d0000 	ldr	r0, [sp]
4000c4cc:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c4d0:	e59d0000 	ldr	r0, [sp]
4000c4d4:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c4d8:	e5940010 	ldr	r0, [r4, #16]
4000c4dc:	e3500000 	cmp	r0, #0
4000c4e0:	0a00000e 	beq	4000c520 <_tx_event_flags_get+0x224>
4000c4e4:	e5941010 	ldr	r1, [r4, #16]
4000c4e8:	e59d0000 	ldr	r0, [sp]
4000c4ec:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c4f0:	e5940010 	ldr	r0, [r4, #16]
4000c4f4:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c4f8:	e59d0000 	ldr	r0, [sp]
4000c4fc:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c500:	e59d0000 	ldr	r0, [sp]
4000c504:	e5941010 	ldr	r1, [r4, #16]
4000c508:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c50c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c510:	e59d0000 	ldr	r0, [sp]
4000c514:	e5941010 	ldr	r1, [r4, #16]
4000c518:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c51c:	ea000005 	b	4000c538 <_tx_event_flags_get+0x23c>
4000c520:	e59d0000 	ldr	r0, [sp]
4000c524:	e5840010 	str	r0, [r4, #16]
4000c528:	e59d0000 	ldr	r0, [sp]
4000c52c:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c530:	e59d0000 	ldr	r0, [sp]
4000c534:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c538:	e5940014 	ldr	r0, [r4, #20]
4000c53c:	e2800001 	add	r0, r0, #1
4000c540:	e5840014 	str	r0, [r4, #20]
4000c544:	e3a00007 	mov	r0, #7
4000c548:	e59d1000 	ldr	r1, [sp]
4000c54c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c550:	e3a01001 	mov	r1, #1
4000c554:	e59d0000 	ldr	r0, [sp]
4000c558:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c55c:	e59d0000 	ldr	r0, [sp]
4000c560:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c564:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c568:	e59f0058 	ldr	r0, [pc, #88]	; 4000c5c8 <_tx_event_flags_get+0x2cc>
4000c56c:	e5900000 	ldr	r0, [r0]
4000c570:	e2800001 	add	r0, r0, #1
4000c574:	e59f104c 	ldr	r1, [pc, #76]	; 4000c5c8 <_tx_event_flags_get+0x2cc>
4000c578:	e5810000 	str	r0, [r1]
4000c57c:	e121f008 	msr	CPSR_c, r8
4000c580:	e59d0000 	ldr	r0, [sp]
4000c584:	ebfff22f 	bl	40008e48 <_tx_thread_system_suspend>
4000c588:	e59d0000 	ldr	r0, [sp]
4000c58c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c590:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c594:	e3a09007 	mov	r9, #7
4000c598:	e121f008 	msr	CPSR_c, r8
4000c59c:	e1a00009 	mov	r0, r9
4000c5a0:	eafffffa 	b	4000c590 <_tx_event_flags_get+0x294>
4000c5a4:	40030ea0 	.word	0x40030ea0
4000c5a8:	40030ea4 	.word	0x40030ea4
4000c5ac:	40030e2c 	.word	0x40030e2c
4000c5b0:	40030e34 	.word	0x40030e34
4000c5b4:	f0f0f0f0 	.word	0xf0f0f0f0
4000c5b8:	40030e9c 	.word	0x40030e9c
4000c5bc:	40030e98 	.word	0x40030e98
4000c5c0:	40030e8c 	.word	0x40030e8c
4000c5c4:	400104f4 	.word	0x400104f4
4000c5c8:	40030e50 	.word	0x40030e50

4000c5cc <_tx_event_flags_set>:
4000c5cc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c5d0:	e24dd01c 	sub	sp, sp, #28
4000c5d4:	e1a04000 	mov	r4, r0
4000c5d8:	e1a05001 	mov	r5, r1
4000c5dc:	e1a06002 	mov	r6, r2
4000c5e0:	e10f7000 	mrs	r7, CPSR
4000c5e4:	e3870080 	orr	r0, r7, #128	; 0x80
4000c5e8:	e58d0018 	str	r0, [sp, #24]
4000c5ec:	e59d0018 	ldr	r0, [sp, #24]
4000c5f0:	e121f000 	msr	CPSR_c, r0
4000c5f4:	e59f1594 	ldr	r1, [pc, #1428]	; 4000cb90 <_tx_event_flags_set+0x5c4>
4000c5f8:	e5910000 	ldr	r0, [r1]
4000c5fc:	e3500000 	cmp	r0, #0
4000c600:	0a000031 	beq	4000c6cc <_tx_event_flags_set+0x100>
4000c604:	e59f1588 	ldr	r1, [pc, #1416]	; 4000cb94 <_tx_event_flags_set+0x5c8>
4000c608:	e5911000 	ldr	r1, [r1]
4000c60c:	e2811001 	add	r1, r1, #1
4000c610:	e59f257c 	ldr	r2, [pc, #1404]	; 4000cb94 <_tx_event_flags_set+0x5c8>
4000c614:	e5821000 	str	r1, [r2]
4000c618:	e580100c 	str	r1, [r0, #12]
4000c61c:	e59f1574 	ldr	r1, [pc, #1396]	; 4000cb98 <_tx_event_flags_set+0x5cc>
4000c620:	e5911000 	ldr	r1, [r1]
4000c624:	e3510000 	cmp	r1, #0
4000c628:	1a000006 	bne	4000c648 <_tx_event_flags_set+0x7c>
4000c62c:	e59f1568 	ldr	r1, [pc, #1384]	; 4000cb9c <_tx_event_flags_set+0x5d0>
4000c630:	e5911000 	ldr	r1, [r1]
4000c634:	e5801000 	str	r1, [r0]
4000c638:	e5901000 	ldr	r1, [r0]
4000c63c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c640:	e5801004 	str	r1, [r0, #4]
4000c644:	ea00000d 	b	4000c680 <_tx_event_flags_set+0xb4>
4000c648:	e59f1548 	ldr	r1, [pc, #1352]	; 4000cb98 <_tx_event_flags_set+0x5cc>
4000c64c:	e5911000 	ldr	r1, [r1]
4000c650:	e59f2548 	ldr	r2, [pc, #1352]	; 4000cba0 <_tx_event_flags_set+0x5d4>
4000c654:	e1510002 	cmp	r1, r2
4000c658:	2a000004 	bcs	4000c670 <_tx_event_flags_set+0xa4>
4000c65c:	e3e01000 	mvn	r1, #0
4000c660:	e5801000 	str	r1, [r0]
4000c664:	e3a01000 	mov	r1, #0
4000c668:	e5801004 	str	r1, [r0, #4]
4000c66c:	ea000003 	b	4000c680 <_tx_event_flags_set+0xb4>
4000c670:	e59f1528 	ldr	r1, [pc, #1320]	; 4000cba0 <_tx_event_flags_set+0x5d4>
4000c674:	e5801000 	str	r1, [r0]
4000c678:	e3a01000 	mov	r1, #0
4000c67c:	e5801004 	str	r1, [r0, #4]
4000c680:	e3a01024 	mov	r1, #36	; 0x24
4000c684:	e5801008 	str	r1, [r0, #8]
4000c688:	e5804010 	str	r4, [r0, #16]
4000c68c:	e5805014 	str	r5, [r0, #20]
4000c690:	e5806018 	str	r6, [r0, #24]
4000c694:	e5941014 	ldr	r1, [r4, #20]
4000c698:	e580101c 	str	r1, [r0, #28]
4000c69c:	e2800020 	add	r0, r0, #32
4000c6a0:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000cba4 <_tx_event_flags_set+0x5d8>
4000c6a4:	e5911000 	ldr	r1, [r1]
4000c6a8:	e1500001 	cmp	r0, r1
4000c6ac:	3a000001 	bcc	4000c6b8 <_tx_event_flags_set+0xec>
4000c6b0:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000cba8 <_tx_event_flags_set+0x5dc>
4000c6b4:	e5910000 	ldr	r0, [r1]
4000c6b8:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000cb90 <_tx_event_flags_set+0x5c4>
4000c6bc:	e5810000 	str	r0, [r1]
4000c6c0:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000cbac <_tx_event_flags_set+0x5e0>
4000c6c4:	e5911000 	ldr	r1, [r1]
4000c6c8:	e5810020 	str	r0, [r1, #32]
4000c6cc:	e3160002 	tst	r6, #2
4000c6d0:	0a000011 	beq	4000c71c <_tx_event_flags_set+0x150>
4000c6d4:	e5940014 	ldr	r0, [r4, #20]
4000c6d8:	e3500000 	cmp	r0, #0
4000c6dc:	0a000007 	beq	4000c700 <_tx_event_flags_set+0x134>
4000c6e0:	e5940010 	ldr	r0, [r4, #16]
4000c6e4:	e3500000 	cmp	r0, #0
4000c6e8:	1a000004 	bne	4000c700 <_tx_event_flags_set+0x134>
4000c6ec:	e1e01005 	mvn	r1, r5
4000c6f0:	e5940020 	ldr	r0, [r4, #32]
4000c6f4:	e1800001 	orr	r0, r0, r1
4000c6f8:	e5840020 	str	r0, [r4, #32]
4000c6fc:	ea000002 	b	4000c70c <_tx_event_flags_set+0x140>
4000c700:	e5940008 	ldr	r0, [r4, #8]
4000c704:	e0000005 	and	r0, r0, r5
4000c708:	e5840008 	str	r0, [r4, #8]
4000c70c:	e121f007 	msr	CPSR_c, r7
4000c710:	e3a00000 	mov	r0, #0
4000c714:	e28dd01c 	add	sp, sp, #28
4000c718:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c71c:	e5940008 	ldr	r0, [r4, #8]
4000c720:	e1800005 	orr	r0, r0, r5
4000c724:	e5840008 	str	r0, [r4, #8]
4000c728:	e5940020 	ldr	r0, [r4, #32]
4000c72c:	e3500000 	cmp	r0, #0
4000c730:	0a000002 	beq	4000c740 <_tx_event_flags_set+0x174>
4000c734:	e5940020 	ldr	r0, [r4, #32]
4000c738:	e1c00005 	bic	r0, r0, r5
4000c73c:	e5840020 	str	r0, [r4, #32]
4000c740:	e5940010 	ldr	r0, [r4, #16]
4000c744:	e3500000 	cmp	r0, #0
4000c748:	0a000102 	beq	4000cb58 <_tx_event_flags_set+0x58c>
4000c74c:	e5940014 	ldr	r0, [r4, #20]
4000c750:	e3500001 	cmp	r0, #1
4000c754:	1a000048 	bne	4000c87c <_tx_event_flags_set+0x2b0>
4000c758:	e5940010 	ldr	r0, [r4, #16]
4000c75c:	e58d0014 	str	r0, [sp, #20]
4000c760:	e59d0014 	ldr	r0, [sp, #20]
4000c764:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c768:	e3100002 	tst	r0, #2
4000c76c:	0a00000b 	beq	4000c7a0 <_tx_event_flags_set+0x1d4>
4000c770:	e5940008 	ldr	r0, [r4, #8]
4000c774:	e59d1014 	ldr	r1, [sp, #20]
4000c778:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c77c:	e0000001 	and	r0, r0, r1
4000c780:	e59d1014 	ldr	r1, [sp, #20]
4000c784:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c788:	e1500001 	cmp	r0, r1
4000c78c:	1a000001 	bne	4000c798 <_tx_event_flags_set+0x1cc>
4000c790:	e3a08000 	mov	r8, #0
4000c794:	ea000009 	b	4000c7c0 <_tx_event_flags_set+0x1f4>
4000c798:	e3a08007 	mov	r8, #7
4000c79c:	ea000007 	b	4000c7c0 <_tx_event_flags_set+0x1f4>
4000c7a0:	e5940008 	ldr	r0, [r4, #8]
4000c7a4:	e59d1014 	ldr	r1, [sp, #20]
4000c7a8:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7ac:	e1100001 	tst	r0, r1
4000c7b0:	0a000001 	beq	4000c7bc <_tx_event_flags_set+0x1f0>
4000c7b4:	e3a08000 	mov	r8, #0
4000c7b8:	ea000000 	b	4000c7c0 <_tx_event_flags_set+0x1f4>
4000c7bc:	e3a08007 	mov	r8, #7
4000c7c0:	e3580000 	cmp	r8, #0
4000c7c4:	1a000024 	bne	4000c85c <_tx_event_flags_set+0x290>
4000c7c8:	e5941008 	ldr	r1, [r4, #8]
4000c7cc:	e59d0014 	ldr	r0, [sp, #20]
4000c7d0:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c7d4:	e5801000 	str	r1, [r0]
4000c7d8:	e59d0014 	ldr	r0, [sp, #20]
4000c7dc:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c7e0:	e3100001 	tst	r0, #1
4000c7e4:	0a000004 	beq	4000c7fc <_tx_event_flags_set+0x230>
4000c7e8:	e5940008 	ldr	r0, [r4, #8]
4000c7ec:	e59d1014 	ldr	r1, [sp, #20]
4000c7f0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7f4:	e1c00001 	bic	r0, r0, r1
4000c7f8:	e5840008 	str	r0, [r4, #8]
4000c7fc:	e3a00000 	mov	r0, #0
4000c800:	e5840010 	str	r0, [r4, #16]
4000c804:	e5840014 	str	r0, [r4, #20]
4000c808:	e3a01000 	mov	r1, #0
4000c80c:	e59d0014 	ldr	r0, [sp, #20]
4000c810:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c814:	e59f0394 	ldr	r0, [pc, #916]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000c818:	e5900000 	ldr	r0, [r0]
4000c81c:	e2800001 	add	r0, r0, #1
4000c820:	e59f1388 	ldr	r1, [pc, #904]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000c824:	e5810000 	str	r0, [r1]
4000c828:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c82c:	e121f007 	msr	CPSR_c, r7
4000c830:	e35b0000 	cmp	fp, #0
4000c834:	0a000001 	beq	4000c840 <_tx_event_flags_set+0x274>
4000c838:	e1a00004 	mov	r0, r4
4000c83c:	e12fff3b 	blx	fp
4000c840:	e3a00000 	mov	r0, #0
4000c844:	e59d1014 	ldr	r1, [sp, #20]
4000c848:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c84c:	e59d0014 	ldr	r0, [sp, #20]
4000c850:	eb000b23 	bl	4000f4e4 <_tx_thread_system_resume>
4000c854:	e3a00000 	mov	r0, #0
4000c858:	eaffffad 	b	4000c714 <_tx_event_flags_set+0x148>
4000c85c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c860:	e121f007 	msr	CPSR_c, r7
4000c864:	e35b0000 	cmp	fp, #0
4000c868:	0a000001 	beq	4000c874 <_tx_event_flags_set+0x2a8>
4000c86c:	e1a00004 	mov	r0, r4
4000c870:	e12fff3b 	blx	fp
4000c874:	e3a00000 	mov	r0, #0
4000c878:	eaffffa5 	b	4000c714 <_tx_event_flags_set+0x148>
4000c87c:	e5940010 	ldr	r0, [r4, #16]
4000c880:	e58d0004 	str	r0, [sp, #4]
4000c884:	e59d0004 	ldr	r0, [sp, #4]
4000c888:	e58d0014 	str	r0, [sp, #20]
4000c88c:	e3a00000 	mov	r0, #0
4000c890:	e5840010 	str	r0, [r4, #16]
4000c894:	e58d000c 	str	r0, [sp, #12]
4000c898:	e58d0008 	str	r0, [sp, #8]
4000c89c:	e5940014 	ldr	r0, [r4, #20]
4000c8a0:	e58d0000 	str	r0, [sp]
4000c8a4:	e5949008 	ldr	r9, [r4, #8]
4000c8a8:	e59f0300 	ldr	r0, [pc, #768]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000c8ac:	e5900000 	ldr	r0, [r0]
4000c8b0:	e2800001 	add	r0, r0, #1
4000c8b4:	e59f12f4 	ldr	r1, [pc, #756]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000c8b8:	e5810000 	str	r0, [r1]
4000c8bc:	e1a00000 	nop			; (mov r0, r0)
4000c8c0:	e121f007 	msr	CPSR_c, r7
4000c8c4:	e10f7000 	mrs	r7, CPSR
4000c8c8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c8cc:	e58d0018 	str	r0, [sp, #24]
4000c8d0:	e59d0018 	ldr	r0, [sp, #24]
4000c8d4:	e121f000 	msr	CPSR_c, r0
4000c8d8:	e594000c 	ldr	r0, [r4, #12]
4000c8dc:	e3500000 	cmp	r0, #0
4000c8e0:	0a00000b 	beq	4000c914 <_tx_event_flags_set+0x348>
4000c8e4:	e3a00000 	mov	r0, #0
4000c8e8:	e584000c 	str	r0, [r4, #12]
4000c8ec:	e59d0004 	ldr	r0, [sp, #4]
4000c8f0:	e58d0014 	str	r0, [sp, #20]
4000c8f4:	e5940014 	ldr	r0, [r4, #20]
4000c8f8:	e58d0000 	str	r0, [sp]
4000c8fc:	e5940008 	ldr	r0, [r4, #8]
4000c900:	e1899000 	orr	r9, r9, r0
4000c904:	e59d0014 	ldr	r0, [sp, #20]
4000c908:	e3500000 	cmp	r0, #0
4000c90c:	1a000000 	bne	4000c914 <_tx_event_flags_set+0x348>
4000c910:	ea00005d 	b	4000ca8c <_tx_event_flags_set+0x4c0>
4000c914:	e59d0014 	ldr	r0, [sp, #20]
4000c918:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c91c:	e31a0002 	tst	sl, #2
4000c920:	0a00000a 	beq	4000c950 <_tx_event_flags_set+0x384>
4000c924:	e59d0014 	ldr	r0, [sp, #20]
4000c928:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c92c:	e0000009 	and	r0, r0, r9
4000c930:	e59d1014 	ldr	r1, [sp, #20]
4000c934:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c938:	e1500001 	cmp	r0, r1
4000c93c:	1a000001 	bne	4000c948 <_tx_event_flags_set+0x37c>
4000c940:	e3a08000 	mov	r8, #0
4000c944:	ea000008 	b	4000c96c <_tx_event_flags_set+0x3a0>
4000c948:	e3a08007 	mov	r8, #7
4000c94c:	ea000006 	b	4000c96c <_tx_event_flags_set+0x3a0>
4000c950:	e59d0014 	ldr	r0, [sp, #20]
4000c954:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c958:	e1100009 	tst	r0, r9
4000c95c:	0a000001 	beq	4000c968 <_tx_event_flags_set+0x39c>
4000c960:	e3a08000 	mov	r8, #0
4000c964:	ea000000 	b	4000c96c <_tx_event_flags_set+0x3a0>
4000c968:	e3a08007 	mov	r8, #7
4000c96c:	e59d0014 	ldr	r0, [sp, #20]
4000c970:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c974:	e58d0010 	str	r0, [sp, #16]
4000c978:	e3580000 	cmp	r8, #0
4000c97c:	1a00003c 	bne	4000ca74 <_tx_event_flags_set+0x4a8>
4000c980:	e59d0014 	ldr	r0, [sp, #20]
4000c984:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c988:	e5809000 	str	r9, [r0]
4000c98c:	e31a0001 	tst	sl, #1
4000c990:	0a000004 	beq	4000c9a8 <_tx_event_flags_set+0x3dc>
4000c994:	e5940008 	ldr	r0, [r4, #8]
4000c998:	e59d1014 	ldr	r1, [sp, #20]
4000c99c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c9a0:	e1c00001 	bic	r0, r0, r1
4000c9a4:	e5840008 	str	r0, [r4, #8]
4000c9a8:	e59d0014 	ldr	r0, [sp, #20]
4000c9ac:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c9b0:	e1510000 	cmp	r1, r0
4000c9b4:	1a000002 	bne	4000c9c4 <_tx_event_flags_set+0x3f8>
4000c9b8:	e3a00000 	mov	r0, #0
4000c9bc:	e58d0004 	str	r0, [sp, #4]
4000c9c0:	ea000010 	b	4000ca08 <_tx_event_flags_set+0x43c>
4000c9c4:	e59d0004 	ldr	r0, [sp, #4]
4000c9c8:	e59d1014 	ldr	r1, [sp, #20]
4000c9cc:	e1500001 	cmp	r0, r1
4000c9d0:	1a000002 	bne	4000c9e0 <_tx_event_flags_set+0x414>
4000c9d4:	e59d0014 	ldr	r0, [sp, #20]
4000c9d8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c9dc:	e58d0004 	str	r0, [sp, #4]
4000c9e0:	e59d0014 	ldr	r0, [sp, #20]
4000c9e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c9e8:	e59d1014 	ldr	r1, [sp, #20]
4000c9ec:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c9f0:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c9f4:	e59d0014 	ldr	r0, [sp, #20]
4000c9f8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c9fc:	e59d1014 	ldr	r1, [sp, #20]
4000ca00:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000ca04:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca08:	e5940014 	ldr	r0, [r4, #20]
4000ca0c:	e2400001 	sub	r0, r0, #1
4000ca10:	e5840014 	str	r0, [r4, #20]
4000ca14:	e3a00000 	mov	r0, #0
4000ca18:	e59d1014 	ldr	r1, [sp, #20]
4000ca1c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000ca20:	e59d1014 	ldr	r1, [sp, #20]
4000ca24:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ca28:	e59d000c 	ldr	r0, [sp, #12]
4000ca2c:	e3500000 	cmp	r0, #0
4000ca30:	1a000007 	bne	4000ca54 <_tx_event_flags_set+0x488>
4000ca34:	e59d0014 	ldr	r0, [sp, #20]
4000ca38:	e58d000c 	str	r0, [sp, #12]
4000ca3c:	e59d0014 	ldr	r0, [sp, #20]
4000ca40:	e58d0008 	str	r0, [sp, #8]
4000ca44:	e3a01000 	mov	r1, #0
4000ca48:	e59d0014 	ldr	r0, [sp, #20]
4000ca4c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000ca50:	ea000007 	b	4000ca74 <_tx_event_flags_set+0x4a8>
4000ca54:	e59d0014 	ldr	r0, [sp, #20]
4000ca58:	e59d1008 	ldr	r1, [sp, #8]
4000ca5c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca60:	e3a00000 	mov	r0, #0
4000ca64:	e59d1014 	ldr	r1, [sp, #20]
4000ca68:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca6c:	e59d0014 	ldr	r0, [sp, #20]
4000ca70:	e58d0008 	str	r0, [sp, #8]
4000ca74:	e59d0010 	ldr	r0, [sp, #16]
4000ca78:	e58d0014 	str	r0, [sp, #20]
4000ca7c:	e59d0000 	ldr	r0, [sp]
4000ca80:	e2500001 	subs	r0, r0, #1
4000ca84:	e58d0000 	str	r0, [sp]
4000ca88:	1affff8c 	bne	4000c8c0 <_tx_event_flags_set+0x2f4>
4000ca8c:	e1a00000 	nop			; (mov r0, r0)
4000ca90:	e59d0004 	ldr	r0, [sp, #4]
4000ca94:	e5840010 	str	r0, [r4, #16]
4000ca98:	e5940020 	ldr	r0, [r4, #32]
4000ca9c:	e3500000 	cmp	r0, #0
4000caa0:	0a000005 	beq	4000cabc <_tx_event_flags_set+0x4f0>
4000caa4:	e5940008 	ldr	r0, [r4, #8]
4000caa8:	e5941020 	ldr	r1, [r4, #32]
4000caac:	e1c00001 	bic	r0, r0, r1
4000cab0:	e5840008 	str	r0, [r4, #8]
4000cab4:	e3a00000 	mov	r0, #0
4000cab8:	e5840020 	str	r0, [r4, #32]
4000cabc:	e121f007 	msr	CPSR_c, r7
4000cac0:	e59d000c 	ldr	r0, [sp, #12]
4000cac4:	e58d0014 	str	r0, [sp, #20]
4000cac8:	ea000011 	b	4000cb14 <_tx_event_flags_set+0x548>
4000cacc:	e59d0014 	ldr	r0, [sp, #20]
4000cad0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cad4:	e58d0010 	str	r0, [sp, #16]
4000cad8:	e10f7000 	mrs	r7, CPSR
4000cadc:	e3870080 	orr	r0, r7, #128	; 0x80
4000cae0:	e58d0018 	str	r0, [sp, #24]
4000cae4:	e59d0018 	ldr	r0, [sp, #24]
4000cae8:	e121f000 	msr	CPSR_c, r0
4000caec:	e59f00bc 	ldr	r0, [pc, #188]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000caf0:	e5900000 	ldr	r0, [r0]
4000caf4:	e2800001 	add	r0, r0, #1
4000caf8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000cafc:	e5810000 	str	r0, [r1]
4000cb00:	e121f007 	msr	CPSR_c, r7
4000cb04:	e59d0014 	ldr	r0, [sp, #20]
4000cb08:	eb000a75 	bl	4000f4e4 <_tx_thread_system_resume>
4000cb0c:	e59d0010 	ldr	r0, [sp, #16]
4000cb10:	e58d0014 	str	r0, [sp, #20]
4000cb14:	e59d0014 	ldr	r0, [sp, #20]
4000cb18:	e3500000 	cmp	r0, #0
4000cb1c:	1affffea 	bne	4000cacc <_tx_event_flags_set+0x500>
4000cb20:	e10f7000 	mrs	r7, CPSR
4000cb24:	e3870080 	orr	r0, r7, #128	; 0x80
4000cb28:	e58d0018 	str	r0, [sp, #24]
4000cb2c:	e59d0018 	ldr	r0, [sp, #24]
4000cb30:	e121f000 	msr	CPSR_c, r0
4000cb34:	e59f0074 	ldr	r0, [pc, #116]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000cb38:	e5900000 	ldr	r0, [r0]
4000cb3c:	e2400001 	sub	r0, r0, #1
4000cb40:	e59f1068 	ldr	r1, [pc, #104]	; 4000cbb0 <_tx_event_flags_set+0x5e4>
4000cb44:	e5810000 	str	r0, [r1]
4000cb48:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cb4c:	e121f007 	msr	CPSR_c, r7
4000cb50:	eb000a37 	bl	4000f434 <_tx_thread_system_preempt_check>
4000cb54:	ea000007 	b	4000cb78 <_tx_event_flags_set+0x5ac>
4000cb58:	e5940014 	ldr	r0, [r4, #20]
4000cb5c:	e3500000 	cmp	r0, #0
4000cb60:	0a000002 	beq	4000cb70 <_tx_event_flags_set+0x5a4>
4000cb64:	e594000c 	ldr	r0, [r4, #12]
4000cb68:	e2800001 	add	r0, r0, #1
4000cb6c:	e584000c 	str	r0, [r4, #12]
4000cb70:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cb74:	e121f007 	msr	CPSR_c, r7
4000cb78:	e35b0000 	cmp	fp, #0
4000cb7c:	0a000001 	beq	4000cb88 <_tx_event_flags_set+0x5bc>
4000cb80:	e1a00004 	mov	r0, r4
4000cb84:	e12fff3b 	blx	fp
4000cb88:	e3a00000 	mov	r0, #0
4000cb8c:	eafffee0 	b	4000c714 <_tx_event_flags_set+0x148>
4000cb90:	40030ea0 	.word	0x40030ea0
4000cb94:	40030ea4 	.word	0x40030ea4
4000cb98:	40030e2c 	.word	0x40030e2c
4000cb9c:	40030e34 	.word	0x40030e34
4000cba0:	f0f0f0f0 	.word	0xf0f0f0f0
4000cba4:	40030e9c 	.word	0x40030e9c
4000cba8:	40030e98 	.word	0x40030e98
4000cbac:	40030e8c 	.word	0x40030e8c
4000cbb0:	40030e50 	.word	0x40030e50

4000cbb4 <_tx_initialize_high_level>:
4000cbb4:	e92d4010 	push	{r4, lr}
4000cbb8:	ebfff38a 	bl	400099e8 <_tx_trace_initialize>
4000cbbc:	ebffeff0 	bl	40008b84 <_tx_thread_initialize>
4000cbc0:	ebfff26b 	bl	40009574 <_tx_timer_initialize>
4000cbc4:	e3a00000 	mov	r0, #0
4000cbc8:	e59f105c 	ldr	r1, [pc, #92]	; 4000cc2c <_tx_initialize_high_level+0x78>
4000cbcc:	e5810000 	str	r0, [r1]
4000cbd0:	e59f1058 	ldr	r1, [pc, #88]	; 4000cc30 <_tx_initialize_high_level+0x7c>
4000cbd4:	e5810000 	str	r0, [r1]
4000cbd8:	e59f1054 	ldr	r1, [pc, #84]	; 4000cc34 <_tx_initialize_high_level+0x80>
4000cbdc:	e5810000 	str	r0, [r1]
4000cbe0:	e59f1050 	ldr	r1, [pc, #80]	; 4000cc38 <_tx_initialize_high_level+0x84>
4000cbe4:	e5810000 	str	r0, [r1]
4000cbe8:	e59f104c 	ldr	r1, [pc, #76]	; 4000cc3c <_tx_initialize_high_level+0x88>
4000cbec:	e5810000 	str	r0, [r1]
4000cbf0:	e59f1048 	ldr	r1, [pc, #72]	; 4000cc40 <_tx_initialize_high_level+0x8c>
4000cbf4:	e5810000 	str	r0, [r1]
4000cbf8:	e59f1044 	ldr	r1, [pc, #68]	; 4000cc44 <_tx_initialize_high_level+0x90>
4000cbfc:	e5810000 	str	r0, [r1]
4000cc00:	e59f1040 	ldr	r1, [pc, #64]	; 4000cc48 <_tx_initialize_high_level+0x94>
4000cc04:	e5810000 	str	r0, [r1]
4000cc08:	e59f103c 	ldr	r1, [pc, #60]	; 4000cc4c <_tx_initialize_high_level+0x98>
4000cc0c:	e5810000 	str	r0, [r1]
4000cc10:	e59f1038 	ldr	r1, [pc, #56]	; 4000cc50 <_tx_initialize_high_level+0x9c>
4000cc14:	e5810000 	str	r0, [r1]
4000cc18:	e59f1034 	ldr	r1, [pc, #52]	; 4000cc54 <_tx_initialize_high_level+0xa0>
4000cc1c:	e5810000 	str	r0, [r1]
4000cc20:	e59f1030 	ldr	r1, [pc, #48]	; 4000cc58 <_tx_initialize_high_level+0xa4>
4000cc24:	e5810000 	str	r0, [r1]
4000cc28:	e8bd8010 	pop	{r4, pc}
4000cc2c:	40030ea8 	.word	0x40030ea8
4000cc30:	40030eac 	.word	0x40030eac
4000cc34:	40030eb0 	.word	0x40030eb0
4000cc38:	40030eb4 	.word	0x40030eb4
4000cc3c:	40030eb8 	.word	0x40030eb8
4000cc40:	40030ebc 	.word	0x40030ebc
4000cc44:	40030ec8 	.word	0x40030ec8
4000cc48:	40030ecc 	.word	0x40030ecc
4000cc4c:	40030ed0 	.word	0x40030ed0
4000cc50:	40030ed4 	.word	0x40030ed4
4000cc54:	40030ec0 	.word	0x40030ec0
4000cc58:	40030ec4 	.word	0x40030ec4

4000cc5c <_tx_mutex_create>:
4000cc5c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000cc60:	e1a04000 	mov	r4, r0
4000cc64:	e1a05001 	mov	r5, r1
4000cc68:	e1a06002 	mov	r6, r2
4000cc6c:	e3a01038 	mov	r1, #56	; 0x38
4000cc70:	e1a00004 	mov	r0, r4
4000cc74:	eb001b36 	bl	40013954 <__aeabi_memclr4>
4000cc78:	e5845004 	str	r5, [r4, #4]
4000cc7c:	e5846010 	str	r6, [r4, #16]
4000cc80:	e10f7000 	mrs	r7, CPSR
4000cc84:	e3878080 	orr	r8, r7, #128	; 0x80
4000cc88:	e121f008 	msr	CPSR_c, r8
4000cc8c:	e59f0174 	ldr	r0, [pc, #372]	; 4000ce08 <_tx_mutex_create+0x1ac>
4000cc90:	e5840000 	str	r0, [r4]
4000cc94:	e59f0170 	ldr	r0, [pc, #368]	; 4000ce0c <_tx_mutex_create+0x1b0>
4000cc98:	e5900000 	ldr	r0, [r0]
4000cc9c:	e3500000 	cmp	r0, #0
4000cca0:	0a00000e 	beq	4000cce0 <_tx_mutex_create+0x84>
4000cca4:	e59f0160 	ldr	r0, [pc, #352]	; 4000ce0c <_tx_mutex_create+0x1b0>
4000cca8:	e5900000 	ldr	r0, [r0]
4000ccac:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000ccb0:	e58d0004 	str	r0, [sp, #4]
4000ccb4:	e59f0150 	ldr	r0, [pc, #336]	; 4000ce0c <_tx_mutex_create+0x1b0>
4000ccb8:	e5900000 	ldr	r0, [r0]
4000ccbc:	e5804028 	str	r4, [r0, #40]	; 0x28
4000ccc0:	e59d0004 	ldr	r0, [sp, #4]
4000ccc4:	e5804024 	str	r4, [r0, #36]	; 0x24
4000ccc8:	e59d0004 	ldr	r0, [sp, #4]
4000cccc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ccd0:	e59f0134 	ldr	r0, [pc, #308]	; 4000ce0c <_tx_mutex_create+0x1b0>
4000ccd4:	e5900000 	ldr	r0, [r0]
4000ccd8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000ccdc:	ea000003 	b	4000ccf0 <_tx_mutex_create+0x94>
4000cce0:	e59f0124 	ldr	r0, [pc, #292]	; 4000ce0c <_tx_mutex_create+0x1b0>
4000cce4:	e5804000 	str	r4, [r0]
4000cce8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000ccec:	e5844028 	str	r4, [r4, #40]	; 0x28
4000ccf0:	e59f0118 	ldr	r0, [pc, #280]	; 4000ce10 <_tx_mutex_create+0x1b4>
4000ccf4:	e5900000 	ldr	r0, [r0]
4000ccf8:	e2800001 	add	r0, r0, #1
4000ccfc:	e59f110c 	ldr	r1, [pc, #268]	; 4000ce10 <_tx_mutex_create+0x1b4>
4000cd00:	e5810000 	str	r0, [r1]
4000cd04:	e3a03000 	mov	r3, #0
4000cd08:	e58d3000 	str	r3, [sp]
4000cd0c:	e1a03006 	mov	r3, r6
4000cd10:	e1a02005 	mov	r2, r5
4000cd14:	e1a01004 	mov	r1, r4
4000cd18:	e3a00005 	mov	r0, #5
4000cd1c:	eb000d46 	bl	4001023c <_tx_trace_object_register>
4000cd20:	e59f10ec 	ldr	r1, [pc, #236]	; 4000ce14 <_tx_mutex_create+0x1b8>
4000cd24:	e5910000 	ldr	r0, [r1]
4000cd28:	e3500000 	cmp	r0, #0
4000cd2c:	0a000032 	beq	4000cdfc <_tx_mutex_create+0x1a0>
4000cd30:	e59f10e0 	ldr	r1, [pc, #224]	; 4000ce18 <_tx_mutex_create+0x1bc>
4000cd34:	e5911000 	ldr	r1, [r1]
4000cd38:	e2811001 	add	r1, r1, #1
4000cd3c:	e59f20d4 	ldr	r2, [pc, #212]	; 4000ce18 <_tx_mutex_create+0x1bc>
4000cd40:	e5821000 	str	r1, [r2]
4000cd44:	e580100c 	str	r1, [r0, #12]
4000cd48:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ce1c <_tx_mutex_create+0x1c0>
4000cd4c:	e5911000 	ldr	r1, [r1]
4000cd50:	e3510000 	cmp	r1, #0
4000cd54:	1a000006 	bne	4000cd74 <_tx_mutex_create+0x118>
4000cd58:	e59f10c0 	ldr	r1, [pc, #192]	; 4000ce20 <_tx_mutex_create+0x1c4>
4000cd5c:	e5911000 	ldr	r1, [r1]
4000cd60:	e5801000 	str	r1, [r0]
4000cd64:	e5901000 	ldr	r1, [r0]
4000cd68:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cd6c:	e5801004 	str	r1, [r0, #4]
4000cd70:	ea00000d 	b	4000cdac <_tx_mutex_create+0x150>
4000cd74:	e59f10a0 	ldr	r1, [pc, #160]	; 4000ce1c <_tx_mutex_create+0x1c0>
4000cd78:	e5911000 	ldr	r1, [r1]
4000cd7c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000ce24 <_tx_mutex_create+0x1c8>
4000cd80:	e1510002 	cmp	r1, r2
4000cd84:	2a000004 	bcs	4000cd9c <_tx_mutex_create+0x140>
4000cd88:	e3e01000 	mvn	r1, #0
4000cd8c:	e5801000 	str	r1, [r0]
4000cd90:	e3a01000 	mov	r1, #0
4000cd94:	e5801004 	str	r1, [r0, #4]
4000cd98:	ea000003 	b	4000cdac <_tx_mutex_create+0x150>
4000cd9c:	e59f1080 	ldr	r1, [pc, #128]	; 4000ce24 <_tx_mutex_create+0x1c8>
4000cda0:	e5801000 	str	r1, [r0]
4000cda4:	e3a01000 	mov	r1, #0
4000cda8:	e5801004 	str	r1, [r0, #4]
4000cdac:	e3a01032 	mov	r1, #50	; 0x32
4000cdb0:	e5801008 	str	r1, [r0, #8]
4000cdb4:	e5804010 	str	r4, [r0, #16]
4000cdb8:	e5806014 	str	r6, [r0, #20]
4000cdbc:	e28d1004 	add	r1, sp, #4
4000cdc0:	e5801018 	str	r1, [r0, #24]
4000cdc4:	e3a01000 	mov	r1, #0
4000cdc8:	e580101c 	str	r1, [r0, #28]
4000cdcc:	e2800020 	add	r0, r0, #32
4000cdd0:	e59f1050 	ldr	r1, [pc, #80]	; 4000ce28 <_tx_mutex_create+0x1cc>
4000cdd4:	e5911000 	ldr	r1, [r1]
4000cdd8:	e1500001 	cmp	r0, r1
4000cddc:	3a000001 	bcc	4000cde8 <_tx_mutex_create+0x18c>
4000cde0:	e59f1044 	ldr	r1, [pc, #68]	; 4000ce2c <_tx_mutex_create+0x1d0>
4000cde4:	e5910000 	ldr	r0, [r1]
4000cde8:	e59f1024 	ldr	r1, [pc, #36]	; 4000ce14 <_tx_mutex_create+0x1b8>
4000cdec:	e5810000 	str	r0, [r1]
4000cdf0:	e59f1038 	ldr	r1, [pc, #56]	; 4000ce30 <_tx_mutex_create+0x1d4>
4000cdf4:	e5911000 	ldr	r1, [r1]
4000cdf8:	e5810020 	str	r0, [r1, #32]
4000cdfc:	e121f007 	msr	CPSR_c, r7
4000ce00:	e3a00000 	mov	r0, #0
4000ce04:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000ce08:	4d555445 	.word	0x4d555445
4000ce0c:	40030ec0 	.word	0x40030ec0
4000ce10:	40030ec4 	.word	0x40030ec4
4000ce14:	40030ea0 	.word	0x40030ea0
4000ce18:	40030ea4 	.word	0x40030ea4
4000ce1c:	40030e2c 	.word	0x40030e2c
4000ce20:	40030e34 	.word	0x40030e34
4000ce24:	f0f0f0f0 	.word	0xf0f0f0f0
4000ce28:	40030e9c 	.word	0x40030e9c
4000ce2c:	40030e98 	.word	0x40030e98
4000ce30:	40030e8c 	.word	0x40030e8c

4000ce34 <_tx_mutex_delete>:
4000ce34:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ce38:	e1a04000 	mov	r4, r0
4000ce3c:	e10f5000 	mrs	r5, CPSR
4000ce40:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce44:	e121f006 	msr	CPSR_c, r6
4000ce48:	e59f1294 	ldr	r1, [pc, #660]	; 4000d0e4 <_tx_mutex_delete+0x2b0>
4000ce4c:	e5910000 	ldr	r0, [r1]
4000ce50:	e3500000 	cmp	r0, #0
4000ce54:	0a000031 	beq	4000cf20 <_tx_mutex_delete+0xec>
4000ce58:	e59f1288 	ldr	r1, [pc, #648]	; 4000d0e8 <_tx_mutex_delete+0x2b4>
4000ce5c:	e5911000 	ldr	r1, [r1]
4000ce60:	e2811001 	add	r1, r1, #1
4000ce64:	e59f227c 	ldr	r2, [pc, #636]	; 4000d0e8 <_tx_mutex_delete+0x2b4>
4000ce68:	e5821000 	str	r1, [r2]
4000ce6c:	e580100c 	str	r1, [r0, #12]
4000ce70:	e59f1274 	ldr	r1, [pc, #628]	; 4000d0ec <_tx_mutex_delete+0x2b8>
4000ce74:	e5911000 	ldr	r1, [r1]
4000ce78:	e3510000 	cmp	r1, #0
4000ce7c:	1a000006 	bne	4000ce9c <_tx_mutex_delete+0x68>
4000ce80:	e59f1268 	ldr	r1, [pc, #616]	; 4000d0f0 <_tx_mutex_delete+0x2bc>
4000ce84:	e5911000 	ldr	r1, [r1]
4000ce88:	e5801000 	str	r1, [r0]
4000ce8c:	e5901000 	ldr	r1, [r0]
4000ce90:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ce94:	e5801004 	str	r1, [r0, #4]
4000ce98:	ea00000d 	b	4000ced4 <_tx_mutex_delete+0xa0>
4000ce9c:	e59f1248 	ldr	r1, [pc, #584]	; 4000d0ec <_tx_mutex_delete+0x2b8>
4000cea0:	e5911000 	ldr	r1, [r1]
4000cea4:	e59f2248 	ldr	r2, [pc, #584]	; 4000d0f4 <_tx_mutex_delete+0x2c0>
4000cea8:	e1510002 	cmp	r1, r2
4000ceac:	2a000004 	bcs	4000cec4 <_tx_mutex_delete+0x90>
4000ceb0:	e3e01000 	mvn	r1, #0
4000ceb4:	e5801000 	str	r1, [r0]
4000ceb8:	e3a01000 	mov	r1, #0
4000cebc:	e5801004 	str	r1, [r0, #4]
4000cec0:	ea000003 	b	4000ced4 <_tx_mutex_delete+0xa0>
4000cec4:	e59f1228 	ldr	r1, [pc, #552]	; 4000d0f4 <_tx_mutex_delete+0x2c0>
4000cec8:	e5801000 	str	r1, [r0]
4000cecc:	e3a01000 	mov	r1, #0
4000ced0:	e5801004 	str	r1, [r0, #4]
4000ced4:	e3a01033 	mov	r1, #51	; 0x33
4000ced8:	e5801008 	str	r1, [r0, #8]
4000cedc:	e5804010 	str	r4, [r0, #16]
4000cee0:	e580d014 	str	sp, [r0, #20]
4000cee4:	e3a01000 	mov	r1, #0
4000cee8:	e5801018 	str	r1, [r0, #24]
4000ceec:	e580101c 	str	r1, [r0, #28]
4000cef0:	e2800020 	add	r0, r0, #32
4000cef4:	e59f11fc 	ldr	r1, [pc, #508]	; 4000d0f8 <_tx_mutex_delete+0x2c4>
4000cef8:	e5911000 	ldr	r1, [r1]
4000cefc:	e1500001 	cmp	r0, r1
4000cf00:	3a000001 	bcc	4000cf0c <_tx_mutex_delete+0xd8>
4000cf04:	e59f11f0 	ldr	r1, [pc, #496]	; 4000d0fc <_tx_mutex_delete+0x2c8>
4000cf08:	e5910000 	ldr	r0, [r1]
4000cf0c:	e59f11d0 	ldr	r1, [pc, #464]	; 4000d0e4 <_tx_mutex_delete+0x2b0>
4000cf10:	e5810000 	str	r0, [r1]
4000cf14:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d100 <_tx_mutex_delete+0x2cc>
4000cf18:	e5911000 	ldr	r1, [r1]
4000cf1c:	e5810020 	str	r0, [r1, #32]
4000cf20:	e1a00004 	mov	r0, r4
4000cf24:	eb000d2f 	bl	400103e8 <_tx_trace_object_unregister>
4000cf28:	e59f01d4 	ldr	r0, [pc, #468]	; 4000d104 <_tx_mutex_delete+0x2d0>
4000cf2c:	e5900000 	ldr	r0, [r0]
4000cf30:	e2400001 	sub	r0, r0, #1
4000cf34:	e59f11c8 	ldr	r1, [pc, #456]	; 4000d104 <_tx_mutex_delete+0x2d0>
4000cf38:	e5810000 	str	r0, [r1]
4000cf3c:	e3a00000 	mov	r0, #0
4000cf40:	e5840000 	str	r0, [r4]
4000cf44:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf48:	e1500004 	cmp	r0, r4
4000cf4c:	1a000003 	bne	4000cf60 <_tx_mutex_delete+0x12c>
4000cf50:	e3a00000 	mov	r0, #0
4000cf54:	e59f11ac 	ldr	r1, [pc, #428]	; 4000d108 <_tx_mutex_delete+0x2d4>
4000cf58:	e5810000 	str	r0, [r1]
4000cf5c:	ea00000c 	b	4000cf94 <_tx_mutex_delete+0x160>
4000cf60:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cf64:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cf68:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cf6c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf70:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cf74:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cf78:	e59f0188 	ldr	r0, [pc, #392]	; 4000d108 <_tx_mutex_delete+0x2d4>
4000cf7c:	e5900000 	ldr	r0, [r0]
4000cf80:	e1500004 	cmp	r0, r4
4000cf84:	1a000002 	bne	4000cf94 <_tx_mutex_delete+0x160>
4000cf88:	e59f1178 	ldr	r1, [pc, #376]	; 4000d108 <_tx_mutex_delete+0x2d4>
4000cf8c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf90:	e5810000 	str	r0, [r1]
4000cf94:	e594000c 	ldr	r0, [r4, #12]
4000cf98:	e58d0000 	str	r0, [sp]
4000cf9c:	e5940010 	ldr	r0, [r4, #16]
4000cfa0:	e3500000 	cmp	r0, #0
4000cfa4:	0a00001c 	beq	4000d01c <_tx_mutex_delete+0x1e8>
4000cfa8:	e59d0000 	ldr	r0, [sp]
4000cfac:	e3500000 	cmp	r0, #0
4000cfb0:	0a000019 	beq	4000d01c <_tx_mutex_delete+0x1e8>
4000cfb4:	e59d0000 	ldr	r0, [sp]
4000cfb8:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cfbc:	e2400001 	sub	r0, r0, #1
4000cfc0:	e59d1000 	ldr	r1, [sp]
4000cfc4:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cfc8:	e59d0000 	ldr	r0, [sp]
4000cfcc:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cfd0:	e3500000 	cmp	r0, #0
4000cfd4:	1a000003 	bne	4000cfe8 <_tx_mutex_delete+0x1b4>
4000cfd8:	e3a00000 	mov	r0, #0
4000cfdc:	e59d1000 	ldr	r1, [sp]
4000cfe0:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cfe4:	ea00000c 	b	4000d01c <_tx_mutex_delete+0x1e8>
4000cfe8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cfec:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cff0:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cff4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cff8:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cffc:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d000:	e59d0000 	ldr	r0, [sp]
4000d004:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000d008:	e1500004 	cmp	r0, r4
4000d00c:	1a000002 	bne	4000d01c <_tx_mutex_delete+0x1e8>
4000d010:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d014:	e59d1000 	ldr	r1, [sp]
4000d018:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d01c:	e3a00000 	mov	r0, #0
4000d020:	e584000c 	str	r0, [r4, #12]
4000d024:	e59f00e0 	ldr	r0, [pc, #224]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d028:	e5900000 	ldr	r0, [r0]
4000d02c:	e2800001 	add	r0, r0, #1
4000d030:	e59f10d4 	ldr	r1, [pc, #212]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d034:	e5810000 	str	r0, [r1]
4000d038:	e121f005 	msr	CPSR_c, r5
4000d03c:	e594001c 	ldr	r0, [r4, #28]
4000d040:	e58d0000 	str	r0, [sp]
4000d044:	ea000017 	b	4000d0a8 <_tx_mutex_delete+0x274>
4000d048:	e10f5000 	mrs	r5, CPSR
4000d04c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d050:	e121f006 	msr	CPSR_c, r6
4000d054:	e3a00000 	mov	r0, #0
4000d058:	e59d1000 	ldr	r1, [sp]
4000d05c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000d060:	e59f00a4 	ldr	r0, [pc, #164]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d064:	e5900000 	ldr	r0, [r0]
4000d068:	e2800001 	add	r0, r0, #1
4000d06c:	e59f1098 	ldr	r1, [pc, #152]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d070:	e5810000 	str	r0, [r1]
4000d074:	e121f005 	msr	CPSR_c, r5
4000d078:	e3a00001 	mov	r0, #1
4000d07c:	e59d1000 	ldr	r1, [sp]
4000d080:	e5810084 	str	r0, [r1, #132]	; 0x84
4000d084:	e59d0000 	ldr	r0, [sp]
4000d088:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000d08c:	e58d0000 	str	r0, [sp]
4000d090:	e59d1000 	ldr	r1, [sp]
4000d094:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000d098:	eb000911 	bl	4000f4e4 <_tx_thread_system_resume>
4000d09c:	e5940020 	ldr	r0, [r4, #32]
4000d0a0:	e2400001 	sub	r0, r0, #1
4000d0a4:	e5840020 	str	r0, [r4, #32]
4000d0a8:	e5940020 	ldr	r0, [r4, #32]
4000d0ac:	e3500000 	cmp	r0, #0
4000d0b0:	1affffe4 	bne	4000d048 <_tx_mutex_delete+0x214>
4000d0b4:	e10f5000 	mrs	r5, CPSR
4000d0b8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d0bc:	e121f006 	msr	CPSR_c, r6
4000d0c0:	e59f0044 	ldr	r0, [pc, #68]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d0c4:	e5900000 	ldr	r0, [r0]
4000d0c8:	e2400001 	sub	r0, r0, #1
4000d0cc:	e59f1038 	ldr	r1, [pc, #56]	; 4000d10c <_tx_mutex_delete+0x2d8>
4000d0d0:	e5810000 	str	r0, [r1]
4000d0d4:	e121f005 	msr	CPSR_c, r5
4000d0d8:	eb0008d5 	bl	4000f434 <_tx_thread_system_preempt_check>
4000d0dc:	e3a00000 	mov	r0, #0
4000d0e0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000d0e4:	40030ea0 	.word	0x40030ea0
4000d0e8:	40030ea4 	.word	0x40030ea4
4000d0ec:	40030e2c 	.word	0x40030e2c
4000d0f0:	40030e34 	.word	0x40030e34
4000d0f4:	f0f0f0f0 	.word	0xf0f0f0f0
4000d0f8:	40030e9c 	.word	0x40030e9c
4000d0fc:	40030e98 	.word	0x40030e98
4000d100:	40030e8c 	.word	0x40030e8c
4000d104:	40030ec4 	.word	0x40030ec4
4000d108:	40030ec0 	.word	0x40030ec0
4000d10c:	40030e50 	.word	0x40030e50

4000d110 <_tx_mutex_get>:
4000d110:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000d114:	e1a04000 	mov	r4, r0
4000d118:	e1a05001 	mov	r5, r1
4000d11c:	e10f6000 	mrs	r6, CPSR
4000d120:	e3867080 	orr	r7, r6, #128	; 0x80
4000d124:	e121f007 	msr	CPSR_c, r7
4000d128:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d3dc <_tx_mutex_get+0x2cc>
4000d12c:	e5910000 	ldr	r0, [r1]
4000d130:	e3500000 	cmp	r0, #0
4000d134:	0a000032 	beq	4000d204 <_tx_mutex_get+0xf4>
4000d138:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d3e0 <_tx_mutex_get+0x2d0>
4000d13c:	e5911000 	ldr	r1, [r1]
4000d140:	e2811001 	add	r1, r1, #1
4000d144:	e59f2294 	ldr	r2, [pc, #660]	; 4000d3e0 <_tx_mutex_get+0x2d0>
4000d148:	e5821000 	str	r1, [r2]
4000d14c:	e580100c 	str	r1, [r0, #12]
4000d150:	e59f128c 	ldr	r1, [pc, #652]	; 4000d3e4 <_tx_mutex_get+0x2d4>
4000d154:	e5911000 	ldr	r1, [r1]
4000d158:	e3510000 	cmp	r1, #0
4000d15c:	1a000006 	bne	4000d17c <_tx_mutex_get+0x6c>
4000d160:	e59f1280 	ldr	r1, [pc, #640]	; 4000d3e8 <_tx_mutex_get+0x2d8>
4000d164:	e5911000 	ldr	r1, [r1]
4000d168:	e5801000 	str	r1, [r0]
4000d16c:	e5901000 	ldr	r1, [r0]
4000d170:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d174:	e5801004 	str	r1, [r0, #4]
4000d178:	ea00000d 	b	4000d1b4 <_tx_mutex_get+0xa4>
4000d17c:	e59f1260 	ldr	r1, [pc, #608]	; 4000d3e4 <_tx_mutex_get+0x2d4>
4000d180:	e5911000 	ldr	r1, [r1]
4000d184:	e59f2260 	ldr	r2, [pc, #608]	; 4000d3ec <_tx_mutex_get+0x2dc>
4000d188:	e1510002 	cmp	r1, r2
4000d18c:	2a000004 	bcs	4000d1a4 <_tx_mutex_get+0x94>
4000d190:	e3e01000 	mvn	r1, #0
4000d194:	e5801000 	str	r1, [r0]
4000d198:	e3a01000 	mov	r1, #0
4000d19c:	e5801004 	str	r1, [r0, #4]
4000d1a0:	ea000003 	b	4000d1b4 <_tx_mutex_get+0xa4>
4000d1a4:	e59f1240 	ldr	r1, [pc, #576]	; 4000d3ec <_tx_mutex_get+0x2dc>
4000d1a8:	e5801000 	str	r1, [r0]
4000d1ac:	e3a01000 	mov	r1, #0
4000d1b0:	e5801004 	str	r1, [r0, #4]
4000d1b4:	e3a01034 	mov	r1, #52	; 0x34
4000d1b8:	e5801008 	str	r1, [r0, #8]
4000d1bc:	e5804010 	str	r4, [r0, #16]
4000d1c0:	e5805014 	str	r5, [r0, #20]
4000d1c4:	e594100c 	ldr	r1, [r4, #12]
4000d1c8:	e5801018 	str	r1, [r0, #24]
4000d1cc:	e5941008 	ldr	r1, [r4, #8]
4000d1d0:	e580101c 	str	r1, [r0, #28]
4000d1d4:	e2800020 	add	r0, r0, #32
4000d1d8:	e59f1210 	ldr	r1, [pc, #528]	; 4000d3f0 <_tx_mutex_get+0x2e0>
4000d1dc:	e5911000 	ldr	r1, [r1]
4000d1e0:	e1500001 	cmp	r0, r1
4000d1e4:	3a000001 	bcc	4000d1f0 <_tx_mutex_get+0xe0>
4000d1e8:	e59f1204 	ldr	r1, [pc, #516]	; 4000d3f4 <_tx_mutex_get+0x2e4>
4000d1ec:	e5910000 	ldr	r0, [r1]
4000d1f0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d3dc <_tx_mutex_get+0x2cc>
4000d1f4:	e5810000 	str	r0, [r1]
4000d1f8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d3f8 <_tx_mutex_get+0x2e8>
4000d1fc:	e5911000 	ldr	r1, [r1]
4000d200:	e5810020 	str	r0, [r1, #32]
4000d204:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d3e8 <_tx_mutex_get+0x2d8>
4000d208:	e5909000 	ldr	r9, [r0]
4000d20c:	e5940008 	ldr	r0, [r4, #8]
4000d210:	e3500000 	cmp	r0, #0
4000d214:	1a000025 	bne	4000d2b0 <_tx_mutex_get+0x1a0>
4000d218:	e3a00001 	mov	r0, #1
4000d21c:	e5840008 	str	r0, [r4, #8]
4000d220:	e584900c 	str	r9, [r4, #12]
4000d224:	e5940010 	ldr	r0, [r4, #16]
4000d228:	e3500000 	cmp	r0, #0
4000d22c:	0a00001d 	beq	4000d2a8 <_tx_mutex_get+0x198>
4000d230:	e3590000 	cmp	r9, #0
4000d234:	0a00001b 	beq	4000d2a8 <_tx_mutex_get+0x198>
4000d238:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d23c:	e5840014 	str	r0, [r4, #20]
4000d240:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d244:	e5840018 	str	r0, [r4, #24]
4000d248:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d24c:	e3500000 	cmp	r0, #0
4000d250:	0a000008 	beq	4000d278 <_tx_mutex_get+0x168>
4000d254:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d258:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d25c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d260:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d264:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d268:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d26c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d270:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d274:	ea000006 	b	4000d294 <_tx_mutex_get+0x184>
4000d278:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d27c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d280:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d284:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d288:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d28c:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d290:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d294:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d298:	e2800001 	add	r0, r0, #1
4000d29c:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d2a0:	e3a00020 	mov	r0, #32
4000d2a4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d2a8:	e3a08000 	mov	r8, #0
4000d2ac:	ea000047 	b	4000d3d0 <_tx_mutex_get+0x2c0>
4000d2b0:	e594000c 	ldr	r0, [r4, #12]
4000d2b4:	e1500009 	cmp	r0, r9
4000d2b8:	1a000004 	bne	4000d2d0 <_tx_mutex_get+0x1c0>
4000d2bc:	e5940008 	ldr	r0, [r4, #8]
4000d2c0:	e2800001 	add	r0, r0, #1
4000d2c4:	e5840008 	str	r0, [r4, #8]
4000d2c8:	e3a08000 	mov	r8, #0
4000d2cc:	ea00003f 	b	4000d3d0 <_tx_mutex_get+0x2c0>
4000d2d0:	e3550000 	cmp	r5, #0
4000d2d4:	0a00003c 	beq	4000d3cc <_tx_mutex_get+0x2bc>
4000d2d8:	e59f011c 	ldr	r0, [pc, #284]	; 4000d3fc <_tx_mutex_get+0x2ec>
4000d2dc:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d2e0:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d2e4:	e594001c 	ldr	r0, [r4, #28]
4000d2e8:	e3500000 	cmp	r0, #0
4000d2ec:	0a00000a 	beq	4000d31c <_tx_mutex_get+0x20c>
4000d2f0:	e594001c 	ldr	r0, [r4, #28]
4000d2f4:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d2f8:	e594001c 	ldr	r0, [r4, #28]
4000d2fc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d300:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d304:	e594001c 	ldr	r0, [r4, #28]
4000d308:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d30c:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d310:	e594001c 	ldr	r0, [r4, #28]
4000d314:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d318:	ea000002 	b	4000d328 <_tx_mutex_get+0x218>
4000d31c:	e584901c 	str	r9, [r4, #28]
4000d320:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d324:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d328:	e5940020 	ldr	r0, [r4, #32]
4000d32c:	e2800001 	add	r0, r0, #1
4000d330:	e5840020 	str	r0, [r4, #32]
4000d334:	e3a0000d 	mov	r0, #13
4000d338:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d33c:	e3a00001 	mov	r0, #1
4000d340:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d344:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d348:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d400 <_tx_mutex_get+0x2f0>
4000d34c:	e5900000 	ldr	r0, [r0]
4000d350:	e2800001 	add	r0, r0, #1
4000d354:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d400 <_tx_mutex_get+0x2f0>
4000d358:	e5810000 	str	r0, [r1]
4000d35c:	e121f006 	msr	CPSR_c, r6
4000d360:	e5940010 	ldr	r0, [r4, #16]
4000d364:	e3500000 	cmp	r0, #0
4000d368:	0a000013 	beq	4000d3bc <_tx_mutex_get+0x2ac>
4000d36c:	e594000c 	ldr	r0, [r4, #12]
4000d370:	e3500000 	cmp	r0, #0
4000d374:	0a000010 	beq	4000d3bc <_tx_mutex_get+0x2ac>
4000d378:	e3590000 	cmp	r9, #0
4000d37c:	0a00000e 	beq	4000d3bc <_tx_mutex_get+0x2ac>
4000d380:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d384:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d388:	e1500001 	cmp	r0, r1
4000d38c:	9a000001 	bls	4000d398 <_tx_mutex_get+0x288>
4000d390:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d394:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d398:	e594000c 	ldr	r0, [r4, #12]
4000d39c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d3a0:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d3a4:	e1500001 	cmp	r0, r1
4000d3a8:	9a000003 	bls	4000d3bc <_tx_mutex_get+0x2ac>
4000d3ac:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d3b0:	e1a01002 	mov	r1, r2
4000d3b4:	e594000c 	ldr	r0, [r4, #12]
4000d3b8:	eb000011 	bl	4000d404 <_tx_mutex_priority_change>
4000d3bc:	e1a00009 	mov	r0, r9
4000d3c0:	ebffeea0 	bl	40008e48 <_tx_thread_system_suspend>
4000d3c4:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d3c8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d3cc:	e3a0801d 	mov	r8, #29
4000d3d0:	e121f006 	msr	CPSR_c, r6
4000d3d4:	e1a00008 	mov	r0, r8
4000d3d8:	eafffffa 	b	4000d3c8 <_tx_mutex_get+0x2b8>
4000d3dc:	40030ea0 	.word	0x40030ea0
4000d3e0:	40030ea4 	.word	0x40030ea4
4000d3e4:	40030e2c 	.word	0x40030e2c
4000d3e8:	40030e34 	.word	0x40030e34
4000d3ec:	f0f0f0f0 	.word	0xf0f0f0f0
4000d3f0:	40030e9c 	.word	0x40030e9c
4000d3f4:	40030e98 	.word	0x40030e98
4000d3f8:	40030e8c 	.word	0x40030e8c
4000d3fc:	400105c4 	.word	0x400105c4
4000d400:	40030e50 	.word	0x40030e50

4000d404 <_tx_mutex_priority_change>:
4000d404:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d408:	e1a04000 	mov	r4, r0
4000d40c:	e1a05001 	mov	r5, r1
4000d410:	e1a06002 	mov	r6, r2
4000d414:	e10f7000 	mrs	r7, CPSR
4000d418:	e3878080 	orr	r8, r7, #128	; 0x80
4000d41c:	e121f008 	msr	CPSR_c, r8
4000d420:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d424:	e3500000 	cmp	r0, #0
4000d428:	0a000003 	beq	4000d43c <_tx_mutex_priority_change+0x38>
4000d42c:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d430:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d434:	e121f007 	msr	CPSR_c, r7
4000d438:	ea000011 	b	4000d484 <_tx_mutex_priority_change+0x80>
4000d43c:	e59f0044 	ldr	r0, [pc, #68]	; 4000d488 <_tx_mutex_priority_change+0x84>
4000d440:	e5900000 	ldr	r0, [r0]
4000d444:	e2800002 	add	r0, r0, #2
4000d448:	e59f1038 	ldr	r1, [pc, #56]	; 4000d488 <_tx_mutex_priority_change+0x84>
4000d44c:	e5810000 	str	r0, [r1]
4000d450:	e3a00003 	mov	r0, #3
4000d454:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d458:	e3a00001 	mov	r0, #1
4000d45c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d460:	e3a00000 	mov	r0, #0
4000d464:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d468:	e121f007 	msr	CPSR_c, r7
4000d46c:	e1a00004 	mov	r0, r4
4000d470:	ebffee74 	bl	40008e48 <_tx_thread_system_suspend>
4000d474:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d478:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d47c:	e1a00004 	mov	r0, r4
4000d480:	eb000817 	bl	4000f4e4 <_tx_thread_system_resume>
4000d484:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d488:	40030e50 	.word	0x40030e50

4000d48c <_tx_mutex_put>:
4000d48c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d490:	e1a04000 	mov	r4, r0
4000d494:	e10f5000 	mrs	r5, CPSR
4000d498:	e3856080 	orr	r6, r5, #128	; 0x80
4000d49c:	e121f006 	msr	CPSR_c, r6
4000d4a0:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d93c <_tx_mutex_put+0x4b0>
4000d4a4:	e5910000 	ldr	r0, [r1]
4000d4a8:	e3500000 	cmp	r0, #0
4000d4ac:	0a000032 	beq	4000d57c <_tx_mutex_put+0xf0>
4000d4b0:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d940 <_tx_mutex_put+0x4b4>
4000d4b4:	e5911000 	ldr	r1, [r1]
4000d4b8:	e2811001 	add	r1, r1, #1
4000d4bc:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d940 <_tx_mutex_put+0x4b4>
4000d4c0:	e5821000 	str	r1, [r2]
4000d4c4:	e580100c 	str	r1, [r0, #12]
4000d4c8:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d944 <_tx_mutex_put+0x4b8>
4000d4cc:	e5911000 	ldr	r1, [r1]
4000d4d0:	e3510000 	cmp	r1, #0
4000d4d4:	1a000006 	bne	4000d4f4 <_tx_mutex_put+0x68>
4000d4d8:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d948 <_tx_mutex_put+0x4bc>
4000d4dc:	e5911000 	ldr	r1, [r1]
4000d4e0:	e5801000 	str	r1, [r0]
4000d4e4:	e5901000 	ldr	r1, [r0]
4000d4e8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d4ec:	e5801004 	str	r1, [r0, #4]
4000d4f0:	ea00000d 	b	4000d52c <_tx_mutex_put+0xa0>
4000d4f4:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d944 <_tx_mutex_put+0x4b8>
4000d4f8:	e5911000 	ldr	r1, [r1]
4000d4fc:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d94c <_tx_mutex_put+0x4c0>
4000d500:	e1510002 	cmp	r1, r2
4000d504:	2a000004 	bcs	4000d51c <_tx_mutex_put+0x90>
4000d508:	e3e01000 	mvn	r1, #0
4000d50c:	e5801000 	str	r1, [r0]
4000d510:	e3a01000 	mov	r1, #0
4000d514:	e5801004 	str	r1, [r0, #4]
4000d518:	ea000003 	b	4000d52c <_tx_mutex_put+0xa0>
4000d51c:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d94c <_tx_mutex_put+0x4c0>
4000d520:	e5801000 	str	r1, [r0]
4000d524:	e3a01000 	mov	r1, #0
4000d528:	e5801004 	str	r1, [r0, #4]
4000d52c:	e3a01039 	mov	r1, #57	; 0x39
4000d530:	e5801008 	str	r1, [r0, #8]
4000d534:	e5804010 	str	r4, [r0, #16]
4000d538:	e594100c 	ldr	r1, [r4, #12]
4000d53c:	e5801014 	str	r1, [r0, #20]
4000d540:	e5941008 	ldr	r1, [r4, #8]
4000d544:	e5801018 	str	r1, [r0, #24]
4000d548:	e580d01c 	str	sp, [r0, #28]
4000d54c:	e2800020 	add	r0, r0, #32
4000d550:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d950 <_tx_mutex_put+0x4c4>
4000d554:	e5911000 	ldr	r1, [r1]
4000d558:	e1500001 	cmp	r0, r1
4000d55c:	3a000001 	bcc	4000d568 <_tx_mutex_put+0xdc>
4000d560:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d954 <_tx_mutex_put+0x4c8>
4000d564:	e5910000 	ldr	r0, [r1]
4000d568:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d93c <_tx_mutex_put+0x4b0>
4000d56c:	e5810000 	str	r0, [r1]
4000d570:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d958 <_tx_mutex_put+0x4cc>
4000d574:	e5911000 	ldr	r1, [r1]
4000d578:	e5810020 	str	r0, [r1, #32]
4000d57c:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d948 <_tx_mutex_put+0x4bc>
4000d580:	e5907000 	ldr	r7, [r0]
4000d584:	e5940008 	ldr	r0, [r4, #8]
4000d588:	e3500000 	cmp	r0, #0
4000d58c:	0a0000e7 	beq	4000d930 <_tx_mutex_put+0x4a4>
4000d590:	e594000c 	ldr	r0, [r4, #12]
4000d594:	e1500007 	cmp	r0, r7
4000d598:	1a0000e4 	bne	4000d930 <_tx_mutex_put+0x4a4>
4000d59c:	e5940008 	ldr	r0, [r4, #8]
4000d5a0:	e2400001 	sub	r0, r0, #1
4000d5a4:	e5840008 	str	r0, [r4, #8]
4000d5a8:	e5940008 	ldr	r0, [r4, #8]
4000d5ac:	e3500000 	cmp	r0, #0
4000d5b0:	0a000002 	beq	4000d5c0 <_tx_mutex_put+0x134>
4000d5b4:	e121f005 	msr	CPSR_c, r5
4000d5b8:	e3a00000 	mov	r0, #0
4000d5bc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d5c0:	e3a08000 	mov	r8, #0
4000d5c4:	e3a09000 	mov	r9, #0
4000d5c8:	e3a0a000 	mov	sl, #0
4000d5cc:	e5940010 	ldr	r0, [r4, #16]
4000d5d0:	e3500000 	cmp	r0, #0
4000d5d4:	0a000033 	beq	4000d6a8 <_tx_mutex_put+0x21c>
4000d5d8:	e3570000 	cmp	r7, #0
4000d5dc:	0a000031 	beq	4000d6a8 <_tx_mutex_put+0x21c>
4000d5e0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d5e4:	e2400001 	sub	r0, r0, #1
4000d5e8:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d5ec:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d5f0:	e3500000 	cmp	r0, #0
4000d5f4:	1a000002 	bne	4000d604 <_tx_mutex_put+0x178>
4000d5f8:	e3a00000 	mov	r0, #0
4000d5fc:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d600:	ea00000a 	b	4000d630 <_tx_mutex_put+0x1a4>
4000d604:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d608:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d60c:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d610:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d614:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d618:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d61c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d620:	e1500004 	cmp	r0, r4
4000d624:	1a000001 	bne	4000d630 <_tx_mutex_put+0x1a4>
4000d628:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d62c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d630:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d634:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d638:	e59f031c 	ldr	r0, [pc, #796]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d63c:	e5900000 	ldr	r0, [r0]
4000d640:	e2800001 	add	r0, r0, #1
4000d644:	e59f1310 	ldr	r1, [pc, #784]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d648:	e5810000 	str	r0, [r1]
4000d64c:	e121f005 	msr	CPSR_c, r5
4000d650:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d654:	ea000009 	b	4000d680 <_tx_mutex_put+0x1f4>
4000d658:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d65c:	e1500009 	cmp	r0, r9
4000d660:	2a000001 	bcs	4000d66c <_tx_mutex_put+0x1e0>
4000d664:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d668:	e1a0a009 	mov	sl, r9
4000d66c:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d670:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d674:	e150000b 	cmp	r0, fp
4000d678:	1a000000 	bne	4000d680 <_tx_mutex_put+0x1f4>
4000d67c:	e3a0b000 	mov	fp, #0
4000d680:	e35b0000 	cmp	fp, #0
4000d684:	1afffff3 	bne	4000d658 <_tx_mutex_put+0x1cc>
4000d688:	e10f5000 	mrs	r5, CPSR
4000d68c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d690:	e121f006 	msr	CPSR_c, r6
4000d694:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d698:	e5900000 	ldr	r0, [r0]
4000d69c:	e2400001 	sub	r0, r0, #1
4000d6a0:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d6a4:	e5810000 	str	r0, [r1]
4000d6a8:	e5940020 	ldr	r0, [r4, #32]
4000d6ac:	e3500001 	cmp	r0, #1
4000d6b0:	9a000012 	bls	4000d700 <_tx_mutex_put+0x274>
4000d6b4:	e5940010 	ldr	r0, [r4, #16]
4000d6b8:	e3500000 	cmp	r0, #0
4000d6bc:	0a00000f 	beq	4000d700 <_tx_mutex_put+0x274>
4000d6c0:	e59f0294 	ldr	r0, [pc, #660]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d6c4:	e5900000 	ldr	r0, [r0]
4000d6c8:	e2800001 	add	r0, r0, #1
4000d6cc:	e59f1288 	ldr	r1, [pc, #648]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d6d0:	e5810000 	str	r0, [r1]
4000d6d4:	e121f005 	msr	CPSR_c, r5
4000d6d8:	e1a00004 	mov	r0, r4
4000d6dc:	eb000bec 	bl	40010694 <_tx_mutex_prioritize>
4000d6e0:	e10f5000 	mrs	r5, CPSR
4000d6e4:	e3856080 	orr	r6, r5, #128	; 0x80
4000d6e8:	e121f006 	msr	CPSR_c, r6
4000d6ec:	e59f0268 	ldr	r0, [pc, #616]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d6f0:	e5900000 	ldr	r0, [r0]
4000d6f4:	e2400001 	sub	r0, r0, #1
4000d6f8:	e59f125c 	ldr	r1, [pc, #604]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d6fc:	e5810000 	str	r0, [r1]
4000d700:	e594001c 	ldr	r0, [r4, #28]
4000d704:	e3500000 	cmp	r0, #0
4000d708:	1a000024 	bne	4000d7a0 <_tx_mutex_put+0x314>
4000d70c:	e59f0248 	ldr	r0, [pc, #584]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d710:	e5900000 	ldr	r0, [r0]
4000d714:	e2800001 	add	r0, r0, #1
4000d718:	e59f123c 	ldr	r1, [pc, #572]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d71c:	e5810000 	str	r0, [r1]
4000d720:	e121f005 	msr	CPSR_c, r5
4000d724:	e5940010 	ldr	r0, [r4, #16]
4000d728:	e3500000 	cmp	r0, #0
4000d72c:	0a00000a 	beq	4000d75c <_tx_mutex_put+0x2d0>
4000d730:	e3a00020 	mov	r0, #32
4000d734:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d738:	e3570000 	cmp	r7, #0
4000d73c:	0a000006 	beq	4000d75c <_tx_mutex_put+0x2d0>
4000d740:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d744:	e1500009 	cmp	r0, r9
4000d748:	0a000003 	beq	4000d75c <_tx_mutex_put+0x2d0>
4000d74c:	e1a0200a 	mov	r2, sl
4000d750:	e1a01009 	mov	r1, r9
4000d754:	e594000c 	ldr	r0, [r4, #12]
4000d758:	ebffff29 	bl	4000d404 <_tx_mutex_priority_change>
4000d75c:	e10f5000 	mrs	r5, CPSR
4000d760:	e3856080 	orr	r6, r5, #128	; 0x80
4000d764:	e121f006 	msr	CPSR_c, r6
4000d768:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d76c:	e5900000 	ldr	r0, [r0]
4000d770:	e2400001 	sub	r0, r0, #1
4000d774:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d778:	e5810000 	str	r0, [r1]
4000d77c:	e5940008 	ldr	r0, [r4, #8]
4000d780:	e3500000 	cmp	r0, #0
4000d784:	1a000001 	bne	4000d790 <_tx_mutex_put+0x304>
4000d788:	e3a00000 	mov	r0, #0
4000d78c:	e584000c 	str	r0, [r4, #12]
4000d790:	e121f005 	msr	CPSR_c, r5
4000d794:	eb000726 	bl	4000f434 <_tx_thread_system_preempt_check>
4000d798:	e3a00000 	mov	r0, #0
4000d79c:	eaffff86 	b	4000d5bc <_tx_mutex_put+0x130>
4000d7a0:	e594701c 	ldr	r7, [r4, #28]
4000d7a4:	e5940010 	ldr	r0, [r4, #16]
4000d7a8:	e3500000 	cmp	r0, #0
4000d7ac:	0a00001f 	beq	4000d830 <_tx_mutex_put+0x3a4>
4000d7b0:	e594800c 	ldr	r8, [r4, #12]
4000d7b4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d7b8:	e5840014 	str	r0, [r4, #20]
4000d7bc:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d7c0:	e5840018 	str	r0, [r4, #24]
4000d7c4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7c8:	e3500000 	cmp	r0, #0
4000d7cc:	0a00000b 	beq	4000d800 <_tx_mutex_put+0x374>
4000d7d0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7d4:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d7d8:	e58d0000 	str	r0, [sp]
4000d7dc:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7e0:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d7e4:	e59d0000 	ldr	r0, [sp]
4000d7e8:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d7ec:	e59d0000 	ldr	r0, [sp]
4000d7f0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d7f4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7f8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d7fc:	ea000006 	b	4000d81c <_tx_mutex_put+0x390>
4000d800:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d804:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d808:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d80c:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d810:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d814:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d818:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d81c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d820:	e2800001 	add	r0, r0, #1
4000d824:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d828:	e3a00020 	mov	r0, #32
4000d82c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d830:	e3a00001 	mov	r0, #1
4000d834:	e5840008 	str	r0, [r4, #8]
4000d838:	e584700c 	str	r7, [r4, #12]
4000d83c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d840:	e1500007 	cmp	r0, r7
4000d844:	1a000002 	bne	4000d854 <_tx_mutex_put+0x3c8>
4000d848:	e3a00000 	mov	r0, #0
4000d84c:	e584001c 	str	r0, [r4, #28]
4000d850:	ea000007 	b	4000d874 <_tx_mutex_put+0x3e8>
4000d854:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d858:	e584001c 	str	r0, [r4, #28]
4000d85c:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d860:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d864:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d868:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d86c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d870:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d874:	e5940020 	ldr	r0, [r4, #32]
4000d878:	e2400001 	sub	r0, r0, #1
4000d87c:	e5840020 	str	r0, [r4, #32]
4000d880:	e3a00000 	mov	r0, #0
4000d884:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d888:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d88c:	e5900000 	ldr	r0, [r0]
4000d890:	e2800001 	add	r0, r0, #1
4000d894:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d95c <_tx_mutex_put+0x4d0>
4000d898:	e5810000 	str	r0, [r1]
4000d89c:	e121f005 	msr	CPSR_c, r5
4000d8a0:	e3a00000 	mov	r0, #0
4000d8a4:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d8a8:	e5940010 	ldr	r0, [r4, #16]
4000d8ac:	e3500000 	cmp	r0, #0
4000d8b0:	0a00001a 	beq	4000d920 <_tx_mutex_put+0x494>
4000d8b4:	e5940020 	ldr	r0, [r4, #32]
4000d8b8:	e3500000 	cmp	r0, #0
4000d8bc:	0a00000e 	beq	4000d8fc <_tx_mutex_put+0x470>
4000d8c0:	e5940020 	ldr	r0, [r4, #32]
4000d8c4:	e3500001 	cmp	r0, #1
4000d8c8:	9a000001 	bls	4000d8d4 <_tx_mutex_put+0x448>
4000d8cc:	e1a00004 	mov	r0, r4
4000d8d0:	eb000b6f 	bl	40010694 <_tx_mutex_prioritize>
4000d8d4:	e10f5000 	mrs	r5, CPSR
4000d8d8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d8dc:	e121f006 	msr	CPSR_c, r6
4000d8e0:	e594001c 	ldr	r0, [r4, #28]
4000d8e4:	e3500000 	cmp	r0, #0
4000d8e8:	0a000002 	beq	4000d8f8 <_tx_mutex_put+0x46c>
4000d8ec:	e594001c 	ldr	r0, [r4, #28]
4000d8f0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d8f4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d8f8:	e121f005 	msr	CPSR_c, r5
4000d8fc:	e3580000 	cmp	r8, #0
4000d900:	0a000006 	beq	4000d920 <_tx_mutex_put+0x494>
4000d904:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d908:	e1500009 	cmp	r0, r9
4000d90c:	0a000003 	beq	4000d920 <_tx_mutex_put+0x494>
4000d910:	e1a0200a 	mov	r2, sl
4000d914:	e1a01009 	mov	r1, r9
4000d918:	e1a00008 	mov	r0, r8
4000d91c:	ebfffeb8 	bl	4000d404 <_tx_mutex_priority_change>
4000d920:	e1a00007 	mov	r0, r7
4000d924:	eb0006ee 	bl	4000f4e4 <_tx_thread_system_resume>
4000d928:	e3a00000 	mov	r0, #0
4000d92c:	eaffff22 	b	4000d5bc <_tx_mutex_put+0x130>
4000d930:	e121f005 	msr	CPSR_c, r5
4000d934:	e3a0001e 	mov	r0, #30
4000d938:	eaffff1f 	b	4000d5bc <_tx_mutex_put+0x130>
4000d93c:	40030ea0 	.word	0x40030ea0
4000d940:	40030ea4 	.word	0x40030ea4
4000d944:	40030e2c 	.word	0x40030e2c
4000d948:	40030e34 	.word	0x40030e34
4000d94c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d950:	40030e9c 	.word	0x40030e9c
4000d954:	40030e98 	.word	0x40030e98
4000d958:	40030e8c 	.word	0x40030e8c
4000d95c:	40030e50 	.word	0x40030e50

4000d960 <_tx_queue_create>:
4000d960:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d964:	e1a04000 	mov	r4, r0
4000d968:	e1a05001 	mov	r5, r1
4000d96c:	e1a06002 	mov	r6, r2
4000d970:	e1a07003 	mov	r7, r3
4000d974:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d978:	e3a0103c 	mov	r1, #60	; 0x3c
4000d97c:	e1a00004 	mov	r0, r4
4000d980:	eb0017f3 	bl	40013954 <__aeabi_memclr4>
4000d984:	e5845004 	str	r5, [r4, #4]
4000d988:	e5846008 	str	r6, [r4, #8]
4000d98c:	e1a01106 	lsl	r1, r6, #2
4000d990:	e1a00008 	mov	r0, r8
4000d994:	eb000ca6 	bl	40010c34 <__aeabi_uidivmod>
4000d998:	e1a0b000 	mov	fp, r0
4000d99c:	e000069b 	mul	r0, fp, r6
4000d9a0:	e58d0004 	str	r0, [sp, #4]
4000d9a4:	e5847018 	str	r7, [r4, #24]
4000d9a8:	e59d0004 	ldr	r0, [sp, #4]
4000d9ac:	e0870100 	add	r0, r7, r0, lsl #2
4000d9b0:	e584001c 	str	r0, [r4, #28]
4000d9b4:	e5847020 	str	r7, [r4, #32]
4000d9b8:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d9bc:	e584b014 	str	fp, [r4, #20]
4000d9c0:	e584b00c 	str	fp, [r4, #12]
4000d9c4:	e10f9000 	mrs	r9, CPSR
4000d9c8:	e3890080 	orr	r0, r9, #128	; 0x80
4000d9cc:	e58d0008 	str	r0, [sp, #8]
4000d9d0:	e59d0008 	ldr	r0, [sp, #8]
4000d9d4:	e121f000 	msr	CPSR_c, r0
4000d9d8:	e59f0160 	ldr	r0, [pc, #352]	; 4000db40 <_tx_queue_create+0x1e0>
4000d9dc:	e5840000 	str	r0, [r4]
4000d9e0:	e59f015c 	ldr	r0, [pc, #348]	; 4000db44 <_tx_queue_create+0x1e4>
4000d9e4:	e5900000 	ldr	r0, [r0]
4000d9e8:	e3500000 	cmp	r0, #0
4000d9ec:	0a00000b 	beq	4000da20 <_tx_queue_create+0xc0>
4000d9f0:	e59f014c 	ldr	r0, [pc, #332]	; 4000db44 <_tx_queue_create+0x1e4>
4000d9f4:	e5900000 	ldr	r0, [r0]
4000d9f8:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d9fc:	e59f0140 	ldr	r0, [pc, #320]	; 4000db44 <_tx_queue_create+0x1e4>
4000da00:	e5900000 	ldr	r0, [r0]
4000da04:	e5804034 	str	r4, [r0, #52]	; 0x34
4000da08:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000da0c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000da10:	e59f012c 	ldr	r0, [pc, #300]	; 4000db44 <_tx_queue_create+0x1e4>
4000da14:	e5900000 	ldr	r0, [r0]
4000da18:	e5840030 	str	r0, [r4, #48]	; 0x30
4000da1c:	ea000003 	b	4000da30 <_tx_queue_create+0xd0>
4000da20:	e59f011c 	ldr	r0, [pc, #284]	; 4000db44 <_tx_queue_create+0x1e4>
4000da24:	e5804000 	str	r4, [r0]
4000da28:	e5844030 	str	r4, [r4, #48]	; 0x30
4000da2c:	e5844034 	str	r4, [r4, #52]	; 0x34
4000da30:	e59f0110 	ldr	r0, [pc, #272]	; 4000db48 <_tx_queue_create+0x1e8>
4000da34:	e5900000 	ldr	r0, [r0]
4000da38:	e2800001 	add	r0, r0, #1
4000da3c:	e59f1104 	ldr	r1, [pc, #260]	; 4000db48 <_tx_queue_create+0x1e8>
4000da40:	e5810000 	str	r0, [r1]
4000da44:	e3a03000 	mov	r3, #0
4000da48:	e58d3000 	str	r3, [sp]
4000da4c:	e1a03008 	mov	r3, r8
4000da50:	e1a02005 	mov	r2, r5
4000da54:	e1a01004 	mov	r1, r4
4000da58:	e3a00003 	mov	r0, #3
4000da5c:	eb0009f6 	bl	4001023c <_tx_trace_object_register>
4000da60:	e59f10e4 	ldr	r1, [pc, #228]	; 4000db4c <_tx_queue_create+0x1ec>
4000da64:	e5910000 	ldr	r0, [r1]
4000da68:	e3500000 	cmp	r0, #0
4000da6c:	0a000030 	beq	4000db34 <_tx_queue_create+0x1d4>
4000da70:	e59f10d8 	ldr	r1, [pc, #216]	; 4000db50 <_tx_queue_create+0x1f0>
4000da74:	e5911000 	ldr	r1, [r1]
4000da78:	e2811001 	add	r1, r1, #1
4000da7c:	e59f20cc 	ldr	r2, [pc, #204]	; 4000db50 <_tx_queue_create+0x1f0>
4000da80:	e5821000 	str	r1, [r2]
4000da84:	e580100c 	str	r1, [r0, #12]
4000da88:	e59f10c4 	ldr	r1, [pc, #196]	; 4000db54 <_tx_queue_create+0x1f4>
4000da8c:	e5911000 	ldr	r1, [r1]
4000da90:	e3510000 	cmp	r1, #0
4000da94:	1a000006 	bne	4000dab4 <_tx_queue_create+0x154>
4000da98:	e59f10b8 	ldr	r1, [pc, #184]	; 4000db58 <_tx_queue_create+0x1f8>
4000da9c:	e5911000 	ldr	r1, [r1]
4000daa0:	e5801000 	str	r1, [r0]
4000daa4:	e5901000 	ldr	r1, [r0]
4000daa8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000daac:	e5801004 	str	r1, [r0, #4]
4000dab0:	ea00000d 	b	4000daec <_tx_queue_create+0x18c>
4000dab4:	e59f1098 	ldr	r1, [pc, #152]	; 4000db54 <_tx_queue_create+0x1f4>
4000dab8:	e5911000 	ldr	r1, [r1]
4000dabc:	e59f2098 	ldr	r2, [pc, #152]	; 4000db5c <_tx_queue_create+0x1fc>
4000dac0:	e1510002 	cmp	r1, r2
4000dac4:	2a000004 	bcs	4000dadc <_tx_queue_create+0x17c>
4000dac8:	e3e01000 	mvn	r1, #0
4000dacc:	e5801000 	str	r1, [r0]
4000dad0:	e3a01000 	mov	r1, #0
4000dad4:	e5801004 	str	r1, [r0, #4]
4000dad8:	ea000003 	b	4000daec <_tx_queue_create+0x18c>
4000dadc:	e59f1078 	ldr	r1, [pc, #120]	; 4000db5c <_tx_queue_create+0x1fc>
4000dae0:	e5801000 	str	r1, [r0]
4000dae4:	e3a01000 	mov	r1, #0
4000dae8:	e5801004 	str	r1, [r0, #4]
4000daec:	e3a0103c 	mov	r1, #60	; 0x3c
4000daf0:	e5801008 	str	r1, [r0, #8]
4000daf4:	e5804010 	str	r4, [r0, #16]
4000daf8:	e5806014 	str	r6, [r0, #20]
4000dafc:	e5807018 	str	r7, [r0, #24]
4000db00:	e580801c 	str	r8, [r0, #28]
4000db04:	e2800020 	add	r0, r0, #32
4000db08:	e59f1050 	ldr	r1, [pc, #80]	; 4000db60 <_tx_queue_create+0x200>
4000db0c:	e5911000 	ldr	r1, [r1]
4000db10:	e1500001 	cmp	r0, r1
4000db14:	3a000001 	bcc	4000db20 <_tx_queue_create+0x1c0>
4000db18:	e59f1044 	ldr	r1, [pc, #68]	; 4000db64 <_tx_queue_create+0x204>
4000db1c:	e5910000 	ldr	r0, [r1]
4000db20:	e59f1024 	ldr	r1, [pc, #36]	; 4000db4c <_tx_queue_create+0x1ec>
4000db24:	e5810000 	str	r0, [r1]
4000db28:	e59f1038 	ldr	r1, [pc, #56]	; 4000db68 <_tx_queue_create+0x208>
4000db2c:	e5911000 	ldr	r1, [r1]
4000db30:	e5810020 	str	r0, [r1, #32]
4000db34:	e121f009 	msr	CPSR_c, r9
4000db38:	e3a00000 	mov	r0, #0
4000db3c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000db40:	51554555 	.word	0x51554555
4000db44:	40030eb0 	.word	0x40030eb0
4000db48:	40030eb4 	.word	0x40030eb4
4000db4c:	40030ea0 	.word	0x40030ea0
4000db50:	40030ea4 	.word	0x40030ea4
4000db54:	40030e2c 	.word	0x40030e2c
4000db58:	40030e34 	.word	0x40030e34
4000db5c:	f0f0f0f0 	.word	0xf0f0f0f0
4000db60:	40030e9c 	.word	0x40030e9c
4000db64:	40030e98 	.word	0x40030e98
4000db68:	40030e8c 	.word	0x40030e8c

4000db6c <_tx_queue_front_send>:
4000db6c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000db70:	e1a04000 	mov	r4, r0
4000db74:	e1a05001 	mov	r5, r1
4000db78:	e1a06002 	mov	r6, r2
4000db7c:	e10f7000 	mrs	r7, CPSR
4000db80:	e3870080 	orr	r0, r7, #128	; 0x80
4000db84:	e58d0004 	str	r0, [sp, #4]
4000db88:	e59d0004 	ldr	r0, [sp, #4]
4000db8c:	e121f000 	msr	CPSR_c, r0
4000db90:	e59f1368 	ldr	r1, [pc, #872]	; 4000df00 <_tx_queue_front_send+0x394>
4000db94:	e5910000 	ldr	r0, [r1]
4000db98:	e3500000 	cmp	r0, #0
4000db9c:	0a000031 	beq	4000dc68 <_tx_queue_front_send+0xfc>
4000dba0:	e59f135c 	ldr	r1, [pc, #860]	; 4000df04 <_tx_queue_front_send+0x398>
4000dba4:	e5911000 	ldr	r1, [r1]
4000dba8:	e2811001 	add	r1, r1, #1
4000dbac:	e59f2350 	ldr	r2, [pc, #848]	; 4000df04 <_tx_queue_front_send+0x398>
4000dbb0:	e5821000 	str	r1, [r2]
4000dbb4:	e580100c 	str	r1, [r0, #12]
4000dbb8:	e59f1348 	ldr	r1, [pc, #840]	; 4000df08 <_tx_queue_front_send+0x39c>
4000dbbc:	e5911000 	ldr	r1, [r1]
4000dbc0:	e3510000 	cmp	r1, #0
4000dbc4:	1a000006 	bne	4000dbe4 <_tx_queue_front_send+0x78>
4000dbc8:	e59f133c 	ldr	r1, [pc, #828]	; 4000df0c <_tx_queue_front_send+0x3a0>
4000dbcc:	e5911000 	ldr	r1, [r1]
4000dbd0:	e5801000 	str	r1, [r0]
4000dbd4:	e5901000 	ldr	r1, [r0]
4000dbd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dbdc:	e5801004 	str	r1, [r0, #4]
4000dbe0:	ea00000d 	b	4000dc1c <_tx_queue_front_send+0xb0>
4000dbe4:	e59f131c 	ldr	r1, [pc, #796]	; 4000df08 <_tx_queue_front_send+0x39c>
4000dbe8:	e5911000 	ldr	r1, [r1]
4000dbec:	e59f231c 	ldr	r2, [pc, #796]	; 4000df10 <_tx_queue_front_send+0x3a4>
4000dbf0:	e1510002 	cmp	r1, r2
4000dbf4:	2a000004 	bcs	4000dc0c <_tx_queue_front_send+0xa0>
4000dbf8:	e3e01000 	mvn	r1, #0
4000dbfc:	e5801000 	str	r1, [r0]
4000dc00:	e3a01000 	mov	r1, #0
4000dc04:	e5801004 	str	r1, [r0, #4]
4000dc08:	ea000003 	b	4000dc1c <_tx_queue_front_send+0xb0>
4000dc0c:	e59f12fc 	ldr	r1, [pc, #764]	; 4000df10 <_tx_queue_front_send+0x3a4>
4000dc10:	e5801000 	str	r1, [r0]
4000dc14:	e3a01000 	mov	r1, #0
4000dc18:	e5801004 	str	r1, [r0, #4]
4000dc1c:	e3a0103f 	mov	r1, #63	; 0x3f
4000dc20:	e5801008 	str	r1, [r0, #8]
4000dc24:	e5804010 	str	r4, [r0, #16]
4000dc28:	e5805014 	str	r5, [r0, #20]
4000dc2c:	e5806018 	str	r6, [r0, #24]
4000dc30:	e5941010 	ldr	r1, [r4, #16]
4000dc34:	e580101c 	str	r1, [r0, #28]
4000dc38:	e2800020 	add	r0, r0, #32
4000dc3c:	e59f12d0 	ldr	r1, [pc, #720]	; 4000df14 <_tx_queue_front_send+0x3a8>
4000dc40:	e5911000 	ldr	r1, [r1]
4000dc44:	e1500001 	cmp	r0, r1
4000dc48:	3a000001 	bcc	4000dc54 <_tx_queue_front_send+0xe8>
4000dc4c:	e59f12c4 	ldr	r1, [pc, #708]	; 4000df18 <_tx_queue_front_send+0x3ac>
4000dc50:	e5910000 	ldr	r0, [r1]
4000dc54:	e59f12a4 	ldr	r1, [pc, #676]	; 4000df00 <_tx_queue_front_send+0x394>
4000dc58:	e5810000 	str	r0, [r1]
4000dc5c:	e59f12b8 	ldr	r1, [pc, #696]	; 4000df1c <_tx_queue_front_send+0x3b0>
4000dc60:	e5911000 	ldr	r1, [r1]
4000dc64:	e5810020 	str	r0, [r1, #32]
4000dc68:	e5940014 	ldr	r0, [r4, #20]
4000dc6c:	e3500000 	cmp	r0, #0
4000dc70:	0a000064 	beq	4000de08 <_tx_queue_front_send+0x29c>
4000dc74:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc78:	e3500000 	cmp	r0, #0
4000dc7c:	1a00002b 	bne	4000dd30 <_tx_queue_front_send+0x1c4>
4000dc80:	e5940020 	ldr	r0, [r4, #32]
4000dc84:	e5941018 	ldr	r1, [r4, #24]
4000dc88:	e1500001 	cmp	r0, r1
4000dc8c:	1a000004 	bne	4000dca4 <_tx_queue_front_send+0x138>
4000dc90:	e594001c 	ldr	r0, [r4, #28]
4000dc94:	e5941008 	ldr	r1, [r4, #8]
4000dc98:	e0400101 	sub	r0, r0, r1, lsl #2
4000dc9c:	e5840020 	str	r0, [r4, #32]
4000dca0:	ea000003 	b	4000dcb4 <_tx_queue_front_send+0x148>
4000dca4:	e5940020 	ldr	r0, [r4, #32]
4000dca8:	e5941008 	ldr	r1, [r4, #8]
4000dcac:	e0400101 	sub	r0, r0, r1, lsl #2
4000dcb0:	e5840020 	str	r0, [r4, #32]
4000dcb4:	e5940014 	ldr	r0, [r4, #20]
4000dcb8:	e2400001 	sub	r0, r0, #1
4000dcbc:	e5840014 	str	r0, [r4, #20]
4000dcc0:	e5940010 	ldr	r0, [r4, #16]
4000dcc4:	e2800001 	add	r0, r0, #1
4000dcc8:	e5840010 	str	r0, [r4, #16]
4000dccc:	e1a09005 	mov	r9, r5
4000dcd0:	e594a020 	ldr	sl, [r4, #32]
4000dcd4:	e594b008 	ldr	fp, [r4, #8]
4000dcd8:	e1a00000 	nop			; (mov r0, r0)
4000dcdc:	e5990000 	ldr	r0, [r9]
4000dce0:	e58a0000 	str	r0, [sl]
4000dce4:	e24bb001 	sub	fp, fp, #1
4000dce8:	e35b0000 	cmp	fp, #0
4000dcec:	1a000000 	bne	4000dcf4 <_tx_queue_front_send+0x188>
4000dcf0:	ea000002 	b	4000dd00 <_tx_queue_front_send+0x194>
4000dcf4:	e28aa004 	add	sl, sl, #4
4000dcf8:	e2899004 	add	r9, r9, #4
4000dcfc:	eafffff6 	b	4000dcdc <_tx_queue_front_send+0x170>
4000dd00:	e1a00000 	nop			; (mov r0, r0)
4000dd04:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd08:	e58d0000 	str	r0, [sp]
4000dd0c:	e121f007 	msr	CPSR_c, r7
4000dd10:	e59d0000 	ldr	r0, [sp]
4000dd14:	e3500000 	cmp	r0, #0
4000dd18:	0a000002 	beq	4000dd28 <_tx_queue_front_send+0x1bc>
4000dd1c:	e1a00004 	mov	r0, r4
4000dd20:	e59d1000 	ldr	r1, [sp]
4000dd24:	e12fff31 	blx	r1
4000dd28:	e3a00000 	mov	r0, #0
4000dd2c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000dd30:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dd34:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd38:	e1500008 	cmp	r0, r8
4000dd3c:	1a000002 	bne	4000dd4c <_tx_queue_front_send+0x1e0>
4000dd40:	e3a00000 	mov	r0, #0
4000dd44:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd48:	ea000007 	b	4000dd6c <_tx_queue_front_send+0x200>
4000dd4c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd50:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd54:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dd58:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dd5c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dd60:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd64:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dd68:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dd6c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dd70:	e2400001 	sub	r0, r0, #1
4000dd74:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dd78:	e3a00000 	mov	r0, #0
4000dd7c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dd80:	e59f0198 	ldr	r0, [pc, #408]	; 4000df20 <_tx_queue_front_send+0x3b4>
4000dd84:	e5900000 	ldr	r0, [r0]
4000dd88:	e2800001 	add	r0, r0, #1
4000dd8c:	e59f118c 	ldr	r1, [pc, #396]	; 4000df20 <_tx_queue_front_send+0x3b4>
4000dd90:	e5810000 	str	r0, [r1]
4000dd94:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd98:	e58d0000 	str	r0, [sp]
4000dd9c:	e121f007 	msr	CPSR_c, r7
4000dda0:	e1a09005 	mov	r9, r5
4000dda4:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000dda8:	e594b008 	ldr	fp, [r4, #8]
4000ddac:	e1a00000 	nop			; (mov r0, r0)
4000ddb0:	e5990000 	ldr	r0, [r9]
4000ddb4:	e58a0000 	str	r0, [sl]
4000ddb8:	e24bb001 	sub	fp, fp, #1
4000ddbc:	e35b0000 	cmp	fp, #0
4000ddc0:	1a000000 	bne	4000ddc8 <_tx_queue_front_send+0x25c>
4000ddc4:	ea000002 	b	4000ddd4 <_tx_queue_front_send+0x268>
4000ddc8:	e28aa004 	add	sl, sl, #4
4000ddcc:	e2899004 	add	r9, r9, #4
4000ddd0:	eafffff6 	b	4000ddb0 <_tx_queue_front_send+0x244>
4000ddd4:	e1a00000 	nop			; (mov r0, r0)
4000ddd8:	e3a00000 	mov	r0, #0
4000dddc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dde0:	e1a00008 	mov	r0, r8
4000dde4:	eb0005be 	bl	4000f4e4 <_tx_thread_system_resume>
4000dde8:	e59d0000 	ldr	r0, [sp]
4000ddec:	e3500000 	cmp	r0, #0
4000ddf0:	0a000002 	beq	4000de00 <_tx_queue_front_send+0x294>
4000ddf4:	e1a00004 	mov	r0, r4
4000ddf8:	e59d1000 	ldr	r1, [sp]
4000ddfc:	e12fff31 	blx	r1
4000de00:	e3a00000 	mov	r0, #0
4000de04:	eaffffc8 	b	4000dd2c <_tx_queue_front_send+0x1c0>
4000de08:	e3560000 	cmp	r6, #0
4000de0c:	0a000038 	beq	4000def4 <_tx_queue_front_send+0x388>
4000de10:	e59f00f4 	ldr	r0, [pc, #244]	; 4000df0c <_tx_queue_front_send+0x3a0>
4000de14:	e5908000 	ldr	r8, [r0]
4000de18:	e59f0104 	ldr	r0, [pc, #260]	; 4000df24 <_tx_queue_front_send+0x3b8>
4000de1c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000de20:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000de24:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000de28:	e3a00001 	mov	r0, #1
4000de2c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000de30:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de34:	e3500000 	cmp	r0, #0
4000de38:	0a00000b 	beq	4000de6c <_tx_queue_front_send+0x300>
4000de3c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de40:	e5880070 	str	r0, [r8, #112]	; 0x70
4000de44:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de48:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000de4c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000de50:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de54:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000de58:	e5808070 	str	r8, [r0, #112]	; 0x70
4000de5c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de60:	e5808074 	str	r8, [r0, #116]	; 0x74
4000de64:	e5848028 	str	r8, [r4, #40]	; 0x28
4000de68:	ea000002 	b	4000de78 <_tx_queue_front_send+0x30c>
4000de6c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000de70:	e5888070 	str	r8, [r8, #112]	; 0x70
4000de74:	e5888074 	str	r8, [r8, #116]	; 0x74
4000de78:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000de7c:	e2800001 	add	r0, r0, #1
4000de80:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000de84:	e3a00005 	mov	r0, #5
4000de88:	e5880030 	str	r0, [r8, #48]	; 0x30
4000de8c:	e3a00001 	mov	r0, #1
4000de90:	e5880038 	str	r0, [r8, #56]	; 0x38
4000de94:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000de98:	e59f0080 	ldr	r0, [pc, #128]	; 4000df20 <_tx_queue_front_send+0x3b4>
4000de9c:	e5900000 	ldr	r0, [r0]
4000dea0:	e2800001 	add	r0, r0, #1
4000dea4:	e59f1074 	ldr	r1, [pc, #116]	; 4000df20 <_tx_queue_front_send+0x3b4>
4000dea8:	e5810000 	str	r0, [r1]
4000deac:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000deb0:	e58d0000 	str	r0, [sp]
4000deb4:	e121f007 	msr	CPSR_c, r7
4000deb8:	e1a00008 	mov	r0, r8
4000debc:	ebffebe1 	bl	40008e48 <_tx_thread_system_suspend>
4000dec0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dec4:	e58d0000 	str	r0, [sp]
4000dec8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000decc:	e3500000 	cmp	r0, #0
4000ded0:	1a000005 	bne	4000deec <_tx_queue_front_send+0x380>
4000ded4:	e59d0000 	ldr	r0, [sp]
4000ded8:	e3500000 	cmp	r0, #0
4000dedc:	0a000002 	beq	4000deec <_tx_queue_front_send+0x380>
4000dee0:	e1a00004 	mov	r0, r4
4000dee4:	e59d1000 	ldr	r1, [sp]
4000dee8:	e12fff31 	blx	r1
4000deec:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000def0:	eaffff8d 	b	4000dd2c <_tx_queue_front_send+0x1c0>
4000def4:	e121f007 	msr	CPSR_c, r7
4000def8:	e3a0000b 	mov	r0, #11
4000defc:	eaffff8a 	b	4000dd2c <_tx_queue_front_send+0x1c0>
4000df00:	40030ea0 	.word	0x40030ea0
4000df04:	40030ea4 	.word	0x40030ea4
4000df08:	40030e2c 	.word	0x40030e2c
4000df0c:	40030e34 	.word	0x40030e34
4000df10:	f0f0f0f0 	.word	0xf0f0f0f0
4000df14:	40030e9c 	.word	0x40030e9c
4000df18:	40030e98 	.word	0x40030e98
4000df1c:	40030e8c 	.word	0x40030e8c
4000df20:	40030e50 	.word	0x40030e50
4000df24:	40010908 	.word	0x40010908

4000df28 <_tx_queue_receive>:
4000df28:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000df2c:	e1a04000 	mov	r4, r0
4000df30:	e1a05001 	mov	r5, r1
4000df34:	e1a06002 	mov	r6, r2
4000df38:	e10f7000 	mrs	r7, CPSR
4000df3c:	e3870080 	orr	r0, r7, #128	; 0x80
4000df40:	e58d0000 	str	r0, [sp]
4000df44:	e59d0000 	ldr	r0, [sp]
4000df48:	e121f000 	msr	CPSR_c, r0
4000df4c:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e360 <_tx_queue_receive+0x438>
4000df50:	e5910000 	ldr	r0, [r1]
4000df54:	e3500000 	cmp	r0, #0
4000df58:	0a000031 	beq	4000e024 <_tx_queue_receive+0xfc>
4000df5c:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e364 <_tx_queue_receive+0x43c>
4000df60:	e5911000 	ldr	r1, [r1]
4000df64:	e2811001 	add	r1, r1, #1
4000df68:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e364 <_tx_queue_receive+0x43c>
4000df6c:	e5821000 	str	r1, [r2]
4000df70:	e580100c 	str	r1, [r0, #12]
4000df74:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e368 <_tx_queue_receive+0x440>
4000df78:	e5911000 	ldr	r1, [r1]
4000df7c:	e3510000 	cmp	r1, #0
4000df80:	1a000006 	bne	4000dfa0 <_tx_queue_receive+0x78>
4000df84:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e36c <_tx_queue_receive+0x444>
4000df88:	e5911000 	ldr	r1, [r1]
4000df8c:	e5801000 	str	r1, [r0]
4000df90:	e5901000 	ldr	r1, [r0]
4000df94:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000df98:	e5801004 	str	r1, [r0, #4]
4000df9c:	ea00000d 	b	4000dfd8 <_tx_queue_receive+0xb0>
4000dfa0:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e368 <_tx_queue_receive+0x440>
4000dfa4:	e5911000 	ldr	r1, [r1]
4000dfa8:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e370 <_tx_queue_receive+0x448>
4000dfac:	e1510002 	cmp	r1, r2
4000dfb0:	2a000004 	bcs	4000dfc8 <_tx_queue_receive+0xa0>
4000dfb4:	e3e01000 	mvn	r1, #0
4000dfb8:	e5801000 	str	r1, [r0]
4000dfbc:	e3a01000 	mov	r1, #0
4000dfc0:	e5801004 	str	r1, [r0, #4]
4000dfc4:	ea000003 	b	4000dfd8 <_tx_queue_receive+0xb0>
4000dfc8:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e370 <_tx_queue_receive+0x448>
4000dfcc:	e5801000 	str	r1, [r0]
4000dfd0:	e3a01000 	mov	r1, #0
4000dfd4:	e5801004 	str	r1, [r0, #4]
4000dfd8:	e3a01044 	mov	r1, #68	; 0x44
4000dfdc:	e5801008 	str	r1, [r0, #8]
4000dfe0:	e5804010 	str	r4, [r0, #16]
4000dfe4:	e5805014 	str	r5, [r0, #20]
4000dfe8:	e5806018 	str	r6, [r0, #24]
4000dfec:	e5941010 	ldr	r1, [r4, #16]
4000dff0:	e580101c 	str	r1, [r0, #28]
4000dff4:	e2800020 	add	r0, r0, #32
4000dff8:	e59f1374 	ldr	r1, [pc, #884]	; 4000e374 <_tx_queue_receive+0x44c>
4000dffc:	e5911000 	ldr	r1, [r1]
4000e000:	e1500001 	cmp	r0, r1
4000e004:	3a000001 	bcc	4000e010 <_tx_queue_receive+0xe8>
4000e008:	e59f1368 	ldr	r1, [pc, #872]	; 4000e378 <_tx_queue_receive+0x450>
4000e00c:	e5910000 	ldr	r0, [r1]
4000e010:	e59f1348 	ldr	r1, [pc, #840]	; 4000e360 <_tx_queue_receive+0x438>
4000e014:	e5810000 	str	r0, [r1]
4000e018:	e59f135c 	ldr	r1, [pc, #860]	; 4000e37c <_tx_queue_receive+0x454>
4000e01c:	e5911000 	ldr	r1, [r1]
4000e020:	e5810020 	str	r0, [r1, #32]
4000e024:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e028:	e3580000 	cmp	r8, #0
4000e02c:	0a00002f 	beq	4000e0f0 <_tx_queue_receive+0x1c8>
4000e030:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000e034:	e3500000 	cmp	r0, #0
4000e038:	0a00002c 	beq	4000e0f0 <_tx_queue_receive+0x1c8>
4000e03c:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e040:	e1a0a005 	mov	sl, r5
4000e044:	e594b008 	ldr	fp, [r4, #8]
4000e048:	e1a00000 	nop			; (mov r0, r0)
4000e04c:	e5990000 	ldr	r0, [r9]
4000e050:	e58a0000 	str	r0, [sl]
4000e054:	e24bb001 	sub	fp, fp, #1
4000e058:	e35b0000 	cmp	fp, #0
4000e05c:	1a000000 	bne	4000e064 <_tx_queue_receive+0x13c>
4000e060:	ea000002 	b	4000e070 <_tx_queue_receive+0x148>
4000e064:	e28aa004 	add	sl, sl, #4
4000e068:	e2899004 	add	r9, r9, #4
4000e06c:	eafffff6 	b	4000e04c <_tx_queue_receive+0x124>
4000e070:	e1a00000 	nop			; (mov r0, r0)
4000e074:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e078:	e1500008 	cmp	r0, r8
4000e07c:	1a000002 	bne	4000e08c <_tx_queue_receive+0x164>
4000e080:	e3a00000 	mov	r0, #0
4000e084:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e088:	ea000007 	b	4000e0ac <_tx_queue_receive+0x184>
4000e08c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e090:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e094:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e098:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e09c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e0a0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e0a4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e0a8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e0ac:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e0b0:	e2400001 	sub	r0, r0, #1
4000e0b4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e0b8:	e3a00000 	mov	r0, #0
4000e0bc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e0c0:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e380 <_tx_queue_receive+0x458>
4000e0c4:	e5900000 	ldr	r0, [r0]
4000e0c8:	e2800001 	add	r0, r0, #1
4000e0cc:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e380 <_tx_queue_receive+0x458>
4000e0d0:	e5810000 	str	r0, [r1]
4000e0d4:	e121f007 	msr	CPSR_c, r7
4000e0d8:	e3a00000 	mov	r0, #0
4000e0dc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e0e0:	e1a00008 	mov	r0, r8
4000e0e4:	eb0004fe 	bl	4000f4e4 <_tx_thread_system_resume>
4000e0e8:	e3a00000 	mov	r0, #0
4000e0ec:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e0f0:	e5940010 	ldr	r0, [r4, #16]
4000e0f4:	e3500000 	cmp	r0, #0
4000e0f8:	0a000068 	beq	4000e2a0 <_tx_queue_receive+0x378>
4000e0fc:	e5949020 	ldr	r9, [r4, #32]
4000e100:	e1a0a005 	mov	sl, r5
4000e104:	e594b008 	ldr	fp, [r4, #8]
4000e108:	e1a00000 	nop			; (mov r0, r0)
4000e10c:	e5990000 	ldr	r0, [r9]
4000e110:	e58a0000 	str	r0, [sl]
4000e114:	e24bb001 	sub	fp, fp, #1
4000e118:	e35b0000 	cmp	fp, #0
4000e11c:	1a000000 	bne	4000e124 <_tx_queue_receive+0x1fc>
4000e120:	ea000002 	b	4000e130 <_tx_queue_receive+0x208>
4000e124:	e28aa004 	add	sl, sl, #4
4000e128:	e2899004 	add	r9, r9, #4
4000e12c:	eafffff6 	b	4000e10c <_tx_queue_receive+0x1e4>
4000e130:	e1a00000 	nop			; (mov r0, r0)
4000e134:	e5940020 	ldr	r0, [r4, #32]
4000e138:	e5941008 	ldr	r1, [r4, #8]
4000e13c:	e0800101 	add	r0, r0, r1, lsl #2
4000e140:	e5840020 	str	r0, [r4, #32]
4000e144:	e5940020 	ldr	r0, [r4, #32]
4000e148:	e594101c 	ldr	r1, [r4, #28]
4000e14c:	e1500001 	cmp	r0, r1
4000e150:	3a000001 	bcc	4000e15c <_tx_queue_receive+0x234>
4000e154:	e5940018 	ldr	r0, [r4, #24]
4000e158:	e5840020 	str	r0, [r4, #32]
4000e15c:	e3580000 	cmp	r8, #0
4000e160:	1a000008 	bne	4000e188 <_tx_queue_receive+0x260>
4000e164:	e5940014 	ldr	r0, [r4, #20]
4000e168:	e2800001 	add	r0, r0, #1
4000e16c:	e5840014 	str	r0, [r4, #20]
4000e170:	e5940010 	ldr	r0, [r4, #16]
4000e174:	e2400001 	sub	r0, r0, #1
4000e178:	e5840010 	str	r0, [r4, #16]
4000e17c:	e121f007 	msr	CPSR_c, r7
4000e180:	e3a00000 	mov	r0, #0
4000e184:	eaffffd8 	b	4000e0ec <_tx_queue_receive+0x1c4>
4000e188:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e380 <_tx_queue_receive+0x458>
4000e18c:	e5900000 	ldr	r0, [r0]
4000e190:	e2800001 	add	r0, r0, #1
4000e194:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e380 <_tx_queue_receive+0x458>
4000e198:	e5810000 	str	r0, [r1]
4000e19c:	e121f007 	msr	CPSR_c, r7
4000e1a0:	e10f7000 	mrs	r7, CPSR
4000e1a4:	e3870080 	orr	r0, r7, #128	; 0x80
4000e1a8:	e58d0000 	str	r0, [sp]
4000e1ac:	e59d0000 	ldr	r0, [sp]
4000e1b0:	e121f000 	msr	CPSR_c, r0
4000e1b4:	e2810000 	add	r0, r1, #0
4000e1b8:	e5900000 	ldr	r0, [r0]
4000e1bc:	e2400001 	sub	r0, r0, #1
4000e1c0:	e5810000 	str	r0, [r1]
4000e1c4:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e1c8:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e1cc:	e594b008 	ldr	fp, [r4, #8]
4000e1d0:	e1a00000 	nop			; (mov r0, r0)
4000e1d4:	e5990000 	ldr	r0, [r9]
4000e1d8:	e58a0000 	str	r0, [sl]
4000e1dc:	e24bb001 	sub	fp, fp, #1
4000e1e0:	e35b0000 	cmp	fp, #0
4000e1e4:	1a000000 	bne	4000e1ec <_tx_queue_receive+0x2c4>
4000e1e8:	ea000002 	b	4000e1f8 <_tx_queue_receive+0x2d0>
4000e1ec:	e28aa004 	add	sl, sl, #4
4000e1f0:	e2899004 	add	r9, r9, #4
4000e1f4:	eafffff6 	b	4000e1d4 <_tx_queue_receive+0x2ac>
4000e1f8:	e1a00000 	nop			; (mov r0, r0)
4000e1fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e200:	e5941008 	ldr	r1, [r4, #8]
4000e204:	e0800101 	add	r0, r0, r1, lsl #2
4000e208:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e20c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e210:	e594101c 	ldr	r1, [r4, #28]
4000e214:	e1500001 	cmp	r0, r1
4000e218:	3a000001 	bcc	4000e224 <_tx_queue_receive+0x2fc>
4000e21c:	e5940018 	ldr	r0, [r4, #24]
4000e220:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e224:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e228:	e1500008 	cmp	r0, r8
4000e22c:	1a000002 	bne	4000e23c <_tx_queue_receive+0x314>
4000e230:	e3a00000 	mov	r0, #0
4000e234:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e238:	ea000007 	b	4000e25c <_tx_queue_receive+0x334>
4000e23c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e240:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e244:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e248:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e24c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e250:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e254:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e258:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e25c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e260:	e2400001 	sub	r0, r0, #1
4000e264:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e268:	e3a00000 	mov	r0, #0
4000e26c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e270:	e59f0108 	ldr	r0, [pc, #264]	; 4000e380 <_tx_queue_receive+0x458>
4000e274:	e5900000 	ldr	r0, [r0]
4000e278:	e2800001 	add	r0, r0, #1
4000e27c:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e380 <_tx_queue_receive+0x458>
4000e280:	e5810000 	str	r0, [r1]
4000e284:	e121f007 	msr	CPSR_c, r7
4000e288:	e3a00000 	mov	r0, #0
4000e28c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e290:	e1a00008 	mov	r0, r8
4000e294:	eb000492 	bl	4000f4e4 <_tx_thread_system_resume>
4000e298:	e3a00000 	mov	r0, #0
4000e29c:	eaffff92 	b	4000e0ec <_tx_queue_receive+0x1c4>
4000e2a0:	e3560000 	cmp	r6, #0
4000e2a4:	0a00002a 	beq	4000e354 <_tx_queue_receive+0x42c>
4000e2a8:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e36c <_tx_queue_receive+0x444>
4000e2ac:	e5908000 	ldr	r8, [r0]
4000e2b0:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e384 <_tx_queue_receive+0x45c>
4000e2b4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e2b8:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e2bc:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e2c0:	e3a00000 	mov	r0, #0
4000e2c4:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e2c8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2cc:	e3500000 	cmp	r0, #0
4000e2d0:	0a00000a 	beq	4000e300 <_tx_queue_receive+0x3d8>
4000e2d4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2d8:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e2dc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2e0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e2e4:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e2e8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2ec:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e2f0:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e2f4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2f8:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e2fc:	ea000002 	b	4000e30c <_tx_queue_receive+0x3e4>
4000e300:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e304:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e308:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e30c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e310:	e2800001 	add	r0, r0, #1
4000e314:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e318:	e3a00005 	mov	r0, #5
4000e31c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e320:	e3a00001 	mov	r0, #1
4000e324:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e328:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e32c:	e59f004c 	ldr	r0, [pc, #76]	; 4000e380 <_tx_queue_receive+0x458>
4000e330:	e5900000 	ldr	r0, [r0]
4000e334:	e2800001 	add	r0, r0, #1
4000e338:	e59f1040 	ldr	r1, [pc, #64]	; 4000e380 <_tx_queue_receive+0x458>
4000e33c:	e5810000 	str	r0, [r1]
4000e340:	e121f007 	msr	CPSR_c, r7
4000e344:	e1a00008 	mov	r0, r8
4000e348:	ebffeabe 	bl	40008e48 <_tx_thread_system_suspend>
4000e34c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e350:	eaffff65 	b	4000e0ec <_tx_queue_receive+0x1c4>
4000e354:	e121f007 	msr	CPSR_c, r7
4000e358:	e3a0000a 	mov	r0, #10
4000e35c:	eaffff62 	b	4000e0ec <_tx_queue_receive+0x1c4>
4000e360:	40030ea0 	.word	0x40030ea0
4000e364:	40030ea4 	.word	0x40030ea4
4000e368:	40030e2c 	.word	0x40030e2c
4000e36c:	40030e34 	.word	0x40030e34
4000e370:	f0f0f0f0 	.word	0xf0f0f0f0
4000e374:	40030e9c 	.word	0x40030e9c
4000e378:	40030e98 	.word	0x40030e98
4000e37c:	40030e8c 	.word	0x40030e8c
4000e380:	40030e50 	.word	0x40030e50
4000e384:	40010908 	.word	0x40010908

4000e388 <_tx_queue_send>:
4000e388:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e38c:	e1a04000 	mov	r4, r0
4000e390:	e1a05001 	mov	r5, r1
4000e394:	e1a06002 	mov	r6, r2
4000e398:	e10f7000 	mrs	r7, CPSR
4000e39c:	e3870080 	orr	r0, r7, #128	; 0x80
4000e3a0:	e58d0004 	str	r0, [sp, #4]
4000e3a4:	e59d0004 	ldr	r0, [sp, #4]
4000e3a8:	e121f000 	msr	CPSR_c, r0
4000e3ac:	e59f1358 	ldr	r1, [pc, #856]	; 4000e70c <_tx_queue_send+0x384>
4000e3b0:	e5910000 	ldr	r0, [r1]
4000e3b4:	e3500000 	cmp	r0, #0
4000e3b8:	0a000031 	beq	4000e484 <_tx_queue_send+0xfc>
4000e3bc:	e59f134c 	ldr	r1, [pc, #844]	; 4000e710 <_tx_queue_send+0x388>
4000e3c0:	e5911000 	ldr	r1, [r1]
4000e3c4:	e2811001 	add	r1, r1, #1
4000e3c8:	e59f2340 	ldr	r2, [pc, #832]	; 4000e710 <_tx_queue_send+0x388>
4000e3cc:	e5821000 	str	r1, [r2]
4000e3d0:	e580100c 	str	r1, [r0, #12]
4000e3d4:	e59f1338 	ldr	r1, [pc, #824]	; 4000e714 <_tx_queue_send+0x38c>
4000e3d8:	e5911000 	ldr	r1, [r1]
4000e3dc:	e3510000 	cmp	r1, #0
4000e3e0:	1a000006 	bne	4000e400 <_tx_queue_send+0x78>
4000e3e4:	e59f132c 	ldr	r1, [pc, #812]	; 4000e718 <_tx_queue_send+0x390>
4000e3e8:	e5911000 	ldr	r1, [r1]
4000e3ec:	e5801000 	str	r1, [r0]
4000e3f0:	e5901000 	ldr	r1, [r0]
4000e3f4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e3f8:	e5801004 	str	r1, [r0, #4]
4000e3fc:	ea00000d 	b	4000e438 <_tx_queue_send+0xb0>
4000e400:	e59f130c 	ldr	r1, [pc, #780]	; 4000e714 <_tx_queue_send+0x38c>
4000e404:	e5911000 	ldr	r1, [r1]
4000e408:	e59f230c 	ldr	r2, [pc, #780]	; 4000e71c <_tx_queue_send+0x394>
4000e40c:	e1510002 	cmp	r1, r2
4000e410:	2a000004 	bcs	4000e428 <_tx_queue_send+0xa0>
4000e414:	e3e01000 	mvn	r1, #0
4000e418:	e5801000 	str	r1, [r0]
4000e41c:	e3a01000 	mov	r1, #0
4000e420:	e5801004 	str	r1, [r0, #4]
4000e424:	ea000003 	b	4000e438 <_tx_queue_send+0xb0>
4000e428:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e71c <_tx_queue_send+0x394>
4000e42c:	e5801000 	str	r1, [r0]
4000e430:	e3a01000 	mov	r1, #0
4000e434:	e5801004 	str	r1, [r0, #4]
4000e438:	e3a01045 	mov	r1, #69	; 0x45
4000e43c:	e5801008 	str	r1, [r0, #8]
4000e440:	e5804010 	str	r4, [r0, #16]
4000e444:	e5805014 	str	r5, [r0, #20]
4000e448:	e5806018 	str	r6, [r0, #24]
4000e44c:	e5941010 	ldr	r1, [r4, #16]
4000e450:	e580101c 	str	r1, [r0, #28]
4000e454:	e2800020 	add	r0, r0, #32
4000e458:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e720 <_tx_queue_send+0x398>
4000e45c:	e5911000 	ldr	r1, [r1]
4000e460:	e1500001 	cmp	r0, r1
4000e464:	3a000001 	bcc	4000e470 <_tx_queue_send+0xe8>
4000e468:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e724 <_tx_queue_send+0x39c>
4000e46c:	e5910000 	ldr	r0, [r1]
4000e470:	e59f1294 	ldr	r1, [pc, #660]	; 4000e70c <_tx_queue_send+0x384>
4000e474:	e5810000 	str	r0, [r1]
4000e478:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e728 <_tx_queue_send+0x3a0>
4000e47c:	e5911000 	ldr	r1, [r1]
4000e480:	e5810020 	str	r0, [r1, #32]
4000e484:	e5940014 	ldr	r0, [r4, #20]
4000e488:	e3500000 	cmp	r0, #0
4000e48c:	0a000061 	beq	4000e618 <_tx_queue_send+0x290>
4000e490:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e494:	e3500000 	cmp	r0, #0
4000e498:	1a000028 	bne	4000e540 <_tx_queue_send+0x1b8>
4000e49c:	e5940014 	ldr	r0, [r4, #20]
4000e4a0:	e2400001 	sub	r0, r0, #1
4000e4a4:	e5840014 	str	r0, [r4, #20]
4000e4a8:	e5940010 	ldr	r0, [r4, #16]
4000e4ac:	e2800001 	add	r0, r0, #1
4000e4b0:	e5840010 	str	r0, [r4, #16]
4000e4b4:	e1a09005 	mov	r9, r5
4000e4b8:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e4bc:	e594b008 	ldr	fp, [r4, #8]
4000e4c0:	e1a00000 	nop			; (mov r0, r0)
4000e4c4:	e5990000 	ldr	r0, [r9]
4000e4c8:	e58a0000 	str	r0, [sl]
4000e4cc:	e24bb001 	sub	fp, fp, #1
4000e4d0:	e35b0000 	cmp	fp, #0
4000e4d4:	1a000000 	bne	4000e4dc <_tx_queue_send+0x154>
4000e4d8:	ea000002 	b	4000e4e8 <_tx_queue_send+0x160>
4000e4dc:	e28aa004 	add	sl, sl, #4
4000e4e0:	e2899004 	add	r9, r9, #4
4000e4e4:	eafffff6 	b	4000e4c4 <_tx_queue_send+0x13c>
4000e4e8:	e1a00000 	nop			; (mov r0, r0)
4000e4ec:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e4f0:	e5941008 	ldr	r1, [r4, #8]
4000e4f4:	e0800101 	add	r0, r0, r1, lsl #2
4000e4f8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e4fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e500:	e594101c 	ldr	r1, [r4, #28]
4000e504:	e1500001 	cmp	r0, r1
4000e508:	3a000001 	bcc	4000e514 <_tx_queue_send+0x18c>
4000e50c:	e5940018 	ldr	r0, [r4, #24]
4000e510:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e514:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e518:	e58d0000 	str	r0, [sp]
4000e51c:	e121f007 	msr	CPSR_c, r7
4000e520:	e59d0000 	ldr	r0, [sp]
4000e524:	e3500000 	cmp	r0, #0
4000e528:	0a000002 	beq	4000e538 <_tx_queue_send+0x1b0>
4000e52c:	e1a00004 	mov	r0, r4
4000e530:	e59d1000 	ldr	r1, [sp]
4000e534:	e12fff31 	blx	r1
4000e538:	e3a00000 	mov	r0, #0
4000e53c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e540:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e544:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e548:	e1500008 	cmp	r0, r8
4000e54c:	1a000002 	bne	4000e55c <_tx_queue_send+0x1d4>
4000e550:	e3a00000 	mov	r0, #0
4000e554:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e558:	ea000007 	b	4000e57c <_tx_queue_send+0x1f4>
4000e55c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e560:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e564:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e568:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e56c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e570:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e574:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e578:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e57c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e580:	e2400001 	sub	r0, r0, #1
4000e584:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e588:	e3a00000 	mov	r0, #0
4000e58c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e590:	e59f0194 	ldr	r0, [pc, #404]	; 4000e72c <_tx_queue_send+0x3a4>
4000e594:	e5900000 	ldr	r0, [r0]
4000e598:	e2800001 	add	r0, r0, #1
4000e59c:	e59f1188 	ldr	r1, [pc, #392]	; 4000e72c <_tx_queue_send+0x3a4>
4000e5a0:	e5810000 	str	r0, [r1]
4000e5a4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e5a8:	e58d0000 	str	r0, [sp]
4000e5ac:	e121f007 	msr	CPSR_c, r7
4000e5b0:	e1a09005 	mov	r9, r5
4000e5b4:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e5b8:	e594b008 	ldr	fp, [r4, #8]
4000e5bc:	e1a00000 	nop			; (mov r0, r0)
4000e5c0:	e5990000 	ldr	r0, [r9]
4000e5c4:	e58a0000 	str	r0, [sl]
4000e5c8:	e24bb001 	sub	fp, fp, #1
4000e5cc:	e35b0000 	cmp	fp, #0
4000e5d0:	1a000000 	bne	4000e5d8 <_tx_queue_send+0x250>
4000e5d4:	ea000002 	b	4000e5e4 <_tx_queue_send+0x25c>
4000e5d8:	e28aa004 	add	sl, sl, #4
4000e5dc:	e2899004 	add	r9, r9, #4
4000e5e0:	eafffff6 	b	4000e5c0 <_tx_queue_send+0x238>
4000e5e4:	e1a00000 	nop			; (mov r0, r0)
4000e5e8:	e3a00000 	mov	r0, #0
4000e5ec:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e5f0:	e1a00008 	mov	r0, r8
4000e5f4:	eb0003ba 	bl	4000f4e4 <_tx_thread_system_resume>
4000e5f8:	e59d0000 	ldr	r0, [sp]
4000e5fc:	e3500000 	cmp	r0, #0
4000e600:	0a000002 	beq	4000e610 <_tx_queue_send+0x288>
4000e604:	e1a00004 	mov	r0, r4
4000e608:	e59d1000 	ldr	r1, [sp]
4000e60c:	e12fff31 	blx	r1
4000e610:	e3a00000 	mov	r0, #0
4000e614:	eaffffc8 	b	4000e53c <_tx_queue_send+0x1b4>
4000e618:	e3560000 	cmp	r6, #0
4000e61c:	0a000037 	beq	4000e700 <_tx_queue_send+0x378>
4000e620:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e718 <_tx_queue_send+0x390>
4000e624:	e5908000 	ldr	r8, [r0]
4000e628:	e59f0100 	ldr	r0, [pc, #256]	; 4000e730 <_tx_queue_send+0x3a8>
4000e62c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e630:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e634:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e638:	e3a00000 	mov	r0, #0
4000e63c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e640:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e644:	e3500000 	cmp	r0, #0
4000e648:	0a00000a 	beq	4000e678 <_tx_queue_send+0x2f0>
4000e64c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e650:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e654:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e658:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e65c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e660:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e664:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e668:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e66c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e670:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e674:	ea000002 	b	4000e684 <_tx_queue_send+0x2fc>
4000e678:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e67c:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e680:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e684:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e688:	e2800001 	add	r0, r0, #1
4000e68c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e690:	e3a00005 	mov	r0, #5
4000e694:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e698:	e3a00001 	mov	r0, #1
4000e69c:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e6a0:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e6a4:	e59f0080 	ldr	r0, [pc, #128]	; 4000e72c <_tx_queue_send+0x3a4>
4000e6a8:	e5900000 	ldr	r0, [r0]
4000e6ac:	e2800001 	add	r0, r0, #1
4000e6b0:	e59f1074 	ldr	r1, [pc, #116]	; 4000e72c <_tx_queue_send+0x3a4>
4000e6b4:	e5810000 	str	r0, [r1]
4000e6b8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e6bc:	e58d0000 	str	r0, [sp]
4000e6c0:	e121f007 	msr	CPSR_c, r7
4000e6c4:	e1a00008 	mov	r0, r8
4000e6c8:	ebffe9de 	bl	40008e48 <_tx_thread_system_suspend>
4000e6cc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e6d0:	e58d0000 	str	r0, [sp]
4000e6d4:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e6d8:	e3500000 	cmp	r0, #0
4000e6dc:	1a000005 	bne	4000e6f8 <_tx_queue_send+0x370>
4000e6e0:	e59d0000 	ldr	r0, [sp]
4000e6e4:	e3500000 	cmp	r0, #0
4000e6e8:	0a000002 	beq	4000e6f8 <_tx_queue_send+0x370>
4000e6ec:	e1a00004 	mov	r0, r4
4000e6f0:	e59d1000 	ldr	r1, [sp]
4000e6f4:	e12fff31 	blx	r1
4000e6f8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e6fc:	eaffff8e 	b	4000e53c <_tx_queue_send+0x1b4>
4000e700:	e121f007 	msr	CPSR_c, r7
4000e704:	e3a0000b 	mov	r0, #11
4000e708:	eaffff8b 	b	4000e53c <_tx_queue_send+0x1b4>
4000e70c:	40030ea0 	.word	0x40030ea0
4000e710:	40030ea4 	.word	0x40030ea4
4000e714:	40030e2c 	.word	0x40030e2c
4000e718:	40030e34 	.word	0x40030e34
4000e71c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e720:	40030e9c 	.word	0x40030e9c
4000e724:	40030e98 	.word	0x40030e98
4000e728:	40030e8c 	.word	0x40030e8c
4000e72c:	40030e50 	.word	0x40030e50
4000e730:	40010908 	.word	0x40010908

4000e734 <_tx_thread_create>:
4000e734:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e738:	e24dd014 	sub	sp, sp, #20
4000e73c:	e1a04000 	mov	r4, r0
4000e740:	e1a05001 	mov	r5, r1
4000e744:	e28da048 	add	sl, sp, #72	; 0x48
4000e748:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e74c:	e3a00000 	mov	r0, #0
4000e750:	e58d0004 	str	r0, [sp, #4]
4000e754:	e3a020ef 	mov	r2, #239	; 0xef
4000e758:	e1a01007 	mov	r1, r7
4000e75c:	e1a00006 	mov	r0, r6
4000e760:	eb0014a3 	bl	400139f4 <__aeabi_memset>
4000e764:	e1a00127 	lsr	r0, r7, #2
4000e768:	e3a01004 	mov	r1, #4
4000e76c:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e770:	e3a010a8 	mov	r1, #168	; 0xa8
4000e774:	e1a00004 	mov	r0, r4
4000e778:	eb001475 	bl	40013954 <__aeabi_memclr4>
4000e77c:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e780:	e59d001c 	ldr	r0, [sp, #28]
4000e784:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e788:	e59d0020 	ldr	r0, [sp, #32]
4000e78c:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e790:	e584600c 	str	r6, [r4, #12]
4000e794:	e5847014 	str	r7, [r4, #20]
4000e798:	e2470001 	sub	r0, r7, #1
4000e79c:	e0800006 	add	r0, r0, r6
4000e7a0:	e5840010 	str	r0, [r4, #16]
4000e7a4:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e7a8:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e7ac:	e584a018 	str	sl, [r4, #24]
4000e7b0:	e584a01c 	str	sl, [r4, #28]
4000e7b4:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e7b8:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e7bc:	e3a00003 	mov	r0, #3
4000e7c0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e7c4:	e59f0268 	ldr	r0, [pc, #616]	; 4000ea34 <_tx_thread_create+0x300>
4000e7c8:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e7cc:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e7d0:	e59f1260 	ldr	r1, [pc, #608]	; 4000ea38 <_tx_thread_create+0x304>
4000e7d4:	e1a00004 	mov	r0, r4
4000e7d8:	eb000727 	bl	4001047c <_tx_thread_stack_build>
4000e7dc:	e5940008 	ldr	r0, [r4, #8]
4000e7e0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e7e4:	e10f0000 	mrs	r0, CPSR
4000e7e8:	e58d0010 	str	r0, [sp, #16]
4000e7ec:	e59d0010 	ldr	r0, [sp, #16]
4000e7f0:	e380b080 	orr	fp, r0, #128	; 0x80
4000e7f4:	e121f00b 	msr	CPSR_c, fp
4000e7f8:	e59f023c 	ldr	r0, [pc, #572]	; 4000ea3c <_tx_thread_create+0x308>
4000e7fc:	e5840000 	str	r0, [r4]
4000e800:	e59f0238 	ldr	r0, [pc, #568]	; 4000ea40 <_tx_thread_create+0x30c>
4000e804:	e5900000 	ldr	r0, [r0]
4000e808:	e3500000 	cmp	r0, #0
4000e80c:	0a00000e 	beq	4000e84c <_tx_thread_create+0x118>
4000e810:	e59f0228 	ldr	r0, [pc, #552]	; 4000ea40 <_tx_thread_create+0x30c>
4000e814:	e5900000 	ldr	r0, [r0]
4000e818:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e81c:	e58d000c 	str	r0, [sp, #12]
4000e820:	e59f0218 	ldr	r0, [pc, #536]	; 4000ea40 <_tx_thread_create+0x30c>
4000e824:	e5900000 	ldr	r0, [r0]
4000e828:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e82c:	e59d000c 	ldr	r0, [sp, #12]
4000e830:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e834:	e59d000c 	ldr	r0, [sp, #12]
4000e838:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e83c:	e59f01fc 	ldr	r0, [pc, #508]	; 4000ea40 <_tx_thread_create+0x30c>
4000e840:	e5900000 	ldr	r0, [r0]
4000e844:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e848:	ea000003 	b	4000e85c <_tx_thread_create+0x128>
4000e84c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000ea40 <_tx_thread_create+0x30c>
4000e850:	e5804000 	str	r4, [r0]
4000e854:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e858:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e85c:	e59f01e0 	ldr	r0, [pc, #480]	; 4000ea44 <_tx_thread_create+0x310>
4000e860:	e5900000 	ldr	r0, [r0]
4000e864:	e2800001 	add	r0, r0, #1
4000e868:	e59f11d4 	ldr	r1, [pc, #468]	; 4000ea44 <_tx_thread_create+0x310>
4000e86c:	e5810000 	str	r0, [r1]
4000e870:	e59f01d0 	ldr	r0, [pc, #464]	; 4000ea48 <_tx_thread_create+0x314>
4000e874:	e5900000 	ldr	r0, [r0]
4000e878:	e2800001 	add	r0, r0, #1
4000e87c:	e59f11c4 	ldr	r1, [pc, #452]	; 4000ea48 <_tx_thread_create+0x314>
4000e880:	e5810000 	str	r0, [r1]
4000e884:	e1a03006 	mov	r3, r6
4000e888:	e1a02005 	mov	r2, r5
4000e88c:	e1a01004 	mov	r1, r4
4000e890:	e3a00001 	mov	r0, #1
4000e894:	e58d7000 	str	r7, [sp]
4000e898:	eb000667 	bl	4001023c <_tx_trace_object_register>
4000e89c:	e59f11a8 	ldr	r1, [pc, #424]	; 4000ea4c <_tx_thread_create+0x318>
4000e8a0:	e5910000 	ldr	r0, [r1]
4000e8a4:	e3500000 	cmp	r0, #0
4000e8a8:	0a000030 	beq	4000e970 <_tx_thread_create+0x23c>
4000e8ac:	e59f119c 	ldr	r1, [pc, #412]	; 4000ea50 <_tx_thread_create+0x31c>
4000e8b0:	e5911000 	ldr	r1, [r1]
4000e8b4:	e2811001 	add	r1, r1, #1
4000e8b8:	e59f2190 	ldr	r2, [pc, #400]	; 4000ea50 <_tx_thread_create+0x31c>
4000e8bc:	e5821000 	str	r1, [r2]
4000e8c0:	e580100c 	str	r1, [r0, #12]
4000e8c4:	e59f1188 	ldr	r1, [pc, #392]	; 4000ea54 <_tx_thread_create+0x320>
4000e8c8:	e5911000 	ldr	r1, [r1]
4000e8cc:	e3510000 	cmp	r1, #0
4000e8d0:	1a000006 	bne	4000e8f0 <_tx_thread_create+0x1bc>
4000e8d4:	e59f117c 	ldr	r1, [pc, #380]	; 4000ea58 <_tx_thread_create+0x324>
4000e8d8:	e5911000 	ldr	r1, [r1]
4000e8dc:	e5801000 	str	r1, [r0]
4000e8e0:	e5901000 	ldr	r1, [r0]
4000e8e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e8e8:	e5801004 	str	r1, [r0, #4]
4000e8ec:	ea00000d 	b	4000e928 <_tx_thread_create+0x1f4>
4000e8f0:	e59f115c 	ldr	r1, [pc, #348]	; 4000ea54 <_tx_thread_create+0x320>
4000e8f4:	e5911000 	ldr	r1, [r1]
4000e8f8:	e59f215c 	ldr	r2, [pc, #348]	; 4000ea5c <_tx_thread_create+0x328>
4000e8fc:	e1510002 	cmp	r1, r2
4000e900:	2a000004 	bcs	4000e918 <_tx_thread_create+0x1e4>
4000e904:	e3e01000 	mvn	r1, #0
4000e908:	e5801000 	str	r1, [r0]
4000e90c:	e3a01000 	mov	r1, #0
4000e910:	e5801004 	str	r1, [r0, #4]
4000e914:	ea000003 	b	4000e928 <_tx_thread_create+0x1f4>
4000e918:	e59f113c 	ldr	r1, [pc, #316]	; 4000ea5c <_tx_thread_create+0x328>
4000e91c:	e5801000 	str	r1, [r0]
4000e920:	e3a01000 	mov	r1, #0
4000e924:	e5801004 	str	r1, [r0, #4]
4000e928:	e3a01064 	mov	r1, #100	; 0x64
4000e92c:	e5801008 	str	r1, [r0, #8]
4000e930:	e5804010 	str	r4, [r0, #16]
4000e934:	e5808014 	str	r8, [r0, #20]
4000e938:	e5806018 	str	r6, [r0, #24]
4000e93c:	e580701c 	str	r7, [r0, #28]
4000e940:	e2800020 	add	r0, r0, #32
4000e944:	e59f1114 	ldr	r1, [pc, #276]	; 4000ea60 <_tx_thread_create+0x32c>
4000e948:	e5911000 	ldr	r1, [r1]
4000e94c:	e1500001 	cmp	r0, r1
4000e950:	3a000001 	bcc	4000e95c <_tx_thread_create+0x228>
4000e954:	e59f1108 	ldr	r1, [pc, #264]	; 4000ea64 <_tx_thread_create+0x330>
4000e958:	e5910000 	ldr	r0, [r1]
4000e95c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ea4c <_tx_thread_create+0x318>
4000e960:	e5810000 	str	r0, [r1]
4000e964:	e59f10fc 	ldr	r1, [pc, #252]	; 4000ea68 <_tx_thread_create+0x334>
4000e968:	e5911000 	ldr	r1, [r1]
4000e96c:	e5810020 	str	r0, [r1, #32]
4000e970:	e59d0010 	ldr	r0, [sp, #16]
4000e974:	e121f000 	msr	CPSR_c, r0
4000e978:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e97c:	e3500000 	cmp	r0, #0
4000e980:	0a00001c 	beq	4000e9f8 <_tx_thread_create+0x2c4>
4000e984:	e59f00c8 	ldr	r0, [pc, #200]	; 4000ea54 <_tx_thread_create+0x320>
4000e988:	e5900000 	ldr	r0, [r0]
4000e98c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ea5c <_tx_thread_create+0x328>
4000e990:	e1500001 	cmp	r0, r1
4000e994:	3a00000c 	bcc	4000e9cc <_tx_thread_create+0x298>
4000e998:	e59f00cc 	ldr	r0, [pc, #204]	; 4000ea6c <_tx_thread_create+0x338>
4000e99c:	e5900000 	ldr	r0, [r0]
4000e9a0:	e58d0008 	str	r0, [sp, #8]
4000e9a4:	e59d0008 	ldr	r0, [sp, #8]
4000e9a8:	e3500000 	cmp	r0, #0
4000e9ac:	0a000008 	beq	4000e9d4 <_tx_thread_create+0x2a0>
4000e9b0:	e59d0008 	ldr	r0, [sp, #8]
4000e9b4:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e9b8:	e58d0004 	str	r0, [sp, #4]
4000e9bc:	e59d0008 	ldr	r0, [sp, #8]
4000e9c0:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e9c4:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e9c8:	ea000001 	b	4000e9d4 <_tx_thread_create+0x2a0>
4000e9cc:	e3a00000 	mov	r0, #0
4000e9d0:	e58d0008 	str	r0, [sp, #8]
4000e9d4:	e1a00004 	mov	r0, r4
4000e9d8:	eb0002c1 	bl	4000f4e4 <_tx_thread_system_resume>
4000e9dc:	e59d0008 	ldr	r0, [sp, #8]
4000e9e0:	e3500000 	cmp	r0, #0
4000e9e4:	0a00000f 	beq	4000ea28 <_tx_thread_create+0x2f4>
4000e9e8:	e59d0008 	ldr	r0, [sp, #8]
4000e9ec:	e59d1004 	ldr	r1, [sp, #4]
4000e9f0:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e9f4:	ea00000b 	b	4000ea28 <_tx_thread_create+0x2f4>
4000e9f8:	e10f0000 	mrs	r0, CPSR
4000e9fc:	e58d0010 	str	r0, [sp, #16]
4000ea00:	e59d0010 	ldr	r0, [sp, #16]
4000ea04:	e380b080 	orr	fp, r0, #128	; 0x80
4000ea08:	e121f00b 	msr	CPSR_c, fp
4000ea0c:	e59f0034 	ldr	r0, [pc, #52]	; 4000ea48 <_tx_thread_create+0x314>
4000ea10:	e5900000 	ldr	r0, [r0]
4000ea14:	e2400001 	sub	r0, r0, #1
4000ea18:	e59f1028 	ldr	r1, [pc, #40]	; 4000ea48 <_tx_thread_create+0x314>
4000ea1c:	e5810000 	str	r0, [r1]
4000ea20:	e59d0010 	ldr	r0, [sp, #16]
4000ea24:	e121f000 	msr	CPSR_c, r0
4000ea28:	e3a00000 	mov	r0, #0
4000ea2c:	e28dd024 	add	sp, sp, #36	; 0x24
4000ea30:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ea34:	4000fa14 	.word	0x4000fa14
4000ea38:	4000f278 	.word	0x4000f278
4000ea3c:	54485244 	.word	0x54485244
4000ea40:	40030e3c 	.word	0x40030e3c
4000ea44:	40030e40 	.word	0x40030e40
4000ea48:	40030e50 	.word	0x40030e50
4000ea4c:	40030ea0 	.word	0x40030ea0
4000ea50:	40030ea4 	.word	0x40030ea4
4000ea54:	40030e2c 	.word	0x40030e2c
4000ea58:	40030e34 	.word	0x40030e34
4000ea5c:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea60:	40030e9c 	.word	0x40030e9c
4000ea64:	40030e98 	.word	0x40030e98
4000ea68:	40030e8c 	.word	0x40030e8c
4000ea6c:	40030e38 	.word	0x40030e38

4000ea70 <_tx_thread_info_get>:
4000ea70:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ea74:	e1a0c000 	mov	ip, r0
4000ea78:	e28d7028 	add	r7, sp, #40	; 0x28
4000ea7c:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000ea80:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000ea84:	e10f8000 	mrs	r8, CPSR
4000ea88:	e3889080 	orr	r9, r8, #128	; 0x80
4000ea8c:	e121f009 	msr	CPSR_c, r9
4000ea90:	e59fa160 	ldr	sl, [pc, #352]	; 4000ebf8 <_tx_thread_info_get+0x188>
4000ea94:	e59a0000 	ldr	r0, [sl]
4000ea98:	e3500000 	cmp	r0, #0
4000ea9c:	0a000032 	beq	4000eb6c <_tx_thread_info_get+0xfc>
4000eaa0:	e59fa154 	ldr	sl, [pc, #340]	; 4000ebfc <_tx_thread_info_get+0x18c>
4000eaa4:	e59aa000 	ldr	sl, [sl]
4000eaa8:	e28aa001 	add	sl, sl, #1
4000eaac:	e59fb148 	ldr	fp, [pc, #328]	; 4000ebfc <_tx_thread_info_get+0x18c>
4000eab0:	e58ba000 	str	sl, [fp]
4000eab4:	e580a00c 	str	sl, [r0, #12]
4000eab8:	e59fa140 	ldr	sl, [pc, #320]	; 4000ec00 <_tx_thread_info_get+0x190>
4000eabc:	e59aa000 	ldr	sl, [sl]
4000eac0:	e35a0000 	cmp	sl, #0
4000eac4:	1a000006 	bne	4000eae4 <_tx_thread_info_get+0x74>
4000eac8:	e59fa134 	ldr	sl, [pc, #308]	; 4000ec04 <_tx_thread_info_get+0x194>
4000eacc:	e59aa000 	ldr	sl, [sl]
4000ead0:	e580a000 	str	sl, [r0]
4000ead4:	e590a000 	ldr	sl, [r0]
4000ead8:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000eadc:	e580a004 	str	sl, [r0, #4]
4000eae0:	ea00000d 	b	4000eb1c <_tx_thread_info_get+0xac>
4000eae4:	e59fa114 	ldr	sl, [pc, #276]	; 4000ec00 <_tx_thread_info_get+0x190>
4000eae8:	e59aa000 	ldr	sl, [sl]
4000eaec:	e59fb114 	ldr	fp, [pc, #276]	; 4000ec08 <_tx_thread_info_get+0x198>
4000eaf0:	e15a000b 	cmp	sl, fp
4000eaf4:	2a000004 	bcs	4000eb0c <_tx_thread_info_get+0x9c>
4000eaf8:	e3e0a000 	mvn	sl, #0
4000eafc:	e580a000 	str	sl, [r0]
4000eb00:	e3a0a000 	mov	sl, #0
4000eb04:	e580a004 	str	sl, [r0, #4]
4000eb08:	ea000003 	b	4000eb1c <_tx_thread_info_get+0xac>
4000eb0c:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000ec08 <_tx_thread_info_get+0x198>
4000eb10:	e580a000 	str	sl, [r0]
4000eb14:	e3a0a000 	mov	sl, #0
4000eb18:	e580a004 	str	sl, [r0, #4]
4000eb1c:	e3a0a068 	mov	sl, #104	; 0x68
4000eb20:	e580a008 	str	sl, [r0, #8]
4000eb24:	e580c010 	str	ip, [r0, #16]
4000eb28:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000eb2c:	e580a014 	str	sl, [r0, #20]
4000eb30:	e3a0a000 	mov	sl, #0
4000eb34:	e580a018 	str	sl, [r0, #24]
4000eb38:	e580a01c 	str	sl, [r0, #28]
4000eb3c:	e2800020 	add	r0, r0, #32
4000eb40:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ec0c <_tx_thread_info_get+0x19c>
4000eb44:	e59aa000 	ldr	sl, [sl]
4000eb48:	e150000a 	cmp	r0, sl
4000eb4c:	3a000001 	bcc	4000eb58 <_tx_thread_info_get+0xe8>
4000eb50:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ec10 <_tx_thread_info_get+0x1a0>
4000eb54:	e59a0000 	ldr	r0, [sl]
4000eb58:	e59fa098 	ldr	sl, [pc, #152]	; 4000ebf8 <_tx_thread_info_get+0x188>
4000eb5c:	e58a0000 	str	r0, [sl]
4000eb60:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ec14 <_tx_thread_info_get+0x1a4>
4000eb64:	e59aa000 	ldr	sl, [sl]
4000eb68:	e58a0020 	str	r0, [sl, #32]
4000eb6c:	e3510000 	cmp	r1, #0
4000eb70:	0a000001 	beq	4000eb7c <_tx_thread_info_get+0x10c>
4000eb74:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000eb78:	e5810000 	str	r0, [r1]
4000eb7c:	e3520000 	cmp	r2, #0
4000eb80:	0a000001 	beq	4000eb8c <_tx_thread_info_get+0x11c>
4000eb84:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000eb88:	e5820000 	str	r0, [r2]
4000eb8c:	e3530000 	cmp	r3, #0
4000eb90:	0a000001 	beq	4000eb9c <_tx_thread_info_get+0x12c>
4000eb94:	e59c0004 	ldr	r0, [ip, #4]
4000eb98:	e5830000 	str	r0, [r3]
4000eb9c:	e35e0000 	cmp	lr, #0
4000eba0:	0a000001 	beq	4000ebac <_tx_thread_info_get+0x13c>
4000eba4:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000eba8:	e58e0000 	str	r0, [lr]
4000ebac:	e3540000 	cmp	r4, #0
4000ebb0:	0a000001 	beq	4000ebbc <_tx_thread_info_get+0x14c>
4000ebb4:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000ebb8:	e5840000 	str	r0, [r4]
4000ebbc:	e3550000 	cmp	r5, #0
4000ebc0:	0a000001 	beq	4000ebcc <_tx_thread_info_get+0x15c>
4000ebc4:	e59c0018 	ldr	r0, [ip, #24]
4000ebc8:	e5850000 	str	r0, [r5]
4000ebcc:	e3560000 	cmp	r6, #0
4000ebd0:	0a000001 	beq	4000ebdc <_tx_thread_info_get+0x16c>
4000ebd4:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000ebd8:	e5860000 	str	r0, [r6]
4000ebdc:	e3570000 	cmp	r7, #0
4000ebe0:	0a000001 	beq	4000ebec <_tx_thread_info_get+0x17c>
4000ebe4:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000ebe8:	e5870000 	str	r0, [r7]
4000ebec:	e121f008 	msr	CPSR_c, r8
4000ebf0:	e3a00000 	mov	r0, #0
4000ebf4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ebf8:	40030ea0 	.word	0x40030ea0
4000ebfc:	40030ea4 	.word	0x40030ea4
4000ec00:	40030e2c 	.word	0x40030e2c
4000ec04:	40030e34 	.word	0x40030e34
4000ec08:	f0f0f0f0 	.word	0xf0f0f0f0
4000ec0c:	40030e9c 	.word	0x40030e9c
4000ec10:	40030e98 	.word	0x40030e98
4000ec14:	40030e8c 	.word	0x40030e8c

4000ec18 <_tx_thread_priority_change>:
4000ec18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ec1c:	e1a04000 	mov	r4, r0
4000ec20:	e1a05001 	mov	r5, r1
4000ec24:	e1a06002 	mov	r6, r2
4000ec28:	e10f7000 	mrs	r7, CPSR
4000ec2c:	e3878080 	orr	r8, r7, #128	; 0x80
4000ec30:	e121f008 	msr	CPSR_c, r8
4000ec34:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ec38:	e5860000 	str	r0, [r6]
4000ec3c:	e59f1150 	ldr	r1, [pc, #336]	; 4000ed94 <_tx_thread_priority_change+0x17c>
4000ec40:	e5910000 	ldr	r0, [r1]
4000ec44:	e3500000 	cmp	r0, #0
4000ec48:	0a000032 	beq	4000ed18 <_tx_thread_priority_change+0x100>
4000ec4c:	e59f1144 	ldr	r1, [pc, #324]	; 4000ed98 <_tx_thread_priority_change+0x180>
4000ec50:	e5911000 	ldr	r1, [r1]
4000ec54:	e2811001 	add	r1, r1, #1
4000ec58:	e59f2138 	ldr	r2, [pc, #312]	; 4000ed98 <_tx_thread_priority_change+0x180>
4000ec5c:	e5821000 	str	r1, [r2]
4000ec60:	e580100c 	str	r1, [r0, #12]
4000ec64:	e59f1130 	ldr	r1, [pc, #304]	; 4000ed9c <_tx_thread_priority_change+0x184>
4000ec68:	e5911000 	ldr	r1, [r1]
4000ec6c:	e3510000 	cmp	r1, #0
4000ec70:	1a000006 	bne	4000ec90 <_tx_thread_priority_change+0x78>
4000ec74:	e59f1124 	ldr	r1, [pc, #292]	; 4000eda0 <_tx_thread_priority_change+0x188>
4000ec78:	e5911000 	ldr	r1, [r1]
4000ec7c:	e5801000 	str	r1, [r0]
4000ec80:	e5901000 	ldr	r1, [r0]
4000ec84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec88:	e5801004 	str	r1, [r0, #4]
4000ec8c:	ea00000d 	b	4000ecc8 <_tx_thread_priority_change+0xb0>
4000ec90:	e59f1104 	ldr	r1, [pc, #260]	; 4000ed9c <_tx_thread_priority_change+0x184>
4000ec94:	e5911000 	ldr	r1, [r1]
4000ec98:	e59f2104 	ldr	r2, [pc, #260]	; 4000eda4 <_tx_thread_priority_change+0x18c>
4000ec9c:	e1510002 	cmp	r1, r2
4000eca0:	2a000004 	bcs	4000ecb8 <_tx_thread_priority_change+0xa0>
4000eca4:	e3e01000 	mvn	r1, #0
4000eca8:	e5801000 	str	r1, [r0]
4000ecac:	e3a01000 	mov	r1, #0
4000ecb0:	e5801004 	str	r1, [r0, #4]
4000ecb4:	ea000003 	b	4000ecc8 <_tx_thread_priority_change+0xb0>
4000ecb8:	e59f10e4 	ldr	r1, [pc, #228]	; 4000eda4 <_tx_thread_priority_change+0x18c>
4000ecbc:	e5801000 	str	r1, [r0]
4000ecc0:	e3a01000 	mov	r1, #0
4000ecc4:	e5801004 	str	r1, [r0, #4]
4000ecc8:	e3a0106c 	mov	r1, #108	; 0x6c
4000eccc:	e5801008 	str	r1, [r0, #8]
4000ecd0:	e5804010 	str	r4, [r0, #16]
4000ecd4:	e5805014 	str	r5, [r0, #20]
4000ecd8:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ecdc:	e5801018 	str	r1, [r0, #24]
4000ece0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ece4:	e580101c 	str	r1, [r0, #28]
4000ece8:	e2800020 	add	r0, r0, #32
4000ecec:	e59f10b4 	ldr	r1, [pc, #180]	; 4000eda8 <_tx_thread_priority_change+0x190>
4000ecf0:	e5911000 	ldr	r1, [r1]
4000ecf4:	e1500001 	cmp	r0, r1
4000ecf8:	3a000001 	bcc	4000ed04 <_tx_thread_priority_change+0xec>
4000ecfc:	e59f10a8 	ldr	r1, [pc, #168]	; 4000edac <_tx_thread_priority_change+0x194>
4000ed00:	e5910000 	ldr	r0, [r1]
4000ed04:	e59f1088 	ldr	r1, [pc, #136]	; 4000ed94 <_tx_thread_priority_change+0x17c>
4000ed08:	e5810000 	str	r0, [r1]
4000ed0c:	e59f109c 	ldr	r1, [pc, #156]	; 4000edb0 <_tx_thread_priority_change+0x198>
4000ed10:	e5911000 	ldr	r1, [r1]
4000ed14:	e5810020 	str	r0, [r1, #32]
4000ed18:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ed1c:	e3500000 	cmp	r0, #0
4000ed20:	0a000005 	beq	4000ed3c <_tx_thread_priority_change+0x124>
4000ed24:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ed28:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ed2c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ed30:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ed34:	e121f007 	msr	CPSR_c, r7
4000ed38:	ea000013 	b	4000ed8c <_tx_thread_priority_change+0x174>
4000ed3c:	e59f0070 	ldr	r0, [pc, #112]	; 4000edb4 <_tx_thread_priority_change+0x19c>
4000ed40:	e5900000 	ldr	r0, [r0]
4000ed44:	e2800002 	add	r0, r0, #2
4000ed48:	e59f1064 	ldr	r1, [pc, #100]	; 4000edb4 <_tx_thread_priority_change+0x19c>
4000ed4c:	e5810000 	str	r0, [r1]
4000ed50:	e3a00003 	mov	r0, #3
4000ed54:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ed58:	e3a00001 	mov	r0, #1
4000ed5c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ed60:	e3a00000 	mov	r0, #0
4000ed64:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ed68:	e121f007 	msr	CPSR_c, r7
4000ed6c:	e1a00004 	mov	r0, r4
4000ed70:	ebffe834 	bl	40008e48 <_tx_thread_system_suspend>
4000ed74:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ed78:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ed7c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ed80:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ed84:	e1a00004 	mov	r0, r4
4000ed88:	eb0001d5 	bl	4000f4e4 <_tx_thread_system_resume>
4000ed8c:	e3a00000 	mov	r0, #0
4000ed90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ed94:	40030ea0 	.word	0x40030ea0
4000ed98:	40030ea4 	.word	0x40030ea4
4000ed9c:	40030e2c 	.word	0x40030e2c
4000eda0:	40030e34 	.word	0x40030e34
4000eda4:	f0f0f0f0 	.word	0xf0f0f0f0
4000eda8:	40030e9c 	.word	0x40030e9c
4000edac:	40030e98 	.word	0x40030e98
4000edb0:	40030e8c 	.word	0x40030e8c
4000edb4:	40030e50 	.word	0x40030e50

4000edb8 <_tx_thread_relinquish>:
4000edb8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000edbc:	e59f02b0 	ldr	r0, [pc, #688]	; 4000f074 <_tx_thread_relinquish+0x2bc>
4000edc0:	e5900000 	ldr	r0, [r0]
4000edc4:	e58d0000 	str	r0, [sp]
4000edc8:	e59d0000 	ldr	r0, [sp]
4000edcc:	e5900008 	ldr	r0, [r0, #8]
4000edd0:	e59d1000 	ldr	r1, [sp]
4000edd4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000edd8:	e1500001 	cmp	r0, r1
4000eddc:	2a000003 	bcs	4000edf0 <_tx_thread_relinquish+0x38>
4000ede0:	e59d0000 	ldr	r0, [sp]
4000ede4:	e5900008 	ldr	r0, [r0, #8]
4000ede8:	e59d1000 	ldr	r1, [sp]
4000edec:	e5810040 	str	r0, [r1, #64]	; 0x40
4000edf0:	e59d0000 	ldr	r0, [sp]
4000edf4:	e590000c 	ldr	r0, [r0, #12]
4000edf8:	e5900000 	ldr	r0, [r0]
4000edfc:	e59f1274 	ldr	r1, [pc, #628]	; 4000f078 <_tx_thread_relinquish+0x2c0>
4000ee00:	e1500001 	cmp	r0, r1
4000ee04:	1a00000a 	bne	4000ee34 <_tx_thread_relinquish+0x7c>
4000ee08:	e59d0000 	ldr	r0, [sp]
4000ee0c:	e5900010 	ldr	r0, [r0, #16]
4000ee10:	e5900001 	ldr	r0, [r0, #1]
4000ee14:	e1500001 	cmp	r0, r1
4000ee18:	1a000005 	bne	4000ee34 <_tx_thread_relinquish+0x7c>
4000ee1c:	e59d0000 	ldr	r0, [sp]
4000ee20:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee24:	e59d1000 	ldr	r1, [sp]
4000ee28:	e591100c 	ldr	r1, [r1, #12]
4000ee2c:	e1500001 	cmp	r0, r1
4000ee30:	2a000001 	bcs	4000ee3c <_tx_thread_relinquish+0x84>
4000ee34:	e59d0000 	ldr	r0, [sp]
4000ee38:	eb00016a 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000ee3c:	e59d0000 	ldr	r0, [sp]
4000ee40:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee44:	e5100004 	ldr	r0, [r0, #-4]
4000ee48:	e59f1228 	ldr	r1, [pc, #552]	; 4000f078 <_tx_thread_relinquish+0x2c0>
4000ee4c:	e1500001 	cmp	r0, r1
4000ee50:	0a000001 	beq	4000ee5c <_tx_thread_relinquish+0xa4>
4000ee54:	e59d0000 	ldr	r0, [sp]
4000ee58:	eb00012d 	bl	4000f314 <_tx_thread_stack_analyze>
4000ee5c:	e10f4000 	mrs	r4, CPSR
4000ee60:	e3845080 	orr	r5, r4, #128	; 0x80
4000ee64:	e121f005 	msr	CPSR_c, r5
4000ee68:	e59f120c 	ldr	r1, [pc, #524]	; 4000f07c <_tx_thread_relinquish+0x2c4>
4000ee6c:	e5910000 	ldr	r0, [r1]
4000ee70:	e3500000 	cmp	r0, #0
4000ee74:	0a000031 	beq	4000ef40 <_tx_thread_relinquish+0x188>
4000ee78:	e59f1200 	ldr	r1, [pc, #512]	; 4000f080 <_tx_thread_relinquish+0x2c8>
4000ee7c:	e5911000 	ldr	r1, [r1]
4000ee80:	e2811001 	add	r1, r1, #1
4000ee84:	e59f21f4 	ldr	r2, [pc, #500]	; 4000f080 <_tx_thread_relinquish+0x2c8>
4000ee88:	e5821000 	str	r1, [r2]
4000ee8c:	e580100c 	str	r1, [r0, #12]
4000ee90:	e59f11ec 	ldr	r1, [pc, #492]	; 4000f084 <_tx_thread_relinquish+0x2cc>
4000ee94:	e5911000 	ldr	r1, [r1]
4000ee98:	e3510000 	cmp	r1, #0
4000ee9c:	1a000006 	bne	4000eebc <_tx_thread_relinquish+0x104>
4000eea0:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f074 <_tx_thread_relinquish+0x2bc>
4000eea4:	e5911000 	ldr	r1, [r1]
4000eea8:	e5801000 	str	r1, [r0]
4000eeac:	e5901000 	ldr	r1, [r0]
4000eeb0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eeb4:	e5801004 	str	r1, [r0, #4]
4000eeb8:	ea00000d 	b	4000eef4 <_tx_thread_relinquish+0x13c>
4000eebc:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f084 <_tx_thread_relinquish+0x2cc>
4000eec0:	e5911000 	ldr	r1, [r1]
4000eec4:	e59f21bc 	ldr	r2, [pc, #444]	; 4000f088 <_tx_thread_relinquish+0x2d0>
4000eec8:	e1510002 	cmp	r1, r2
4000eecc:	2a000004 	bcs	4000eee4 <_tx_thread_relinquish+0x12c>
4000eed0:	e3e01000 	mvn	r1, #0
4000eed4:	e5801000 	str	r1, [r0]
4000eed8:	e3a01000 	mov	r1, #0
4000eedc:	e5801004 	str	r1, [r0, #4]
4000eee0:	ea000003 	b	4000eef4 <_tx_thread_relinquish+0x13c>
4000eee4:	e59f119c 	ldr	r1, [pc, #412]	; 4000f088 <_tx_thread_relinquish+0x2d0>
4000eee8:	e5801000 	str	r1, [r0]
4000eeec:	e3a01000 	mov	r1, #0
4000eef0:	e5801004 	str	r1, [r0, #4]
4000eef4:	e3a0106d 	mov	r1, #109	; 0x6d
4000eef8:	e5801008 	str	r1, [r0, #8]
4000eefc:	e580d010 	str	sp, [r0, #16]
4000ef00:	e3a01000 	mov	r1, #0
4000ef04:	e5801014 	str	r1, [r0, #20]
4000ef08:	e5801018 	str	r1, [r0, #24]
4000ef0c:	e580101c 	str	r1, [r0, #28]
4000ef10:	e2800020 	add	r0, r0, #32
4000ef14:	e59f1170 	ldr	r1, [pc, #368]	; 4000f08c <_tx_thread_relinquish+0x2d4>
4000ef18:	e5911000 	ldr	r1, [r1]
4000ef1c:	e1500001 	cmp	r0, r1
4000ef20:	3a000001 	bcc	4000ef2c <_tx_thread_relinquish+0x174>
4000ef24:	e59f1164 	ldr	r1, [pc, #356]	; 4000f090 <_tx_thread_relinquish+0x2d8>
4000ef28:	e5910000 	ldr	r0, [r1]
4000ef2c:	e59f1148 	ldr	r1, [pc, #328]	; 4000f07c <_tx_thread_relinquish+0x2c4>
4000ef30:	e5810000 	str	r0, [r1]
4000ef34:	e59f1158 	ldr	r1, [pc, #344]	; 4000f094 <_tx_thread_relinquish+0x2dc>
4000ef38:	e5911000 	ldr	r1, [r1]
4000ef3c:	e5810020 	str	r0, [r1, #32]
4000ef40:	e59d0000 	ldr	r0, [sp]
4000ef44:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ef48:	e59d0000 	ldr	r0, [sp]
4000ef4c:	e5900020 	ldr	r0, [r0, #32]
4000ef50:	e59d1000 	ldr	r1, [sp]
4000ef54:	e1500001 	cmp	r0, r1
4000ef58:	0a000013 	beq	4000efac <_tx_thread_relinquish+0x1f4>
4000ef5c:	e59d0000 	ldr	r0, [sp]
4000ef60:	e5900020 	ldr	r0, [r0, #32]
4000ef64:	e59f112c 	ldr	r1, [pc, #300]	; 4000f098 <_tx_thread_relinquish+0x2e0>
4000ef68:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ef6c:	e59d0000 	ldr	r0, [sp]
4000ef70:	e5900020 	ldr	r0, [r0, #32]
4000ef74:	e59f1120 	ldr	r1, [pc, #288]	; 4000f09c <_tx_thread_relinquish+0x2e4>
4000ef78:	e5810000 	str	r0, [r1]
4000ef7c:	e59f011c 	ldr	r0, [pc, #284]	; 4000f0a0 <_tx_thread_relinquish+0x2e8>
4000ef80:	e5900000 	ldr	r0, [r0]
4000ef84:	e3500000 	cmp	r0, #0
4000ef88:	0a000007 	beq	4000efac <_tx_thread_relinquish+0x1f4>
4000ef8c:	e59f010c 	ldr	r0, [pc, #268]	; 4000f0a0 <_tx_thread_relinquish+0x2e8>
4000ef90:	e5900000 	ldr	r0, [r0]
4000ef94:	e59d1000 	ldr	r1, [sp]
4000ef98:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ef9c:	e3a02001 	mov	r2, #1
4000efa0:	e1c00112 	bic	r0, r0, r2, lsl r1
4000efa4:	e59f10f4 	ldr	r1, [pc, #244]	; 4000f0a0 <_tx_thread_relinquish+0x2e8>
4000efa8:	e5810000 	str	r0, [r1]
4000efac:	e59f00f0 	ldr	r0, [pc, #240]	; 4000f0a4 <_tx_thread_relinquish+0x2ec>
4000efb0:	e5900000 	ldr	r0, [r0]
4000efb4:	e1500006 	cmp	r0, r6
4000efb8:	2a000005 	bcs	4000efd4 <_tx_thread_relinquish+0x21c>
4000efbc:	e59f00d4 	ldr	r0, [pc, #212]	; 4000f098 <_tx_thread_relinquish+0x2e0>
4000efc0:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f0a4 <_tx_thread_relinquish+0x2ec>
4000efc4:	e5911000 	ldr	r1, [r1]
4000efc8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000efcc:	e59f10c8 	ldr	r1, [pc, #200]	; 4000f09c <_tx_thread_relinquish+0x2e4>
4000efd0:	e5810000 	str	r0, [r1]
4000efd4:	e121f004 	msr	CPSR_c, r4
4000efd8:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f09c <_tx_thread_relinquish+0x2e4>
4000efdc:	e5900000 	ldr	r0, [r0]
4000efe0:	e59d1000 	ldr	r1, [sp]
4000efe4:	e1500001 	cmp	r0, r1
4000efe8:	0a000020 	beq	4000f070 <_tx_thread_relinquish+0x2b8>
4000efec:	e59f00a8 	ldr	r0, [pc, #168]	; 4000f09c <_tx_thread_relinquish+0x2e4>
4000eff0:	e5900000 	ldr	r0, [r0]
4000eff4:	e58d0000 	str	r0, [sp]
4000eff8:	e59d0000 	ldr	r0, [sp]
4000effc:	e5900008 	ldr	r0, [r0, #8]
4000f000:	e59d1000 	ldr	r1, [sp]
4000f004:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000f008:	e1500001 	cmp	r0, r1
4000f00c:	2a000003 	bcs	4000f020 <_tx_thread_relinquish+0x268>
4000f010:	e59d0000 	ldr	r0, [sp]
4000f014:	e5900008 	ldr	r0, [r0, #8]
4000f018:	e59d1000 	ldr	r1, [sp]
4000f01c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000f020:	e59d0000 	ldr	r0, [sp]
4000f024:	e590000c 	ldr	r0, [r0, #12]
4000f028:	e5900000 	ldr	r0, [r0]
4000f02c:	e59f1044 	ldr	r1, [pc, #68]	; 4000f078 <_tx_thread_relinquish+0x2c0>
4000f030:	e1500001 	cmp	r0, r1
4000f034:	1a00000a 	bne	4000f064 <_tx_thread_relinquish+0x2ac>
4000f038:	e59d0000 	ldr	r0, [sp]
4000f03c:	e5900010 	ldr	r0, [r0, #16]
4000f040:	e5900001 	ldr	r0, [r0, #1]
4000f044:	e1500001 	cmp	r0, r1
4000f048:	1a000005 	bne	4000f064 <_tx_thread_relinquish+0x2ac>
4000f04c:	e59d0000 	ldr	r0, [sp]
4000f050:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000f054:	e59d1000 	ldr	r1, [sp]
4000f058:	e591100c 	ldr	r1, [r1, #12]
4000f05c:	e1500001 	cmp	r0, r1
4000f060:	2a000001 	bcs	4000f06c <_tx_thread_relinquish+0x2b4>
4000f064:	e59d0000 	ldr	r0, [sp]
4000f068:	eb0000de 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f06c:	ebffef86 	bl	4000ae8c <_tx_thread_system_return>
4000f070:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000f074:	40030e34 	.word	0x40030e34
4000f078:	efefefef 	.word	0xefefefef
4000f07c:	40030ea0 	.word	0x40030ea0
4000f080:	40030ea4 	.word	0x40030ea4
4000f084:	40030e2c 	.word	0x40030e2c
4000f088:	f0f0f0f0 	.word	0xf0f0f0f0
4000f08c:	40030e9c 	.word	0x40030e9c
4000f090:	40030e98 	.word	0x40030e98
4000f094:	40030e8c 	.word	0x40030e8c
4000f098:	40032874 	.word	0x40032874
4000f09c:	40030e38 	.word	0x40030e38
4000f0a0:	40030e48 	.word	0x40030e48
4000f0a4:	40030e4c 	.word	0x40030e4c

4000f0a8 <_tx_thread_resume>:
4000f0a8:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f0ac:	e1a04000 	mov	r4, r0
4000f0b0:	e3a00000 	mov	r0, #0
4000f0b4:	e58d0000 	str	r0, [sp]
4000f0b8:	e10f5000 	mrs	r5, CPSR
4000f0bc:	e3856080 	orr	r6, r5, #128	; 0x80
4000f0c0:	e121f006 	msr	CPSR_c, r6
4000f0c4:	e59f1184 	ldr	r1, [pc, #388]	; 4000f250 <_tx_thread_resume+0x1a8>
4000f0c8:	e5910000 	ldr	r0, [r1]
4000f0cc:	e3500000 	cmp	r0, #0
4000f0d0:	0a000032 	beq	4000f1a0 <_tx_thread_resume+0xf8>
4000f0d4:	e59f1178 	ldr	r1, [pc, #376]	; 4000f254 <_tx_thread_resume+0x1ac>
4000f0d8:	e5911000 	ldr	r1, [r1]
4000f0dc:	e2811001 	add	r1, r1, #1
4000f0e0:	e59f216c 	ldr	r2, [pc, #364]	; 4000f254 <_tx_thread_resume+0x1ac>
4000f0e4:	e5821000 	str	r1, [r2]
4000f0e8:	e580100c 	str	r1, [r0, #12]
4000f0ec:	e59f1164 	ldr	r1, [pc, #356]	; 4000f258 <_tx_thread_resume+0x1b0>
4000f0f0:	e5911000 	ldr	r1, [r1]
4000f0f4:	e3510000 	cmp	r1, #0
4000f0f8:	1a000006 	bne	4000f118 <_tx_thread_resume+0x70>
4000f0fc:	e59f1158 	ldr	r1, [pc, #344]	; 4000f25c <_tx_thread_resume+0x1b4>
4000f100:	e5911000 	ldr	r1, [r1]
4000f104:	e5801000 	str	r1, [r0]
4000f108:	e5901000 	ldr	r1, [r0]
4000f10c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f110:	e5801004 	str	r1, [r0, #4]
4000f114:	ea00000d 	b	4000f150 <_tx_thread_resume+0xa8>
4000f118:	e59f1138 	ldr	r1, [pc, #312]	; 4000f258 <_tx_thread_resume+0x1b0>
4000f11c:	e5911000 	ldr	r1, [r1]
4000f120:	e59f2138 	ldr	r2, [pc, #312]	; 4000f260 <_tx_thread_resume+0x1b8>
4000f124:	e1510002 	cmp	r1, r2
4000f128:	2a000004 	bcs	4000f140 <_tx_thread_resume+0x98>
4000f12c:	e3e01000 	mvn	r1, #0
4000f130:	e5801000 	str	r1, [r0]
4000f134:	e3a01000 	mov	r1, #0
4000f138:	e5801004 	str	r1, [r0, #4]
4000f13c:	ea000003 	b	4000f150 <_tx_thread_resume+0xa8>
4000f140:	e59f1118 	ldr	r1, [pc, #280]	; 4000f260 <_tx_thread_resume+0x1b8>
4000f144:	e5801000 	str	r1, [r0]
4000f148:	e3a01000 	mov	r1, #0
4000f14c:	e5801004 	str	r1, [r0, #4]
4000f150:	e3a0106f 	mov	r1, #111	; 0x6f
4000f154:	e5801008 	str	r1, [r0, #8]
4000f158:	e5804010 	str	r4, [r0, #16]
4000f15c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f160:	e5801014 	str	r1, [r0, #20]
4000f164:	e580d018 	str	sp, [r0, #24]
4000f168:	e3a01000 	mov	r1, #0
4000f16c:	e580101c 	str	r1, [r0, #28]
4000f170:	e2800020 	add	r0, r0, #32
4000f174:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f264 <_tx_thread_resume+0x1bc>
4000f178:	e5911000 	ldr	r1, [r1]
4000f17c:	e1500001 	cmp	r0, r1
4000f180:	3a000001 	bcc	4000f18c <_tx_thread_resume+0xe4>
4000f184:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f268 <_tx_thread_resume+0x1c0>
4000f188:	e5910000 	ldr	r0, [r1]
4000f18c:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f250 <_tx_thread_resume+0x1a8>
4000f190:	e5810000 	str	r0, [r1]
4000f194:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f26c <_tx_thread_resume+0x1c4>
4000f198:	e5911000 	ldr	r1, [r1]
4000f19c:	e5810020 	str	r0, [r1, #32]
4000f1a0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f1a4:	e3500003 	cmp	r0, #3
4000f1a8:	1a00001c 	bne	4000f220 <_tx_thread_resume+0x178>
4000f1ac:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f270 <_tx_thread_resume+0x1c8>
4000f1b0:	e5900000 	ldr	r0, [r0]
4000f1b4:	e2800001 	add	r0, r0, #1
4000f1b8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f270 <_tx_thread_resume+0x1c8>
4000f1bc:	e5810000 	str	r0, [r1]
4000f1c0:	e121f005 	msr	CPSR_c, r5
4000f1c4:	e59f008c 	ldr	r0, [pc, #140]	; 4000f258 <_tx_thread_resume+0x1b0>
4000f1c8:	e5900000 	ldr	r0, [r0]
4000f1cc:	e59f108c 	ldr	r1, [pc, #140]	; 4000f260 <_tx_thread_resume+0x1b8>
4000f1d0:	e1500001 	cmp	r0, r1
4000f1d4:	3a000008 	bcc	4000f1fc <_tx_thread_resume+0x154>
4000f1d8:	e59f0094 	ldr	r0, [pc, #148]	; 4000f274 <_tx_thread_resume+0x1cc>
4000f1dc:	e5907000 	ldr	r7, [r0]
4000f1e0:	e3570000 	cmp	r7, #0
4000f1e4:	0a000005 	beq	4000f200 <_tx_thread_resume+0x158>
4000f1e8:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000f1ec:	e58d0000 	str	r0, [sp]
4000f1f0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000f1f4:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f1f8:	ea000000 	b	4000f200 <_tx_thread_resume+0x158>
4000f1fc:	e3a07000 	mov	r7, #0
4000f200:	e1a00004 	mov	r0, r4
4000f204:	eb0000b6 	bl	4000f4e4 <_tx_thread_system_resume>
4000f208:	e3570000 	cmp	r7, #0
4000f20c:	0a000001 	beq	4000f218 <_tx_thread_resume+0x170>
4000f210:	e59d0000 	ldr	r0, [sp]
4000f214:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f218:	e3a08000 	mov	r8, #0
4000f21c:	ea000009 	b	4000f248 <_tx_thread_resume+0x1a0>
4000f220:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f224:	e3500000 	cmp	r0, #0
4000f228:	0a000004 	beq	4000f240 <_tx_thread_resume+0x198>
4000f22c:	e3a00000 	mov	r0, #0
4000f230:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f234:	e121f005 	msr	CPSR_c, r5
4000f238:	e3a08019 	mov	r8, #25
4000f23c:	ea000001 	b	4000f248 <_tx_thread_resume+0x1a0>
4000f240:	e121f005 	msr	CPSR_c, r5
4000f244:	e3a08012 	mov	r8, #18
4000f248:	e1a00008 	mov	r0, r8
4000f24c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f250:	40030ea0 	.word	0x40030ea0
4000f254:	40030ea4 	.word	0x40030ea4
4000f258:	40030e2c 	.word	0x40030e2c
4000f25c:	40030e34 	.word	0x40030e34
4000f260:	f0f0f0f0 	.word	0xf0f0f0f0
4000f264:	40030e9c 	.word	0x40030e9c
4000f268:	40030e98 	.word	0x40030e98
4000f26c:	40030e8c 	.word	0x40030e8c
4000f270:	40030e50 	.word	0x40030e50
4000f274:	40030e38 	.word	0x40030e38

4000f278 <_tx_thread_shell_entry>:
4000f278:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f27c:	e59f0088 	ldr	r0, [pc, #136]	; 4000f30c <_tx_thread_shell_entry+0x94>
4000f280:	e5907000 	ldr	r7, [r0]
4000f284:	e10f4000 	mrs	r4, CPSR
4000f288:	e3845080 	orr	r5, r4, #128	; 0x80
4000f28c:	e121f005 	msr	CPSR_c, r5
4000f290:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f294:	e121f004 	msr	CPSR_c, r4
4000f298:	e3560000 	cmp	r6, #0
4000f29c:	0a000002 	beq	4000f2ac <_tx_thread_shell_entry+0x34>
4000f2a0:	e3a01000 	mov	r1, #0
4000f2a4:	e1a00007 	mov	r0, r7
4000f2a8:	e12fff36 	blx	r6
4000f2ac:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f2b0:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f2b4:	e12fff31 	blx	r1
4000f2b8:	e10f4000 	mrs	r4, CPSR
4000f2bc:	e3845080 	orr	r5, r4, #128	; 0x80
4000f2c0:	e121f005 	msr	CPSR_c, r5
4000f2c4:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f2c8:	e3a00001 	mov	r0, #1
4000f2cc:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f2d0:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f2d4:	e59f0034 	ldr	r0, [pc, #52]	; 4000f310 <_tx_thread_shell_entry+0x98>
4000f2d8:	e5900000 	ldr	r0, [r0]
4000f2dc:	e2800001 	add	r0, r0, #1
4000f2e0:	e59f1028 	ldr	r1, [pc, #40]	; 4000f310 <_tx_thread_shell_entry+0x98>
4000f2e4:	e5810000 	str	r0, [r1]
4000f2e8:	e121f004 	msr	CPSR_c, r4
4000f2ec:	e3560000 	cmp	r6, #0
4000f2f0:	0a000002 	beq	4000f300 <_tx_thread_shell_entry+0x88>
4000f2f4:	e3a01001 	mov	r1, #1
4000f2f8:	e1a00007 	mov	r0, r7
4000f2fc:	e12fff36 	blx	r6
4000f300:	e1a00007 	mov	r0, r7
4000f304:	ebffe6cf 	bl	40008e48 <_tx_thread_system_suspend>
4000f308:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f30c:	40030e34 	.word	0x40030e34
4000f310:	40030e50 	.word	0x40030e50

4000f314 <_tx_thread_stack_analyze>:
4000f314:	e92d4070 	push	{r4, r5, r6, lr}
4000f318:	e10f1000 	mrs	r1, CPSR
4000f31c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f320:	e121f002 	msr	CPSR_c, r2
4000f324:	e3500000 	cmp	r0, #0
4000f328:	0a000003 	beq	4000f33c <_tx_thread_stack_analyze+0x28>
4000f32c:	e5905000 	ldr	r5, [r0]
4000f330:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f3e0 <_tx_thread_stack_analyze+0xcc>
4000f334:	e1550006 	cmp	r5, r6
4000f338:	0a000001 	beq	4000f344 <_tx_thread_stack_analyze+0x30>
4000f33c:	e121f001 	msr	CPSR_c, r1
4000f340:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f344:	e590c008 	ldr	ip, [r0, #8]
4000f348:	e590300c 	ldr	r3, [r0, #12]
4000f34c:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f350:	e121f001 	msr	CPSR_c, r1
4000f354:	e24ec004 	sub	ip, lr, #4
4000f358:	e04e6003 	sub	r6, lr, r3
4000f35c:	e1a05146 	asr	r5, r6, #2
4000f360:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f364:	e1a040c6 	asr	r4, r6, #1
4000f368:	e083c104 	add	ip, r3, r4, lsl #2
4000f36c:	e1a00000 	nop			; (mov r0, r0)
4000f370:	e59c5000 	ldr	r5, [ip]
4000f374:	e59f6068 	ldr	r6, [pc, #104]	; 4000f3e4 <_tx_thread_stack_analyze+0xd0>
4000f378:	e1550006 	cmp	r5, r6
4000f37c:	0a000002 	beq	4000f38c <_tx_thread_stack_analyze+0x78>
4000f380:	e1a050a4 	lsr	r5, r4, #1
4000f384:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f388:	ea000001 	b	4000f394 <_tx_thread_stack_analyze+0x80>
4000f38c:	e1a050a4 	lsr	r5, r4, #1
4000f390:	e08cc105 	add	ip, ip, r5, lsl #2
4000f394:	e1a040a4 	lsr	r4, r4, #1
4000f398:	e3540001 	cmp	r4, #1
4000f39c:	8afffff3 	bhi	4000f370 <_tx_thread_stack_analyze+0x5c>
4000f3a0:	ea000000 	b	4000f3a8 <_tx_thread_stack_analyze+0x94>
4000f3a4:	e28cc004 	add	ip, ip, #4
4000f3a8:	e59c5000 	ldr	r5, [ip]
4000f3ac:	e59f6030 	ldr	r6, [pc, #48]	; 4000f3e4 <_tx_thread_stack_analyze+0xd0>
4000f3b0:	e1550006 	cmp	r5, r6
4000f3b4:	0afffffa 	beq	4000f3a4 <_tx_thread_stack_analyze+0x90>
4000f3b8:	e10f1000 	mrs	r1, CPSR
4000f3bc:	e3812080 	orr	r2, r1, #128	; 0x80
4000f3c0:	e121f002 	msr	CPSR_c, r2
4000f3c4:	e5905000 	ldr	r5, [r0]
4000f3c8:	e59f6010 	ldr	r6, [pc, #16]	; 4000f3e0 <_tx_thread_stack_analyze+0xcc>
4000f3cc:	e1550006 	cmp	r5, r6
4000f3d0:	1a000000 	bne	4000f3d8 <_tx_thread_stack_analyze+0xc4>
4000f3d4:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f3d8:	e121f001 	msr	CPSR_c, r1
4000f3dc:	eaffffd7 	b	4000f340 <_tx_thread_stack_analyze+0x2c>
4000f3e0:	54485244 	.word	0x54485244
4000f3e4:	efefefef 	.word	0xefefefef

4000f3e8 <_tx_thread_stack_error_handler>:
4000f3e8:	e92d4070 	push	{r4, r5, r6, lr}
4000f3ec:	e1a04000 	mov	r4, r0
4000f3f0:	e10f5000 	mrs	r5, CPSR
4000f3f4:	e3856080 	orr	r6, r5, #128	; 0x80
4000f3f8:	e121f006 	msr	CPSR_c, r6
4000f3fc:	e59f002c 	ldr	r0, [pc, #44]	; 4000f430 <_tx_thread_stack_error_handler+0x48>
4000f400:	e5900000 	ldr	r0, [r0]
4000f404:	e3500000 	cmp	r0, #0
4000f408:	0a000004 	beq	4000f420 <_tx_thread_stack_error_handler+0x38>
4000f40c:	e1a00004 	mov	r0, r4
4000f410:	e59f1018 	ldr	r1, [pc, #24]	; 4000f430 <_tx_thread_stack_error_handler+0x48>
4000f414:	e5911000 	ldr	r1, [r1]
4000f418:	e12fff31 	blx	r1
4000f41c:	ea000001 	b	4000f428 <_tx_thread_stack_error_handler+0x40>
4000f420:	e1a00000 	nop			; (mov r0, r0)
4000f424:	eafffffe 	b	4000f424 <_tx_thread_stack_error_handler+0x3c>
4000f428:	e121f005 	msr	CPSR_c, r5
4000f42c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f430:	40030e58 	.word	0x40030e58

4000f434 <_tx_thread_system_preempt_check>:
4000f434:	e92d4010 	push	{r4, lr}
4000f438:	e59f0090 	ldr	r0, [pc, #144]	; 4000f4d0 <_tx_thread_system_preempt_check+0x9c>
4000f43c:	e5900000 	ldr	r0, [r0]
4000f440:	e59f108c 	ldr	r1, [pc, #140]	; 4000f4d4 <_tx_thread_system_preempt_check+0xa0>
4000f444:	e5911000 	ldr	r1, [r1]
4000f448:	e1500001 	cmp	r0, r1
4000f44c:	0a00001e 	beq	4000f4cc <_tx_thread_system_preempt_check+0x98>
4000f450:	e59f0080 	ldr	r0, [pc, #128]	; 4000f4d8 <_tx_thread_system_preempt_check+0xa4>
4000f454:	e5900000 	ldr	r0, [r0]
4000f458:	e59f107c 	ldr	r1, [pc, #124]	; 4000f4dc <_tx_thread_system_preempt_check+0xa8>
4000f45c:	e5911000 	ldr	r1, [r1]
4000f460:	e1900001 	orrs	r0, r0, r1
4000f464:	1a000018 	bne	4000f4cc <_tx_thread_system_preempt_check+0x98>
4000f468:	e59f0064 	ldr	r0, [pc, #100]	; 4000f4d4 <_tx_thread_system_preempt_check+0xa0>
4000f46c:	e5904000 	ldr	r4, [r0]
4000f470:	e5940008 	ldr	r0, [r4, #8]
4000f474:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f478:	e1500001 	cmp	r0, r1
4000f47c:	2a000001 	bcs	4000f488 <_tx_thread_system_preempt_check+0x54>
4000f480:	e5940008 	ldr	r0, [r4, #8]
4000f484:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f488:	e594000c 	ldr	r0, [r4, #12]
4000f48c:	e5900000 	ldr	r0, [r0]
4000f490:	e59f1048 	ldr	r1, [pc, #72]	; 4000f4e0 <_tx_thread_system_preempt_check+0xac>
4000f494:	e1500001 	cmp	r0, r1
4000f498:	1a000007 	bne	4000f4bc <_tx_thread_system_preempt_check+0x88>
4000f49c:	e5940010 	ldr	r0, [r4, #16]
4000f4a0:	e5900001 	ldr	r0, [r0, #1]
4000f4a4:	e1500001 	cmp	r0, r1
4000f4a8:	1a000003 	bne	4000f4bc <_tx_thread_system_preempt_check+0x88>
4000f4ac:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f4b0:	e594100c 	ldr	r1, [r4, #12]
4000f4b4:	e1500001 	cmp	r0, r1
4000f4b8:	2a000001 	bcs	4000f4c4 <_tx_thread_system_preempt_check+0x90>
4000f4bc:	e1a00004 	mov	r0, r4
4000f4c0:	ebffffc8 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f4c4:	ebffee70 	bl	4000ae8c <_tx_thread_system_return>
4000f4c8:	e1a00000 	nop			; (mov r0, r0)
4000f4cc:	e8bd8010 	pop	{r4, pc}
4000f4d0:	40030e34 	.word	0x40030e34
4000f4d4:	40030e38 	.word	0x40030e38
4000f4d8:	40030e2c 	.word	0x40030e2c
4000f4dc:	40030e50 	.word	0x40030e50
4000f4e0:	efefefef 	.word	0xefefefef

4000f4e4 <_tx_thread_system_resume>:
4000f4e4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f4e8:	e1a04000 	mov	r4, r0
4000f4ec:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f4f0:	e3500000 	cmp	r0, #0
4000f4f4:	0a000002 	beq	4000f504 <_tx_thread_system_resume+0x20>
4000f4f8:	e284004c 	add	r0, r4, #76	; 0x4c
4000f4fc:	eb000325 	bl	40010198 <_tx_timer_system_deactivate>
4000f500:	ea000001 	b	4000f50c <_tx_thread_system_resume+0x28>
4000f504:	e3a00000 	mov	r0, #0
4000f508:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f50c:	e5940008 	ldr	r0, [r4, #8]
4000f510:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f514:	e1500001 	cmp	r0, r1
4000f518:	2a000001 	bcs	4000f524 <_tx_thread_system_resume+0x40>
4000f51c:	e5940008 	ldr	r0, [r4, #8]
4000f520:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f524:	e594000c 	ldr	r0, [r4, #12]
4000f528:	e5900000 	ldr	r0, [r0]
4000f52c:	e59f133c 	ldr	r1, [pc, #828]	; 4000f870 <_tx_thread_system_resume+0x38c>
4000f530:	e1500001 	cmp	r0, r1
4000f534:	1a000007 	bne	4000f558 <_tx_thread_system_resume+0x74>
4000f538:	e5940010 	ldr	r0, [r4, #16]
4000f53c:	e5900001 	ldr	r0, [r0, #1]
4000f540:	e1500001 	cmp	r0, r1
4000f544:	1a000003 	bne	4000f558 <_tx_thread_system_resume+0x74>
4000f548:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f54c:	e594100c 	ldr	r1, [r4, #12]
4000f550:	e1500001 	cmp	r0, r1
4000f554:	2a000001 	bcs	4000f560 <_tx_thread_system_resume+0x7c>
4000f558:	e1a00004 	mov	r0, r4
4000f55c:	ebffffa1 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f560:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f564:	e5100004 	ldr	r0, [r0, #-4]
4000f568:	e59f1300 	ldr	r1, [pc, #768]	; 4000f870 <_tx_thread_system_resume+0x38c>
4000f56c:	e1500001 	cmp	r0, r1
4000f570:	0a000001 	beq	4000f57c <_tx_thread_system_resume+0x98>
4000f574:	e1a00004 	mov	r0, r4
4000f578:	ebffff65 	bl	4000f314 <_tx_thread_stack_analyze>
4000f57c:	e10f5000 	mrs	r5, CPSR
4000f580:	e3856080 	orr	r6, r5, #128	; 0x80
4000f584:	e121f006 	msr	CPSR_c, r6
4000f588:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f874 <_tx_thread_system_resume+0x390>
4000f58c:	e5900000 	ldr	r0, [r0]
4000f590:	e2400001 	sub	r0, r0, #1
4000f594:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f874 <_tx_thread_system_resume+0x390>
4000f598:	e5810000 	str	r0, [r1]
4000f59c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f5a0:	e3500000 	cmp	r0, #0
4000f5a4:	0a000009 	beq	4000f5d0 <_tx_thread_system_resume+0xec>
4000f5a8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5ac:	e3500001 	cmp	r0, #1
4000f5b0:	0a000084 	beq	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f5b4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5b8:	e3500002 	cmp	r0, #2
4000f5bc:	0a000081 	beq	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f5c0:	e3a00000 	mov	r0, #0
4000f5c4:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f5c8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f5cc:	ea00007d 	b	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f5d0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5d4:	e3500000 	cmp	r0, #0
4000f5d8:	0a00007a 	beq	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f5dc:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f5e0:	e3500000 	cmp	r0, #0
4000f5e4:	0a000004 	beq	4000f5fc <_tx_thread_system_resume+0x118>
4000f5e8:	e3a00000 	mov	r0, #0
4000f5ec:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f5f0:	e3a00003 	mov	r0, #3
4000f5f4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f5f8:	ea000072 	b	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f5fc:	e59f1274 	ldr	r1, [pc, #628]	; 4000f878 <_tx_thread_system_resume+0x394>
4000f600:	e5910000 	ldr	r0, [r1]
4000f604:	e3500000 	cmp	r0, #0
4000f608:	0a000032 	beq	4000f6d8 <_tx_thread_system_resume+0x1f4>
4000f60c:	e59f1268 	ldr	r1, [pc, #616]	; 4000f87c <_tx_thread_system_resume+0x398>
4000f610:	e5911000 	ldr	r1, [r1]
4000f614:	e2811001 	add	r1, r1, #1
4000f618:	e59f225c 	ldr	r2, [pc, #604]	; 4000f87c <_tx_thread_system_resume+0x398>
4000f61c:	e5821000 	str	r1, [r2]
4000f620:	e580100c 	str	r1, [r0, #12]
4000f624:	e59f1254 	ldr	r1, [pc, #596]	; 4000f880 <_tx_thread_system_resume+0x39c>
4000f628:	e5911000 	ldr	r1, [r1]
4000f62c:	e3510000 	cmp	r1, #0
4000f630:	1a000006 	bne	4000f650 <_tx_thread_system_resume+0x16c>
4000f634:	e59f1248 	ldr	r1, [pc, #584]	; 4000f884 <_tx_thread_system_resume+0x3a0>
4000f638:	e5911000 	ldr	r1, [r1]
4000f63c:	e5801000 	str	r1, [r0]
4000f640:	e5901000 	ldr	r1, [r0]
4000f644:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f648:	e5801004 	str	r1, [r0, #4]
4000f64c:	ea00000d 	b	4000f688 <_tx_thread_system_resume+0x1a4>
4000f650:	e59f1228 	ldr	r1, [pc, #552]	; 4000f880 <_tx_thread_system_resume+0x39c>
4000f654:	e5911000 	ldr	r1, [r1]
4000f658:	e59f2228 	ldr	r2, [pc, #552]	; 4000f888 <_tx_thread_system_resume+0x3a4>
4000f65c:	e1510002 	cmp	r1, r2
4000f660:	2a000004 	bcs	4000f678 <_tx_thread_system_resume+0x194>
4000f664:	e3e01000 	mvn	r1, #0
4000f668:	e5801000 	str	r1, [r0]
4000f66c:	e3a01000 	mov	r1, #0
4000f670:	e5801004 	str	r1, [r0, #4]
4000f674:	ea000003 	b	4000f688 <_tx_thread_system_resume+0x1a4>
4000f678:	e59f1208 	ldr	r1, [pc, #520]	; 4000f888 <_tx_thread_system_resume+0x3a4>
4000f67c:	e5801000 	str	r1, [r0]
4000f680:	e3a01000 	mov	r1, #0
4000f684:	e5801004 	str	r1, [r0, #4]
4000f688:	e3a01001 	mov	r1, #1
4000f68c:	e5801008 	str	r1, [r0, #8]
4000f690:	e5804010 	str	r4, [r0, #16]
4000f694:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f698:	e5801014 	str	r1, [r0, #20]
4000f69c:	e580d018 	str	sp, [r0, #24]
4000f6a0:	e3a01000 	mov	r1, #0
4000f6a4:	e580101c 	str	r1, [r0, #28]
4000f6a8:	e2800020 	add	r0, r0, #32
4000f6ac:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f88c <_tx_thread_system_resume+0x3a8>
4000f6b0:	e5911000 	ldr	r1, [r1]
4000f6b4:	e1500001 	cmp	r0, r1
4000f6b8:	3a000001 	bcc	4000f6c4 <_tx_thread_system_resume+0x1e0>
4000f6bc:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f890 <_tx_thread_system_resume+0x3ac>
4000f6c0:	e5910000 	ldr	r0, [r1]
4000f6c4:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f878 <_tx_thread_system_resume+0x394>
4000f6c8:	e5810000 	str	r0, [r1]
4000f6cc:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f894 <_tx_thread_system_resume+0x3b0>
4000f6d0:	e5911000 	ldr	r1, [r1]
4000f6d4:	e5810020 	str	r0, [r1, #32]
4000f6d8:	e3a00000 	mov	r0, #0
4000f6dc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f6e0:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f6e4:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f898 <_tx_thread_system_resume+0x3b4>
4000f6e8:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f6ec:	e3580000 	cmp	r8, #0
4000f6f0:	0a000005 	beq	4000f70c <_tx_thread_system_resume+0x228>
4000f6f4:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f6f8:	e5894020 	str	r4, [r9, #32]
4000f6fc:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f700:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f704:	e5848020 	str	r8, [r4, #32]
4000f708:	ea00002e 	b	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f70c:	e59f0184 	ldr	r0, [pc, #388]	; 4000f898 <_tx_thread_system_resume+0x3b4>
4000f710:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f714:	e5844020 	str	r4, [r4, #32]
4000f718:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f71c:	e59f0178 	ldr	r0, [pc, #376]	; 4000f89c <_tx_thread_system_resume+0x3b8>
4000f720:	e5900000 	ldr	r0, [r0]
4000f724:	e3a01001 	mov	r1, #1
4000f728:	e1800711 	orr	r0, r0, r1, lsl r7
4000f72c:	e59f1168 	ldr	r1, [pc, #360]	; 4000f89c <_tx_thread_system_resume+0x3b8>
4000f730:	e5810000 	str	r0, [r1]
4000f734:	e59f0164 	ldr	r0, [pc, #356]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f738:	e5900000 	ldr	r0, [r0]
4000f73c:	e58d0000 	str	r0, [sp]
4000f740:	e59d0000 	ldr	r0, [sp]
4000f744:	e3500000 	cmp	r0, #0
4000f748:	1a000004 	bne	4000f760 <_tx_thread_system_resume+0x27c>
4000f74c:	e59f014c 	ldr	r0, [pc, #332]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f750:	e5804000 	str	r4, [r0]
4000f754:	e59f0148 	ldr	r0, [pc, #328]	; 4000f8a4 <_tx_thread_system_resume+0x3c0>
4000f758:	e5807000 	str	r7, [r0]
4000f75c:	ea000019 	b	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f760:	e59f013c 	ldr	r0, [pc, #316]	; 4000f8a4 <_tx_thread_system_resume+0x3c0>
4000f764:	e5900000 	ldr	r0, [r0]
4000f768:	e1570000 	cmp	r7, r0
4000f76c:	2a000015 	bcs	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f770:	e59f012c 	ldr	r0, [pc, #300]	; 4000f8a4 <_tx_thread_system_resume+0x3c0>
4000f774:	e5807000 	str	r7, [r0]
4000f778:	e59d0000 	ldr	r0, [sp]
4000f77c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f780:	e1500007 	cmp	r0, r7
4000f784:	9a00000f 	bls	4000f7c8 <_tx_thread_system_resume+0x2e4>
4000f788:	e59d0000 	ldr	r0, [sp]
4000f78c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f790:	e59d1000 	ldr	r1, [sp]
4000f794:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f798:	e1500001 	cmp	r0, r1
4000f79c:	0a000007 	beq	4000f7c0 <_tx_thread_system_resume+0x2dc>
4000f7a0:	e59f0100 	ldr	r0, [pc, #256]	; 4000f8a8 <_tx_thread_system_resume+0x3c4>
4000f7a4:	e5900000 	ldr	r0, [r0]
4000f7a8:	e59d1000 	ldr	r1, [sp]
4000f7ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7b0:	e3a02001 	mov	r2, #1
4000f7b4:	e1800112 	orr	r0, r0, r2, lsl r1
4000f7b8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f8a8 <_tx_thread_system_resume+0x3c4>
4000f7bc:	e5810000 	str	r0, [r1]
4000f7c0:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f7c4:	e5804000 	str	r4, [r0]
4000f7c8:	e121f005 	msr	CPSR_c, r5
4000f7cc:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f884 <_tx_thread_system_resume+0x3a0>
4000f7d0:	e5900000 	ldr	r0, [r0]
4000f7d4:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f7d8:	e5911000 	ldr	r1, [r1]
4000f7dc:	e1500001 	cmp	r0, r1
4000f7e0:	0a000021 	beq	4000f86c <_tx_thread_system_resume+0x388>
4000f7e4:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f7e8:	e5900000 	ldr	r0, [r0]
4000f7ec:	e1540000 	cmp	r4, r0
4000f7f0:	0a000016 	beq	4000f850 <_tx_thread_system_resume+0x36c>
4000f7f4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f8a0 <_tx_thread_system_resume+0x3bc>
4000f7f8:	e5904000 	ldr	r4, [r0]
4000f7fc:	e5940008 	ldr	r0, [r4, #8]
4000f800:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f804:	e1500001 	cmp	r0, r1
4000f808:	2a000001 	bcs	4000f814 <_tx_thread_system_resume+0x330>
4000f80c:	e5940008 	ldr	r0, [r4, #8]
4000f810:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f814:	e594000c 	ldr	r0, [r4, #12]
4000f818:	e5900000 	ldr	r0, [r0]
4000f81c:	e59f104c 	ldr	r1, [pc, #76]	; 4000f870 <_tx_thread_system_resume+0x38c>
4000f820:	e1500001 	cmp	r0, r1
4000f824:	1a000007 	bne	4000f848 <_tx_thread_system_resume+0x364>
4000f828:	e5940010 	ldr	r0, [r4, #16]
4000f82c:	e5900001 	ldr	r0, [r0, #1]
4000f830:	e1500001 	cmp	r0, r1
4000f834:	1a000003 	bne	4000f848 <_tx_thread_system_resume+0x364>
4000f838:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f83c:	e594100c 	ldr	r1, [r4, #12]
4000f840:	e1500001 	cmp	r0, r1
4000f844:	2a000001 	bcs	4000f850 <_tx_thread_system_resume+0x36c>
4000f848:	e1a00004 	mov	r0, r4
4000f84c:	ebfffee5 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f850:	e59f0028 	ldr	r0, [pc, #40]	; 4000f880 <_tx_thread_system_resume+0x39c>
4000f854:	e5900000 	ldr	r0, [r0]
4000f858:	e59f1014 	ldr	r1, [pc, #20]	; 4000f874 <_tx_thread_system_resume+0x390>
4000f85c:	e5911000 	ldr	r1, [r1]
4000f860:	e1900001 	orrs	r0, r0, r1
4000f864:	1a000000 	bne	4000f86c <_tx_thread_system_resume+0x388>
4000f868:	ebffed87 	bl	4000ae8c <_tx_thread_system_return>
4000f86c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f870:	efefefef 	.word	0xefefefef
4000f874:	40030e50 	.word	0x40030e50
4000f878:	40030ea0 	.word	0x40030ea0
4000f87c:	40030ea4 	.word	0x40030ea4
4000f880:	40030e2c 	.word	0x40030e2c
4000f884:	40030e34 	.word	0x40030e34
4000f888:	f0f0f0f0 	.word	0xf0f0f0f0
4000f88c:	40030e9c 	.word	0x40030e9c
4000f890:	40030e98 	.word	0x40030e98
4000f894:	40030e8c 	.word	0x40030e8c
4000f898:	40032874 	.word	0x40032874
4000f89c:	40030e44 	.word	0x40030e44
4000f8a0:	40030e38 	.word	0x40030e38
4000f8a4:	40030e4c 	.word	0x40030e4c
4000f8a8:	40030e48 	.word	0x40030e48

4000f8ac <_tx_thread_time_slice>:
4000f8ac:	e92d4070 	push	{r4, r5, r6, lr}
4000f8b0:	e59f0140 	ldr	r0, [pc, #320]	; 4000f9f8 <_tx_thread_time_slice+0x14c>
4000f8b4:	e5906000 	ldr	r6, [r0]
4000f8b8:	e5960008 	ldr	r0, [r6, #8]
4000f8bc:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f8c0:	e1500001 	cmp	r0, r1
4000f8c4:	2a000001 	bcs	4000f8d0 <_tx_thread_time_slice+0x24>
4000f8c8:	e5960008 	ldr	r0, [r6, #8]
4000f8cc:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f8d0:	e596000c 	ldr	r0, [r6, #12]
4000f8d4:	e5900000 	ldr	r0, [r0]
4000f8d8:	e59f111c 	ldr	r1, [pc, #284]	; 4000f9fc <_tx_thread_time_slice+0x150>
4000f8dc:	e1500001 	cmp	r0, r1
4000f8e0:	1a000007 	bne	4000f904 <_tx_thread_time_slice+0x58>
4000f8e4:	e5960010 	ldr	r0, [r6, #16]
4000f8e8:	e5900001 	ldr	r0, [r0, #1]
4000f8ec:	e1500001 	cmp	r0, r1
4000f8f0:	1a000003 	bne	4000f904 <_tx_thread_time_slice+0x58>
4000f8f4:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f8f8:	e596100c 	ldr	r1, [r6, #12]
4000f8fc:	e1500001 	cmp	r0, r1
4000f900:	2a000001 	bcs	4000f90c <_tx_thread_time_slice+0x60>
4000f904:	e1a00006 	mov	r0, r6
4000f908:	ebfffeb6 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f90c:	e10f4000 	mrs	r4, CPSR
4000f910:	e3845080 	orr	r5, r4, #128	; 0x80
4000f914:	e121f005 	msr	CPSR_c, r5
4000f918:	e3a00000 	mov	r0, #0
4000f91c:	e59f10dc 	ldr	r1, [pc, #220]	; 4000fa00 <_tx_thread_time_slice+0x154>
4000f920:	e5810000 	str	r0, [r1]
4000f924:	e3560000 	cmp	r6, #0
4000f928:	0a000030 	beq	4000f9f0 <_tx_thread_time_slice+0x144>
4000f92c:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f930:	e3500000 	cmp	r0, #0
4000f934:	1a00002d 	bne	4000f9f0 <_tx_thread_time_slice+0x144>
4000f938:	e596001c 	ldr	r0, [r6, #28]
4000f93c:	e5860018 	str	r0, [r6, #24]
4000f940:	e5960020 	ldr	r0, [r6, #32]
4000f944:	e1500006 	cmp	r0, r6
4000f948:	0a000025 	beq	4000f9e4 <_tx_thread_time_slice+0x138>
4000f94c:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f950:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f954:	e1500001 	cmp	r0, r1
4000f958:	1a000021 	bne	4000f9e4 <_tx_thread_time_slice+0x138>
4000f95c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000fa04 <_tx_thread_time_slice+0x158>
4000f960:	e5960020 	ldr	r0, [r6, #32]
4000f964:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f968:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f96c:	e2820000 	add	r0, r2, #0
4000f970:	e59f1090 	ldr	r1, [pc, #144]	; 4000fa08 <_tx_thread_time_slice+0x15c>
4000f974:	e5911000 	ldr	r1, [r1]
4000f978:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f97c:	e59f1088 	ldr	r1, [pc, #136]	; 4000fa0c <_tx_thread_time_slice+0x160>
4000f980:	e5810000 	str	r0, [r1]
4000f984:	e2810000 	add	r0, r1, #0
4000f988:	e5906000 	ldr	r6, [r0]
4000f98c:	e5960008 	ldr	r0, [r6, #8]
4000f990:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f994:	e1500001 	cmp	r0, r1
4000f998:	2a000001 	bcs	4000f9a4 <_tx_thread_time_slice+0xf8>
4000f99c:	e5960008 	ldr	r0, [r6, #8]
4000f9a0:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f9a4:	e596000c 	ldr	r0, [r6, #12]
4000f9a8:	e5900000 	ldr	r0, [r0]
4000f9ac:	e59f1048 	ldr	r1, [pc, #72]	; 4000f9fc <_tx_thread_time_slice+0x150>
4000f9b0:	e1500001 	cmp	r0, r1
4000f9b4:	1a000007 	bne	4000f9d8 <_tx_thread_time_slice+0x12c>
4000f9b8:	e5960010 	ldr	r0, [r6, #16]
4000f9bc:	e5900001 	ldr	r0, [r0, #1]
4000f9c0:	e1500001 	cmp	r0, r1
4000f9c4:	1a000003 	bne	4000f9d8 <_tx_thread_time_slice+0x12c>
4000f9c8:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f9cc:	e596100c 	ldr	r1, [r6, #12]
4000f9d0:	e1500001 	cmp	r0, r1
4000f9d4:	2a000005 	bcs	4000f9f0 <_tx_thread_time_slice+0x144>
4000f9d8:	e1a00006 	mov	r0, r6
4000f9dc:	ebfffe81 	bl	4000f3e8 <_tx_thread_stack_error_handler>
4000f9e0:	ea000002 	b	4000f9f0 <_tx_thread_time_slice+0x144>
4000f9e4:	e59f1024 	ldr	r1, [pc, #36]	; 4000fa10 <_tx_thread_time_slice+0x164>
4000f9e8:	e5960018 	ldr	r0, [r6, #24]
4000f9ec:	e5810000 	str	r0, [r1]
4000f9f0:	e121f004 	msr	CPSR_c, r4
4000f9f4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f9f8:	40030e34 	.word	0x40030e34
4000f9fc:	efefefef 	.word	0xefefefef
4000fa00:	40030e64 	.word	0x40030e64
4000fa04:	40032874 	.word	0x40032874
4000fa08:	40030e4c 	.word	0x40030e4c
4000fa0c:	40030e38 	.word	0x40030e38
4000fa10:	40030e60 	.word	0x40030e60

4000fa14 <_tx_thread_timeout>:
4000fa14:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000fa18:	e1a04000 	mov	r4, r0
4000fa1c:	e1a08004 	mov	r8, r4
4000fa20:	e10f5000 	mrs	r5, CPSR
4000fa24:	e3856080 	orr	r6, r5, #128	; 0x80
4000fa28:	e121f006 	msr	CPSR_c, r6
4000fa2c:	e1a04008 	mov	r4, r8
4000fa30:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000fa34:	e3500004 	cmp	r0, #4
4000fa38:	1a000008 	bne	4000fa60 <_tx_thread_timeout+0x4c>
4000fa3c:	e59f0038 	ldr	r0, [pc, #56]	; 4000fa7c <_tx_thread_timeout+0x68>
4000fa40:	e5900000 	ldr	r0, [r0]
4000fa44:	e2800001 	add	r0, r0, #1
4000fa48:	e59f102c 	ldr	r1, [pc, #44]	; 4000fa7c <_tx_thread_timeout+0x68>
4000fa4c:	e5810000 	str	r0, [r1]
4000fa50:	e121f005 	msr	CPSR_c, r5
4000fa54:	e1a00008 	mov	r0, r8
4000fa58:	ebfffea1 	bl	4000f4e4 <_tx_thread_system_resume>
4000fa5c:	ea000005 	b	4000fa78 <_tx_thread_timeout+0x64>
4000fa60:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000fa64:	e121f005 	msr	CPSR_c, r5
4000fa68:	e3570000 	cmp	r7, #0
4000fa6c:	0a000001 	beq	4000fa78 <_tx_thread_timeout+0x64>
4000fa70:	e1a00008 	mov	r0, r8
4000fa74:	e12fff37 	blx	r7
4000fa78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000fa7c:	40030e50 	.word	0x40030e50

4000fa80 <_tx_timer_activate>:
4000fa80:	e92d4070 	push	{r4, r5, r6, lr}
4000fa84:	e1a04000 	mov	r4, r0
4000fa88:	e10f5000 	mrs	r5, CPSR
4000fa8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000fa90:	e121f006 	msr	CPSR_c, r6
4000fa94:	e59f1104 	ldr	r1, [pc, #260]	; 4000fba0 <_tx_timer_activate+0x120>
4000fa98:	e5910000 	ldr	r0, [r1]
4000fa9c:	e3500000 	cmp	r0, #0
4000faa0:	0a000031 	beq	4000fb6c <_tx_timer_activate+0xec>
4000faa4:	e59f10f8 	ldr	r1, [pc, #248]	; 4000fba4 <_tx_timer_activate+0x124>
4000faa8:	e5911000 	ldr	r1, [r1]
4000faac:	e2811001 	add	r1, r1, #1
4000fab0:	e59f20ec 	ldr	r2, [pc, #236]	; 4000fba4 <_tx_timer_activate+0x124>
4000fab4:	e5821000 	str	r1, [r2]
4000fab8:	e580100c 	str	r1, [r0, #12]
4000fabc:	e59f10e4 	ldr	r1, [pc, #228]	; 4000fba8 <_tx_timer_activate+0x128>
4000fac0:	e5911000 	ldr	r1, [r1]
4000fac4:	e3510000 	cmp	r1, #0
4000fac8:	1a000006 	bne	4000fae8 <_tx_timer_activate+0x68>
4000facc:	e59f10d8 	ldr	r1, [pc, #216]	; 4000fbac <_tx_timer_activate+0x12c>
4000fad0:	e5911000 	ldr	r1, [r1]
4000fad4:	e5801000 	str	r1, [r0]
4000fad8:	e5901000 	ldr	r1, [r0]
4000fadc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fae0:	e5801004 	str	r1, [r0, #4]
4000fae4:	ea00000d 	b	4000fb20 <_tx_timer_activate+0xa0>
4000fae8:	e59f10b8 	ldr	r1, [pc, #184]	; 4000fba8 <_tx_timer_activate+0x128>
4000faec:	e5911000 	ldr	r1, [r1]
4000faf0:	e59f20b8 	ldr	r2, [pc, #184]	; 4000fbb0 <_tx_timer_activate+0x130>
4000faf4:	e1510002 	cmp	r1, r2
4000faf8:	2a000004 	bcs	4000fb10 <_tx_timer_activate+0x90>
4000fafc:	e3e01000 	mvn	r1, #0
4000fb00:	e5801000 	str	r1, [r0]
4000fb04:	e3a01000 	mov	r1, #0
4000fb08:	e5801004 	str	r1, [r0, #4]
4000fb0c:	ea000003 	b	4000fb20 <_tx_timer_activate+0xa0>
4000fb10:	e59f1098 	ldr	r1, [pc, #152]	; 4000fbb0 <_tx_timer_activate+0x130>
4000fb14:	e5801000 	str	r1, [r0]
4000fb18:	e3a01000 	mov	r1, #0
4000fb1c:	e5801004 	str	r1, [r0, #4]
4000fb20:	e3a0107a 	mov	r1, #122	; 0x7a
4000fb24:	e5801008 	str	r1, [r0, #8]
4000fb28:	e5804010 	str	r4, [r0, #16]
4000fb2c:	e3a01000 	mov	r1, #0
4000fb30:	e5801014 	str	r1, [r0, #20]
4000fb34:	e5801018 	str	r1, [r0, #24]
4000fb38:	e580101c 	str	r1, [r0, #28]
4000fb3c:	e2800020 	add	r0, r0, #32
4000fb40:	e59f106c 	ldr	r1, [pc, #108]	; 4000fbb4 <_tx_timer_activate+0x134>
4000fb44:	e5911000 	ldr	r1, [r1]
4000fb48:	e1500001 	cmp	r0, r1
4000fb4c:	3a000001 	bcc	4000fb58 <_tx_timer_activate+0xd8>
4000fb50:	e59f1060 	ldr	r1, [pc, #96]	; 4000fbb8 <_tx_timer_activate+0x138>
4000fb54:	e5910000 	ldr	r0, [r1]
4000fb58:	e59f1040 	ldr	r1, [pc, #64]	; 4000fba0 <_tx_timer_activate+0x120>
4000fb5c:	e5810000 	str	r0, [r1]
4000fb60:	e59f1054 	ldr	r1, [pc, #84]	; 4000fbbc <_tx_timer_activate+0x13c>
4000fb64:	e5911000 	ldr	r1, [r1]
4000fb68:	e5810020 	str	r0, [r1, #32]
4000fb6c:	e121f005 	msr	CPSR_c, r5
4000fb70:	e5940020 	ldr	r0, [r4, #32]
4000fb74:	e3500000 	cmp	r0, #0
4000fb78:	1a000002 	bne	4000fb88 <_tx_timer_activate+0x108>
4000fb7c:	e5940008 	ldr	r0, [r4, #8]
4000fb80:	e3500000 	cmp	r0, #0
4000fb84:	1a000001 	bne	4000fb90 <_tx_timer_activate+0x110>
4000fb88:	e3a00017 	mov	r0, #23
4000fb8c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fb90:	e2840008 	add	r0, r4, #8
4000fb94:	ebffe6c7 	bl	400096b8 <_tx_timer_system_activate>
4000fb98:	e3a00000 	mov	r0, #0
4000fb9c:	eafffffa 	b	4000fb8c <_tx_timer_activate+0x10c>
4000fba0:	40030ea0 	.word	0x40030ea0
4000fba4:	40030ea4 	.word	0x40030ea4
4000fba8:	40030e2c 	.word	0x40030e2c
4000fbac:	40030e34 	.word	0x40030e34
4000fbb0:	f0f0f0f0 	.word	0xf0f0f0f0
4000fbb4:	40030e9c 	.word	0x40030e9c
4000fbb8:	40030e98 	.word	0x40030e98
4000fbbc:	40030e8c 	.word	0x40030e8c

4000fbc0 <_tx_timer_change>:
4000fbc0:	e92d4030 	push	{r4, r5, lr}
4000fbc4:	e1a03000 	mov	r3, r0
4000fbc8:	e10fc000 	mrs	ip, CPSR
4000fbcc:	e38ce080 	orr	lr, ip, #128	; 0x80
4000fbd0:	e121f00e 	msr	CPSR_c, lr
4000fbd4:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fccc <_tx_timer_change+0x10c>
4000fbd8:	e5940000 	ldr	r0, [r4]
4000fbdc:	e3500000 	cmp	r0, #0
4000fbe0:	0a000031 	beq	4000fcac <_tx_timer_change+0xec>
4000fbe4:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fcd0 <_tx_timer_change+0x110>
4000fbe8:	e5944000 	ldr	r4, [r4]
4000fbec:	e2844001 	add	r4, r4, #1
4000fbf0:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fcd0 <_tx_timer_change+0x110>
4000fbf4:	e5854000 	str	r4, [r5]
4000fbf8:	e580400c 	str	r4, [r0, #12]
4000fbfc:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fcd4 <_tx_timer_change+0x114>
4000fc00:	e5944000 	ldr	r4, [r4]
4000fc04:	e3540000 	cmp	r4, #0
4000fc08:	1a000006 	bne	4000fc28 <_tx_timer_change+0x68>
4000fc0c:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fcd8 <_tx_timer_change+0x118>
4000fc10:	e5944000 	ldr	r4, [r4]
4000fc14:	e5804000 	str	r4, [r0]
4000fc18:	e5904000 	ldr	r4, [r0]
4000fc1c:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fc20:	e5804004 	str	r4, [r0, #4]
4000fc24:	ea00000d 	b	4000fc60 <_tx_timer_change+0xa0>
4000fc28:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fcd4 <_tx_timer_change+0x114>
4000fc2c:	e5944000 	ldr	r4, [r4]
4000fc30:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fcdc <_tx_timer_change+0x11c>
4000fc34:	e1540005 	cmp	r4, r5
4000fc38:	2a000004 	bcs	4000fc50 <_tx_timer_change+0x90>
4000fc3c:	e3e04000 	mvn	r4, #0
4000fc40:	e5804000 	str	r4, [r0]
4000fc44:	e3a04000 	mov	r4, #0
4000fc48:	e5804004 	str	r4, [r0, #4]
4000fc4c:	ea000003 	b	4000fc60 <_tx_timer_change+0xa0>
4000fc50:	e59f4084 	ldr	r4, [pc, #132]	; 4000fcdc <_tx_timer_change+0x11c>
4000fc54:	e5804000 	str	r4, [r0]
4000fc58:	e3a04000 	mov	r4, #0
4000fc5c:	e5804004 	str	r4, [r0, #4]
4000fc60:	e3a0407b 	mov	r4, #123	; 0x7b
4000fc64:	e5804008 	str	r4, [r0, #8]
4000fc68:	e5803010 	str	r3, [r0, #16]
4000fc6c:	e5801014 	str	r1, [r0, #20]
4000fc70:	e5802018 	str	r2, [r0, #24]
4000fc74:	e3a04000 	mov	r4, #0
4000fc78:	e580401c 	str	r4, [r0, #28]
4000fc7c:	e2800020 	add	r0, r0, #32
4000fc80:	e59f4058 	ldr	r4, [pc, #88]	; 4000fce0 <_tx_timer_change+0x120>
4000fc84:	e5944000 	ldr	r4, [r4]
4000fc88:	e1500004 	cmp	r0, r4
4000fc8c:	3a000001 	bcc	4000fc98 <_tx_timer_change+0xd8>
4000fc90:	e59f404c 	ldr	r4, [pc, #76]	; 4000fce4 <_tx_timer_change+0x124>
4000fc94:	e5940000 	ldr	r0, [r4]
4000fc98:	e59f402c 	ldr	r4, [pc, #44]	; 4000fccc <_tx_timer_change+0x10c>
4000fc9c:	e5840000 	str	r0, [r4]
4000fca0:	e59f4040 	ldr	r4, [pc, #64]	; 4000fce8 <_tx_timer_change+0x128>
4000fca4:	e5944000 	ldr	r4, [r4]
4000fca8:	e5840020 	str	r0, [r4, #32]
4000fcac:	e5930020 	ldr	r0, [r3, #32]
4000fcb0:	e3500000 	cmp	r0, #0
4000fcb4:	1a000001 	bne	4000fcc0 <_tx_timer_change+0x100>
4000fcb8:	e5831008 	str	r1, [r3, #8]
4000fcbc:	e583200c 	str	r2, [r3, #12]
4000fcc0:	e121f00c 	msr	CPSR_c, ip
4000fcc4:	e3a00000 	mov	r0, #0
4000fcc8:	e8bd8030 	pop	{r4, r5, pc}
4000fccc:	40030ea0 	.word	0x40030ea0
4000fcd0:	40030ea4 	.word	0x40030ea4
4000fcd4:	40030e2c 	.word	0x40030e2c
4000fcd8:	40030e34 	.word	0x40030e34
4000fcdc:	f0f0f0f0 	.word	0xf0f0f0f0
4000fce0:	40030e9c 	.word	0x40030e9c
4000fce4:	40030e98 	.word	0x40030e98
4000fce8:	40030e8c 	.word	0x40030e8c

4000fcec <_tx_timer_create>:
4000fcec:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fcf0:	e1a04000 	mov	r4, r0
4000fcf4:	e1a05001 	mov	r5, r1
4000fcf8:	e1a06002 	mov	r6, r2
4000fcfc:	e1a07003 	mov	r7, r3
4000fd00:	e28da030 	add	sl, sp, #48	; 0x30
4000fd04:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fd08:	e3a0102c 	mov	r1, #44	; 0x2c
4000fd0c:	e1a00004 	mov	r0, r4
4000fd10:	eb000f0f 	bl	40013954 <__aeabi_memclr4>
4000fd14:	e5845004 	str	r5, [r4, #4]
4000fd18:	e5848008 	str	r8, [r4, #8]
4000fd1c:	e584900c 	str	r9, [r4, #12]
4000fd20:	e5846010 	str	r6, [r4, #16]
4000fd24:	e5847014 	str	r7, [r4, #20]
4000fd28:	e10fb000 	mrs	fp, CPSR
4000fd2c:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fd30:	e58d0008 	str	r0, [sp, #8]
4000fd34:	e59d0008 	ldr	r0, [sp, #8]
4000fd38:	e121f000 	msr	CPSR_c, r0
4000fd3c:	e59f0178 	ldr	r0, [pc, #376]	; 4000febc <_tx_timer_create+0x1d0>
4000fd40:	e5840000 	str	r0, [r4]
4000fd44:	e59f0174 	ldr	r0, [pc, #372]	; 4000fec0 <_tx_timer_create+0x1d4>
4000fd48:	e5900000 	ldr	r0, [r0]
4000fd4c:	e3500000 	cmp	r0, #0
4000fd50:	0a00000e 	beq	4000fd90 <_tx_timer_create+0xa4>
4000fd54:	e59f0164 	ldr	r0, [pc, #356]	; 4000fec0 <_tx_timer_create+0x1d4>
4000fd58:	e5900000 	ldr	r0, [r0]
4000fd5c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fd60:	e58d0004 	str	r0, [sp, #4]
4000fd64:	e59f0154 	ldr	r0, [pc, #340]	; 4000fec0 <_tx_timer_create+0x1d4>
4000fd68:	e5900000 	ldr	r0, [r0]
4000fd6c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fd70:	e59d0004 	ldr	r0, [sp, #4]
4000fd74:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fd78:	e59d0004 	ldr	r0, [sp, #4]
4000fd7c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fd80:	e59f0138 	ldr	r0, [pc, #312]	; 4000fec0 <_tx_timer_create+0x1d4>
4000fd84:	e5900000 	ldr	r0, [r0]
4000fd88:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fd8c:	ea000003 	b	4000fda0 <_tx_timer_create+0xb4>
4000fd90:	e59f0128 	ldr	r0, [pc, #296]	; 4000fec0 <_tx_timer_create+0x1d4>
4000fd94:	e5804000 	str	r4, [r0]
4000fd98:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fd9c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fda0:	e59f011c 	ldr	r0, [pc, #284]	; 4000fec4 <_tx_timer_create+0x1d8>
4000fda4:	e5900000 	ldr	r0, [r0]
4000fda8:	e2800001 	add	r0, r0, #1
4000fdac:	e59f1110 	ldr	r1, [pc, #272]	; 4000fec4 <_tx_timer_create+0x1d8>
4000fdb0:	e5810000 	str	r0, [r1]
4000fdb4:	e1a03008 	mov	r3, r8
4000fdb8:	e1a02005 	mov	r2, r5
4000fdbc:	e1a01004 	mov	r1, r4
4000fdc0:	e3a00002 	mov	r0, #2
4000fdc4:	e58d9000 	str	r9, [sp]
4000fdc8:	eb00011b 	bl	4001023c <_tx_trace_object_register>
4000fdcc:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fec8 <_tx_timer_create+0x1dc>
4000fdd0:	e5910000 	ldr	r0, [r1]
4000fdd4:	e3500000 	cmp	r0, #0
4000fdd8:	0a000030 	beq	4000fea0 <_tx_timer_create+0x1b4>
4000fddc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fecc <_tx_timer_create+0x1e0>
4000fde0:	e5911000 	ldr	r1, [r1]
4000fde4:	e2811001 	add	r1, r1, #1
4000fde8:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fecc <_tx_timer_create+0x1e0>
4000fdec:	e5821000 	str	r1, [r2]
4000fdf0:	e580100c 	str	r1, [r0, #12]
4000fdf4:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fed0 <_tx_timer_create+0x1e4>
4000fdf8:	e5911000 	ldr	r1, [r1]
4000fdfc:	e3510000 	cmp	r1, #0
4000fe00:	1a000006 	bne	4000fe20 <_tx_timer_create+0x134>
4000fe04:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fed4 <_tx_timer_create+0x1e8>
4000fe08:	e5911000 	ldr	r1, [r1]
4000fe0c:	e5801000 	str	r1, [r0]
4000fe10:	e5901000 	ldr	r1, [r0]
4000fe14:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fe18:	e5801004 	str	r1, [r0, #4]
4000fe1c:	ea00000d 	b	4000fe58 <_tx_timer_create+0x16c>
4000fe20:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fed0 <_tx_timer_create+0x1e4>
4000fe24:	e5911000 	ldr	r1, [r1]
4000fe28:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fed8 <_tx_timer_create+0x1ec>
4000fe2c:	e1510002 	cmp	r1, r2
4000fe30:	2a000004 	bcs	4000fe48 <_tx_timer_create+0x15c>
4000fe34:	e3e01000 	mvn	r1, #0
4000fe38:	e5801000 	str	r1, [r0]
4000fe3c:	e3a01000 	mov	r1, #0
4000fe40:	e5801004 	str	r1, [r0, #4]
4000fe44:	ea000003 	b	4000fe58 <_tx_timer_create+0x16c>
4000fe48:	e59f1088 	ldr	r1, [pc, #136]	; 4000fed8 <_tx_timer_create+0x1ec>
4000fe4c:	e5801000 	str	r1, [r0]
4000fe50:	e3a01000 	mov	r1, #0
4000fe54:	e5801004 	str	r1, [r0, #4]
4000fe58:	e3a0107c 	mov	r1, #124	; 0x7c
4000fe5c:	e5801008 	str	r1, [r0, #8]
4000fe60:	e5804010 	str	r4, [r0, #16]
4000fe64:	e5808014 	str	r8, [r0, #20]
4000fe68:	e5809018 	str	r9, [r0, #24]
4000fe6c:	e580a01c 	str	sl, [r0, #28]
4000fe70:	e2800020 	add	r0, r0, #32
4000fe74:	e59f1060 	ldr	r1, [pc, #96]	; 4000fedc <_tx_timer_create+0x1f0>
4000fe78:	e5911000 	ldr	r1, [r1]
4000fe7c:	e1500001 	cmp	r0, r1
4000fe80:	3a000001 	bcc	4000fe8c <_tx_timer_create+0x1a0>
4000fe84:	e59f1054 	ldr	r1, [pc, #84]	; 4000fee0 <_tx_timer_create+0x1f4>
4000fe88:	e5910000 	ldr	r0, [r1]
4000fe8c:	e59f1034 	ldr	r1, [pc, #52]	; 4000fec8 <_tx_timer_create+0x1dc>
4000fe90:	e5810000 	str	r0, [r1]
4000fe94:	e59f1048 	ldr	r1, [pc, #72]	; 4000fee4 <_tx_timer_create+0x1f8>
4000fe98:	e5911000 	ldr	r1, [r1]
4000fe9c:	e5810020 	str	r0, [r1, #32]
4000fea0:	e121f00b 	msr	CPSR_c, fp
4000fea4:	e35a0000 	cmp	sl, #0
4000fea8:	0a000001 	beq	4000feb4 <_tx_timer_create+0x1c8>
4000feac:	e2840008 	add	r0, r4, #8
4000feb0:	ebffe600 	bl	400096b8 <_tx_timer_system_activate>
4000feb4:	e3a00000 	mov	r0, #0
4000feb8:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000febc:	4154494d 	.word	0x4154494d
4000fec0:	40030e78 	.word	0x40030e78
4000fec4:	40030e7c 	.word	0x40030e7c
4000fec8:	40030ea0 	.word	0x40030ea0
4000fecc:	40030ea4 	.word	0x40030ea4
4000fed0:	40030e2c 	.word	0x40030e2c
4000fed4:	40030e34 	.word	0x40030e34
4000fed8:	f0f0f0f0 	.word	0xf0f0f0f0
4000fedc:	40030e9c 	.word	0x40030e9c
4000fee0:	40030e98 	.word	0x40030e98
4000fee4:	40030e8c 	.word	0x40030e8c

4000fee8 <_tx_timer_deactivate>:
4000fee8:	e92d4018 	push	{r3, r4, lr}
4000feec:	e1a01000 	mov	r1, r0
4000fef0:	e281c008 	add	ip, r1, #8
4000fef4:	e10f2000 	mrs	r2, CPSR
4000fef8:	e3823080 	orr	r3, r2, #128	; 0x80
4000fefc:	e121f003 	msr	CPSR_c, r3
4000ff00:	e59fe228 	ldr	lr, [pc, #552]	; 40010130 <_tx_timer_deactivate+0x248>
4000ff04:	e59e0000 	ldr	r0, [lr]
4000ff08:	e3500000 	cmp	r0, #0
4000ff0c:	0a000031 	beq	4000ffd8 <_tx_timer_deactivate+0xf0>
4000ff10:	e59fe21c 	ldr	lr, [pc, #540]	; 40010134 <_tx_timer_deactivate+0x24c>
4000ff14:	e59ee000 	ldr	lr, [lr]
4000ff18:	e28ee001 	add	lr, lr, #1
4000ff1c:	e59f4210 	ldr	r4, [pc, #528]	; 40010134 <_tx_timer_deactivate+0x24c>
4000ff20:	e584e000 	str	lr, [r4]
4000ff24:	e580e00c 	str	lr, [r0, #12]
4000ff28:	e59fe208 	ldr	lr, [pc, #520]	; 40010138 <_tx_timer_deactivate+0x250>
4000ff2c:	e59ee000 	ldr	lr, [lr]
4000ff30:	e35e0000 	cmp	lr, #0
4000ff34:	1a000006 	bne	4000ff54 <_tx_timer_deactivate+0x6c>
4000ff38:	e59fe1fc 	ldr	lr, [pc, #508]	; 4001013c <_tx_timer_deactivate+0x254>
4000ff3c:	e59ee000 	ldr	lr, [lr]
4000ff40:	e580e000 	str	lr, [r0]
4000ff44:	e590e000 	ldr	lr, [r0]
4000ff48:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000ff4c:	e580e004 	str	lr, [r0, #4]
4000ff50:	ea00000d 	b	4000ff8c <_tx_timer_deactivate+0xa4>
4000ff54:	e59fe1dc 	ldr	lr, [pc, #476]	; 40010138 <_tx_timer_deactivate+0x250>
4000ff58:	e59ee000 	ldr	lr, [lr]
4000ff5c:	e59f41dc 	ldr	r4, [pc, #476]	; 40010140 <_tx_timer_deactivate+0x258>
4000ff60:	e15e0004 	cmp	lr, r4
4000ff64:	2a000004 	bcs	4000ff7c <_tx_timer_deactivate+0x94>
4000ff68:	e3e0e000 	mvn	lr, #0
4000ff6c:	e580e000 	str	lr, [r0]
4000ff70:	e3a0e000 	mov	lr, #0
4000ff74:	e580e004 	str	lr, [r0, #4]
4000ff78:	ea000003 	b	4000ff8c <_tx_timer_deactivate+0xa4>
4000ff7c:	e59fe1bc 	ldr	lr, [pc, #444]	; 40010140 <_tx_timer_deactivate+0x258>
4000ff80:	e580e000 	str	lr, [r0]
4000ff84:	e3a0e000 	mov	lr, #0
4000ff88:	e580e004 	str	lr, [r0, #4]
4000ff8c:	e3a0e07d 	mov	lr, #125	; 0x7d
4000ff90:	e580e008 	str	lr, [r0, #8]
4000ff94:	e5801010 	str	r1, [r0, #16]
4000ff98:	e580d014 	str	sp, [r0, #20]
4000ff9c:	e3a0e000 	mov	lr, #0
4000ffa0:	e580e018 	str	lr, [r0, #24]
4000ffa4:	e580e01c 	str	lr, [r0, #28]
4000ffa8:	e2800020 	add	r0, r0, #32
4000ffac:	e59fe190 	ldr	lr, [pc, #400]	; 40010144 <_tx_timer_deactivate+0x25c>
4000ffb0:	e59ee000 	ldr	lr, [lr]
4000ffb4:	e150000e 	cmp	r0, lr
4000ffb8:	3a000001 	bcc	4000ffc4 <_tx_timer_deactivate+0xdc>
4000ffbc:	e59fe184 	ldr	lr, [pc, #388]	; 40010148 <_tx_timer_deactivate+0x260>
4000ffc0:	e59e0000 	ldr	r0, [lr]
4000ffc4:	e59fe164 	ldr	lr, [pc, #356]	; 40010130 <_tx_timer_deactivate+0x248>
4000ffc8:	e58e0000 	str	r0, [lr]
4000ffcc:	e59fe178 	ldr	lr, [pc, #376]	; 4001014c <_tx_timer_deactivate+0x264>
4000ffd0:	e59ee000 	ldr	lr, [lr]
4000ffd4:	e58e0020 	str	r0, [lr, #32]
4000ffd8:	e59fe170 	ldr	lr, [pc, #368]	; 40010150 <_tx_timer_deactivate+0x268>
4000ffdc:	e59c0018 	ldr	r0, [ip, #24]
4000ffe0:	e59ee000 	ldr	lr, [lr]
4000ffe4:	e150000e 	cmp	r0, lr
4000ffe8:	3a00002b 	bcc	4001009c <_tx_timer_deactivate+0x1b4>
4000ffec:	e59fe160 	ldr	lr, [pc, #352]	; 40010154 <_tx_timer_deactivate+0x26c>
4000fff0:	e59c0018 	ldr	r0, [ip, #24]
4000fff4:	e59ee000 	ldr	lr, [lr]
4000fff8:	e150000e 	cmp	r0, lr
4000fffc:	2a000026 	bcs	4001009c <_tx_timer_deactivate+0x1b4>
40010000:	e59fe150 	ldr	lr, [pc, #336]	; 40010158 <_tx_timer_deactivate+0x270>
40010004:	e59c0018 	ldr	r0, [ip, #24]
40010008:	e59ee000 	ldr	lr, [lr]
4001000c:	e150000e 	cmp	r0, lr
40010010:	3a000007 	bcc	40010034 <_tx_timer_deactivate+0x14c>
40010014:	e59fe13c 	ldr	lr, [pc, #316]	; 40010158 <_tx_timer_deactivate+0x270>
40010018:	e59c0018 	ldr	r0, [ip, #24]
4001001c:	e59ee000 	ldr	lr, [lr]
40010020:	e040000e 	sub	r0, r0, lr
40010024:	e3a0e001 	mov	lr, #1
40010028:	e08e0140 	add	r0, lr, r0, asr #2
4001002c:	e58d0000 	str	r0, [sp]
40010030:	ea00000e 	b	40010070 <_tx_timer_deactivate+0x188>
40010034:	e59fe114 	ldr	lr, [pc, #276]	; 40010150 <_tx_timer_deactivate+0x268>
40010038:	e59c0018 	ldr	r0, [ip, #24]
4001003c:	e59ee000 	ldr	lr, [lr]
40010040:	e040000e 	sub	r0, r0, lr
40010044:	e1a00140 	asr	r0, r0, #2
40010048:	e58d0000 	str	r0, [sp]
4001004c:	e59f0100 	ldr	r0, [pc, #256]	; 40010154 <_tx_timer_deactivate+0x26c>
40010050:	e5900000 	ldr	r0, [r0]
40010054:	e59fe0fc 	ldr	lr, [pc, #252]	; 40010158 <_tx_timer_deactivate+0x270>
40010058:	e59ee000 	ldr	lr, [lr]
4001005c:	e040000e 	sub	r0, r0, lr
40010060:	e59de000 	ldr	lr, [sp]
40010064:	e08e0140 	add	r0, lr, r0, asr #2
40010068:	e2800001 	add	r0, r0, #1
4001006c:	e58d0000 	str	r0, [sp]
40010070:	e59c0000 	ldr	r0, [ip]
40010074:	e3500020 	cmp	r0, #32
40010078:	9a000005 	bls	40010094 <_tx_timer_deactivate+0x1ac>
4001007c:	e59c0000 	ldr	r0, [ip]
40010080:	e2400020 	sub	r0, r0, #32
40010084:	e59de000 	ldr	lr, [sp]
40010088:	e080000e 	add	r0, r0, lr
4001008c:	e58c0000 	str	r0, [ip]
40010090:	ea000001 	b	4001009c <_tx_timer_deactivate+0x1b4>
40010094:	e59d0000 	ldr	r0, [sp]
40010098:	e58c0000 	str	r0, [ip]
4001009c:	e59c0018 	ldr	r0, [ip, #24]
400100a0:	e3500000 	cmp	r0, #0
400100a4:	0a00001e 	beq	40010124 <_tx_timer_deactivate+0x23c>
400100a8:	e59c0010 	ldr	r0, [ip, #16]
400100ac:	e150000c 	cmp	r0, ip
400100b0:	1a000009 	bne	400100dc <_tx_timer_deactivate+0x1f4>
400100b4:	e59c0018 	ldr	r0, [ip, #24]
400100b8:	e5900000 	ldr	r0, [r0]
400100bc:	e150000c 	cmp	r0, ip
400100c0:	1a000002 	bne	400100d0 <_tx_timer_deactivate+0x1e8>
400100c4:	e3a00000 	mov	r0, #0
400100c8:	e59ce018 	ldr	lr, [ip, #24]
400100cc:	e58e0000 	str	r0, [lr]
400100d0:	e3a00000 	mov	r0, #0
400100d4:	e58c0018 	str	r0, [ip, #24]
400100d8:	ea000011 	b	40010124 <_tx_timer_deactivate+0x23c>
400100dc:	e59c0014 	ldr	r0, [ip, #20]
400100e0:	e59ce010 	ldr	lr, [ip, #16]
400100e4:	e58e0014 	str	r0, [lr, #20]
400100e8:	e59c0010 	ldr	r0, [ip, #16]
400100ec:	e59ce014 	ldr	lr, [ip, #20]
400100f0:	e58e0010 	str	r0, [lr, #16]
400100f4:	e59c0018 	ldr	r0, [ip, #24]
400100f8:	e5900000 	ldr	r0, [r0]
400100fc:	e150000c 	cmp	r0, ip
40010100:	1a000005 	bne	4001011c <_tx_timer_deactivate+0x234>
40010104:	e59c0018 	ldr	r0, [ip, #24]
40010108:	e59ce010 	ldr	lr, [ip, #16]
4001010c:	e58e0018 	str	r0, [lr, #24]
40010110:	e59c0010 	ldr	r0, [ip, #16]
40010114:	e59ce018 	ldr	lr, [ip, #24]
40010118:	e58e0000 	str	r0, [lr]
4001011c:	e3a00000 	mov	r0, #0
40010120:	e58c0018 	str	r0, [ip, #24]
40010124:	e121f002 	msr	CPSR_c, r2
40010128:	e3a00000 	mov	r0, #0
4001012c:	e8bd8018 	pop	{r3, r4, pc}
40010130:	40030ea0 	.word	0x40030ea0
40010134:	40030ea4 	.word	0x40030ea4
40010138:	40030e2c 	.word	0x40030e2c
4001013c:	40030e34 	.word	0x40030e34
40010140:	f0f0f0f0 	.word	0xf0f0f0f0
40010144:	40030e9c 	.word	0x40030e9c
40010148:	40030e98 	.word	0x40030e98
4001014c:	40030e8c 	.word	0x40030e8c
40010150:	40030e68 	.word	0x40030e68
40010154:	40030e6c 	.word	0x40030e6c
40010158:	40030e70 	.word	0x40030e70

4001015c <_tx_timer_expiration_process>:
4001015c:	e92d4070 	push	{r4, r5, r6, lr}
40010160:	e10f4000 	mrs	r4, CPSR
40010164:	e3845080 	orr	r5, r4, #128	; 0x80
40010168:	e121f005 	msr	CPSR_c, r5
4001016c:	e59f001c 	ldr	r0, [pc, #28]	; 40010190 <_tx_timer_expiration_process+0x34>
40010170:	e5900000 	ldr	r0, [r0]
40010174:	e2800001 	add	r0, r0, #1
40010178:	e59f1010 	ldr	r1, [pc, #16]	; 40010190 <_tx_timer_expiration_process+0x34>
4001017c:	e5810000 	str	r0, [r1]
40010180:	e121f004 	msr	CPSR_c, r4
40010184:	e59f0008 	ldr	r0, [pc, #8]	; 40010194 <_tx_timer_expiration_process+0x38>
40010188:	ebfffcd5 	bl	4000f4e4 <_tx_thread_system_resume>
4001018c:	e8bd8070 	pop	{r4, r5, r6, pc}
40010190:	40030e50 	.word	0x40030e50
40010194:	40032974 	.word	0x40032974

40010198 <_tx_timer_system_deactivate>:
40010198:	e1a01000 	mov	r1, r0
4001019c:	e10f2000 	mrs	r2, CPSR
400101a0:	e3823080 	orr	r3, r2, #128	; 0x80
400101a4:	e121f003 	msr	CPSR_c, r3
400101a8:	e5910018 	ldr	r0, [r1, #24]
400101ac:	e3500000 	cmp	r0, #0
400101b0:	0a00001e 	beq	40010230 <_tx_timer_system_deactivate+0x98>
400101b4:	e5910010 	ldr	r0, [r1, #16]
400101b8:	e1500001 	cmp	r0, r1
400101bc:	1a000009 	bne	400101e8 <_tx_timer_system_deactivate+0x50>
400101c0:	e5910018 	ldr	r0, [r1, #24]
400101c4:	e5900000 	ldr	r0, [r0]
400101c8:	e1500001 	cmp	r0, r1
400101cc:	1a000002 	bne	400101dc <_tx_timer_system_deactivate+0x44>
400101d0:	e3a00000 	mov	r0, #0
400101d4:	e591c018 	ldr	ip, [r1, #24]
400101d8:	e58c0000 	str	r0, [ip]
400101dc:	e3a00000 	mov	r0, #0
400101e0:	e5810018 	str	r0, [r1, #24]
400101e4:	ea000011 	b	40010230 <_tx_timer_system_deactivate+0x98>
400101e8:	e5910014 	ldr	r0, [r1, #20]
400101ec:	e591c010 	ldr	ip, [r1, #16]
400101f0:	e58c0014 	str	r0, [ip, #20]
400101f4:	e5910010 	ldr	r0, [r1, #16]
400101f8:	e591c014 	ldr	ip, [r1, #20]
400101fc:	e58c0010 	str	r0, [ip, #16]
40010200:	e5910018 	ldr	r0, [r1, #24]
40010204:	e5900000 	ldr	r0, [r0]
40010208:	e1500001 	cmp	r0, r1
4001020c:	1a000005 	bne	40010228 <_tx_timer_system_deactivate+0x90>
40010210:	e5910018 	ldr	r0, [r1, #24]
40010214:	e591c010 	ldr	ip, [r1, #16]
40010218:	e58c0018 	str	r0, [ip, #24]
4001021c:	e5910010 	ldr	r0, [r1, #16]
40010220:	e591c018 	ldr	ip, [r1, #24]
40010224:	e58c0000 	str	r0, [ip]
40010228:	e3a00000 	mov	r0, #0
4001022c:	e5810018 	str	r0, [r1, #24]
40010230:	e121f002 	msr	CPSR_c, r2
40010234:	e3a00000 	mov	r0, #0
40010238:	e12fff1e 	bx	lr

4001023c <_tx_trace_object_register>:
4001023c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40010240:	e1a04000 	mov	r4, r0
40010244:	e1a05001 	mov	r5, r1
40010248:	e1a06002 	mov	r6, r2
4001024c:	e1a07003 	mov	r7, r3
40010250:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
40010254:	e59f0184 	ldr	r0, [pc, #388]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010258:	e5900000 	ldr	r0, [r0]
4001025c:	e3500000 	cmp	r0, #0
40010260:	1a000000 	bne	40010268 <_tx_trace_object_register+0x2c>
40010264:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40010268:	e59f1174 	ldr	r1, [pc, #372]	; 400103e4 <_tx_trace_object_register+0x1a8>
4001026c:	e5911000 	ldr	r1, [r1]
40010270:	e59f2168 	ldr	r2, [pc, #360]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010274:	e5922000 	ldr	r2, [r2]
40010278:	e0410002 	sub	r0, r1, r2
4001027c:	e3a01030 	mov	r1, #48	; 0x30
40010280:	eb0002bd 	bl	40010d7c <__aeabi_idivmod>
40010284:	e1a0a000 	mov	sl, r0
40010288:	e1a0b00a 	mov	fp, sl
4001028c:	e3a09000 	mov	r9, #0
40010290:	ea00001b 	b	40010304 <_tx_trace_object_register+0xc8>
40010294:	e0890089 	add	r0, r9, r9, lsl #1
40010298:	e59f1140 	ldr	r1, [pc, #320]	; 400103e0 <_tx_trace_object_register+0x1a4>
4001029c:	e5911000 	ldr	r1, [r1]
400102a0:	e0810200 	add	r0, r1, r0, lsl #4
400102a4:	e5900004 	ldr	r0, [r0, #4]
400102a8:	e1500005 	cmp	r0, r5
400102ac:	1a000001 	bne	400102b8 <_tx_trace_object_register+0x7c>
400102b0:	e1a0b009 	mov	fp, r9
400102b4:	ea000014 	b	4001030c <_tx_trace_object_register+0xd0>
400102b8:	e0890089 	add	r0, r9, r9, lsl #1
400102bc:	e59f111c 	ldr	r1, [pc, #284]	; 400103e0 <_tx_trace_object_register+0x1a4>
400102c0:	e5911000 	ldr	r1, [r1]
400102c4:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
400102c8:	e3500000 	cmp	r0, #0
400102cc:	0a00000b 	beq	40010300 <_tx_trace_object_register+0xc4>
400102d0:	e15b000a 	cmp	fp, sl
400102d4:	1a000001 	bne	400102e0 <_tx_trace_object_register+0xa4>
400102d8:	e1a0b009 	mov	fp, r9
400102dc:	ea000007 	b	40010300 <_tx_trace_object_register+0xc4>
400102e0:	e08b008b 	add	r0, fp, fp, lsl #1
400102e4:	e59f10f4 	ldr	r1, [pc, #244]	; 400103e0 <_tx_trace_object_register+0x1a4>
400102e8:	e5911000 	ldr	r1, [r1]
400102ec:	e0810200 	add	r0, r1, r0, lsl #4
400102f0:	e5d00001 	ldrb	r0, [r0, #1]
400102f4:	e3500000 	cmp	r0, #0
400102f8:	0a000000 	beq	40010300 <_tx_trace_object_register+0xc4>
400102fc:	e1a0b009 	mov	fp, r9
40010300:	e2899001 	add	r9, r9, #1
40010304:	e159000a 	cmp	r9, sl
40010308:	3affffe1 	bcc	40010294 <_tx_trace_object_register+0x58>
4001030c:	e1a00000 	nop			; (mov r0, r0)
40010310:	e15b000a 	cmp	fp, sl
40010314:	2a000030 	bcs	400103dc <_tx_trace_object_register+0x1a0>
40010318:	e3a00000 	mov	r0, #0
4001031c:	e08b108b 	add	r1, fp, fp, lsl #1
40010320:	e59f20b8 	ldr	r2, [pc, #184]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010324:	e5922000 	ldr	r2, [r2]
40010328:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001032c:	e08b008b 	add	r0, fp, fp, lsl #1
40010330:	e59f10a8 	ldr	r1, [pc, #168]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010334:	e5911000 	ldr	r1, [r1]
40010338:	e0810200 	add	r0, r1, r0, lsl #4
4001033c:	e5c04001 	strb	r4, [r0, #1]
40010340:	e08b008b 	add	r0, fp, fp, lsl #1
40010344:	e59f1094 	ldr	r1, [pc, #148]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010348:	e5911000 	ldr	r1, [r1]
4001034c:	e0810200 	add	r0, r1, r0, lsl #4
40010350:	e5805004 	str	r5, [r0, #4]
40010354:	e08b008b 	add	r0, fp, fp, lsl #1
40010358:	e59f1080 	ldr	r1, [pc, #128]	; 400103e0 <_tx_trace_object_register+0x1a4>
4001035c:	e5911000 	ldr	r1, [r1]
40010360:	e0810200 	add	r0, r1, r0, lsl #4
40010364:	e5807008 	str	r7, [r0, #8]
40010368:	e08b008b 	add	r0, fp, fp, lsl #1
4001036c:	e59f106c 	ldr	r1, [pc, #108]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010370:	e5911000 	ldr	r1, [r1]
40010374:	e0810200 	add	r0, r1, r0, lsl #4
40010378:	e580800c 	str	r8, [r0, #12]
4001037c:	e3a09000 	mov	r9, #0
40010380:	ea00000b 	b	400103b4 <_tx_trace_object_register+0x178>
40010384:	e7d60009 	ldrb	r0, [r6, r9]
40010388:	e08b108b 	add	r1, fp, fp, lsl #1
4001038c:	e59f204c 	ldr	r2, [pc, #76]	; 400103e0 <_tx_trace_object_register+0x1a4>
40010390:	e5922000 	ldr	r2, [r2]
40010394:	e0821201 	add	r1, r2, r1, lsl #4
40010398:	e2811010 	add	r1, r1, #16
4001039c:	e7c10009 	strb	r0, [r1, r9]
400103a0:	e7d60009 	ldrb	r0, [r6, r9]
400103a4:	e3500000 	cmp	r0, #0
400103a8:	1a000000 	bne	400103b0 <_tx_trace_object_register+0x174>
400103ac:	ea000002 	b	400103bc <_tx_trace_object_register+0x180>
400103b0:	e2899001 	add	r9, r9, #1
400103b4:	e359001f 	cmp	r9, #31
400103b8:	3afffff1 	bcc	40010384 <_tx_trace_object_register+0x148>
400103bc:	e1a00000 	nop			; (mov r0, r0)
400103c0:	e3a00000 	mov	r0, #0
400103c4:	e08b108b 	add	r1, fp, fp, lsl #1
400103c8:	e59f2010 	ldr	r2, [pc, #16]	; 400103e0 <_tx_trace_object_register+0x1a4>
400103cc:	e5922000 	ldr	r2, [r2]
400103d0:	e0821201 	add	r1, r2, r1, lsl #4
400103d4:	e2811010 	add	r1, r1, #16
400103d8:	e7c10009 	strb	r0, [r1, r9]
400103dc:	eaffffa0 	b	40010264 <_tx_trace_object_register+0x28>
400103e0:	40030e90 	.word	0x40030e90
400103e4:	40030e94 	.word	0x40030e94

400103e8 <_tx_trace_object_unregister>:
400103e8:	e92d4070 	push	{r4, r5, r6, lr}
400103ec:	e1a04000 	mov	r4, r0
400103f0:	e59f007c 	ldr	r0, [pc, #124]	; 40010474 <_tx_trace_object_unregister+0x8c>
400103f4:	e5900000 	ldr	r0, [r0]
400103f8:	e3500000 	cmp	r0, #0
400103fc:	1a000000 	bne	40010404 <_tx_trace_object_unregister+0x1c>
40010400:	e8bd8070 	pop	{r4, r5, r6, pc}
40010404:	e59f106c 	ldr	r1, [pc, #108]	; 40010478 <_tx_trace_object_unregister+0x90>
40010408:	e5911000 	ldr	r1, [r1]
4001040c:	e59f2060 	ldr	r2, [pc, #96]	; 40010474 <_tx_trace_object_unregister+0x8c>
40010410:	e5922000 	ldr	r2, [r2]
40010414:	e0410002 	sub	r0, r1, r2
40010418:	e3a01030 	mov	r1, #48	; 0x30
4001041c:	eb000256 	bl	40010d7c <__aeabi_idivmod>
40010420:	e1a05000 	mov	r5, r0
40010424:	e3a06000 	mov	r6, #0
40010428:	ea00000d 	b	40010464 <_tx_trace_object_unregister+0x7c>
4001042c:	e0860086 	add	r0, r6, r6, lsl #1
40010430:	e59f103c 	ldr	r1, [pc, #60]	; 40010474 <_tx_trace_object_unregister+0x8c>
40010434:	e5911000 	ldr	r1, [r1]
40010438:	e0810200 	add	r0, r1, r0, lsl #4
4001043c:	e5900004 	ldr	r0, [r0, #4]
40010440:	e1500004 	cmp	r0, r4
40010444:	1a000005 	bne	40010460 <_tx_trace_object_unregister+0x78>
40010448:	e3a00001 	mov	r0, #1
4001044c:	e0861086 	add	r1, r6, r6, lsl #1
40010450:	e59f201c 	ldr	r2, [pc, #28]	; 40010474 <_tx_trace_object_unregister+0x8c>
40010454:	e5922000 	ldr	r2, [r2]
40010458:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001045c:	ea000002 	b	4001046c <_tx_trace_object_unregister+0x84>
40010460:	e2866001 	add	r6, r6, #1
40010464:	e1560005 	cmp	r6, r5
40010468:	3affffef 	bcc	4001042c <_tx_trace_object_unregister+0x44>
4001046c:	e1a00000 	nop			; (mov r0, r0)
40010470:	eaffffe2 	b	40010400 <_tx_trace_object_unregister+0x18>
40010474:	40030e90 	.word	0x40030e90
40010478:	40030e94 	.word	0x40030e94

4001047c <_tx_thread_stack_build>:
4001047c:	e5902010 	ldr	r2, [r0, #16]
40010480:	e3c22007 	bic	r2, r2, #7
40010484:	e242204c 	sub	r2, r2, #76	; 0x4c
40010488:	e3a03001 	mov	r3, #1
4001048c:	e5823000 	str	r3, [r2]
40010490:	e3a03000 	mov	r3, #0
40010494:	e5823008 	str	r3, [r2, #8]
40010498:	e582300c 	str	r3, [r2, #12]
4001049c:	e5823010 	str	r3, [r2, #16]
400104a0:	e5823014 	str	r3, [r2, #20]
400104a4:	e5823018 	str	r3, [r2, #24]
400104a8:	e582301c 	str	r3, [r2, #28]
400104ac:	e5823020 	str	r3, [r2, #32]
400104b0:	e5823024 	str	r3, [r2, #36]	; 0x24
400104b4:	e5823028 	str	r3, [r2, #40]	; 0x28
400104b8:	e582302c 	str	r3, [r2, #44]	; 0x2c
400104bc:	e590300c 	ldr	r3, [r0, #12]
400104c0:	e5823030 	str	r3, [r2, #48]	; 0x30
400104c4:	e3a03000 	mov	r3, #0
400104c8:	e5823034 	str	r3, [r2, #52]	; 0x34
400104cc:	e5823038 	str	r3, [r2, #56]	; 0x38
400104d0:	e582303c 	str	r3, [r2, #60]	; 0x3c
400104d4:	e5821040 	str	r1, [r2, #64]	; 0x40
400104d8:	e5823044 	str	r3, [r2, #68]	; 0x44
400104dc:	e10f1000 	mrs	r1, CPSR
400104e0:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400104e4:	e3813013 	orr	r3, r1, #19
400104e8:	e5823004 	str	r3, [r2, #4]
400104ec:	e5802008 	str	r2, [r0, #8]
400104f0:	e12fff1e 	bx	lr

400104f4 <_tx_event_flags_cleanup>:
400104f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400104f8:	e1a04000 	mov	r4, r0
400104fc:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010500:	e10f5000 	mrs	r5, CPSR
40010504:	e3856080 	orr	r6, r5, #128	; 0x80
40010508:	e121f006 	msr	CPSR_c, r6
4001050c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010510:	e3500000 	cmp	r0, #0
40010514:	0a000026 	beq	400105b4 <_tx_event_flags_cleanup+0xc0>
40010518:	e3570000 	cmp	r7, #0
4001051c:	0a000024 	beq	400105b4 <_tx_event_flags_cleanup+0xc0>
40010520:	e5970000 	ldr	r0, [r7]
40010524:	e59f1090 	ldr	r1, [pc, #144]	; 400105bc <_tx_event_flags_cleanup+0xc8>
40010528:	e1500001 	cmp	r0, r1
4001052c:	1a000020 	bne	400105b4 <_tx_event_flags_cleanup+0xc0>
40010530:	e3a00000 	mov	r0, #0
40010534:	e5840068 	str	r0, [r4, #104]	; 0x68
40010538:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001053c:	e1500004 	cmp	r0, r4
40010540:	1a000002 	bne	40010550 <_tx_event_flags_cleanup+0x5c>
40010544:	e3a00000 	mov	r0, #0
40010548:	e5870010 	str	r0, [r7, #16]
4001054c:	ea000007 	b	40010570 <_tx_event_flags_cleanup+0x7c>
40010550:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010554:	e5870010 	str	r0, [r7, #16]
40010558:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001055c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010560:	e5810074 	str	r0, [r1, #116]	; 0x74
40010564:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010568:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001056c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010570:	e5970014 	ldr	r0, [r7, #20]
40010574:	e2400001 	sub	r0, r0, #1
40010578:	e5870014 	str	r0, [r7, #20]
4001057c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010580:	e3500007 	cmp	r0, #7
40010584:	1a00000a 	bne	400105b4 <_tx_event_flags_cleanup+0xc0>
40010588:	e3a00007 	mov	r0, #7
4001058c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010590:	e59f0028 	ldr	r0, [pc, #40]	; 400105c0 <_tx_event_flags_cleanup+0xcc>
40010594:	e5900000 	ldr	r0, [r0]
40010598:	e2800001 	add	r0, r0, #1
4001059c:	e59f101c 	ldr	r1, [pc, #28]	; 400105c0 <_tx_event_flags_cleanup+0xcc>
400105a0:	e5810000 	str	r0, [r1]
400105a4:	e121f005 	msr	CPSR_c, r5
400105a8:	e1a00004 	mov	r0, r4
400105ac:	ebfffbcc 	bl	4000f4e4 <_tx_thread_system_resume>
400105b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400105b4:	e121f005 	msr	CPSR_c, r5
400105b8:	eafffffc 	b	400105b0 <_tx_event_flags_cleanup+0xbc>
400105bc:	4456444e 	.word	0x4456444e
400105c0:	40030e50 	.word	0x40030e50

400105c4 <_tx_mutex_cleanup>:
400105c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400105c8:	e1a04000 	mov	r4, r0
400105cc:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400105d0:	e10f5000 	mrs	r5, CPSR
400105d4:	e3856080 	orr	r6, r5, #128	; 0x80
400105d8:	e121f006 	msr	CPSR_c, r6
400105dc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400105e0:	e3500000 	cmp	r0, #0
400105e4:	0a000026 	beq	40010684 <_tx_mutex_cleanup+0xc0>
400105e8:	e3570000 	cmp	r7, #0
400105ec:	0a000024 	beq	40010684 <_tx_mutex_cleanup+0xc0>
400105f0:	e5970000 	ldr	r0, [r7]
400105f4:	e59f1090 	ldr	r1, [pc, #144]	; 4001068c <_tx_mutex_cleanup+0xc8>
400105f8:	e1500001 	cmp	r0, r1
400105fc:	1a000020 	bne	40010684 <_tx_mutex_cleanup+0xc0>
40010600:	e3a00000 	mov	r0, #0
40010604:	e5840068 	str	r0, [r4, #104]	; 0x68
40010608:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001060c:	e1500004 	cmp	r0, r4
40010610:	1a000002 	bne	40010620 <_tx_mutex_cleanup+0x5c>
40010614:	e3a00000 	mov	r0, #0
40010618:	e587001c 	str	r0, [r7, #28]
4001061c:	ea000007 	b	40010640 <_tx_mutex_cleanup+0x7c>
40010620:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010624:	e587001c 	str	r0, [r7, #28]
40010628:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001062c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010630:	e5810074 	str	r0, [r1, #116]	; 0x74
40010634:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010638:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001063c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010640:	e5970020 	ldr	r0, [r7, #32]
40010644:	e2400001 	sub	r0, r0, #1
40010648:	e5870020 	str	r0, [r7, #32]
4001064c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010650:	e350000d 	cmp	r0, #13
40010654:	1a00000a 	bne	40010684 <_tx_mutex_cleanup+0xc0>
40010658:	e3a0001d 	mov	r0, #29
4001065c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010660:	e59f0028 	ldr	r0, [pc, #40]	; 40010690 <_tx_mutex_cleanup+0xcc>
40010664:	e5900000 	ldr	r0, [r0]
40010668:	e2800001 	add	r0, r0, #1
4001066c:	e59f101c 	ldr	r1, [pc, #28]	; 40010690 <_tx_mutex_cleanup+0xcc>
40010670:	e5810000 	str	r0, [r1]
40010674:	e121f005 	msr	CPSR_c, r5
40010678:	e1a00004 	mov	r0, r4
4001067c:	ebfffb98 	bl	4000f4e4 <_tx_thread_system_resume>
40010680:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010684:	e121f005 	msr	CPSR_c, r5
40010688:	eafffffc 	b	40010680 <_tx_mutex_cleanup+0xbc>
4001068c:	4d555445 	.word	0x4d555445
40010690:	40030e50 	.word	0x40030e50

40010694 <_tx_mutex_prioritize>:
40010694:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40010698:	e1a04000 	mov	r4, r0
4001069c:	e10f5000 	mrs	r5, CPSR
400106a0:	e3856080 	orr	r6, r5, #128	; 0x80
400106a4:	e121f006 	msr	CPSR_c, r6
400106a8:	e59f1234 	ldr	r1, [pc, #564]	; 400108e4 <_tx_mutex_prioritize+0x250>
400106ac:	e5910000 	ldr	r0, [r1]
400106b0:	e3500000 	cmp	r0, #0
400106b4:	0a000032 	beq	40010784 <_tx_mutex_prioritize+0xf0>
400106b8:	e59f1228 	ldr	r1, [pc, #552]	; 400108e8 <_tx_mutex_prioritize+0x254>
400106bc:	e5911000 	ldr	r1, [r1]
400106c0:	e2811001 	add	r1, r1, #1
400106c4:	e59f221c 	ldr	r2, [pc, #540]	; 400108e8 <_tx_mutex_prioritize+0x254>
400106c8:	e5821000 	str	r1, [r2]
400106cc:	e580100c 	str	r1, [r0, #12]
400106d0:	e59f1214 	ldr	r1, [pc, #532]	; 400108ec <_tx_mutex_prioritize+0x258>
400106d4:	e5911000 	ldr	r1, [r1]
400106d8:	e3510000 	cmp	r1, #0
400106dc:	1a000006 	bne	400106fc <_tx_mutex_prioritize+0x68>
400106e0:	e59f1208 	ldr	r1, [pc, #520]	; 400108f0 <_tx_mutex_prioritize+0x25c>
400106e4:	e5911000 	ldr	r1, [r1]
400106e8:	e5801000 	str	r1, [r0]
400106ec:	e5901000 	ldr	r1, [r0]
400106f0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400106f4:	e5801004 	str	r1, [r0, #4]
400106f8:	ea00000d 	b	40010734 <_tx_mutex_prioritize+0xa0>
400106fc:	e59f11e8 	ldr	r1, [pc, #488]	; 400108ec <_tx_mutex_prioritize+0x258>
40010700:	e5911000 	ldr	r1, [r1]
40010704:	e59f21e8 	ldr	r2, [pc, #488]	; 400108f4 <_tx_mutex_prioritize+0x260>
40010708:	e1510002 	cmp	r1, r2
4001070c:	2a000004 	bcs	40010724 <_tx_mutex_prioritize+0x90>
40010710:	e3e01000 	mvn	r1, #0
40010714:	e5801000 	str	r1, [r0]
40010718:	e3a01000 	mov	r1, #0
4001071c:	e5801004 	str	r1, [r0, #4]
40010720:	ea000003 	b	40010734 <_tx_mutex_prioritize+0xa0>
40010724:	e59f11c8 	ldr	r1, [pc, #456]	; 400108f4 <_tx_mutex_prioritize+0x260>
40010728:	e5801000 	str	r1, [r0]
4001072c:	e3a01000 	mov	r1, #0
40010730:	e5801004 	str	r1, [r0, #4]
40010734:	e3a01038 	mov	r1, #56	; 0x38
40010738:	e5801008 	str	r1, [r0, #8]
4001073c:	e5804010 	str	r4, [r0, #16]
40010740:	e5941020 	ldr	r1, [r4, #32]
40010744:	e5801014 	str	r1, [r0, #20]
40010748:	e580d018 	str	sp, [r0, #24]
4001074c:	e3a01000 	mov	r1, #0
40010750:	e580101c 	str	r1, [r0, #28]
40010754:	e2800020 	add	r0, r0, #32
40010758:	e59f1198 	ldr	r1, [pc, #408]	; 400108f8 <_tx_mutex_prioritize+0x264>
4001075c:	e5911000 	ldr	r1, [r1]
40010760:	e1500001 	cmp	r0, r1
40010764:	3a000001 	bcc	40010770 <_tx_mutex_prioritize+0xdc>
40010768:	e59f118c 	ldr	r1, [pc, #396]	; 400108fc <_tx_mutex_prioritize+0x268>
4001076c:	e5910000 	ldr	r0, [r1]
40010770:	e59f116c 	ldr	r1, [pc, #364]	; 400108e4 <_tx_mutex_prioritize+0x250>
40010774:	e5810000 	str	r0, [r1]
40010778:	e59f1180 	ldr	r1, [pc, #384]	; 40010900 <_tx_mutex_prioritize+0x26c>
4001077c:	e5911000 	ldr	r1, [r1]
40010780:	e5810020 	str	r0, [r1, #32]
40010784:	e5940020 	ldr	r0, [r4, #32]
40010788:	e3500002 	cmp	r0, #2
4001078c:	2a000002 	bcs	4001079c <_tx_mutex_prioritize+0x108>
40010790:	e121f005 	msr	CPSR_c, r5
40010794:	e3a00000 	mov	r0, #0
40010798:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4001079c:	e5940020 	ldr	r0, [r4, #32]
400107a0:	e3500002 	cmp	r0, #2
400107a4:	1a00000c 	bne	400107dc <_tx_mutex_prioritize+0x148>
400107a8:	e594001c 	ldr	r0, [r4, #28]
400107ac:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400107b0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400107b4:	e594101c 	ldr	r1, [r4, #28]
400107b8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400107bc:	e1500001 	cmp	r0, r1
400107c0:	2a000002 	bcs	400107d0 <_tx_mutex_prioritize+0x13c>
400107c4:	e594001c 	ldr	r0, [r4, #28]
400107c8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400107cc:	e584001c 	str	r0, [r4, #28]
400107d0:	e121f005 	msr	CPSR_c, r5
400107d4:	e3a00000 	mov	r0, #0
400107d8:	eaffffee 	b	40010798 <_tx_mutex_prioritize+0x104>
400107dc:	e594901c 	ldr	r9, [r4, #28]
400107e0:	e5940020 	ldr	r0, [r4, #32]
400107e4:	e58d0000 	str	r0, [sp]
400107e8:	e594801c 	ldr	r8, [r4, #28]
400107ec:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400107f0:	e59f010c 	ldr	r0, [pc, #268]	; 40010904 <_tx_mutex_prioritize+0x270>
400107f4:	e5900000 	ldr	r0, [r0]
400107f8:	e2800001 	add	r0, r0, #1
400107fc:	e59f1100 	ldr	r1, [pc, #256]	; 40010904 <_tx_mutex_prioritize+0x270>
40010800:	e5810000 	str	r0, [r1]
40010804:	e1a00000 	nop			; (mov r0, r0)
40010808:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001080c:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010810:	e1500001 	cmp	r0, r1
40010814:	2a000000 	bcs	4001081c <_tx_mutex_prioritize+0x188>
40010818:	e1a08007 	mov	r8, r7
4001081c:	e121f005 	msr	CPSR_c, r5
40010820:	e10f5000 	mrs	r5, CPSR
40010824:	e3856080 	orr	r6, r5, #128	; 0x80
40010828:	e121f006 	msr	CPSR_c, r6
4001082c:	e594001c 	ldr	r0, [r4, #28]
40010830:	e1500009 	cmp	r0, r9
40010834:	1a000005 	bne	40010850 <_tx_mutex_prioritize+0x1bc>
40010838:	e5940020 	ldr	r0, [r4, #32]
4001083c:	e59d1000 	ldr	r1, [sp]
40010840:	e1500001 	cmp	r0, r1
40010844:	1a000001 	bne	40010850 <_tx_mutex_prioritize+0x1bc>
40010848:	e5977070 	ldr	r7, [r7, #112]	; 0x70
4001084c:	ea000004 	b	40010864 <_tx_mutex_prioritize+0x1d0>
40010850:	e594901c 	ldr	r9, [r4, #28]
40010854:	e5940020 	ldr	r0, [r4, #32]
40010858:	e58d0000 	str	r0, [sp]
4001085c:	e594801c 	ldr	r8, [r4, #28]
40010860:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010864:	e594001c 	ldr	r0, [r4, #28]
40010868:	e1500007 	cmp	r0, r7
4001086c:	1affffe5 	bne	40010808 <_tx_mutex_prioritize+0x174>
40010870:	e59f008c 	ldr	r0, [pc, #140]	; 40010904 <_tx_mutex_prioritize+0x270>
40010874:	e5900000 	ldr	r0, [r0]
40010878:	e2400001 	sub	r0, r0, #1
4001087c:	e59f1080 	ldr	r1, [pc, #128]	; 40010904 <_tx_mutex_prioritize+0x270>
40010880:	e5810000 	str	r0, [r1]
40010884:	e594001c 	ldr	r0, [r4, #28]
40010888:	e1500008 	cmp	r0, r8
4001088c:	0a000010 	beq	400108d4 <_tx_mutex_prioritize+0x240>
40010890:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010894:	e5981070 	ldr	r1, [r8, #112]	; 0x70
40010898:	e5810074 	str	r0, [r1, #116]	; 0x74
4001089c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
400108a0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
400108a4:	e5810070 	str	r0, [r1, #112]	; 0x70
400108a8:	e594001c 	ldr	r0, [r4, #28]
400108ac:	e5880070 	str	r0, [r8, #112]	; 0x70
400108b0:	e594001c 	ldr	r0, [r4, #28]
400108b4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400108b8:	e5880074 	str	r0, [r8, #116]	; 0x74
400108bc:	e594001c 	ldr	r0, [r4, #28]
400108c0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400108c4:	e5808070 	str	r8, [r0, #112]	; 0x70
400108c8:	e594001c 	ldr	r0, [r4, #28]
400108cc:	e5808074 	str	r8, [r0, #116]	; 0x74
400108d0:	e584801c 	str	r8, [r4, #28]
400108d4:	e121f005 	msr	CPSR_c, r5
400108d8:	ebfffad5 	bl	4000f434 <_tx_thread_system_preempt_check>
400108dc:	e3a00000 	mov	r0, #0
400108e0:	eaffffac 	b	40010798 <_tx_mutex_prioritize+0x104>
400108e4:	40030ea0 	.word	0x40030ea0
400108e8:	40030ea4 	.word	0x40030ea4
400108ec:	40030e2c 	.word	0x40030e2c
400108f0:	40030e34 	.word	0x40030e34
400108f4:	f0f0f0f0 	.word	0xf0f0f0f0
400108f8:	40030e9c 	.word	0x40030e9c
400108fc:	40030e98 	.word	0x40030e98
40010900:	40030e8c 	.word	0x40030e8c
40010904:	40030e50 	.word	0x40030e50

40010908 <_tx_queue_cleanup>:
40010908:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001090c:	e1a04000 	mov	r4, r0
40010910:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010914:	e10f5000 	mrs	r5, CPSR
40010918:	e3856080 	orr	r6, r5, #128	; 0x80
4001091c:	e121f006 	msr	CPSR_c, r6
40010920:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010924:	e3500000 	cmp	r0, #0
40010928:	0a00002c 	beq	400109e0 <_tx_queue_cleanup+0xd8>
4001092c:	e3570000 	cmp	r7, #0
40010930:	0a00002a 	beq	400109e0 <_tx_queue_cleanup+0xd8>
40010934:	e5970000 	ldr	r0, [r7]
40010938:	e59f10a8 	ldr	r1, [pc, #168]	; 400109e8 <_tx_queue_cleanup+0xe0>
4001093c:	e1500001 	cmp	r0, r1
40010940:	1a000026 	bne	400109e0 <_tx_queue_cleanup+0xd8>
40010944:	e3a00000 	mov	r0, #0
40010948:	e5840068 	str	r0, [r4, #104]	; 0x68
4001094c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010950:	e1500004 	cmp	r0, r4
40010954:	1a000002 	bne	40010964 <_tx_queue_cleanup+0x5c>
40010958:	e3a00000 	mov	r0, #0
4001095c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010960:	ea000007 	b	40010984 <_tx_queue_cleanup+0x7c>
40010964:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010968:	e5870028 	str	r0, [r7, #40]	; 0x28
4001096c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010970:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010974:	e5810074 	str	r0, [r1, #116]	; 0x74
40010978:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001097c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010980:	e5810070 	str	r0, [r1, #112]	; 0x70
40010984:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010988:	e2400001 	sub	r0, r0, #1
4001098c:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010990:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010994:	e3500005 	cmp	r0, #5
40010998:	1a000010 	bne	400109e0 <_tx_queue_cleanup+0xd8>
4001099c:	e5970010 	ldr	r0, [r7, #16]
400109a0:	e3500000 	cmp	r0, #0
400109a4:	0a000002 	beq	400109b4 <_tx_queue_cleanup+0xac>
400109a8:	e3a0000b 	mov	r0, #11
400109ac:	e5840084 	str	r0, [r4, #132]	; 0x84
400109b0:	ea000001 	b	400109bc <_tx_queue_cleanup+0xb4>
400109b4:	e3a0000a 	mov	r0, #10
400109b8:	e5840084 	str	r0, [r4, #132]	; 0x84
400109bc:	e59f0028 	ldr	r0, [pc, #40]	; 400109ec <_tx_queue_cleanup+0xe4>
400109c0:	e5900000 	ldr	r0, [r0]
400109c4:	e2800001 	add	r0, r0, #1
400109c8:	e59f101c 	ldr	r1, [pc, #28]	; 400109ec <_tx_queue_cleanup+0xe4>
400109cc:	e5810000 	str	r0, [r1]
400109d0:	e121f005 	msr	CPSR_c, r5
400109d4:	e1a00004 	mov	r0, r4
400109d8:	ebfffac1 	bl	4000f4e4 <_tx_thread_system_resume>
400109dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400109e0:	e121f005 	msr	CPSR_c, r5
400109e4:	eafffffc 	b	400109dc <_tx_queue_cleanup+0xd4>
400109e8:	51554555 	.word	0x51554555
400109ec:	40030e50 	.word	0x40030e50

400109f0 <strcpy>:
400109f0:	e0202001 	eor	r2, r0, r1
400109f4:	e1a0c000 	mov	ip, r0
400109f8:	e3120003 	tst	r2, #3
400109fc:	1a000032 	bne	40010acc <strcpy+0xdc>
40010a00:	e3110003 	tst	r1, #3
40010a04:	1a000021 	bne	40010a90 <strcpy+0xa0>
40010a08:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
40010a0c:	e3a05001 	mov	r5, #1
40010a10:	e1855405 	orr	r5, r5, r5, lsl #8
40010a14:	e1855805 	orr	r5, r5, r5, lsl #16
40010a18:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
40010a1c:	e3110004 	tst	r1, #4
40010a20:	e4913004 	ldr	r3, [r1], #4
40010a24:	0a000005 	beq	40010a40 <strcpy+0x50>
40010a28:	e0432005 	sub	r2, r3, r5
40010a2c:	e1d22003 	bics	r2, r2, r3
40010a30:	e1120385 	tst	r2, r5, lsl #7
40010a34:	048c3004 	streq	r3, [ip], #4
40010a38:	04913004 	ldreq	r3, [r1], #4
40010a3c:	1a00000c 	bne	40010a74 <strcpy+0x84>
40010a40:	e4914004 	ldr	r4, [r1], #4
40010a44:	e0432005 	sub	r2, r3, r5
40010a48:	e1d22003 	bics	r2, r2, r3
40010a4c:	e1120385 	tst	r2, r5, lsl #7
40010a50:	e0442005 	sub	r2, r4, r5
40010a54:	1a000006 	bne	40010a74 <strcpy+0x84>
40010a58:	e48c3004 	str	r3, [ip], #4
40010a5c:	e1d22004 	bics	r2, r2, r4
40010a60:	e1120385 	tst	r2, r5, lsl #7
40010a64:	04913004 	ldreq	r3, [r1], #4
40010a68:	048c4004 	streq	r4, [ip], #4
40010a6c:	0afffff3 	beq	40010a40 <strcpy+0x50>
40010a70:	e1a03004 	mov	r3, r4
40010a74:	e4cc3001 	strb	r3, [ip], #1
40010a78:	e31300ff 	tst	r3, #255	; 0xff
40010a7c:	e1a03463 	ror	r3, r3, #8
40010a80:	1afffffb 	bne	40010a74 <strcpy+0x84>
40010a84:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010a88:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010a8c:	e12fff1e 	bx	lr
40010a90:	e3110001 	tst	r1, #1
40010a94:	0a000003 	beq	40010aa8 <strcpy+0xb8>
40010a98:	e4d12001 	ldrb	r2, [r1], #1
40010a9c:	e4cc2001 	strb	r2, [ip], #1
40010aa0:	e3520000 	cmp	r2, #0
40010aa4:	012fff1e 	bxeq	lr
40010aa8:	e3110002 	tst	r1, #2
40010aac:	0affffd5 	beq	40010a08 <strcpy+0x18>
40010ab0:	e0d120b2 	ldrh	r2, [r1], #2
40010ab4:	e31200ff 	tst	r2, #255	; 0xff
40010ab8:	10cc20b2 	strhne	r2, [ip], #2
40010abc:	05cc2000 	strbeq	r2, [ip]
40010ac0:	13120cff 	tstne	r2, #65280	; 0xff00
40010ac4:	1affffcf 	bne	40010a08 <strcpy+0x18>
40010ac8:	e12fff1e 	bx	lr
40010acc:	e4d12001 	ldrb	r2, [r1], #1
40010ad0:	e4cc2001 	strb	r2, [ip], #1
40010ad4:	e3520000 	cmp	r2, #0
40010ad8:	1afffffb 	bne	40010acc <strcpy+0xdc>
40010adc:	e12fff1e 	bx	lr

40010ae0 <strlen>:
40010ae0:	e3c01003 	bic	r1, r0, #3
40010ae4:	e2100003 	ands	r0, r0, #3
40010ae8:	e2600000 	rsb	r0, r0, #0
40010aec:	e4913004 	ldr	r3, [r1], #4
40010af0:	e280c004 	add	ip, r0, #4
40010af4:	e1a0c18c 	lsl	ip, ip, #3
40010af8:	e3e02000 	mvn	r2, #0
40010afc:	11833c32 	orrne	r3, r3, r2, lsr ip
40010b00:	e3a0c001 	mov	ip, #1
40010b04:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010b08:	e18cc80c 	orr	ip, ip, ip, lsl #16
40010b0c:	e043200c 	sub	r2, r3, ip
40010b10:	e1c22003 	bic	r2, r2, r3
40010b14:	e012238c 	ands	r2, r2, ip, lsl #7
40010b18:	04913004 	ldreq	r3, [r1], #4
40010b1c:	02800004 	addeq	r0, r0, #4
40010b20:	0afffff9 	beq	40010b0c <strlen+0x2c>
40010b24:	e31300ff 	tst	r3, #255	; 0xff
40010b28:	12800001 	addne	r0, r0, #1
40010b2c:	13130cff 	tstne	r3, #65280	; 0xff00
40010b30:	12800001 	addne	r0, r0, #1
40010b34:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010b38:	12800001 	addne	r0, r0, #1
40010b3c:	e12fff1e 	bx	lr

40010b40 <__aeabi_uidiv>:
40010b40:	e2512001 	subs	r2, r1, #1
40010b44:	012fff1e 	bxeq	lr
40010b48:	3a000036 	bcc	40010c28 <__aeabi_uidiv+0xe8>
40010b4c:	e1500001 	cmp	r0, r1
40010b50:	9a000022 	bls	40010be0 <__aeabi_uidiv+0xa0>
40010b54:	e1110002 	tst	r1, r2
40010b58:	0a000023 	beq	40010bec <__aeabi_uidiv+0xac>
40010b5c:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010b60:	01a01181 	lsleq	r1, r1, #3
40010b64:	03a03008 	moveq	r3, #8
40010b68:	13a03001 	movne	r3, #1
40010b6c:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010b70:	31510000 	cmpcc	r1, r0
40010b74:	31a01201 	lslcc	r1, r1, #4
40010b78:	31a03203 	lslcc	r3, r3, #4
40010b7c:	3afffffa 	bcc	40010b6c <__aeabi_uidiv+0x2c>
40010b80:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010b84:	31510000 	cmpcc	r1, r0
40010b88:	31a01081 	lslcc	r1, r1, #1
40010b8c:	31a03083 	lslcc	r3, r3, #1
40010b90:	3afffffa 	bcc	40010b80 <__aeabi_uidiv+0x40>
40010b94:	e3a02000 	mov	r2, #0
40010b98:	e1500001 	cmp	r0, r1
40010b9c:	20400001 	subcs	r0, r0, r1
40010ba0:	21822003 	orrcs	r2, r2, r3
40010ba4:	e15000a1 	cmp	r0, r1, lsr #1
40010ba8:	204000a1 	subcs	r0, r0, r1, lsr #1
40010bac:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010bb0:	e1500121 	cmp	r0, r1, lsr #2
40010bb4:	20400121 	subcs	r0, r0, r1, lsr #2
40010bb8:	21822123 	orrcs	r2, r2, r3, lsr #2
40010bbc:	e15001a1 	cmp	r0, r1, lsr #3
40010bc0:	204001a1 	subcs	r0, r0, r1, lsr #3
40010bc4:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010bc8:	e3500000 	cmp	r0, #0
40010bcc:	11b03223 	lsrsne	r3, r3, #4
40010bd0:	11a01221 	lsrne	r1, r1, #4
40010bd4:	1affffef 	bne	40010b98 <__aeabi_uidiv+0x58>
40010bd8:	e1a00002 	mov	r0, r2
40010bdc:	e12fff1e 	bx	lr
40010be0:	03a00001 	moveq	r0, #1
40010be4:	13a00000 	movne	r0, #0
40010be8:	e12fff1e 	bx	lr
40010bec:	e3510801 	cmp	r1, #65536	; 0x10000
40010bf0:	21a01821 	lsrcs	r1, r1, #16
40010bf4:	23a02010 	movcs	r2, #16
40010bf8:	33a02000 	movcc	r2, #0
40010bfc:	e3510c01 	cmp	r1, #256	; 0x100
40010c00:	21a01421 	lsrcs	r1, r1, #8
40010c04:	22822008 	addcs	r2, r2, #8
40010c08:	e3510010 	cmp	r1, #16
40010c0c:	21a01221 	lsrcs	r1, r1, #4
40010c10:	22822004 	addcs	r2, r2, #4
40010c14:	e3510004 	cmp	r1, #4
40010c18:	82822003 	addhi	r2, r2, #3
40010c1c:	908220a1 	addls	r2, r2, r1, lsr #1
40010c20:	e1a00230 	lsr	r0, r0, r2
40010c24:	e12fff1e 	bx	lr
40010c28:	e3500000 	cmp	r0, #0
40010c2c:	13e00000 	mvnne	r0, #0
40010c30:	ea000059 	b	40010d9c <__aeabi_idiv0>

40010c34 <__aeabi_uidivmod>:
40010c34:	e3510000 	cmp	r1, #0
40010c38:	0afffffa 	beq	40010c28 <__aeabi_uidiv+0xe8>
40010c3c:	e92d4003 	push	{r0, r1, lr}
40010c40:	ebffffbe 	bl	40010b40 <__aeabi_uidiv>
40010c44:	e8bd4006 	pop	{r1, r2, lr}
40010c48:	e0030092 	mul	r3, r2, r0
40010c4c:	e0411003 	sub	r1, r1, r3
40010c50:	e12fff1e 	bx	lr

40010c54 <__aeabi_idiv>:
40010c54:	e3510000 	cmp	r1, #0
40010c58:	0a000043 	beq	40010d6c <.divsi3_skip_div0_test+0x110>

40010c5c <.divsi3_skip_div0_test>:
40010c5c:	e020c001 	eor	ip, r0, r1
40010c60:	42611000 	rsbmi	r1, r1, #0
40010c64:	e2512001 	subs	r2, r1, #1
40010c68:	0a000027 	beq	40010d0c <.divsi3_skip_div0_test+0xb0>
40010c6c:	e1b03000 	movs	r3, r0
40010c70:	42603000 	rsbmi	r3, r0, #0
40010c74:	e1530001 	cmp	r3, r1
40010c78:	9a000026 	bls	40010d18 <.divsi3_skip_div0_test+0xbc>
40010c7c:	e1110002 	tst	r1, r2
40010c80:	0a000028 	beq	40010d28 <.divsi3_skip_div0_test+0xcc>
40010c84:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010c88:	01a01181 	lsleq	r1, r1, #3
40010c8c:	03a02008 	moveq	r2, #8
40010c90:	13a02001 	movne	r2, #1
40010c94:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010c98:	31510003 	cmpcc	r1, r3
40010c9c:	31a01201 	lslcc	r1, r1, #4
40010ca0:	31a02202 	lslcc	r2, r2, #4
40010ca4:	3afffffa 	bcc	40010c94 <.divsi3_skip_div0_test+0x38>
40010ca8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010cac:	31510003 	cmpcc	r1, r3
40010cb0:	31a01081 	lslcc	r1, r1, #1
40010cb4:	31a02082 	lslcc	r2, r2, #1
40010cb8:	3afffffa 	bcc	40010ca8 <.divsi3_skip_div0_test+0x4c>
40010cbc:	e3a00000 	mov	r0, #0
40010cc0:	e1530001 	cmp	r3, r1
40010cc4:	20433001 	subcs	r3, r3, r1
40010cc8:	21800002 	orrcs	r0, r0, r2
40010ccc:	e15300a1 	cmp	r3, r1, lsr #1
40010cd0:	204330a1 	subcs	r3, r3, r1, lsr #1
40010cd4:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010cd8:	e1530121 	cmp	r3, r1, lsr #2
40010cdc:	20433121 	subcs	r3, r3, r1, lsr #2
40010ce0:	21800122 	orrcs	r0, r0, r2, lsr #2
40010ce4:	e15301a1 	cmp	r3, r1, lsr #3
40010ce8:	204331a1 	subcs	r3, r3, r1, lsr #3
40010cec:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010cf0:	e3530000 	cmp	r3, #0
40010cf4:	11b02222 	lsrsne	r2, r2, #4
40010cf8:	11a01221 	lsrne	r1, r1, #4
40010cfc:	1affffef 	bne	40010cc0 <.divsi3_skip_div0_test+0x64>
40010d00:	e35c0000 	cmp	ip, #0
40010d04:	42600000 	rsbmi	r0, r0, #0
40010d08:	e12fff1e 	bx	lr
40010d0c:	e13c0000 	teq	ip, r0
40010d10:	42600000 	rsbmi	r0, r0, #0
40010d14:	e12fff1e 	bx	lr
40010d18:	33a00000 	movcc	r0, #0
40010d1c:	01a00fcc 	asreq	r0, ip, #31
40010d20:	03800001 	orreq	r0, r0, #1
40010d24:	e12fff1e 	bx	lr
40010d28:	e3510801 	cmp	r1, #65536	; 0x10000
40010d2c:	21a01821 	lsrcs	r1, r1, #16
40010d30:	23a02010 	movcs	r2, #16
40010d34:	33a02000 	movcc	r2, #0
40010d38:	e3510c01 	cmp	r1, #256	; 0x100
40010d3c:	21a01421 	lsrcs	r1, r1, #8
40010d40:	22822008 	addcs	r2, r2, #8
40010d44:	e3510010 	cmp	r1, #16
40010d48:	21a01221 	lsrcs	r1, r1, #4
40010d4c:	22822004 	addcs	r2, r2, #4
40010d50:	e3510004 	cmp	r1, #4
40010d54:	82822003 	addhi	r2, r2, #3
40010d58:	908220a1 	addls	r2, r2, r1, lsr #1
40010d5c:	e35c0000 	cmp	ip, #0
40010d60:	e1a00233 	lsr	r0, r3, r2
40010d64:	42600000 	rsbmi	r0, r0, #0
40010d68:	e12fff1e 	bx	lr
40010d6c:	e3500000 	cmp	r0, #0
40010d70:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010d74:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010d78:	ea000007 	b	40010d9c <__aeabi_idiv0>

40010d7c <__aeabi_idivmod>:
40010d7c:	e3510000 	cmp	r1, #0
40010d80:	0afffff9 	beq	40010d6c <.divsi3_skip_div0_test+0x110>
40010d84:	e92d4003 	push	{r0, r1, lr}
40010d88:	ebffffb3 	bl	40010c5c <.divsi3_skip_div0_test>
40010d8c:	e8bd4006 	pop	{r1, r2, lr}
40010d90:	e0030092 	mul	r3, r2, r0
40010d94:	e0411003 	sub	r1, r1, r3
40010d98:	e12fff1e 	bx	lr

40010d9c <__aeabi_idiv0>:
40010d9c:	e12fff1e 	bx	lr

40010da0 <DelayArray>:
40010da0:	010402bc 01040104 010402bc 01040104     ................
40010db0:	01040104 01040104 01040104 01040104     ................
40010dc0:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010dd0:	02bc0104 010402bc 010402bc 010401f4     ................
40010de0:	01040104 01900190 01040190 01040104     ................
40010df0:	01040104 01040104 00000000 00000000     ................
	...
40010e20:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010e30:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010e40:	75657551 73252065 61747320 25206574     Queue %s state %
40010e50:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010e60:	68632065 206b6365 75657571 20444965     e check queueID 
40010e70:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010e80:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010e90:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010ea0:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010eb0:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010ec0:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010ed0:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010ee0:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010ef0:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010f00:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010f10:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010f20:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010f30:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010f40:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010f50:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010f60:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010f70:	00000a0d                                ....

40010f74 <CyFxUSBDeviceDscr>:
40010f74:	02000112 400102ef 30621bbd 02010000     .......@..b0....
40010f84:	00000100                                ....

40010f88 <CyFxUSBDeviceDscrSS>:
40010f88:	03000112 090102ef 30621bbd 02010000     ..........b0....
40010f98:	00000100                                ....

40010f9c <CyFxUSBDeviceQualDscr>:
40010f9c:	0200060a 400102ef 00000001              .......@....

40010fa8 <CyFxUSBFSConfigDscr>:
40010fa8:	00090209 80000100 00000032              ........2...

40010fb4 <CyFxUSBHSConfigDscr>:
40010fb4:	00ff0209 80000102 000b08fa 00030e02     ................
40010fc4:	00040900 010e0100 240d0000 50010001     ...........$...P
40010fd4:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010fe4:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010ff4:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40011004:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40011014:	03240900 00010104 05070003 04000382     ..$.............
40011024:	03250501 04090040 0e010001 0e000002     ..%.@...........
40011034:	79010124 04008300 01010102 04241b00     $..y..........$.
40011044:	55590201 00003259 00800010 3800aa00     ..YUY2.........8
40011054:	0110719b 00000608 0105241e e0028002     .q.......$......
40011064:	d4e00001 d4e0000e 0fd2000e 05161500     ................
40011074:	16150100 241e0005 80020205 00016802     .......$.....h..
40011084:	000ed4e0 000ed4e0 15000fd2 01000516     ................
40011094:	00051615 0003240e 68028002 e0028001     .....$.....h....
400110a4:	24060001 0000000d 02830507 00010200     ...$............

400110b4 <CyFxUSBBOSDscr>:
400110b4:	00160f05 02100702 00000000 0003100a     ................
400110c4:	0003000e 00000000                       ........

400110cc <CyFxUSBSSConfigDscr>:
400110cc:	010b0209 80000102 000b0864 00030e02     ........d.......
400110dc:	00040900 010e0100 240d0000 50010001     ...........$...P
400110ec:	6cf71000 12010104 01010224 64000002     ...l....$......d
400110fc:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
4001110c:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
4001111c:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
4001112c:	03240900 00010104 05070003 04000382     ..$.............
4001113c:	00300601 05040000 00400325 00010409     ..0.....%.@.....
4001114c:	00020e01 01240e00 83007901 01020400     ......$..y......
4001115c:	1b000101 02010424 32595559 00100000     ....$...YUY2....
4001116c:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
4001117c:	00020105 0003c005 00317040 003b5380     ........@p1..S;.
4001118c:	0a001fa4 0100028b 00028b0a 0205241e     .............$..
4001119c:	d0050002 bc000002 bc000034 99c60034     ........4...4...
400111ac:	028b0a00 8b0a0100 240e0002 00020003     ...........$....
400111bc:	0002d005 0003c005 000d2406 05070000     .........$......
400111cc:	04000283 0f300601 00000000              ......0.....

400111d8 <CyFxUSBStringLangIDDscr>:
400111d8:	04090304                                ....

400111dc <CyFxUSBManufactureDscr>:
400111dc:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
400111ec:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
400111fc:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
4001120c:	006f0069 0073006e                       i.o.n.s.

40011214 <CyFxUSBProductDscr>:
40011214:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40011224:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40011234:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40011244:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40011254:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40011264:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40011274:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40011284:	64612065 73657264 73692073 746f6e20     e address is not
40011294:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
400112a4:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
400112b4:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
400112c4:	74655320 6c615620 45206575 726f7272      Set Value Error
400112d4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400112e4:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
400112f4:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40011304:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40011314:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011324:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011334:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011344:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011354:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011364:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011374:	00000a0d                                ....

40011378 <ExTime>:
40011378:	004e009c 00140027 0005000a 00010002     ..N.'...........

40011388 <CyFxGpifConfig>:
40011388:	0000000f 40030650 40030770 00000005     ....P..@p..@....
40011398:	40030644 0000004c 40030780              D..@L......@

400113a4 <CyFxGpifConfig_usb2>:
400113a4:	00000093 400308c0 40030a70 00000008     .......@p..@....
400113b4:	400308b0 0000004c 40030b04 20433249     ...@L......@I2C 
400113c4:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
400113d4:	20656854 6d6d6f63 20646e61 75657571     The command queu
400113e4:	73692065 61657220 25207964 64252064     e is ready %d %d
400113f4:	00000a0d 45534552 6e652054 6e756f63     ....RESET encoun
40011404:	65726574 2e2e2e64 78257830 25783020     tered...0x%x 0x%
40011414:	000a0d78 50535553 20444e45 6f636e65     x...SUSPEND enco
40011424:	65746e75 2e646572 78302e2e 30207825     untered...0x%x 0
40011434:	0d782578 0000000a 20425355 63736964     x%x.....USB disc
40011444:	656e6e6f 64657463 302e2e2e 20782578     onnected...0x%x 
40011454:	78257830 00000a0d 6f727245 6e692072     0x%x....Error in
40011464:	6c756d20 68636974 656e6e61 6d6f636c      multichannelcom
40011474:	6274696d 65666675 43203a72 2065646f     mitbuffer: Code 
40011484:	6425203d 6973202c 3d20657a 2c782520     = %d, size = %x,
40011494:	616d6420 656e6f44 0d782520 0000000a      dmaDone %x.....
400114a4:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
400114b4:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
400114c4:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
400114d4:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
400114e4:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
400114f4:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
40011504:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
40011514:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
40011524:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
40011534:	65722065 73657571 65642074 74636574     e request detect
40011544:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
40011554:	666f6574 61747320 3d206574 00642520     teof state = %d.
40011564:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
40011574:	66207055 656c6961 45202c64 726f7272     Up failed, Error
40011584:	646f6320 203d2065 0a0d6425 00000000      code = %d......
40011594:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
400115a4:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
400115b4:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
400115c4:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
400115d4:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
400115e4:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
400115f4:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
40011604:	000a0d78 6b636162 67696c20 63207468     x...back light c
40011614:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
40011624:	20676e69 6e207369 6320746f 6572726f     ing is not corre
40011634:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
40011644:	20433249 72727563 20746e65 61746164     I2C current data
40011654:	20736920 20746f6e 69617661 6c62616c      is not availabl
40011664:	74202e65 61207972 6e696167 6425202e     e. try again. %d
40011674:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011684:	6e657320 6f742074 736f6820 25202e74      sent to host. %
40011694:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
400116a4:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
400116b4:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
400116c4:	6425203b 0d642520 0000000a 20657845     ; %d %d.....Exe 
400116d4:	6576656c 25202e6c 64252064 6425203b     level. %d %d; %d
400116e4:	0d642520 0000000a 20434c42 2e746573      %d.....BLC set.
400116f4:	20642520 203b6425 25206425 000a0d64      %d %d; %d %d...
40011704:	20656854 20746567 61746164 6f726620     The get data fro
40011714:	6f68206d 66207473 206c6961 6f727265     m host fail erro
40011724:	6f632072 25206564 0a0d2e64 00000000     r code %d.......
40011734:	20656854 75716552 20747365 78257830     The Request 0x%x
40011744:	72617020 74656d61 67207265 66207465      parameter get f
40011754:	206d6f72 74736f68 25783020 78302078     rom host 0x%x 0x
40011764:	2f207825 6e657320 6f742064 736f6820     %x / send to hos
40011774:	78302074 30207825 0d782578 0000000a     t 0x%x 0x%x.....
40011784:	6d6f6f5a 20704f20 65636572 73657669     Zoom Op receives
40011794:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
400117a4:	78257830 00000a0d 61666564 20746c75     0x%x....default 
400117b4:	656c6573 726f7463 54432820 78302029     selector (CT) 0x
400117c4:	30207825 0d782578 0000000a 61666564     %x 0x%x.....defa
400117d4:	20746c75 75716572 20747365 29544328     ult request (CT)
400117e4:	25783020 78302078 0a0d7825 00000000      0x%x 0x%x......
400117f4:	20656854 75716552 20747365 78257830     The Request 0x%x
40011804:	72617020 74656d61 67207265 66207465      parameter get f
40011814:	206d6f72 74736f68 54432820 78302029     rom host (CT) 0x
40011824:	30207825 20782578 78257830 73202f20     %x 0x%x 0x%x / s
40011834:	20646e65 68206f74 2074736f 78257830     end to host 0x%x
40011844:	25783020 78302078 202c7825 0a0d6425      0x%x 0x%x, %d..
40011854:	00000000 20425355 65657073 203d2064     ....USB speed = 
40011864:	65206425 666e6576 2067616c 7830203d     %d evenflag = 0x
40011874:	62207825 7165526d 65707954 30203d20     %x bmReqType = 0
40011884:	0d782578 6552620a 73657571 203d2074     x%x..bRequest = 
40011894:	78257830 61567720 2065756c 7830203d     0x%x wValue = 0x
400118a4:	77207825 65646e49 203d2078 78257830     %x wIndex = 0x%x
400118b4:	654c7720 6874676e 30203d20 20782578      wLength = 0x%x 
400118c4:	6c667369 30206761 0d782578 0000000a     isflag 0x%x.....
400118d4:	20656854 61666564 20746c75 75746573     The default setu
400118e4:	65722070 73657571 61762074 2065756c     p request value 
400118f4:	78257830 25783020 000a0d78 20746547     0x%x 0x%x...Get 
40011904:	20435655 626f7250 74657328 6f632029     UVC Prob(set) co
40011914:	6f72746e 6425206c 20642520 0a0d6425     ntrol %d %d %d..
40011924:	00000000 20746553 20656874 65646976     ....Set the vide
40011934:	6f6d206f 66206564 616d726f 78252074     o mode format %x
40011944:	0a642520 00000000 20746553 20656874      %d.....Set the 
40011954:	65646976 6f6d206f 66206564 616d726f     video mode forma
40011964:	65732074 73655274 0a642520 00000000     t setRes %d.....
40011974:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011984:	4d414552 4556455f 6620544e 656c6961     REAM_EVENT faile
40011994:	78252064 0000000a 20746547 20435655     d %x....Get UVC 
400119a4:	6c697473 7250206c 7328626f 20297465     still Prob(set) 
400119b4:	746e6f63 206c6f72 25206425 64252064     control %d %d %d
400119c4:	00000a0d 20746553 20656874 6c697473     ....Set the stil
400119d4:	6f6d206c 66206564 616d726f 78252074     l mode format %x
400119e4:	0a642520 00000000 20435655 6c697473      %d.....UVC stil
400119f4:	6f63206c 74696d6d 6e6f6320 6c6f7274     l commit control
40011a04:	74657320 20642520 25206425 000a0d64      set %d %d %d...
40011a14:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011a24:	455f4c49 544e4556 69616620 2064656c     IL_EVENT failed 
40011a34:	000a7825 20746547 20435655 6c697473     %x..Get UVC stil
40011a44:	7274206c 65676769 6f632072 6f72746e     l trigger contro
40011a54:	6425206c 20642520 0a0d6425 00000000     l %d %d %d......
40011a64:	20435655 6c697473 7274206c 65676769     UVC still trigge
40011a74:	6f632072 6f72746e 6166206c 25206c69     r control fail %
40011a84:	64252064 00000a0d 6c696146 74206465     d %d....Failed t
40011a94:	6573206f 6920646e 7265746e 74707572     o send interrupt
40011aa4:	61747320 2c737574 72724520 6320726f      status, Error c
40011ab4:	2065646f 6425203d 00000a0d 20656854     ode = %d....The 
40011ac4:	20746573 20666564 61746164 25783020     set def data 0x%
40011ad4:	30202c78 2e782578 00000a0d 20656854     x, 0x%x.....The 
40011ae4:	20746573 20666564 61746164 25783020     set def data 0x%
40011af4:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
40011b04:	2c782578 25783020 30202c78 2e782578     x%x, 0x%x, 0x%x.
40011b14:	00000a0d 54524155 696e6920 6c616974     ....UART initial
40011b24:	74617a69 206e6f69 6c696166 0a216465     ization failed!.
40011b34:	00000000 20433249 74696e69 696c6169     ....I2C initiali
40011b44:	6974617a 66206e6f 656c6961 000a2164     zation failed!..
40011b54:	20433249 666e6f63 72756769 6f697461     I2C configuratio
40011b64:	6166206e 64656c69 00000a21 20435655     n failed!...UVC 
40011b74:	61657243 45206574 746e6576 69616620     Create Event fai
40011b84:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011b94:	6425203d 0000000a 4f495047 696e4920     = %d....GPIO Ini
40011ba4:	61662074 64656c69 7245202c 20726f72     t failed, Error 
40011bb4:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011bc4:	65764f20 64697272 61662065 64656c69      Override failed
40011bd4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011be4:	00000a64 4f495047 29303228 65764f20     d...GPIO(20) Ove
40011bf4:	64697272 61662065 64656c69 7245202c     rride failed, Er
40011c04:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011c14:	4f495047 29343228 65764f20 64697272     GPIO(24) Overrid
40011c24:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011c34:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011c44:	74655320 65722820 20746573 20293232      Set (reset 22) 
40011c54:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011c64:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011c74:	4f495047 74655320 6f702820 20726577     GPIO Set (power 
40011c84:	20293032 666e6f43 45206769 726f7272     20) Config Error
40011c94:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011ca4:	00000a64 4f495047 74655320 6e732820     d...GPIO Set (sn
40011cb4:	73207061 20746f68 20293432 666e6f43     ap shot 24) Conf
40011cc4:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011cd4:	65646f43 25203d20 00000a64 20424950     Code = %d...PIB 
40011ce4:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011cf4:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011d04:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011d14:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011d24:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011d34:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011d44:	20746553 70646e45 746e696f 6e6f6320     Set Endpoint con
40011d54:	20676966 6c696166 202c6465 6f727245     fig failed, Erro
40011d64:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011d74:	20414d44 65746e49 70757272 74532074     DMA Interrupt St
40011d84:	73757461 61684320 6c656e6e 65724320     atus Channel Cre
40011d94:	6f697461 6146206e 64656c69 7245202c     ation Failed, Er
40011da4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011db4:	6c696146 74206465 6c61206f 61636f6c     Failed to alloca
40011dc4:	6d206574 726f6d65 6f662079 6e692072     te memory for in
40011dd4:	72726574 20747075 74617473 62207375     terrupt status b
40011de4:	65666675 000a0d72 20414d44 6e616843     uffer...DMA Chan
40011df4:	206c656e 61657243 6e6f6974 69614620     nel Creation Fai
40011e04:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011e14:	6425203d 0000000a 20425355 6e6e6f43     = %d....USB Conn
40011e24:	20746365 6c696166 202c6465 6f727245     ect failed, Erro
40011e34:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011e44:	20746553 20656874 65646976 6f6d206f     Set the video mo
40011e54:	66206564 616d726f 25203174 64252078     de format1 %x %d
40011e64:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011e74:	65736552 61462074 64656c69 7245202c     Reset Failed, Er
40011e84:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011e94:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011ea4:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011eb4:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011ec4:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011ed4:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011ee4:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011ef4:	6425203d 00000a0d 73200a0d 72657075     = %d...... super
40011f04:	69706720 00000066 68200a0d 20686769      gpif..... high 
40011f14:	66697067 00000000 64616f4c 20676e69     gpif....Loading 
40011f24:	46495047 6e6f4320 75676966 69746172     GPIF Configurati
40011f34:	66206e6f 656c6961 45202c64 726f7272     on failed, Error
40011f44:	646f4320 203d2065 0a0d6425 00000000      Code = %d......
40011f54:	72617453 676e6974 49504720 74732046     Starting GPIF st
40011f64:	20657461 6863616d 20656e69 6c696166     ate machine fail
40011f74:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011f84:	0d642520 0000000a 553a3033 41204356      %d.....30:UVC A
40011f94:	54207070 61657268 00000064 553a3133     pp Thread...31:U
40011fa4:	41204356 45207070 54203050 61657268     VC App EP0 Threa
40011fb4:	00000064 493a3233 41204332 43207070     d...32:I2C App C
40011fc4:	204c5254 65726854 00006461              TRL Thread..

40011fd0 <glFx3PartProperties>:
40011fd0:	00000000 0000009f 00000010 0000009b     ................
40011fe0:	00000020 0000008f 00000030 0000008b      .......0.......
40011ff0:	00000004 000000ef 00000104 000000ef     ................
40012000:	00000184 000000af 00000154 000000e9     ........T.......
40012010:	000001d4 000000a9 10000004 000000ee     ................
40012020:	10000104 000000ee 10000184 000000ae     ................
40012030:	10000154 000000e8 100001d4 000000a8     T...............
40012040:	00000002 00000077 00000102 00000077     ....w.......w...
40012050:	000001c2 00000035 000001d2 00000031     ....5.......1...
40012060:	10000002 00000076 10000102 00000076     ....v.......v...
40012070:	100001c2 00000034 00000258 00000199     ....4...X.......
40012080:	00000248 0000019d 00000458 00000299     H.......X.......
40012090:	00000448 0000029d 00000848 0000049d     H.......H.......
400120a0:	10000448 0000029c                       H.......

400120a8 <glPmmcCsdValue>:
400120a8:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

400120b8 <glPmmcExtCsdValue>:
400120b8:	40040000 03020200 00000404 32321414     ...@..........22
400120c8:	00406464 00000000                       dd@.....

400120d0 <glConstGpifDefaults>:
400120d0:	00000220 00000000 00000000 00000000      ...............
400120e0:	000f0000 00000000 00000000 00000082     ................
400120f0:	00000782 00000000 00000000 00000000     ................
	...
40012144:	00000006 00000000 0000ffff 0000010a     ................
40012154:	00000000 0000ffff 00000000 0000ffff     ................
40012164:	0000010a 00000000 0000ffff 00000000     ................
	...
400121cc:	00010400 00010400 00010400 00010400     ................
400121dc:	10000000 00000000 00000000 00000000     ................
	...
400121fc:	00000001                                ....

40012200 <glGpifConstMaxState>:
40012200:	1f3f7fff                                ..?.

40012204 <CyU3PSSEpTypeMap>:
40012204:	01020003                                ....

40012208 <glUsbMaxPacketSize>:
40012208:	000003ff 00000040 00000040 00000400     ....@...@.......
40012218:	00000200 00000400 00000400 00000400     ................
40012228:	00000400                                ....

4001222c <glUsb3CompliancePatterns>:
4001222c:	00000600 0000044a 00000478 000005bc     ....J...x.......
4001223c:	00000c00 000005fc 000001fc 00001400     ................
4001224c:	00001000                                ....

40012250 <CyU3PFirmwareEntry>:
40012250:	e59f1038 	ldr	r1, [pc, #56]	; 40012290 <CyU3PFirmwareEntry+0x40>
40012254:	e3e00000 	mvn	r0, #0
40012258:	e5810000 	str	r0, [r1]
4001225c:	e59f1030 	ldr	r1, [pc, #48]	; 40012294 <CyU3PFirmwareEntry+0x44>
40012260:	e2411008 	sub	r1, r1, #8
40012264:	e3a02a01 	mov	r2, #4096	; 0x1000
40012268:	e3a000d3 	mov	r0, #211	; 0xd3
4001226c:	e121f000 	msr	CPSR_c, r0
40012270:	e0811002 	add	r1, r1, r2
40012274:	e3c11007 	bic	r1, r1, #7
40012278:	e1a0d001 	mov	sp, r1
4001227c:	eb000271 	bl	40012c48 <CyU3PSysSetupMMU>
40012280:	eb000620 	bl	40013b08 <CyU3PSysCheckBootState>
40012284:	eb000003 	bl	40012298 <CyU3PSetupStackPtrs>
40012288:	eb0000d1 	bl	400125d4 <__CyU3PEntryKeep>
4001228c:	eaffc4d7 	b	400035f0 <CyU3PToolChainInit>
40012290:	fffff014 	.word	0xfffff014
40012294:	40002000 	.word	0x40002000

40012298 <CyU3PSetupStackPtrs>:
40012298:	e3a01201 	mov	r1, #268435456	; 0x10000000
4001229c:	e2411008 	sub	r1, r1, #8
400122a0:	e3a02b02 	mov	r2, #2048	; 0x800
400122a4:	e3a030df 	mov	r3, #223	; 0xdf
400122a8:	e12ff003 	msr	CPSR_fsxc, r3
400122ac:	e0811002 	add	r1, r1, r2
400122b0:	e3c11007 	bic	r1, r1, #7
400122b4:	e1a0d001 	mov	sp, r1
400122b8:	e3a0a000 	mov	sl, #0
400122bc:	e3a0b000 	mov	fp, #0
400122c0:	e3a02c01 	mov	r2, #256	; 0x100
400122c4:	e3a030d7 	mov	r3, #215	; 0xd7
400122c8:	e12ff003 	msr	CPSR_fsxc, r3
400122cc:	e0811002 	add	r1, r1, r2
400122d0:	e3c11007 	bic	r1, r1, #7
400122d4:	e1a0d001 	mov	sp, r1
400122d8:	e3a0a000 	mov	sl, #0
400122dc:	e3a0b000 	mov	fp, #0
400122e0:	e3a02c01 	mov	r2, #256	; 0x100
400122e4:	e3a030db 	mov	r3, #219	; 0xdb
400122e8:	e12ff003 	msr	CPSR_fsxc, r3
400122ec:	e0811002 	add	r1, r1, r2
400122f0:	e3c11007 	bic	r1, r1, #7
400122f4:	e1a0d001 	mov	sp, r1
400122f8:	e3a0a000 	mov	sl, #0
400122fc:	e3a0b000 	mov	fp, #0
40012300:	e3a02c02 	mov	r2, #512	; 0x200
40012304:	e3a000d1 	mov	r0, #209	; 0xd1
40012308:	e121f000 	msr	CPSR_c, r0
4001230c:	e0811002 	add	r1, r1, r2
40012310:	e3c11007 	bic	r1, r1, #7
40012314:	e1a0d001 	mov	sp, r1
40012318:	e3a0a000 	mov	sl, #0
4001231c:	e3a0b000 	mov	fp, #0
40012320:	e3a02b01 	mov	r2, #1024	; 0x400
40012324:	e3a000d2 	mov	r0, #210	; 0xd2
40012328:	e121f000 	msr	CPSR_c, r0
4001232c:	e0811002 	add	r1, r1, r2
40012330:	e3c11007 	bic	r1, r1, #7
40012334:	e1a0d001 	mov	sp, r1
40012338:	e3a02a01 	mov	r2, #4096	; 0x1000
4001233c:	e3a000d3 	mov	r0, #211	; 0xd3
40012340:	e121f000 	msr	CPSR_c, r0
40012344:	e0811002 	add	r1, r1, r2
40012348:	e3c11007 	bic	r1, r1, #7
4001234c:	e1a0d001 	mov	sp, r1
40012350:	e12fff1e 	bx	lr

40012354 <CyU3PSysCleanDCache>:
40012354:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40012358:	1afffffd 	bne	40012354 <CyU3PSysCleanDCache>
4001235c:	e12fff1e 	bx	lr

40012360 <CyU3PSysClearDCache>:
40012360:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40012364:	1afffffd 	bne	40012360 <CyU3PSysClearDCache>
40012368:	e12fff1e 	bx	lr

4001236c <CyU3PSysFlushIRegion>:
4001236c:	e3510000 	cmp	r1, #0
40012370:	0a00000a 	beq	400123a0 <CyU3PSysFlushIRegion+0x34>
40012374:	e0801001 	add	r1, r0, r1
40012378:	e3c0001f 	bic	r0, r0, #31
4001237c:	e3a0201f 	mov	r2, #31
40012380:	e1110002 	tst	r1, r2
40012384:	e0411000 	sub	r1, r1, r0
40012388:	e1a012a1 	lsr	r1, r1, #5
4001238c:	12811001 	addne	r1, r1, #1
40012390:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012394:	e2800020 	add	r0, r0, #32
40012398:	e2511001 	subs	r1, r1, #1
4001239c:	1afffffb 	bne	40012390 <CyU3PSysFlushIRegion+0x24>
400123a0:	e12fff1e 	bx	lr

400123a4 <CyU3PSysClearDRegion>:
400123a4:	e3510000 	cmp	r1, #0
400123a8:	0a00000a 	beq	400123d8 <CyU3PSysClearDRegion+0x34>
400123ac:	e0801001 	add	r1, r0, r1
400123b0:	e3c0001f 	bic	r0, r0, #31
400123b4:	e3a0201f 	mov	r2, #31
400123b8:	e1110002 	tst	r1, r2
400123bc:	e0411000 	sub	r1, r1, r0
400123c0:	e1a012a1 	lsr	r1, r1, #5
400123c4:	12811001 	addne	r1, r1, #1
400123c8:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
400123cc:	e2800020 	add	r0, r0, #32
400123d0:	e2511001 	subs	r1, r1, #1
400123d4:	1afffffb 	bne	400123c8 <CyU3PSysClearDRegion+0x24>
400123d8:	e12fff1e 	bx	lr

400123dc <CyU3PSysCleanDRegion>:
400123dc:	e3510000 	cmp	r1, #0
400123e0:	0a00000a 	beq	40012410 <CyU3PSysCleanDRegion+0x34>
400123e4:	e0801001 	add	r1, r0, r1
400123e8:	e3c0001f 	bic	r0, r0, #31
400123ec:	e3a0201f 	mov	r2, #31
400123f0:	e1110002 	tst	r1, r2
400123f4:	e0411000 	sub	r1, r1, r0
400123f8:	e1a012a1 	lsr	r1, r1, #5
400123fc:	12811001 	addne	r1, r1, #1
40012400:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40012404:	e2800020 	add	r0, r0, #32
40012408:	e2511001 	subs	r1, r1, #1
4001240c:	1afffffb 	bne	40012400 <CyU3PSysCleanDRegion+0x24>
40012410:	e12fff1e 	bx	lr

40012414 <CyU3PSysFlushDRegion>:
40012414:	e3510000 	cmp	r1, #0
40012418:	0a00000a 	beq	40012448 <CyU3PSysFlushDRegion+0x34>
4001241c:	e0801001 	add	r1, r0, r1
40012420:	e3c0001f 	bic	r0, r0, #31
40012424:	e3a0201f 	mov	r2, #31
40012428:	e1110002 	tst	r1, r2
4001242c:	e0411000 	sub	r1, r1, r0
40012430:	e1a012a1 	lsr	r1, r1, #5
40012434:	12811001 	addne	r1, r1, #1
40012438:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
4001243c:	e2800020 	add	r0, r0, #32
40012440:	e2511001 	subs	r1, r1, #1
40012444:	1afffffb 	bne	40012438 <CyU3PSysFlushDRegion+0x24>
40012448:	e12fff1e 	bx	lr

4001244c <CyU3PSysCacheIRegion>:
4001244c:	e3a03000 	mov	r3, #0
40012450:	e3510000 	cmp	r1, #0
40012454:	0a000023 	beq	400124e8 <CyU3PSysCacheIRegion+0x9c>
40012458:	e0801001 	add	r1, r0, r1
4001245c:	e3c0001f 	bic	r0, r0, #31
40012460:	e3a0201f 	mov	r2, #31
40012464:	e1110002 	tst	r1, r2
40012468:	e0411000 	sub	r1, r1, r0
4001246c:	e1a012a1 	lsr	r1, r1, #5
40012470:	12811001 	addne	r1, r1, #1
40012474:	e351003f 	cmp	r1, #63	; 0x3f
40012478:	8a00001a 	bhi	400124e8 <CyU3PSysCacheIRegion+0x9c>
4001247c:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40012480:	e20c200f 	and	r2, ip, #15
40012484:	e3a03001 	mov	r3, #1
40012488:	e11c0003 	tst	ip, r3
4001248c:	11a03083 	lslne	r3, r3, #1
40012490:	111c0003 	tstne	ip, r3
40012494:	11a03083 	lslne	r3, r3, #1
40012498:	111c0003 	tstne	ip, r3
4001249c:	11a03083 	lslne	r3, r3, #1
400124a0:	1a000010 	bne	400124e8 <CyU3PSysCacheIRegion+0x9c>
400124a4:	e3510000 	cmp	r1, #0
400124a8:	0a00000e 	beq	400124e8 <CyU3PSysCacheIRegion+0x9c>
400124ac:	e1e03003 	mvn	r3, r3
400124b0:	e203300f 	and	r3, r3, #15
400124b4:	e3ccc00f 	bic	ip, ip, #15
400124b8:	e08cc003 	add	ip, ip, r3
400124bc:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
400124c0:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
400124c4:	e2800020 	add	r0, r0, #32
400124c8:	e2511001 	subs	r1, r1, #1
400124cc:	1afffffb 	bne	400124c0 <CyU3PSysCacheIRegion+0x74>
400124d0:	e1e0300c 	mvn	r3, ip
400124d4:	e203300f 	and	r3, r3, #15
400124d8:	e1822003 	orr	r2, r2, r3
400124dc:	e3ccc00f 	bic	ip, ip, #15
400124e0:	e00cc002 	and	ip, ip, r2
400124e4:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
400124e8:	e1a00003 	mov	r0, r3
400124ec:	e12fff1e 	bx	lr

400124f0 <CyU3PSysCacheDRegion>:
400124f0:	e3a03000 	mov	r3, #0
400124f4:	e3510000 	cmp	r1, #0
400124f8:	0a000022 	beq	40012588 <CyU3PSysCacheDRegion+0x98>
400124fc:	e0801001 	add	r1, r0, r1
40012500:	e3c0001f 	bic	r0, r0, #31
40012504:	e3a0201f 	mov	r2, #31
40012508:	e1110002 	tst	r1, r2
4001250c:	e0411000 	sub	r1, r1, r0
40012510:	e1a012a1 	lsr	r1, r1, #5
40012514:	12811001 	addne	r1, r1, #1
40012518:	e351003f 	cmp	r1, #63	; 0x3f
4001251c:	8a000019 	bhi	40012588 <CyU3PSysCacheDRegion+0x98>
40012520:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012524:	e20c200f 	and	r2, ip, #15
40012528:	e3a03001 	mov	r3, #1
4001252c:	e11c0003 	tst	ip, r3
40012530:	11a03083 	lslne	r3, r3, #1
40012534:	111c0003 	tstne	ip, r3
40012538:	11a03083 	lslne	r3, r3, #1
4001253c:	111c0003 	tstne	ip, r3
40012540:	11a03083 	lslne	r3, r3, #1
40012544:	1a00000f 	bne	40012588 <CyU3PSysCacheDRegion+0x98>
40012548:	e3510000 	cmp	r1, #0
4001254c:	0a00000d 	beq	40012588 <CyU3PSysCacheDRegion+0x98>
40012550:	e1e03003 	mvn	r3, r3
40012554:	e203300f 	and	r3, r3, #15
40012558:	e3ccc00f 	bic	ip, ip, #15
4001255c:	e08cc003 	add	ip, ip, r3
40012560:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
40012564:	e4903020 	ldr	r3, [r0], #32
40012568:	e2511001 	subs	r1, r1, #1
4001256c:	1afffffc 	bne	40012564 <CyU3PSysCacheDRegion+0x74>
40012570:	e1e0300c 	mvn	r3, ip
40012574:	e203300f 	and	r3, r3, #15
40012578:	e1822003 	orr	r2, r2, r3
4001257c:	e3ccc00f 	bic	ip, ip, #15
40012580:	e00cc002 	and	ip, ip, r2
40012584:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012588:	e1a00003 	mov	r0, r3
4001258c:	e12fff1e 	bx	lr

40012590 <CyU3PSysUnlockICache>:
40012590:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012594:	e3c0000f 	bic	r0, r0, #15
40012598:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

4001259c <CyU3PSysUnlockDCache>:
4001259c:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
400125a0:	e3c0000f 	bic	r0, r0, #15
400125a4:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

400125a8 <__cyu3p_exception_vectors>:
400125a8:	e59ff028 	ldr	pc, [pc, #40]	; 400125d8 <__CyU3PEntryKeep+0x4>
400125ac:	e59ff028 	ldr	pc, [pc, #40]	; 400125dc <__CyU3PEntryKeep+0x8>
400125b0:	e59ff028 	ldr	pc, [pc, #40]	; 400125e0 <__CyU3PEntryKeep+0xc>
400125b4:	e59ff028 	ldr	pc, [pc, #40]	; 400125e4 <__CyU3PEntryKeep+0x10>
400125b8:	e59ff028 	ldr	pc, [pc, #40]	; 400125e8 <__CyU3PEntryKeep+0x14>
400125bc:	e59ff028 	ldr	pc, [pc, #40]	; 400125ec <__CyU3PEntryKeep+0x18>
400125c0:	e51ff120 	ldr	pc, [pc, #-288]	; 400124a8 <CyU3PSysCacheIRegion+0x5c>
400125c4:	e59ff024 	ldr	pc, [pc, #36]	; 400125f0 <__CyU3PEntryKeep+0x1c>

400125c8 <__CyU3PSWIHandler>:
400125c8:	eafffffe 	b	400125c8 <__CyU3PSWIHandler>

400125cc <__CyU3PReservedHandler>:
400125cc:	eafffffe 	b	400125cc <__CyU3PReservedHandler>

400125d0 <__CyU3PFiqHandler>:
400125d0:	eafffffe 	b	400125d0 <__CyU3PFiqHandler>

400125d4 <__CyU3PEntryKeep>:
400125d4:	e12fff1e 	bx	lr
400125d8:	40012250 	.word	0x40012250
400125dc:	40003618 	.word	0x40003618
400125e0:	400125c8 	.word	0x400125c8
400125e4:	4000361c 	.word	0x4000361c
400125e8:	40003620 	.word	0x40003620
400125ec:	400125cc 	.word	0x400125cc
400125f0:	400125d0 	.word	0x400125d0

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400125f4 <CyU3PDevCheckDevStateStruct>:
400125f4:	e92d4038 	push	{r3, r4, r5, lr}
400125f8:	e59f4118 	ldr	r4, [pc, #280]	; 40012718 <_etext+0x124>
400125fc:	e3a00000 	mov	r0, #0
40012600:	e58d0000 	str	r0, [sp]
40012604:	e5940000 	ldr	r0, [r4]
40012608:	e59f110c 	ldr	r1, [pc, #268]	; 4001271c <_etext+0x128>
4001260c:	e1500001 	cmp	r0, r1
40012610:	0a000000 	beq	40012618 <CyU3PDevCheckDevStateStruct+0x24>
40012614:	ea00003b 	b	40012708 <CyU3PDevCheckDevStateStruct+0x114>
40012618:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001261c:	e59f10fc 	ldr	r1, [pc, #252]	; 40012720 <_etext+0x12c>
40012620:	e1500001 	cmp	r0, r1
40012624:	1a000005 	bne	40012640 <CyU3PDevCheckDevStateStruct+0x4c>
40012628:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
4001262c:	e59f10f0 	ldr	r1, [pc, #240]	; 40012724 <_etext+0x130>
40012630:	e1500001 	cmp	r0, r1
40012634:	3a000001 	bcc	40012640 <CyU3PDevCheckDevStateStruct+0x4c>
40012638:	e594500c 	ldr	r5, [r4, #12]
4001263c:	ea000001 	b	40012648 <CyU3PDevCheckDevStateStruct+0x54>
40012640:	e594000c 	ldr	r0, [r4, #12]
40012644:	e20050ff 	and	r5, r0, #255	; 0xff
40012648:	e594000c 	ldr	r0, [r4, #12]
4001264c:	e3500000 	cmp	r0, #0
40012650:	0a000003 	beq	40012664 <CyU3PDevCheckDevStateStruct+0x70>
40012654:	e594000c 	ldr	r0, [r4, #12]
40012658:	e59f10c8 	ldr	r1, [pc, #200]	; 40012728 <_etext+0x134>
4001265c:	e1500001 	cmp	r0, r1
40012660:	9a000000 	bls	40012668 <CyU3PDevCheckDevStateStruct+0x74>
40012664:	ea000027 	b	40012708 <CyU3PDevCheckDevStateStruct+0x114>
40012668:	e1a0200d 	mov	r2, sp
4001266c:	e1a01005 	mov	r1, r5
40012670:	e59f00a0 	ldr	r0, [pc, #160]	; 40012718 <_etext+0x124>
40012674:	eb00049f 	bl	400138f8 <CyU3PComputeChecksum>
40012678:	e594000c 	ldr	r0, [r4, #12]
4001267c:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
40012680:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012684:	e5900000 	ldr	r0, [r0]
40012688:	e59d1000 	ldr	r1, [sp]
4001268c:	e1500001 	cmp	r0, r1
40012690:	0a000000 	beq	40012698 <CyU3PDevCheckDevStateStruct+0xa4>
40012694:	ea00001b 	b	40012708 <CyU3PDevCheckDevStateStruct+0x114>
40012698:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001269c:	e59f107c 	ldr	r1, [pc, #124]	; 40012720 <_etext+0x12c>
400126a0:	e1500001 	cmp	r0, r1
400126a4:	0a000001 	beq	400126b0 <CyU3PDevCheckDevStateStruct+0xbc>
400126a8:	e59f007c 	ldr	r0, [pc, #124]	; 4001272c <_etext+0x138>
400126ac:	e58400dc 	str	r0, [r4, #220]	; 0xdc
400126b0:	e3a00001 	mov	r0, #1
400126b4:	e59f1074 	ldr	r1, [pc, #116]	; 40012730 <_etext+0x13c>
400126b8:	e5810000 	str	r0, [r1]
400126bc:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400126c0:	e59f106c 	ldr	r1, [pc, #108]	; 40012734 <_etext+0x140>
400126c4:	e1500001 	cmp	r0, r1
400126c8:	3a00000d 	bcc	40012704 <CyU3PDevCheckDevStateStruct+0x110>
400126cc:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
400126d0:	e3500000 	cmp	r0, #0
400126d4:	0a00000a 	beq	40012704 <CyU3PDevCheckDevStateStruct+0x110>
400126d8:	e59f0058 	ldr	r0, [pc, #88]	; 40012738 <_etext+0x144>
400126dc:	e5900018 	ldr	r0, [r0, #24]
400126e0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400126e4:	0a000006 	beq	40012704 <CyU3PDevCheckDevStateStruct+0x110>
400126e8:	e59f004c 	ldr	r0, [pc, #76]	; 4001273c <_etext+0x148>
400126ec:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400126f0:	e3100001 	tst	r0, #1
400126f4:	0a000002 	beq	40012704 <CyU3PDevCheckDevStateStruct+0x110>
400126f8:	e3a00001 	mov	r0, #1
400126fc:	e59f103c 	ldr	r1, [pc, #60]	; 40012740 <_etext+0x14c>
40012700:	e5810000 	str	r0, [r1]
40012704:	e8bd8038 	pop	{r3, r4, r5, pc}
40012708:	e1a00000 	nop			; (mov r0, r0)
4001270c:	e3e00000 	mvn	r0, #0
40012710:	e5840000 	str	r0, [r4]
40012714:	eafffffa 	b	40012704 <CyU3PDevCheckDevStateStruct+0x110>
40012718:	40002000 	.word	0x40002000
4001271c:	42575943 	.word	0x42575943
40012720:	42335846 	.word	0x42335846
40012724:	00010300 	.word	0x00010300
40012728:	00000ff8 	.word	0x00000ff8
4001272c:	00010101 	.word	0x00010101
40012730:	40030c68 	.word	0x40030c68
40012734:	00010201 	.word	0x00010201
40012738:	e0052000 	.word	0xe0052000
4001273c:	e0001000 	.word	0xe0001000
40012740:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PDeviceCacheControl:

40012744 <CyU3PDeviceCacheControl>:
40012744:	e92d4070 	push	{r4, r5, r6, lr}
40012748:	e1a04000 	mov	r4, r0
4001274c:	e1a06001 	mov	r6, r1
40012750:	e1a05002 	mov	r5, r2
40012754:	e3550000 	cmp	r5, #0
40012758:	0a000003 	beq	4001276c <CyU3PDeviceCacheControl+0x28>
4001275c:	e3560000 	cmp	r6, #0
40012760:	1a000001 	bne	4001276c <CyU3PDeviceCacheControl+0x28>
40012764:	e3a00040 	mov	r0, #64	; 0x40
40012768:	e8bd8070 	pop	{r4, r5, r6, pc}
4001276c:	eb000181 	bl	40012d78 <CyU3PSysBarrierSync>
40012770:	ebfffefa 	bl	40012360 <CyU3PSysClearDCache>
40012774:	eb0001a1 	bl	40012e00 <CyU3PSysFlushICache>
40012778:	eb00018f 	bl	40012dbc <CyU3PSysDisableICache>
4001277c:	eb00018a 	bl	40012dac <CyU3PSysDisableDCache>
40012780:	e3540000 	cmp	r4, #0
40012784:	0a000003 	beq	40012798 <CyU3PDeviceCacheControl+0x54>
40012788:	eb000193 	bl	40012ddc <CyU3PSysEnableICache>
4001278c:	eb000179 	bl	40012d78 <CyU3PSysBarrierSync>
40012790:	e59f0038 	ldr	r0, [pc, #56]	; 400127d0 <CyU3PDeviceCacheControl+0x8c>
40012794:	e5804000 	str	r4, [r0]
40012798:	e3a00000 	mov	r0, #0
4001279c:	e59f1030 	ldr	r1, [pc, #48]	; 400127d4 <CyU3PDeviceCacheControl+0x90>
400127a0:	e5810000 	str	r0, [r1]
400127a4:	e3560000 	cmp	r6, #0
400127a8:	0a000005 	beq	400127c4 <CyU3PDeviceCacheControl+0x80>
400127ac:	eb000186 	bl	40012dcc <CyU3PSysEnableDCache>
400127b0:	eb000170 	bl	40012d78 <CyU3PSysBarrierSync>
400127b4:	e59f0018 	ldr	r0, [pc, #24]	; 400127d4 <CyU3PDeviceCacheControl+0x90>
400127b8:	e5805000 	str	r5, [r0]
400127bc:	e59f0014 	ldr	r0, [pc, #20]	; 400127d8 <CyU3PDeviceCacheControl+0x94>
400127c0:	e5806000 	str	r6, [r0]
400127c4:	eb00016b 	bl	40012d78 <CyU3PSysBarrierSync>
400127c8:	e3a00000 	mov	r0, #0
400127cc:	eaffffe5 	b	40012768 <CyU3PDeviceCacheControl+0x24>
400127d0:	40030c5c 	.word	0x40030c5c
400127d4:	40030c64 	.word	0x40030c64
400127d8:	40030c60 	.word	0x40030c60

Disassembly of section i.CyU3PDeviceInit:

400127dc <CyU3PDeviceInit>:
400127dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400127e0:	e1a04000 	mov	r4, r0
400127e4:	e3a06000 	mov	r6, #0
400127e8:	e3a07000 	mov	r7, #0
400127ec:	e3a09000 	mov	r9, #0
400127f0:	e3a0a000 	mov	sl, #0
400127f4:	e3540000 	cmp	r4, #0
400127f8:	0a000033 	beq	400128cc <CyU3PDeviceInit+0xf0>
400127fc:	e5d40004 	ldrb	r0, [r4, #4]
40012800:	e3500002 	cmp	r0, #2
40012804:	ba000002 	blt	40012814 <CyU3PDeviceInit+0x38>
40012808:	e5d40004 	ldrb	r0, [r4, #4]
4001280c:	e3500010 	cmp	r0, #16
40012810:	da000001 	ble	4001281c <CyU3PDeviceInit+0x40>
40012814:	e3a00040 	mov	r0, #64	; 0x40
40012818:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001281c:	e5d40005 	ldrb	r0, [r4, #5]
40012820:	e3500002 	cmp	r0, #2
40012824:	ba000002 	blt	40012834 <CyU3PDeviceInit+0x58>
40012828:	e5d40005 	ldrb	r0, [r4, #5]
4001282c:	e3500010 	cmp	r0, #16
40012830:	da000001 	ble	4001283c <CyU3PDeviceInit+0x60>
40012834:	e3a00040 	mov	r0, #64	; 0x40
40012838:	eafffff6 	b	40012818 <CyU3PDeviceInit+0x3c>
4001283c:	e5d40006 	ldrb	r0, [r4, #6]
40012840:	e3500002 	cmp	r0, #2
40012844:	ba000002 	blt	40012854 <CyU3PDeviceInit+0x78>
40012848:	e5d40006 	ldrb	r0, [r4, #6]
4001284c:	e3500010 	cmp	r0, #16
40012850:	da000001 	ble	4001285c <CyU3PDeviceInit+0x80>
40012854:	e3a00040 	mov	r0, #64	; 0x40
40012858:	eaffffee 	b	40012818 <CyU3PDeviceInit+0x3c>
4001285c:	e5d40006 	ldrb	r0, [r4, #6]
40012860:	e5d41005 	ldrb	r1, [r4, #5]
40012864:	e1500001 	cmp	r0, r1
40012868:	ba000004 	blt	40012880 <CyU3PDeviceInit+0xa4>
4001286c:	e5d41005 	ldrb	r1, [r4, #5]
40012870:	e5d40006 	ldrb	r0, [r4, #6]
40012874:	ebfff940 	bl	40010d7c <__aeabi_idivmod>
40012878:	e3510000 	cmp	r1, #0
4001287c:	0a000001 	beq	40012888 <CyU3PDeviceInit+0xac>
40012880:	e3a00040 	mov	r0, #64	; 0x40
40012884:	eaffffe3 	b	40012818 <CyU3PDeviceInit+0x3c>
40012888:	e5d4000c 	ldrb	r0, [r4, #12]
4001288c:	e3500004 	cmp	r0, #4
40012890:	ba000001 	blt	4001289c <CyU3PDeviceInit+0xc0>
40012894:	e3a00040 	mov	r0, #64	; 0x40
40012898:	eaffffde 	b	40012818 <CyU3PDeviceInit+0x3c>
4001289c:	e5d40004 	ldrb	r0, [r4, #4]
400128a0:	e2400001 	sub	r0, r0, #1
400128a4:	e5d41005 	ldrb	r1, [r4, #5]
400128a8:	e2411001 	sub	r1, r1, #1
400128ac:	e1800401 	orr	r0, r0, r1, lsl #8
400128b0:	e5d41006 	ldrb	r1, [r4, #6]
400128b4:	e2411001 	sub	r1, r1, #1
400128b8:	e1800601 	orr	r0, r0, r1, lsl #12
400128bc:	e5d4100c 	ldrb	r1, [r4, #12]
400128c0:	e1805201 	orr	r5, r0, r1, lsl #4
400128c4:	e594a000 	ldr	sl, [r4]
400128c8:	ea000000 	b	400128d0 <CyU3PDeviceInit+0xf4>
400128cc:	e59f5334 	ldr	r5, [pc, #820]	; 40012c08 <CyU3PDeviceInit+0x42c>
400128d0:	e59f0334 	ldr	r0, [pc, #820]	; 40012c0c <CyU3PDeviceInit+0x430>
400128d4:	e5805004 	str	r5, [r0, #4]
400128d8:	e5905004 	ldr	r5, [r0, #4]
400128dc:	e3a0000a 	mov	r0, #10
400128e0:	eb0003f6 	bl	400138c0 <CyU3PBusyWait>
400128e4:	e59f0320 	ldr	r0, [pc, #800]	; 40012c0c <CyU3PDeviceInit+0x430>
400128e8:	e5900000 	ldr	r0, [r0]
400128ec:	e2000807 	and	r0, r0, #458752	; 0x70000
400128f0:	e1a05820 	lsr	r5, r0, #16
400128f4:	e2150003 	ands	r0, r5, #3
400128f8:	0a000004 	beq	40012910 <CyU3PDeviceInit+0x134>
400128fc:	e3500001 	cmp	r0, #1
40012900:	0a00000e 	beq	40012940 <CyU3PDeviceInit+0x164>
40012904:	e3500002 	cmp	r0, #2
40012908:	1a000024 	bne	400129a0 <CyU3PDeviceInit+0x1c4>
4001290c:	ea000014 	b	40012964 <CyU3PDeviceInit+0x188>
40012910:	e1a00000 	nop			; (mov r0, r0)
40012914:	e59f92f4 	ldr	r9, [pc, #756]	; 40012c10 <CyU3PDeviceInit+0x434>
40012918:	e35a0000 	cmp	sl, #0
4001291c:	0a000003 	beq	40012930 <CyU3PDeviceInit+0x154>
40012920:	e59f02ec 	ldr	r0, [pc, #748]	; 40012c14 <CyU3PDeviceInit+0x438>
40012924:	e59f12ec 	ldr	r1, [pc, #748]	; 40012c18 <CyU3PDeviceInit+0x43c>
40012928:	e5810000 	str	r0, [r1]
4001292c:	ea000002 	b	4001293c <CyU3PDeviceInit+0x160>
40012930:	e59f02e4 	ldr	r0, [pc, #740]	; 40012c1c <CyU3PDeviceInit+0x440>
40012934:	e59f12dc 	ldr	r1, [pc, #732]	; 40012c18 <CyU3PDeviceInit+0x43c>
40012938:	e5810000 	str	r0, [r1]
4001293c:	ea000020 	b	400129c4 <CyU3PDeviceInit+0x1e8>
40012940:	e1a00000 	nop			; (mov r0, r0)
40012944:	e59f92d4 	ldr	r9, [pc, #724]	; 40012c20 <CyU3PDeviceInit+0x444>
40012948:	e1a00209 	lsl	r0, r9, #4
4001294c:	e59f12c4 	ldr	r1, [pc, #708]	; 40012c18 <CyU3PDeviceInit+0x43c>
40012950:	e5810000 	str	r0, [r1]
40012954:	e59f02c8 	ldr	r0, [pc, #712]	; 40012c24 <CyU3PDeviceInit+0x448>
40012958:	e59f12c8 	ldr	r1, [pc, #712]	; 40012c28 <CyU3PDeviceInit+0x44c>
4001295c:	e5810000 	str	r0, [r1]
40012960:	ea000017 	b	400129c4 <CyU3PDeviceInit+0x1e8>
40012964:	e1a00000 	nop			; (mov r0, r0)
40012968:	e59f92bc 	ldr	r9, [pc, #700]	; 40012c2c <CyU3PDeviceInit+0x450>
4001296c:	e59f02bc 	ldr	r0, [pc, #700]	; 40012c30 <CyU3PDeviceInit+0x454>
40012970:	e59f12b0 	ldr	r1, [pc, #688]	; 40012c28 <CyU3PDeviceInit+0x44c>
40012974:	e5810000 	str	r0, [r1]
40012978:	e35a0000 	cmp	sl, #0
4001297c:	0a000003 	beq	40012990 <CyU3PDeviceInit+0x1b4>
40012980:	e59f028c 	ldr	r0, [pc, #652]	; 40012c14 <CyU3PDeviceInit+0x438>
40012984:	e59f128c 	ldr	r1, [pc, #652]	; 40012c18 <CyU3PDeviceInit+0x43c>
40012988:	e5810000 	str	r0, [r1]
4001298c:	ea000002 	b	4001299c <CyU3PDeviceInit+0x1c0>
40012990:	e59f0284 	ldr	r0, [pc, #644]	; 40012c1c <CyU3PDeviceInit+0x440>
40012994:	e59f127c 	ldr	r1, [pc, #636]	; 40012c18 <CyU3PDeviceInit+0x43c>
40012998:	e5810000 	str	r0, [r1]
4001299c:	ea000008 	b	400129c4 <CyU3PDeviceInit+0x1e8>
400129a0:	e1a00000 	nop			; (mov r0, r0)
400129a4:	e59f9288 	ldr	r9, [pc, #648]	; 40012c34 <CyU3PDeviceInit+0x458>
400129a8:	e1a00189 	lsl	r0, r9, #3
400129ac:	e59f1264 	ldr	r1, [pc, #612]	; 40012c18 <CyU3PDeviceInit+0x43c>
400129b0:	e5810000 	str	r0, [r1]
400129b4:	e59f027c 	ldr	r0, [pc, #636]	; 40012c38 <CyU3PDeviceInit+0x45c>
400129b8:	e59f1268 	ldr	r1, [pc, #616]	; 40012c28 <CyU3PDeviceInit+0x44c>
400129bc:	e5810000 	str	r0, [r1]
400129c0:	e1a00000 	nop			; (mov r0, r0)
400129c4:	e1a00000 	nop			; (mov r0, r0)
400129c8:	e59f023c 	ldr	r0, [pc, #572]	; 40012c0c <CyU3PDeviceInit+0x430>
400129cc:	e5900000 	ldr	r0, [r0]
400129d0:	e200003f 	and	r0, r0, #63	; 0x3f
400129d4:	e3500015 	cmp	r0, #21
400129d8:	1a000002 	bne	400129e8 <CyU3PDeviceInit+0x20c>
400129dc:	e59f0230 	ldr	r0, [pc, #560]	; 40012c14 <CyU3PDeviceInit+0x438>
400129e0:	e59f1230 	ldr	r1, [pc, #560]	; 40012c18 <CyU3PDeviceInit+0x43c>
400129e4:	e5810000 	str	r0, [r1]
400129e8:	e59f0228 	ldr	r0, [pc, #552]	; 40012c18 <CyU3PDeviceInit+0x43c>
400129ec:	e5900000 	ldr	r0, [r0]
400129f0:	e59f121c 	ldr	r1, [pc, #540]	; 40012c14 <CyU3PDeviceInit+0x438>
400129f4:	e1500001 	cmp	r0, r1
400129f8:	1a000013 	bne	40012a4c <CyU3PDeviceInit+0x270>
400129fc:	e59f0208 	ldr	r0, [pc, #520]	; 40012c0c <CyU3PDeviceInit+0x430>
40012a00:	e5900000 	ldr	r0, [r0]
40012a04:	e200003f 	and	r0, r0, #63	; 0x3f
40012a08:	e3500015 	cmp	r0, #21
40012a0c:	0a00000e 	beq	40012a4c <CyU3PDeviceInit+0x270>
40012a10:	e59f01f4 	ldr	r0, [pc, #500]	; 40012c0c <CyU3PDeviceInit+0x430>
40012a14:	e5900000 	ldr	r0, [r0]
40012a18:	e3c0003f 	bic	r0, r0, #63	; 0x3f
40012a1c:	e3800015 	orr	r0, r0, #21
40012a20:	e59f11e4 	ldr	r1, [pc, #484]	; 40012c0c <CyU3PDeviceInit+0x430>
40012a24:	e5810000 	str	r0, [r1]
40012a28:	e3a00064 	mov	r0, #100	; 0x64
40012a2c:	eb0003a3 	bl	400138c0 <CyU3PBusyWait>
40012a30:	e1a00000 	nop			; (mov r0, r0)
40012a34:	e59f01d0 	ldr	r0, [pc, #464]	; 40012c0c <CyU3PDeviceInit+0x430>
40012a38:	e5900000 	ldr	r0, [r0]
40012a3c:	e3100702 	tst	r0, #524288	; 0x80000
40012a40:	0afffffb 	beq	40012a34 <CyU3PDeviceInit+0x258>
40012a44:	e3a00064 	mov	r0, #100	; 0x64
40012a48:	eb00039c 	bl	400138c0 <CyU3PBusyWait>
40012a4c:	e59f01e8 	ldr	r0, [pc, #488]	; 40012c3c <CyU3PDeviceInit+0x460>
40012a50:	e5908014 	ldr	r8, [r0, #20]
40012a54:	e3a0000a 	mov	r0, #10
40012a58:	eb000398 	bl	400138c0 <CyU3PBusyWait>
40012a5c:	e2080003 	and	r0, r8, #3
40012a60:	e3500002 	cmp	r0, #2
40012a64:	1a000005 	bne	40012a80 <CyU3PDeviceInit+0x2a4>
40012a68:	e3a07001 	mov	r7, #1
40012a6c:	e3880003 	orr	r0, r8, #3
40012a70:	e59f11c4 	ldr	r1, [pc, #452]	; 40012c3c <CyU3PDeviceInit+0x460>
40012a74:	e5810014 	str	r0, [r1, #20]
40012a78:	e3a0000a 	mov	r0, #10
40012a7c:	eb00038f 	bl	400138c0 <CyU3PBusyWait>
40012a80:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012a84:	1a000004 	bne	40012a9c <CyU3PDeviceInit+0x2c0>
40012a88:	e3540000 	cmp	r4, #0
40012a8c:	0a000003 	beq	40012aa0 <CyU3PDeviceInit+0x2c4>
40012a90:	e5940008 	ldr	r0, [r4, #8]
40012a94:	e3500000 	cmp	r0, #0
40012a98:	1a000000 	bne	40012aa0 <CyU3PDeviceInit+0x2c4>
40012a9c:	e3a06001 	mov	r6, #1
40012aa0:	e3560000 	cmp	r6, #0
40012aa4:	1a000014 	bne	40012afc <CyU3PDeviceInit+0x320>
40012aa8:	e3c80003 	bic	r0, r8, #3
40012aac:	e3800001 	orr	r0, r0, #1
40012ab0:	e59f1184 	ldr	r1, [pc, #388]	; 40012c3c <CyU3PDeviceInit+0x460>
40012ab4:	e5810014 	str	r0, [r1, #20]
40012ab8:	e3a00064 	mov	r0, #100	; 0x64
40012abc:	eb00037f 	bl	400138c0 <CyU3PBusyWait>
40012ac0:	e59f0174 	ldr	r0, [pc, #372]	; 40012c3c <CyU3PDeviceInit+0x460>
40012ac4:	e5905018 	ldr	r5, [r0, #24]
40012ac8:	e3a000c8 	mov	r0, #200	; 0xc8
40012acc:	eb00037b 	bl	400138c0 <CyU3PBusyWait>
40012ad0:	e59f0164 	ldr	r0, [pc, #356]	; 40012c3c <CyU3PDeviceInit+0x460>
40012ad4:	e5900018 	ldr	r0, [r0, #24]
40012ad8:	e1500005 	cmp	r0, r5
40012adc:	1a000000 	bne	40012ae4 <CyU3PDeviceInit+0x308>
40012ae0:	e3a06001 	mov	r6, #1
40012ae4:	e3a00064 	mov	r0, #100	; 0x64
40012ae8:	eb000374 	bl	400138c0 <CyU3PBusyWait>
40012aec:	e59f0148 	ldr	r0, [pc, #328]	; 40012c3c <CyU3PDeviceInit+0x460>
40012af0:	e5808014 	str	r8, [r0, #20]
40012af4:	e3a00064 	mov	r0, #100	; 0x64
40012af8:	eb000370 	bl	400138c0 <CyU3PBusyWait>
40012afc:	e3560000 	cmp	r6, #0
40012b00:	0a000026 	beq	40012ba0 <CyU3PDeviceInit+0x3c4>
40012b04:	e59f0130 	ldr	r0, [pc, #304]	; 40012c3c <CyU3PDeviceInit+0x460>
40012b08:	e5900014 	ldr	r0, [r0, #20]
40012b0c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012b10:	1a000022 	bne	40012ba0 <CyU3PDeviceInit+0x3c4>
40012b14:	e1a09109 	lsl	r9, r9, #2
40012b18:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012b1c:	e1a00009 	mov	r0, r9
40012b20:	ebfff843 	bl	40010c34 <__aeabi_uidivmod>
40012b24:	e1a09000 	mov	r9, r0
40012b28:	e2095003 	and	r5, r9, #3
40012b2c:	e1a09129 	lsr	r9, r9, #2
40012b30:	e3550010 	cmp	r5, #16
40012b34:	2a000000 	bcs	40012b3c <CyU3PDeviceInit+0x360>
40012b38:	e2499001 	sub	r9, r9, #1
40012b3c:	e1a09809 	lsl	r9, r9, #16
40012b40:	e59f00f8 	ldr	r0, [pc, #248]	; 40012c40 <CyU3PDeviceInit+0x464>
40012b44:	e1590000 	cmp	r9, r0
40012b48:	9a000000 	bls	40012b50 <CyU3PDeviceInit+0x374>
40012b4c:	e1a09000 	mov	r9, r0
40012b50:	e3a00064 	mov	r0, #100	; 0x64
40012b54:	eb000359 	bl	400138c0 <CyU3PBusyWait>
40012b58:	e59f00dc 	ldr	r0, [pc, #220]	; 40012c3c <CyU3PDeviceInit+0x460>
40012b5c:	e5905014 	ldr	r5, [r0, #20]
40012b60:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
40012b64:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012b68:	e1805009 	orr	r5, r0, r9
40012b6c:	e3a00064 	mov	r0, #100	; 0x64
40012b70:	eb000352 	bl	400138c0 <CyU3PBusyWait>
40012b74:	e59f00c0 	ldr	r0, [pc, #192]	; 40012c3c <CyU3PDeviceInit+0x460>
40012b78:	e5805014 	str	r5, [r0, #20]
40012b7c:	e3a00064 	mov	r0, #100	; 0x64
40012b80:	eb00034e 	bl	400138c0 <CyU3PBusyWait>
40012b84:	e59f00b0 	ldr	r0, [pc, #176]	; 40012c3c <CyU3PDeviceInit+0x460>
40012b88:	e5900014 	ldr	r0, [r0, #20]
40012b8c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012b90:	e59f10a4 	ldr	r1, [pc, #164]	; 40012c3c <CyU3PDeviceInit+0x460>
40012b94:	e5810014 	str	r0, [r1, #20]
40012b98:	e3a00064 	mov	r0, #100	; 0x64
40012b9c:	eb000347 	bl	400138c0 <CyU3PBusyWait>
40012ba0:	e59f0094 	ldr	r0, [pc, #148]	; 40012c3c <CyU3PDeviceInit+0x460>
40012ba4:	e5900000 	ldr	r0, [r0]
40012ba8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012bac:	e59f1088 	ldr	r1, [pc, #136]	; 40012c3c <CyU3PDeviceInit+0x460>
40012bb0:	e5810000 	str	r0, [r1]
40012bb4:	e3a00064 	mov	r0, #100	; 0x64
40012bb8:	eb000340 	bl	400138c0 <CyU3PBusyWait>
40012bbc:	eb003dcb 	bl	400222f0 <CyU3PVicInit>
40012bc0:	e10f0000 	mrs	r0, CPSR
40012bc4:	e3c00080 	bic	r0, r0, #128	; 0x80
40012bc8:	e121f000 	msr	CPSR_c, r0
40012bcc:	e3570000 	cmp	r7, #0
40012bd0:	0a000002 	beq	40012be0 <CyU3PDeviceInit+0x404>
40012bd4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012bd8:	e3a00001 	mov	r0, #1
40012bdc:	eb000024 	bl	40012c74 <CyU3PSysWatchDogConfigure>
40012be0:	e59f005c 	ldr	r0, [pc, #92]	; 40012c44 <CyU3PDeviceInit+0x468>
40012be4:	e5900000 	ldr	r0, [r0]
40012be8:	e3500000 	cmp	r0, #0
40012bec:	0a000002 	beq	40012bfc <CyU3PDeviceInit+0x420>
40012bf0:	e59f004c 	ldr	r0, [pc, #76]	; 40012c44 <CyU3PDeviceInit+0x468>
40012bf4:	e5900000 	ldr	r0, [r0]
40012bf8:	eb000594 	bl	40014250 <CyU3PLppRestoreState>
40012bfc:	ebfffe7c 	bl	400125f4 <_etext>
40012c00:	e3a00000 	mov	r0, #0
40012c04:	eaffff03 	b	40012818 <CyU3PDeviceInit+0x3c>
40012c08:	00001131 	.word	0x00001131
40012c0c:	e0052000 	.word	0xe0052000
40012c10:	0124f800 	.word	0x0124f800
40012c14:	18085800 	.word	0x18085800
40012c18:	40030c50 	.word	0x40030c50
40012c1c:	16e36000 	.word	0x16e36000
40012c20:	018cba80 	.word	0x018cba80
40012c24:	00910700 	.word	0x00910700
40012c28:	40030c58 	.word	0x40030c58
40012c2c:	0249f000 	.word	0x0249f000
40012c30:	00910608 	.word	0x00910608
40012c34:	03197500 	.word	0x03197500
40012c38:	00910580 	.word	0x00910580
40012c3c:	e0050000 	.word	0xe0050000
40012c40:	7fff0000 	.word	0x7fff0000
40012c44:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PSysSetupMMU:

40012c48 <CyU3PSysSetupMMU>:
40012c48:	e92d4010 	push	{r4, lr}
40012c4c:	eb000049 	bl	40012d78 <CyU3PSysBarrierSync>
40012c50:	ebfffdc2 	bl	40012360 <CyU3PSysClearDCache>
40012c54:	eb000069 	bl	40012e00 <CyU3PSysFlushICache>
40012c58:	eb000049 	bl	40012d84 <CyU3PSysDisableCacheMMU>
40012c5c:	eb00006a 	bl	40012e0c <CyU3PSysInitTCMs>
40012c60:	eb000041 	bl	40012d6c <CyU3PInitPageTable>
40012c64:	eb000061 	bl	40012df0 <CyU3PSysEnableMMU>
40012c68:	eb00006c 	bl	40012e20 <CyU3PSysLoadTLB>
40012c6c:	eb000041 	bl	40012d78 <CyU3PSysBarrierSync>
40012c70:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012c74 <CyU3PSysWatchDogConfigure>:
40012c74:	e92d4070 	push	{r4, r5, r6, lr}
40012c78:	e1a04000 	mov	r4, r0
40012c7c:	e1a05001 	mov	r5, r1
40012c80:	e59f00d8 	ldr	r0, [pc, #216]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012c84:	e5906014 	ldr	r6, [r0, #20]
40012c88:	e3a00064 	mov	r0, #100	; 0x64
40012c8c:	eb00030b 	bl	400138c0 <CyU3PBusyWait>
40012c90:	e3540000 	cmp	r4, #0
40012c94:	0a000023 	beq	40012d28 <CyU3PSysWatchDogConfigure+0xb4>
40012c98:	e2060003 	and	r0, r6, #3
40012c9c:	e3500003 	cmp	r0, #3
40012ca0:	0a000004 	beq	40012cb8 <CyU3PSysWatchDogConfigure+0x44>
40012ca4:	e3860003 	orr	r0, r6, #3
40012ca8:	e59f10b0 	ldr	r1, [pc, #176]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012cac:	e5810014 	str	r0, [r1, #20]
40012cb0:	e3a00064 	mov	r0, #100	; 0x64
40012cb4:	eb000301 	bl	400138c0 <CyU3PBusyWait>
40012cb8:	e0850285 	add	r0, r5, r5, lsl #5
40012cbc:	e59f10a0 	ldr	r1, [pc, #160]	; 40012d64 <CyU3PSysWatchDogConfigure+0xf0>
40012cc0:	e5810000 	str	r0, [r1]
40012cc4:	e2810000 	add	r0, r1, #0
40012cc8:	e5900000 	ldr	r0, [r0]
40012ccc:	e1500005 	cmp	r0, r5
40012cd0:	2a000001 	bcs	40012cdc <CyU3PSysWatchDogConfigure+0x68>
40012cd4:	e3e00000 	mvn	r0, #0
40012cd8:	e5810000 	str	r0, [r1]
40012cdc:	e59f0080 	ldr	r0, [pc, #128]	; 40012d64 <CyU3PSysWatchDogConfigure+0xf0>
40012ce0:	e5900000 	ldr	r0, [r0]
40012ce4:	e59f1074 	ldr	r1, [pc, #116]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012ce8:	e5810018 	str	r0, [r1, #24]
40012cec:	e3a00064 	mov	r0, #100	; 0x64
40012cf0:	eb0002f2 	bl	400138c0 <CyU3PBusyWait>
40012cf4:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012cf8:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012cfc:	e59f005c 	ldr	r0, [pc, #92]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012d00:	e5806014 	str	r6, [r0, #20]
40012d04:	e3a00064 	mov	r0, #100	; 0x64
40012d08:	eb0002ec 	bl	400138c0 <CyU3PBusyWait>
40012d0c:	e2060c03 	and	r0, r6, #768	; 0x300
40012d10:	e3500c03 	cmp	r0, #768	; 0x300
40012d14:	1a000010 	bne	40012d5c <CyU3PSysWatchDogConfigure+0xe8>
40012d18:	e59f0048 	ldr	r0, [pc, #72]	; 40012d68 <CyU3PSysWatchDogConfigure+0xf4>
40012d1c:	e1d000b0 	ldrh	r0, [r0]
40012d20:	eb003d18 	bl	40022188 <CyU3POsTimerInit>
40012d24:	ea00000c 	b	40012d5c <CyU3PSysWatchDogConfigure+0xe8>
40012d28:	e2060003 	and	r0, r6, #3
40012d2c:	e3500003 	cmp	r0, #3
40012d30:	0a000006 	beq	40012d50 <CyU3PSysWatchDogConfigure+0xdc>
40012d34:	e59f0024 	ldr	r0, [pc, #36]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012d38:	e5900014 	ldr	r0, [r0, #20]
40012d3c:	e3800003 	orr	r0, r0, #3
40012d40:	e59f1018 	ldr	r1, [pc, #24]	; 40012d60 <CyU3PSysWatchDogConfigure+0xec>
40012d44:	e5810014 	str	r0, [r1, #20]
40012d48:	e3a00064 	mov	r0, #100	; 0x64
40012d4c:	eb0002db 	bl	400138c0 <CyU3PBusyWait>
40012d50:	e3a00000 	mov	r0, #0
40012d54:	e59f1008 	ldr	r1, [pc, #8]	; 40012d64 <CyU3PSysWatchDogConfigure+0xf0>
40012d58:	e5810000 	str	r0, [r1]
40012d5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40012d60:	e0050000 	.word	0xe0050000
40012d64:	40030c54 	.word	0x40030c54
40012d68:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PInitPageTable:

40012d6c <CyU3PInitPageTable>:
40012d6c:	e92d4010 	push	{r4, lr}
40012d70:	eb0007ad 	bl	40014c2c <CyFx3DevInitPageTables>
40012d74:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012d78 <CyU3PSysBarrierSync>:
40012d78:	e3a00000 	mov	r0, #0
40012d7c:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012d80:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012d84 <CyU3PSysDisableCacheMMU>:
40012d84:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d88:	e59f2018 	ldr	r2, [pc, #24]	; 40012da8 <CyU3PSysDisableCacheMMU+0x24>
40012d8c:	e1c00002 	bic	r0, r0, r2
40012d90:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d94:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012d98:	e3e01801 	mvn	r1, #65536	; 0x10000
40012d9c:	e0000001 	and	r0, r0, r1
40012da0:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012da4:	e12fff1e 	bx	lr
40012da8:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012dac <CyU3PSysDisableDCache>:
40012dac:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012db0:	e3c00004 	bic	r0, r0, #4
40012db4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012db8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012dbc <CyU3PSysDisableICache>:
40012dbc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012dc0:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012dc4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dc8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012dcc <CyU3PSysEnableDCache>:
40012dcc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012dd0:	e3800004 	orr	r0, r0, #4
40012dd4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dd8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012ddc <CyU3PSysEnableICache>:
40012ddc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012de0:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012de4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012de8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dec:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012df0 <CyU3PSysEnableMMU>:
40012df0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012df4:	e3800001 	orr	r0, r0, #1
40012df8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dfc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012e00 <CyU3PSysFlushICache>:
40012e00:	e3a00000 	mov	r0, #0
40012e04:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012e08:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012e0c <CyU3PSysInitTCMs>:
40012e0c:	e3a00015 	mov	r0, #21
40012e10:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012e14:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012e18:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012e1c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012e20 <CyU3PSysLoadTLB>:
40012e20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012e24:	e3a00000 	mov	r0, #0
40012e28:	eb00000b 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e2c:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012e30:	eb000009 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e34:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012e38:	eb000007 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e3c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012e40:	eb000005 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e44:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012e48:	eb000003 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e4c:	e59f0004 	ldr	r0, [pc, #4]	; 40012e58 <CyU3PSysLoadTLB+0x38>
40012e50:	eb000001 	bl	40012e5c <CyU3PSysLockTLBEntry>
40012e54:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012e58:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012e5c <CyU3PSysLockTLBEntry>:
40012e5c:	e3a01000 	mov	r1, #0
40012e60:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012e64:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e68:	e3811001 	orr	r1, r1, #1
40012e6c:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e70:	e5900000 	ldr	r0, [r0]
40012e74:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e78:	e3c11001 	bic	r1, r1, #1
40012e7c:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e80:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012e84 <CyU3PDeviceConfigureIOMatrix>:
40012e84:	e92d4010 	push	{r4, lr}
40012e88:	e1a04000 	mov	r4, r0
40012e8c:	e3540000 	cmp	r4, #0
40012e90:	1a000001 	bne	40012e9c <CyU3PDeviceConfigureIOMatrix+0x18>
40012e94:	e3a00041 	mov	r0, #65	; 0x41
40012e98:	e8bd8010 	pop	{r4, pc}
40012e9c:	e1a00004 	mov	r0, r4
40012ea0:	eb0005fd 	bl	4001469c <CyFx3DevIOConfigure>
40012ea4:	e3500000 	cmp	r0, #0
40012ea8:	1a000001 	bne	40012eb4 <CyU3PDeviceConfigureIOMatrix+0x30>
40012eac:	e3a00040 	mov	r0, #64	; 0x40
40012eb0:	eafffff8 	b	40012e98 <CyU3PDeviceConfigureIOMatrix+0x14>
40012eb4:	e3a00000 	mov	r0, #0
40012eb8:	eafffff6 	b	40012e98 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012ebc <CyU3PDeviceGpioOverride>:
40012ebc:	e92d4070 	push	{r4, r5, r6, lr}
40012ec0:	e1a04000 	mov	r4, r0
40012ec4:	e1a05001 	mov	r5, r1
40012ec8:	e354003d 	cmp	r4, #61	; 0x3d
40012ecc:	ba000001 	blt	40012ed8 <CyU3PDeviceGpioOverride+0x1c>
40012ed0:	e3a00040 	mov	r0, #64	; 0x40
40012ed4:	e8bd8070 	pop	{r4, r5, r6, pc}
40012ed8:	e1a02005 	mov	r2, r5
40012edc:	e3a01001 	mov	r1, #1
40012ee0:	e1a00004 	mov	r0, r4
40012ee4:	eb00066c 	bl	4001489c <CyFx3DevIOSelectGpio>
40012ee8:	e3a00000 	mov	r0, #0
40012eec:	eafffff8 	b	40012ed4 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012ef0 <CyU3PIsGpioComplexIOConfigured>:
40012ef0:	e92d4010 	push	{r4, lr}
40012ef4:	e1a04000 	mov	r4, r0
40012ef8:	e3a01000 	mov	r1, #0
40012efc:	e1a00004 	mov	r0, r4
40012f00:	eb000645 	bl	4001481c <CyFx3DevIOIsGpio>
40012f04:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012f08 <CyU3PIsGpioSimpleIOConfigured>:
40012f08:	e92d4010 	push	{r4, lr}
40012f0c:	e1a04000 	mov	r4, r0
40012f10:	e3a01001 	mov	r1, #1
40012f14:	e1a00004 	mov	r0, r4
40012f18:	eb00063f 	bl	4001481c <CyFx3DevIOIsGpio>
40012f1c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012f20 <CyU3PIsGpioValid>:
40012f20:	e1a01000 	mov	r1, r0
40012f24:	e351003d 	cmp	r1, #61	; 0x3d
40012f28:	aa000001 	bge	40012f34 <CyU3PIsGpioValid+0x14>
40012f2c:	e3a00001 	mov	r0, #1
40012f30:	e12fff1e 	bx	lr
40012f34:	e3a00000 	mov	r0, #0
40012f38:	eafffffc 	b	40012f30 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012f3c <CyU3PIsLppIOConfigured>:
40012f3c:	e92d4070 	push	{r4, r5, r6, lr}
40012f40:	e1a04000 	mov	r4, r0
40012f44:	e3a05000 	mov	r5, #0
40012f48:	e3540000 	cmp	r4, #0
40012f4c:	0a00000a 	beq	40012f7c <CyU3PIsLppIOConfigured+0x40>
40012f50:	e3540001 	cmp	r4, #1
40012f54:	0a000004 	beq	40012f6c <CyU3PIsLppIOConfigured+0x30>
40012f58:	e3540002 	cmp	r4, #2
40012f5c:	0a00000e 	beq	40012f9c <CyU3PIsLppIOConfigured+0x60>
40012f60:	e3540003 	cmp	r4, #3
40012f64:	1a000010 	bne	40012fac <CyU3PIsLppIOConfigured+0x70>
40012f68:	ea000007 	b	40012f8c <CyU3PIsLppIOConfigured+0x50>
40012f6c:	e1a00000 	nop			; (mov r0, r0)
40012f70:	eb00063d 	bl	4001486c <CyFx3DevIOIsI2sConfigured>
40012f74:	e1a05000 	mov	r5, r0
40012f78:	ea00000d 	b	40012fb4 <CyU3PIsLppIOConfigured+0x78>
40012f7c:	e1a00000 	nop			; (mov r0, r0)
40012f80:	eb000635 	bl	4001485c <CyFx3DevIOIsI2cConfigured>
40012f84:	e1a05000 	mov	r5, r0
40012f88:	ea000009 	b	40012fb4 <CyU3PIsLppIOConfigured+0x78>
40012f8c:	e1a00000 	nop			; (mov r0, r0)
40012f90:	eb00063d 	bl	4001488c <CyFx3DevIOIsUartConfigured>
40012f94:	e1a05000 	mov	r5, r0
40012f98:	ea000005 	b	40012fb4 <CyU3PIsLppIOConfigured+0x78>
40012f9c:	e1a00000 	nop			; (mov r0, r0)
40012fa0:	eb000635 	bl	4001487c <CyFx3DevIOIsSpiConfigured>
40012fa4:	e1a05000 	mov	r5, r0
40012fa8:	ea000001 	b	40012fb4 <CyU3PIsLppIOConfigured+0x78>
40012fac:	e1a00000 	nop			; (mov r0, r0)
40012fb0:	e1a00000 	nop			; (mov r0, r0)
40012fb4:	e1a00000 	nop			; (mov r0, r0)
40012fb8:	e1a00005 	mov	r0, r5
40012fbc:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012fc0 <CyU3PDebugApplicationDefine>:
40012fc0:	e92d4010 	push	{r4, lr}
40012fc4:	e24dd020 	sub	sp, sp, #32
40012fc8:	e3a00000 	mov	r0, #0
40012fcc:	e59f109c 	ldr	r1, [pc, #156]	; 40013070 <CyU3PDebugApplicationDefine+0xb0>
40012fd0:	e5810000 	str	r0, [r1]
40012fd4:	e3a00001 	mov	r0, #1
40012fd8:	e2811008 	add	r1, r1, #8
40012fdc:	e5810000 	str	r0, [r1]
40012fe0:	e3a00c02 	mov	r0, #512	; 0x200
40012fe4:	ebffc1a2 	bl	40003674 <CyU3PMemAlloc>
40012fe8:	e1a04000 	mov	r4, r0
40012fec:	e3a030a8 	mov	r3, #168	; 0xa8
40012ff0:	e3a02001 	mov	r2, #1
40012ff4:	e3a01000 	mov	r1, #0
40012ff8:	e3a00006 	mov	r0, #6
40012ffc:	e28dc00c 	add	ip, sp, #12
40013000:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013004:	e3a02c02 	mov	r2, #512	; 0x200
40013008:	e1a03001 	mov	r3, r1
4001300c:	e58d2004 	str	r2, [sp, #4]
40013010:	e59f205c 	ldr	r2, [pc, #92]	; 40013074 <CyU3PDebugApplicationDefine+0xb4>
40013014:	e28f105c 	add	r1, pc, #92	; 0x5c
40013018:	e58d0008 	str	r0, [sp, #8]
4001301c:	e59f0064 	ldr	r0, [pc, #100]	; 40013088 <CyU3PDebugApplicationDefine+0xc8>
40013020:	e58d4000 	str	r4, [sp]
40013024:	ebffdde9 	bl	4000a7d0 <_txe_thread_create>
40013028:	e3a00084 	mov	r0, #132	; 0x84
4001302c:	ebffc190 	bl	40003674 <CyU3PMemAlloc>
40013030:	e1a04000 	mov	r4, r0
40013034:	e3a0303c 	mov	r3, #60	; 0x3c
40013038:	e3a02084 	mov	r2, #132	; 0x84
4001303c:	e1cd20f0 	strd	r2, [sp]
40013040:	e1a03004 	mov	r3, r4
40013044:	e3a02003 	mov	r2, #3
40013048:	e3a01000 	mov	r1, #0
4001304c:	e59f0038 	ldr	r0, [pc, #56]	; 4001308c <CyU3PDebugApplicationDefine+0xcc>
40013050:	ebffdcf8 	bl	4000a438 <_txe_queue_create>
40013054:	e3a03038 	mov	r3, #56	; 0x38
40013058:	e3a02000 	mov	r2, #0
4001305c:	e1a01002 	mov	r1, r2
40013060:	e59f0028 	ldr	r0, [pc, #40]	; 40013090 <CyU3PDebugApplicationDefine+0xd0>
40013064:	ebffdc18 	bl	4000a0cc <_txe_mutex_create>
40013068:	e28dd020 	add	sp, sp, #32
4001306c:	e8bd8010 	pop	{r4, pc}
40013070:	40030c70 	.word	0x40030c70
40013074:	40013530 	.word	0x40013530
40013078:	75626544 	.word	0x75626544
4001307c:	68542067 	.word	0x68542067
40013080:	64616572 	.word	0x64616572
40013084:	00000000 	.word	0x00000000
40013088:	40031238 	.word	0x40031238
4001308c:	400312e0 	.word	0x400312e0
40013090:	4003131c 	.word	0x4003131c

Disassembly of section i.CyU3PDebugChannelReset:

40013094 <CyU3PDebugChannelReset>:
40013094:	e92d4010 	push	{r4, lr}
40013098:	e59f0034 	ldr	r0, [pc, #52]	; 400130d4 <CyU3PDebugChannelReset+0x40>
4001309c:	eb000d41 	bl	400165a8 <CyU3PDmaChannelReset>
400130a0:	e3a01000 	mov	r1, #0
400130a4:	e59f0028 	ldr	r0, [pc, #40]	; 400130d4 <CyU3PDebugChannelReset+0x40>
400130a8:	eb000ddf 	bl	4001682c <CyU3PDmaChannelSetXfer>
400130ac:	e1a04000 	mov	r4, r0
400130b0:	e3540000 	cmp	r4, #0
400130b4:	1a000004 	bne	400130cc <CyU3PDebugChannelReset+0x38>
400130b8:	e3e02000 	mvn	r2, #0
400130bc:	e59f1014 	ldr	r1, [pc, #20]	; 400130d8 <CyU3PDebugChannelReset+0x44>
400130c0:	e281000c 	add	r0, r1, #12
400130c4:	eb000c6a 	bl	40016274 <CyU3PDmaChannelGetBuffer>
400130c8:	e1a04000 	mov	r4, r0
400130cc:	e1a00004 	mov	r0, r4
400130d0:	e8bd8010 	pop	{r4, pc}
400130d4:	40031360 	.word	0x40031360
400130d8:	40031354 	.word	0x40031354

Disassembly of section i.CyU3PDebugInit:

400130dc <CyU3PDebugInit>:
400130dc:	e92d4070 	push	{r4, r5, r6, lr}
400130e0:	e24dd020 	sub	sp, sp, #32
400130e4:	e1a04000 	mov	r4, r0
400130e8:	e1a06001 	mov	r6, r1
400130ec:	e59f0150 	ldr	r0, [pc, #336]	; 40013244 <CyU3PDebugInit+0x168>
400130f0:	e5900000 	ldr	r0, [r0]
400130f4:	e3500000 	cmp	r0, #0
400130f8:	1a000003 	bne	4001310c <CyU3PDebugInit+0x30>
400130fc:	e59f0144 	ldr	r0, [pc, #324]	; 40013248 <CyU3PDebugInit+0x16c>
40013100:	e5900000 	ldr	r0, [r0]
40013104:	e3500000 	cmp	r0, #0
40013108:	0a000002 	beq	40013118 <CyU3PDebugInit+0x3c>
4001310c:	e3a00043 	mov	r0, #67	; 0x43
40013110:	e28dd020 	add	sp, sp, #32
40013114:	e8bd8070 	pop	{r4, r5, r6, pc}
40013118:	e1a00004 	mov	r0, r4
4001311c:	eb0007b3 	bl	40014ff0 <CyU3PDmaSocketIsValidConsumer>
40013120:	e1a05000 	mov	r5, r0
40013124:	e3550000 	cmp	r5, #0
40013128:	1a000001 	bne	40013134 <CyU3PDebugInit+0x58>
4001312c:	e3a00040 	mov	r0, #64	; 0x40
40013130:	eafffff6 	b	40013110 <CyU3PDebugInit+0x34>
40013134:	e3e01000 	mvn	r1, #0
40013138:	e59f010c 	ldr	r0, [pc, #268]	; 4001324c <CyU3PDebugInit+0x170>
4001313c:	ebffdc60 	bl	4000a2c4 <_txe_mutex_get>
40013140:	e3a00c01 	mov	r0, #256	; 0x100
40013144:	e1cd00b4 	strh	r0, [sp, #4]
40013148:	e3a00008 	mov	r0, #8
4001314c:	e1cd00b6 	strh	r0, [sp, #6]
40013150:	e3a00000 	mov	r0, #0
40013154:	e1cd00bc 	strh	r0, [sp, #12]
40013158:	e59f00f0 	ldr	r0, [pc, #240]	; 40013250 <CyU3PDebugInit+0x174>
4001315c:	e1cd00b8 	strh	r0, [sp, #8]
40013160:	e1cd40ba 	strh	r4, [sp, #10]
40013164:	e3a00000 	mov	r0, #0
40013168:	e5cd0014 	strb	r0, [sp, #20]
4001316c:	e1cd00be 	strh	r0, [sp, #14]
40013170:	e1cd01b0 	strh	r0, [sp, #16]
40013174:	e1cd01b2 	strh	r0, [sp, #18]
40013178:	e58d001c 	str	r0, [sp, #28]
4001317c:	e28d2004 	add	r2, sp, #4
40013180:	e3a01004 	mov	r1, #4
40013184:	e59f00c8 	ldr	r0, [pc, #200]	; 40013254 <CyU3PDebugInit+0x178>
40013188:	eb000a71 	bl	40015b54 <CyU3PDmaChannelCreate>
4001318c:	e1a05000 	mov	r5, r0
40013190:	e3550000 	cmp	r5, #0
40013194:	1a000007 	bne	400131b8 <CyU3PDebugInit+0xdc>
40013198:	e59f00b8 	ldr	r0, [pc, #184]	; 40013258 <CyU3PDebugInit+0x17c>
4001319c:	e5900000 	ldr	r0, [r0]
400131a0:	e3500000 	cmp	r0, #0
400131a4:	0a000003 	beq	400131b8 <CyU3PDebugInit+0xdc>
400131a8:	e3a01001 	mov	r1, #1
400131ac:	e59f00a0 	ldr	r0, [pc, #160]	; 40013254 <CyU3PDebugInit+0x178>
400131b0:	eb0008d7 	bl	40015514 <CyU3PDmaChannelCacheControl>
400131b4:	e1a05000 	mov	r5, r0
400131b8:	e3550000 	cmp	r5, #0
400131bc:	1a000003 	bne	400131d0 <CyU3PDebugInit+0xf4>
400131c0:	e3a01000 	mov	r1, #0
400131c4:	e59f0088 	ldr	r0, [pc, #136]	; 40013254 <CyU3PDebugInit+0x178>
400131c8:	eb000d97 	bl	4001682c <CyU3PDmaChannelSetXfer>
400131cc:	e1a05000 	mov	r5, r0
400131d0:	e3550000 	cmp	r5, #0
400131d4:	1a000004 	bne	400131ec <CyU3PDebugInit+0x110>
400131d8:	e3e02000 	mvn	r2, #0
400131dc:	e59f1078 	ldr	r1, [pc, #120]	; 4001325c <CyU3PDebugInit+0x180>
400131e0:	e281000c 	add	r0, r1, #12
400131e4:	eb000c22 	bl	40016274 <CyU3PDmaChannelGetBuffer>
400131e8:	e1a05000 	mov	r5, r0
400131ec:	e3550000 	cmp	r5, #0
400131f0:	0a000005 	beq	4001320c <CyU3PDebugInit+0x130>
400131f4:	e59f0058 	ldr	r0, [pc, #88]	; 40013254 <CyU3PDebugInit+0x178>
400131f8:	eb000b4f 	bl	40015f3c <CyU3PDmaChannelDestroy>
400131fc:	e59f0048 	ldr	r0, [pc, #72]	; 4001324c <CyU3PDebugInit+0x170>
40013200:	ebffdc64 	bl	4000a398 <_txe_mutex_put>
40013204:	e1a00005 	mov	r0, r5
40013208:	eaffffc0 	b	40013110 <CyU3PDebugInit+0x34>
4001320c:	e3a00000 	mov	r0, #0
40013210:	e59f1048 	ldr	r1, [pc, #72]	; 40013260 <CyU3PDebugInit+0x184>
40013214:	e1c100b0 	strh	r0, [r1]
40013218:	e59f1044 	ldr	r1, [pc, #68]	; 40013264 <CyU3PDebugInit+0x188>
4001321c:	e1c100b0 	strh	r0, [r1]
40013220:	e59f0040 	ldr	r0, [pc, #64]	; 40013268 <CyU3PDebugInit+0x18c>
40013224:	e5c06000 	strb	r6, [r0]
40013228:	e3a00001 	mov	r0, #1
4001322c:	e2411010 	sub	r1, r1, #16
40013230:	e5810000 	str	r0, [r1]
40013234:	e59f0010 	ldr	r0, [pc, #16]	; 4001324c <CyU3PDebugInit+0x170>
40013238:	ebffdc56 	bl	4000a398 <_txe_mutex_put>
4001323c:	e1a00005 	mov	r0, r5
40013240:	eaffffb2 	b	40013110 <CyU3PDebugInit+0x34>
40013244:	40030c70 	.word	0x40030c70
40013248:	40030c74 	.word	0x40030c74
4001324c:	4003131c 	.word	0x4003131c
40013250:	00003f01 	.word	0x00003f01
40013254:	40031360 	.word	0x40031360
40013258:	40030c60 	.word	0x40030c60
4001325c:	40031354 	.word	0x40031354
40013260:	40030c7e 	.word	0x40030c7e
40013264:	40030c80 	.word	0x40030c80
40013268:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugIntToStr:

4001326c <CyU3PDebugIntToStr>:
4001326c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013270:	e1a04000 	mov	r4, r0
40013274:	e1a05001 	mov	r5, r1
40013278:	e1a08002 	mov	r8, r2
4001327c:	e3a0600a 	mov	r6, #10
40013280:	e1a07004 	mov	r7, r4
40013284:	e3a00000 	mov	r0, #0
40013288:	e1a04007 	mov	r4, r7
4001328c:	e7c70006 	strb	r0, [r7, r6]
40013290:	e1a00000 	nop			; (mov r0, r0)
40013294:	e1a01008 	mov	r1, r8
40013298:	e1a00005 	mov	r0, r5
4001329c:	ebfff664 	bl	40010c34 <__aeabi_uidivmod>
400132a0:	e28f0030 	add	r0, pc, #48	; 0x30
400132a4:	e7d00001 	ldrb	r0, [r0, r1]
400132a8:	e2461001 	sub	r1, r6, #1
400132ac:	e20110ff 	and	r1, r1, #255	; 0xff
400132b0:	e1a06001 	mov	r6, r1
400132b4:	e7c70001 	strb	r0, [r7, r1]
400132b8:	e1a01008 	mov	r1, r8
400132bc:	e1a00005 	mov	r0, r5
400132c0:	ebfff65b 	bl	40010c34 <__aeabi_uidivmod>
400132c4:	e1a05000 	mov	r5, r0
400132c8:	e3550000 	cmp	r5, #0
400132cc:	1afffff0 	bne	40013294 <CyU3PDebugIntToStr+0x28>
400132d0:	e0870006 	add	r0, r7, r6
400132d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400132d8:	33323130 	.word	0x33323130
400132dc:	37363534 	.word	0x37363534
400132e0:	42413938 	.word	0x42413938
400132e4:	46454443 	.word	0x46454443
400132e8:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

400132ec <CyU3PDebugPreamble>:
400132ec:	e59f1004 	ldr	r1, [pc, #4]	; 400132f8 <CyU3PDebugPreamble+0xc>
400132f0:	e5810000 	str	r0, [r1]
400132f4:	e12fff1e 	bx	lr
400132f8:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugPrint:

400132fc <CyU3PDebugPrint>:
400132fc:	e92d000f 	push	{r0, r1, r2, r3}
40013300:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013304:	e24dd028 	sub	sp, sp, #40	; 0x28
40013308:	e1a04000 	mov	r4, r0
4001330c:	e59f0200 	ldr	r0, [pc, #512]	; 40013514 <CyU3PDebugPrint+0x218>
40013310:	e5900000 	ldr	r0, [r0]
40013314:	e3500000 	cmp	r0, #0
40013318:	1a000003 	bne	4001332c <CyU3PDebugPrint+0x30>
4001331c:	e3a00042 	mov	r0, #66	; 0x42
40013320:	e28dd028 	add	sp, sp, #40	; 0x28
40013324:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40013328:	e49df014 	ldr	pc, [sp], #20
4001332c:	e59f01e4 	ldr	r0, [pc, #484]	; 40013518 <CyU3PDebugPrint+0x21c>
40013330:	e5d00000 	ldrb	r0, [r0]
40013334:	e1540000 	cmp	r4, r0
40013338:	da000001 	ble	40013344 <CyU3PDebugPrint+0x48>
4001333c:	e3a00000 	mov	r0, #0
40013340:	eafffff6 	b	40013320 <CyU3PDebugPrint+0x24>
40013344:	ebffd5c9 	bl	40008a70 <_tx_thread_identify>
40013348:	e1a05000 	mov	r5, r0
4001334c:	e3550000 	cmp	r5, #0
40013350:	1a000001 	bne	4001335c <CyU3PDebugPrint+0x60>
40013354:	e3a00013 	mov	r0, #19
40013358:	eafffff0 	b	40013320 <CyU3PDebugPrint+0x24>
4001335c:	e3a03000 	mov	r3, #0
40013360:	e58d3004 	str	r3, [sp, #4]
40013364:	e58d3008 	str	r3, [sp, #8]
40013368:	e58d300c 	str	r3, [sp, #12]
4001336c:	e58d3010 	str	r3, [sp, #16]
40013370:	e58d3000 	str	r3, [sp]
40013374:	e1a02003 	mov	r2, r3
40013378:	e28d1018 	add	r1, sp, #24
4001337c:	e1a00005 	mov	r0, r5
40013380:	ebffddab 	bl	4000aa34 <_txe_thread_info_get>
40013384:	e59d0018 	ldr	r0, [sp, #24]
40013388:	e5d00001 	ldrb	r0, [r0, #1]
4001338c:	e2400030 	sub	r0, r0, #48	; 0x30
40013390:	e59d1018 	ldr	r1, [sp, #24]
40013394:	e5d11000 	ldrb	r1, [r1]
40013398:	e2411030 	sub	r1, r1, #48	; 0x30
4001339c:	e3a0200a 	mov	r2, #10
400133a0:	e1000182 	smlabb	r0, r2, r1, r0
400133a4:	e20080ff 	and	r8, r0, #255	; 0xff
400133a8:	e3e01000 	mvn	r1, #0
400133ac:	e59f0168 	ldr	r0, [pc, #360]	; 4001351c <CyU3PDebugPrint+0x220>
400133b0:	ebffdbc3 	bl	4000a2c4 <_txe_mutex_get>
400133b4:	e59f0164 	ldr	r0, [pc, #356]	; 40013520 <CyU3PDebugPrint+0x224>
400133b8:	e1d000b0 	ldrh	r0, [r0]
400133bc:	e3500000 	cmp	r0, #0
400133c0:	0a000011 	beq	4001340c <CyU3PDebugPrint+0x110>
400133c4:	e3a02000 	mov	r2, #0
400133c8:	e3a01c01 	mov	r1, #256	; 0x100
400133cc:	e59f0150 	ldr	r0, [pc, #336]	; 40013524 <CyU3PDebugPrint+0x228>
400133d0:	eb000864 	bl	40015568 <CyU3PDmaChannelCommitBuffer>
400133d4:	e1a06000 	mov	r6, r0
400133d8:	e3560000 	cmp	r6, #0
400133dc:	1a000004 	bne	400133f4 <CyU3PDebugPrint+0xf8>
400133e0:	e3e02000 	mvn	r2, #0
400133e4:	e59f113c 	ldr	r1, [pc, #316]	; 40013528 <CyU3PDebugPrint+0x22c>
400133e8:	e281000c 	add	r0, r1, #12
400133ec:	eb000ba0 	bl	40016274 <CyU3PDmaChannelGetBuffer>
400133f0:	e1a06000 	mov	r6, r0
400133f4:	e3560000 	cmp	r6, #0
400133f8:	0a000000 	beq	40013400 <CyU3PDebugPrint+0x104>
400133fc:	ebffff24 	bl	40013094 <CyU3PDebugChannelReset>
40013400:	e3a00000 	mov	r0, #0
40013404:	e59f1114 	ldr	r1, [pc, #276]	; 40013520 <CyU3PDebugPrint+0x224>
40013408:	e1c100b0 	strh	r0, [r1]
4001340c:	e59f0114 	ldr	r0, [pc, #276]	; 40013528 <CyU3PDebugPrint+0x22c>
40013410:	e5907000 	ldr	r7, [r0]
40013414:	e3a00c01 	mov	r0, #256	; 0x100
40013418:	e58d0014 	str	r0, [sp, #20]
4001341c:	e59f0108 	ldr	r0, [pc, #264]	; 4001352c <CyU3PDebugPrint+0x230>
40013420:	e5900000 	ldr	r0, [r0]
40013424:	e3500000 	cmp	r0, #0
40013428:	0a000005 	beq	40013444 <CyU3PDebugPrint+0x148>
4001342c:	e2877008 	add	r7, r7, #8
40013430:	e1dd01b4 	ldrh	r0, [sp, #20]
40013434:	e2400008 	sub	r0, r0, #8
40013438:	e1a00800 	lsl	r0, r0, #16
4001343c:	e1a00820 	lsr	r0, r0, #16
40013440:	e58d0014 	str	r0, [sp, #20]
40013444:	e28d0048 	add	r0, sp, #72	; 0x48
40013448:	e58d001c 	str	r0, [sp, #28]
4001344c:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40013450:	e59d301c 	ldr	r3, [sp, #28]
40013454:	e28d1014 	add	r1, sp, #20
40013458:	e1a00007 	mov	r0, r7
4001345c:	eb000071 	bl	40013628 <MyDebugSNPrint>
40013460:	e1a06000 	mov	r6, r0
40013464:	e59f00c0 	ldr	r0, [pc, #192]	; 4001352c <CyU3PDebugPrint+0x230>
40013468:	e5900000 	ldr	r0, [r0]
4001346c:	e3500000 	cmp	r0, #0
40013470:	0a00000f 	beq	400134b4 <CyU3PDebugPrint+0x1b8>
40013474:	e59f00ac 	ldr	r0, [pc, #172]	; 40013528 <CyU3PDebugPrint+0x22c>
40013478:	e5907000 	ldr	r7, [r0]
4001347c:	e5cd4020 	strb	r4, [sp, #32]
40013480:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013484:	e3e00000 	mvn	r0, #0
40013488:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001348c:	e1dd01b4 	ldrh	r0, [sp, #20]
40013490:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013494:	e3a02008 	mov	r2, #8
40013498:	e28d1020 	add	r1, sp, #32
4001349c:	e1a00007 	mov	r0, r7
400134a0:	ebffc10b 	bl	400038d4 <CyU3PMemCopy>
400134a4:	e1dd01b4 	ldrh	r0, [sp, #20]
400134a8:	e2800008 	add	r0, r0, #8
400134ac:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400134b0:	e58d0014 	str	r0, [sp, #20]
400134b4:	e3a02000 	mov	r2, #0
400134b8:	e1dd11b4 	ldrh	r1, [sp, #20]
400134bc:	e59f0060 	ldr	r0, [pc, #96]	; 40013524 <CyU3PDebugPrint+0x228>
400134c0:	eb000828 	bl	40015568 <CyU3PDmaChannelCommitBuffer>
400134c4:	e1a06000 	mov	r6, r0
400134c8:	e3560000 	cmp	r6, #0
400134cc:	1a000004 	bne	400134e4 <CyU3PDebugPrint+0x1e8>
400134d0:	e3e02000 	mvn	r2, #0
400134d4:	e59f104c 	ldr	r1, [pc, #76]	; 40013528 <CyU3PDebugPrint+0x22c>
400134d8:	e281000c 	add	r0, r1, #12
400134dc:	eb000b64 	bl	40016274 <CyU3PDmaChannelGetBuffer>
400134e0:	e1a06000 	mov	r6, r0
400134e4:	e3560000 	cmp	r6, #0
400134e8:	0a000002 	beq	400134f8 <CyU3PDebugPrint+0x1fc>
400134ec:	ebfffee8 	bl	40013094 <CyU3PDebugChannelReset>
400134f0:	e1a00006 	mov	r0, r6
400134f4:	eaffff89 	b	40013320 <CyU3PDebugPrint+0x24>
400134f8:	e3a00000 	mov	r0, #0
400134fc:	e59f101c 	ldr	r1, [pc, #28]	; 40013520 <CyU3PDebugPrint+0x224>
40013500:	e1c100b0 	strh	r0, [r1]
40013504:	e59f0010 	ldr	r0, [pc, #16]	; 4001351c <CyU3PDebugPrint+0x220>
40013508:	ebffdba2 	bl	4000a398 <_txe_mutex_put>
4001350c:	e3a00000 	mov	r0, #0
40013510:	eaffff82 	b	40013320 <CyU3PDebugPrint+0x24>
40013514:	40030c70 	.word	0x40030c70
40013518:	40030c7c 	.word	0x40030c7c
4001351c:	4003131c 	.word	0x4003131c
40013520:	40030c80 	.word	0x40030c80
40013524:	40031360 	.word	0x40031360
40013528:	40031354 	.word	0x40031354
4001352c:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugThreadEntry:

40013530 <CyU3PDebugThreadEntry>:
40013530:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013534:	e1a06000 	mov	r6, r0
40013538:	e3a05000 	mov	r5, #0
4001353c:	e1a00000 	nop			; (mov r0, r0)
40013540:	e3e02000 	mvn	r2, #0
40013544:	e1a0100d 	mov	r1, sp
40013548:	e59f00c4 	ldr	r0, [pc, #196]	; 40013614 <CyU3PDebugThreadEntry+0xe4>
4001354c:	ebffdc4f 	bl	4000a690 <_txe_queue_receive>
40013550:	e1a04000 	mov	r4, r0
40013554:	e3540000 	cmp	r4, #0
40013558:	1afffff8 	bne	40013540 <CyU3PDebugThreadEntry+0x10>
4001355c:	e3e01000 	mvn	r1, #0
40013560:	e59f00b0 	ldr	r0, [pc, #176]	; 40013618 <CyU3PDebugThreadEntry+0xe8>
40013564:	ebffdb56 	bl	4000a2c4 <_txe_mutex_get>
40013568:	e59f00ac 	ldr	r0, [pc, #172]	; 4001361c <CyU3PDebugThreadEntry+0xec>
4001356c:	e1d000b0 	ldrh	r0, [r0]
40013570:	e3500c01 	cmp	r0, #256	; 0x100
40013574:	0a000007 	beq	40013598 <CyU3PDebugThreadEntry+0x68>
40013578:	e59f10a0 	ldr	r1, [pc, #160]	; 40013620 <CyU3PDebugThreadEntry+0xf0>
4001357c:	e5911000 	ldr	r1, [r1]
40013580:	e59f2094 	ldr	r2, [pc, #148]	; 4001361c <CyU3PDebugThreadEntry+0xec>
40013584:	e1d220b0 	ldrh	r2, [r2]
40013588:	e0810002 	add	r0, r1, r2
4001358c:	e3a02008 	mov	r2, #8
40013590:	e1a0100d 	mov	r1, sp
40013594:	ebffc0ce 	bl	400038d4 <CyU3PMemCopy>
40013598:	e59f007c 	ldr	r0, [pc, #124]	; 4001361c <CyU3PDebugThreadEntry+0xec>
4001359c:	e1d000b0 	ldrh	r0, [r0]
400135a0:	e35000f8 	cmp	r0, #248	; 0xf8
400135a4:	1a000015 	bne	40013600 <CyU3PDebugThreadEntry+0xd0>
400135a8:	e3a02000 	mov	r2, #0
400135ac:	e3a01c01 	mov	r1, #256	; 0x100
400135b0:	e59f006c 	ldr	r0, [pc, #108]	; 40013624 <CyU3PDebugThreadEntry+0xf4>
400135b4:	eb0007eb 	bl	40015568 <CyU3PDmaChannelCommitBuffer>
400135b8:	e1a05000 	mov	r5, r0
400135bc:	e3550000 	cmp	r5, #0
400135c0:	1a000004 	bne	400135d8 <CyU3PDebugThreadEntry+0xa8>
400135c4:	e3e02000 	mvn	r2, #0
400135c8:	e59f1050 	ldr	r1, [pc, #80]	; 40013620 <CyU3PDebugThreadEntry+0xf0>
400135cc:	e281000c 	add	r0, r1, #12
400135d0:	eb000b27 	bl	40016274 <CyU3PDmaChannelGetBuffer>
400135d4:	e1a05000 	mov	r5, r0
400135d8:	e3550000 	cmp	r5, #0
400135dc:	0a000004 	beq	400135f4 <CyU3PDebugThreadEntry+0xc4>
400135e0:	ebfffeab 	bl	40013094 <CyU3PDebugChannelReset>
400135e4:	e1a05000 	mov	r5, r0
400135e8:	e3550000 	cmp	r5, #0
400135ec:	0a000000 	beq	400135f4 <CyU3PDebugThreadEntry+0xc4>
400135f0:	ea000005 	b	4001360c <CyU3PDebugThreadEntry+0xdc>
400135f4:	e3a00000 	mov	r0, #0
400135f8:	e59f101c 	ldr	r1, [pc, #28]	; 4001361c <CyU3PDebugThreadEntry+0xec>
400135fc:	e1c100b0 	strh	r0, [r1]
40013600:	e59f0010 	ldr	r0, [pc, #16]	; 40013618 <CyU3PDebugThreadEntry+0xe8>
40013604:	ebffdb63 	bl	4000a398 <_txe_mutex_put>
40013608:	eaffffcc 	b	40013540 <CyU3PDebugThreadEntry+0x10>
4001360c:	e1a00000 	nop			; (mov r0, r0)
40013610:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013614:	400312e0 	.word	0x400312e0
40013618:	4003131c 	.word	0x4003131c
4001361c:	40030c80 	.word	0x40030c80
40013620:	40031354 	.word	0x40031354
40013624:	40031360 	.word	0x40031360

Disassembly of section i.MyDebugSNPrint:

40013628 <MyDebugSNPrint>:
40013628:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001362c:	e24dd01c 	sub	sp, sp, #28
40013630:	e1a04000 	mov	r4, r0
40013634:	e1a05001 	mov	r5, r1
40013638:	e1a06002 	mov	r6, r2
4001363c:	e3a08000 	mov	r8, #0
40013640:	e3a00000 	mov	r0, #0
40013644:	e58d0018 	str	r0, [sp, #24]
40013648:	e3a09000 	mov	r9, #0
4001364c:	e1d5b0b0 	ldrh	fp, [r5]
40013650:	e3540000 	cmp	r4, #0
40013654:	1a000002 	bne	40013664 <MyDebugSNPrint+0x3c>
40013658:	e3a00040 	mov	r0, #64	; 0x40
4001365c:	e28dd02c 	add	sp, sp, #44	; 0x2c
40013660:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40013664:	e1a07006 	mov	r7, r6
40013668:	ea00008d 	b	400138a4 <MyDebugSNPrint+0x27c>
4001366c:	e24b0002 	sub	r0, fp, #2
40013670:	e1500009 	cmp	r0, r9
40013674:	ca000001 	bgt	40013680 <MyDebugSNPrint+0x58>
40013678:	e3a00040 	mov	r0, #64	; 0x40
4001367c:	eafffff6 	b	4001365c <MyDebugSNPrint+0x34>
40013680:	e5d70000 	ldrb	r0, [r7]
40013684:	e3500025 	cmp	r0, #37	; 0x25
40013688:	0a000005 	beq	400136a4 <MyDebugSNPrint+0x7c>
4001368c:	e5d71000 	ldrb	r1, [r7]
40013690:	e1a00009 	mov	r0, r9
40013694:	e2892001 	add	r2, r9, #1
40013698:	e3c29801 	bic	r9, r2, #65536	; 0x10000
4001369c:	e7c41000 	strb	r1, [r4, r0]
400136a0:	ea00007e 	b	400138a0 <MyDebugSNPrint+0x278>
400136a4:	e2877001 	add	r7, r7, #1
400136a8:	e5d70000 	ldrb	r0, [r7]
400136ac:	e3500064 	cmp	r0, #100	; 0x64
400136b0:	0a000021 	beq	4001373c <MyDebugSNPrint+0x114>
400136b4:	ca000006 	bgt	400136d4 <MyDebugSNPrint+0xac>
400136b8:	e3500025 	cmp	r0, #37	; 0x25
400136bc:	0a00000b 	beq	400136f0 <MyDebugSNPrint+0xc8>
400136c0:	e3500058 	cmp	r0, #88	; 0x58
400136c4:	0a00004c 	beq	400137fc <MyDebugSNPrint+0x1d4>
400136c8:	e3500063 	cmp	r0, #99	; 0x63
400136cc:	1a00005a 	bne	4001383c <MyDebugSNPrint+0x214>
400136d0:	ea00000d 	b	4001370c <MyDebugSNPrint+0xe4>
400136d4:	e3500073 	cmp	r0, #115	; 0x73
400136d8:	0a000031 	beq	400137a4 <MyDebugSNPrint+0x17c>
400136dc:	e3500075 	cmp	r0, #117	; 0x75
400136e0:	0a000036 	beq	400137c0 <MyDebugSNPrint+0x198>
400136e4:	e3500078 	cmp	r0, #120	; 0x78
400136e8:	1a000053 	bne	4001383c <MyDebugSNPrint+0x214>
400136ec:	ea000044 	b	40013804 <MyDebugSNPrint+0x1dc>
400136f0:	e1a00000 	nop			; (mov r0, r0)
400136f4:	e3a01025 	mov	r1, #37	; 0x25
400136f8:	e1a00009 	mov	r0, r9
400136fc:	e2892001 	add	r2, r9, #1
40013700:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013704:	e7c41000 	strb	r1, [r4, r0]
40013708:	ea00004e 	b	40013848 <MyDebugSNPrint+0x220>
4001370c:	e1a00000 	nop			; (mov r0, r0)
40013710:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013714:	e5900000 	ldr	r0, [r0]
40013718:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
4001371c:	e2811004 	add	r1, r1, #4
40013720:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013724:	e20010ff 	and	r1, r0, #255	; 0xff
40013728:	e1a00009 	mov	r0, r9
4001372c:	e2892001 	add	r2, r9, #1
40013730:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013734:	e7c41000 	strb	r1, [r4, r0]
40013738:	ea000042 	b	40013848 <MyDebugSNPrint+0x220>
4001373c:	e1a00000 	nop			; (mov r0, r0)
40013740:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013744:	e5900000 	ldr	r0, [r0]
40013748:	e58d0014 	str	r0, [sp, #20]
4001374c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013750:	e2800004 	add	r0, r0, #4
40013754:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013758:	e59d0014 	ldr	r0, [sp, #20]
4001375c:	e3500000 	cmp	r0, #0
40013760:	aa000007 	bge	40013784 <MyDebugSNPrint+0x15c>
40013764:	e3a0102d 	mov	r1, #45	; 0x2d
40013768:	e1a00009 	mov	r0, r9
4001376c:	e2892001 	add	r2, r9, #1
40013770:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013774:	e7c41000 	strb	r1, [r4, r0]
40013778:	e59d0014 	ldr	r0, [sp, #20]
4001377c:	e2600000 	rsb	r0, r0, #0
40013780:	e58d0014 	str	r0, [sp, #20]
40013784:	e3a0200a 	mov	r2, #10
40013788:	e59d1014 	ldr	r1, [sp, #20]
4001378c:	e28d0004 	add	r0, sp, #4
40013790:	ebfffeb5 	bl	4001326c <CyU3PDebugIntToStr>
40013794:	e1a08000 	mov	r8, r0
40013798:	e3a00001 	mov	r0, #1
4001379c:	e58d0018 	str	r0, [sp, #24]
400137a0:	ea000028 	b	40013848 <MyDebugSNPrint+0x220>
400137a4:	e1a00000 	nop			; (mov r0, r0)
400137a8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137ac:	e4908004 	ldr	r8, [r0], #4
400137b0:	e58d0028 	str	r0, [sp, #40]	; 0x28
400137b4:	e3a00001 	mov	r0, #1
400137b8:	e58d0018 	str	r0, [sp, #24]
400137bc:	ea000021 	b	40013848 <MyDebugSNPrint+0x220>
400137c0:	e1a00000 	nop			; (mov r0, r0)
400137c4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137c8:	e5900000 	ldr	r0, [r0]
400137cc:	e58d0010 	str	r0, [sp, #16]
400137d0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137d4:	e2800004 	add	r0, r0, #4
400137d8:	e58d0028 	str	r0, [sp, #40]	; 0x28
400137dc:	e3a0200a 	mov	r2, #10
400137e0:	e59d1010 	ldr	r1, [sp, #16]
400137e4:	e28d0004 	add	r0, sp, #4
400137e8:	ebfffe9f 	bl	4001326c <CyU3PDebugIntToStr>
400137ec:	e1a08000 	mov	r8, r0
400137f0:	e3a00001 	mov	r0, #1
400137f4:	e58d0018 	str	r0, [sp, #24]
400137f8:	ea000012 	b	40013848 <MyDebugSNPrint+0x220>
400137fc:	e1a00000 	nop			; (mov r0, r0)
40013800:	e1a00000 	nop			; (mov r0, r0)
40013804:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013808:	e5900000 	ldr	r0, [r0]
4001380c:	e58d0010 	str	r0, [sp, #16]
40013810:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013814:	e2800004 	add	r0, r0, #4
40013818:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001381c:	e3a02010 	mov	r2, #16
40013820:	e59d1010 	ldr	r1, [sp, #16]
40013824:	e28d0004 	add	r0, sp, #4
40013828:	ebfffe8f 	bl	4001326c <CyU3PDebugIntToStr>
4001382c:	e1a08000 	mov	r8, r0
40013830:	e3a00001 	mov	r0, #1
40013834:	e58d0018 	str	r0, [sp, #24]
40013838:	ea000002 	b	40013848 <MyDebugSNPrint+0x220>
4001383c:	e1a00000 	nop			; (mov r0, r0)
40013840:	e3a00040 	mov	r0, #64	; 0x40
40013844:	eaffff84 	b	4001365c <MyDebugSNPrint+0x34>
40013848:	e1a00000 	nop			; (mov r0, r0)
4001384c:	e59d0018 	ldr	r0, [sp, #24]
40013850:	e3500000 	cmp	r0, #0
40013854:	0a000010 	beq	4001389c <MyDebugSNPrint+0x274>
40013858:	e1a00008 	mov	r0, r8
4001385c:	ebfff49f 	bl	40010ae0 <strlen>
40013860:	e1a0a800 	lsl	sl, r0, #16
40013864:	e1a0a82a 	lsr	sl, sl, #16
40013868:	e04b000a 	sub	r0, fp, sl
4001386c:	e2400001 	sub	r0, r0, #1
40013870:	e1500009 	cmp	r0, r9
40013874:	ca000001 	bgt	40013880 <MyDebugSNPrint+0x258>
40013878:	e3a00040 	mov	r0, #64	; 0x40
4001387c:	eaffff76 	b	4001365c <MyDebugSNPrint+0x34>
40013880:	e0840009 	add	r0, r4, r9
40013884:	e1a01008 	mov	r1, r8
40013888:	ebfff458 	bl	400109f0 <strcpy>
4001388c:	e089000a 	add	r0, r9, sl
40013890:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013894:	e3a00000 	mov	r0, #0
40013898:	e58d0018 	str	r0, [sp, #24]
4001389c:	e1a00000 	nop			; (mov r0, r0)
400138a0:	e2877001 	add	r7, r7, #1
400138a4:	e5d70000 	ldrb	r0, [r7]
400138a8:	e3500000 	cmp	r0, #0
400138ac:	1affff6e 	bne	4001366c <MyDebugSNPrint+0x44>
400138b0:	e3a00000 	mov	r0, #0
400138b4:	e7c40009 	strb	r0, [r4, r9]
400138b8:	e1c590b0 	strh	r9, [r5]
400138bc:	eaffff66 	b	4001365c <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

400138c0 <CyU3PBusyWait>:
400138c0:	ea000006 	b	400138e0 <CyU3PBusyWait+0x20>
400138c4:	e3a01000 	mov	r1, #0
400138c8:	ea000002 	b	400138d8 <CyU3PBusyWait+0x18>
400138cc:	e281100a 	add	r1, r1, #10
400138d0:	e241100a 	sub	r1, r1, #10
400138d4:	e2811001 	add	r1, r1, #1
400138d8:	e351001f 	cmp	r1, #31
400138dc:	3afffffa 	bcc	400138cc <CyU3PBusyWait+0xc>
400138e0:	e1b02000 	movs	r2, r0
400138e4:	e2403001 	sub	r3, r0, #1
400138e8:	e1a00803 	lsl	r0, r3, #16
400138ec:	e1a00820 	lsr	r0, r0, #16
400138f0:	1afffff3 	bne	400138c4 <CyU3PBusyWait+0x4>
400138f4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400138f8 <CyU3PComputeChecksum>:
400138f8:	e92d4010 	push	{r4, lr}
400138fc:	e1a03000 	mov	r3, r0
40013900:	e3a00000 	mov	r0, #0
40013904:	e3530000 	cmp	r3, #0
40013908:	0a000003 	beq	4001391c <CyU3PComputeChecksum+0x24>
4001390c:	e3510000 	cmp	r1, #0
40013910:	0a000001 	beq	4001391c <CyU3PComputeChecksum+0x24>
40013914:	e3520000 	cmp	r2, #0
40013918:	1a000001 	bne	40013924 <CyU3PComputeChecksum+0x2c>
4001391c:	e3a00040 	mov	r0, #64	; 0x40
40013920:	ea00000a 	b	40013950 <CyU3PComputeChecksum+0x58>
40013924:	e3a0e000 	mov	lr, #0
40013928:	e582e000 	str	lr, [r2]
4001392c:	e3a0c000 	mov	ip, #0
40013930:	ea000004 	b	40013948 <CyU3PComputeChecksum+0x50>
40013934:	e592e000 	ldr	lr, [r2]
40013938:	e793410c 	ldr	r4, [r3, ip, lsl #2]
4001393c:	e08ee004 	add	lr, lr, r4
40013940:	e582e000 	str	lr, [r2]
40013944:	e28cc001 	add	ip, ip, #1
40013948:	e15c0121 	cmp	ip, r1, lsr #2
4001394c:	3afffff8 	bcc	40013934 <CyU3PComputeChecksum+0x3c>
40013950:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013954 <__aeabi_memclr4>:
40013954:	e92d4030 	push	{r4, r5, lr}
40013958:	e1a04000 	mov	r4, r0
4001395c:	e1a05001 	mov	r5, r1
40013960:	e3a02000 	mov	r2, #0
40013964:	e1a01005 	mov	r1, r5
40013968:	e1a00004 	mov	r0, r4
4001396c:	eb000020 	bl	400139f4 <__aeabi_memset>
40013970:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

40013974 <__aeabi_memcpy>:
40013974:	e92d4010 	push	{r4, lr}
40013978:	e1a03000 	mov	r3, r0
4001397c:	e1a0c001 	mov	ip, r1
40013980:	e1500001 	cmp	r0, r1
40013984:	2a000006 	bcs	400139a4 <__aeabi_memcpy+0x30>
40013988:	ea000001 	b	40013994 <__aeabi_memcpy+0x20>
4001398c:	e4dce001 	ldrb	lr, [ip], #1
40013990:	e4c3e001 	strb	lr, [r3], #1
40013994:	e1b0e002 	movs	lr, r2
40013998:	e2422001 	sub	r2, r2, #1
4001399c:	1afffffa 	bne	4001398c <__aeabi_memcpy+0x18>
400139a0:	ea000009 	b	400139cc <__aeabi_memcpy+0x58>
400139a4:	e080e002 	add	lr, r0, r2
400139a8:	e24e3001 	sub	r3, lr, #1
400139ac:	e081e002 	add	lr, r1, r2
400139b0:	e24ec001 	sub	ip, lr, #1
400139b4:	ea000001 	b	400139c0 <__aeabi_memcpy+0x4c>
400139b8:	e45ce001 	ldrb	lr, [ip], #-1
400139bc:	e443e001 	strb	lr, [r3], #-1
400139c0:	e1b0e002 	movs	lr, r2
400139c4:	e2422001 	sub	r2, r2, #1
400139c8:	1afffffa 	bne	400139b8 <__aeabi_memcpy+0x44>
400139cc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

400139d0 <__aeabi_memcpy4>:
400139d0:	e92d4070 	push	{r4, r5, r6, lr}
400139d4:	e1a04000 	mov	r4, r0
400139d8:	e1a05001 	mov	r5, r1
400139dc:	e1a06002 	mov	r6, r2
400139e0:	e1a02006 	mov	r2, r6
400139e4:	e1a01005 	mov	r1, r5
400139e8:	e1a00004 	mov	r0, r4
400139ec:	ebffffe0 	bl	40013974 <__aeabi_memcpy>
400139f0:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

400139f4 <__aeabi_memset>:
400139f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400139f8:	e1a03000 	mov	r3, r0
400139fc:	ea000000 	b	40013a04 <__aeabi_memset+0x10>
40013a00:	e4c32001 	strb	r2, [r3], #1
40013a04:	e1b0c001 	movs	ip, r1
40013a08:	e2411001 	sub	r1, r1, #1
40013a0c:	1afffffb 	bne	40013a00 <__aeabi_memset+0xc>
40013a10:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013a14 <CyU3PApplicationDefine>:
40013a14:	e92d4010 	push	{r4, lr}
40013a18:	e24dd020 	sub	sp, sp, #32
40013a1c:	e3e00000 	mvn	r0, #0
40013a20:	e59f10b4 	ldr	r1, [pc, #180]	; 40013adc <CyU3PApplicationDefine+0xc8>
40013a24:	e5810000 	str	r0, [r1]
40013a28:	e3a00000 	mov	r0, #0
40013a2c:	e59f10ac 	ldr	r1, [pc, #172]	; 40013ae0 <CyU3PApplicationDefine+0xcc>
40013a30:	e5810000 	str	r0, [r1]
40013a34:	ebffbefb 	bl	40003628 <CyU3PMemInit>
40013a38:	eb001694 	bl	40019490 <CyU3PDmaApplicationDefine>
40013a3c:	e3a02028 	mov	r2, #40	; 0x28
40013a40:	e3a01000 	mov	r1, #0
40013a44:	e59f0098 	ldr	r0, [pc, #152]	; 40013ae4 <CyU3PApplicationDefine+0xd0>
40013a48:	ebffd8e5 	bl	40009de4 <_txe_event_flags_create>
40013a4c:	e3a00080 	mov	r0, #128	; 0x80
40013a50:	ebffbf07 	bl	40003674 <CyU3PMemAlloc>
40013a54:	e1a04000 	mov	r4, r0
40013a58:	e3a0303c 	mov	r3, #60	; 0x3c
40013a5c:	e3a02080 	mov	r2, #128	; 0x80
40013a60:	e1cd20f0 	strd	r2, [sp]
40013a64:	e1a03004 	mov	r3, r4
40013a68:	e3a02006 	mov	r2, #6
40013a6c:	e3a01000 	mov	r1, #0
40013a70:	e59f0070 	ldr	r0, [pc, #112]	; 40013ae8 <CyU3PApplicationDefine+0xd4>
40013a74:	ebffda6f 	bl	4000a438 <_txe_queue_create>
40013a78:	e3a00b01 	mov	r0, #1024	; 0x400
40013a7c:	ebffbefc 	bl	40003674 <CyU3PMemAlloc>
40013a80:	e1a04000 	mov	r4, r0
40013a84:	e3a030a8 	mov	r3, #168	; 0xa8
40013a88:	e3a02001 	mov	r2, #1
40013a8c:	e3a01000 	mov	r1, #0
40013a90:	e3a00004 	mov	r0, #4
40013a94:	e28dc00c 	add	ip, sp, #12
40013a98:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013a9c:	e3a02b01 	mov	r2, #1024	; 0x400
40013aa0:	e1a03001 	mov	r3, r1
40013aa4:	e58d2004 	str	r2, [sp, #4]
40013aa8:	e59f203c 	ldr	r2, [pc, #60]	; 40013aec <CyU3PApplicationDefine+0xd8>
40013aac:	e28f103c 	add	r1, pc, #60	; 0x3c
40013ab0:	e58d0008 	str	r0, [sp, #8]
40013ab4:	e59f0048 	ldr	r0, [pc, #72]	; 40013b04 <CyU3PApplicationDefine+0xf0>
40013ab8:	e58d4000 	str	r4, [sp]
40013abc:	ebffdb43 	bl	4000a7d0 <_txe_thread_create>
40013ac0:	eb000082 	bl	40013cd0 <CyU3PSibApplicationDefine>
40013ac4:	ebfffd3d 	bl	40012fc0 <CyU3PDebugApplicationDefine>
40013ac8:	eb001d16 	bl	4001af28 <CyU3PPibApplicationDefine>
40013acc:	eb00013c 	bl	40013fc4 <CyU3PLppApplicationDefine>
40013ad0:	eb002b6f 	bl	4001e894 <CyU3PUibApplicationDefine>
40013ad4:	e28dd020 	add	sp, sp, #32
40013ad8:	e8bd8010 	pop	{r4, pc}
40013adc:	40030c84 	.word	0x40030c84
40013ae0:	40030c88 	.word	0x40030c88
40013ae4:	400314a8 	.word	0x400314a8
40013ae8:	400314d0 	.word	0x400314d0
40013aec:	40013bbc 	.word	0x40013bbc
40013af0:	535f3230 	.word	0x535f3230
40013af4:	45545359 	.word	0x45545359
40013af8:	48545f4d 	.word	0x48545f4d
40013afc:	44414552 	.word	0x44414552
40013b00:	00000000 	.word	0x00000000
40013b04:	40031400 	.word	0x40031400

Disassembly of section i.CyU3PSysCheckBootState:

40013b08 <CyU3PSysCheckBootState>:
40013b08:	e92d4070 	push	{r4, r5, r6, lr}
40013b0c:	e3a00000 	mov	r0, #0
40013b10:	e59f106c 	ldr	r1, [pc, #108]	; 40013b84 <CyU3PSysCheckBootState+0x7c>
40013b14:	e5810000 	str	r0, [r1]
40013b18:	e59f0068 	ldr	r0, [pc, #104]	; 40013b88 <CyU3PSysCheckBootState+0x80>
40013b1c:	e5900000 	ldr	r0, [r0]
40013b20:	e3100401 	tst	r0, #16777216	; 0x1000000
40013b24:	0a000015 	beq	40013b80 <CyU3PSysCheckBootState+0x78>
40013b28:	e59f005c 	ldr	r0, [pc, #92]	; 40013b8c <CyU3PSysCheckBootState+0x84>
40013b2c:	e5900000 	ldr	r0, [r0]
40013b30:	e3500001 	cmp	r0, #1
40013b34:	1a000011 	bne	40013b80 <CyU3PSysCheckBootState+0x78>
40013b38:	e3a00000 	mov	r0, #0
40013b3c:	e59f1048 	ldr	r1, [pc, #72]	; 40013b8c <CyU3PSysCheckBootState+0x84>
40013b40:	e5810000 	str	r0, [r1]
40013b44:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b48:	e5904004 	ldr	r4, [r0, #4]
40013b4c:	e1a05004 	mov	r5, r4
40013b50:	e3a02901 	mov	r2, #16384	; 0x4000
40013b54:	e1a01005 	mov	r1, r5
40013b58:	e3a00000 	mov	r0, #0
40013b5c:	ebffbf5c 	bl	400038d4 <CyU3PMemCopy>
40013b60:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b64:	e5900008 	ldr	r0, [r0, #8]
40013b68:	e59f1020 	ldr	r1, [pc, #32]	; 40013b90 <CyU3PSysCheckBootState+0x88>
40013b6c:	e1500001 	cmp	r0, r1
40013b70:	1a000002 	bne	40013b80 <CyU3PSysCheckBootState+0x78>
40013b74:	e2840901 	add	r0, r4, #16384	; 0x4000
40013b78:	e59f1004 	ldr	r1, [pc, #4]	; 40013b84 <CyU3PSysCheckBootState+0x7c>
40013b7c:	e5810000 	str	r0, [r1]
40013b80:	e8bd8070 	pop	{r4, r5, r6, pc}
40013b84:	40030c8c 	.word	0x40030c8c
40013b88:	e0050000 	.word	0xe0050000
40013b8c:	40030c88 	.word	0x40030c88
40013b90:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013b94 <CyU3PSysFwMsgHandler>:
40013b94:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013b98 <CyU3PSysModuleInitCompleteEvt>:
40013b98:	e92d4010 	push	{r4, lr}
40013b9c:	e1a04000 	mov	r4, r0
40013ba0:	e3a00010 	mov	r0, #16
40013ba4:	e1a01410 	lsl	r1, r0, r4
40013ba8:	e3a02000 	mov	r2, #0
40013bac:	e59f0004 	ldr	r0, [pc, #4]	; 40013bb8 <CyU3PSysModuleInitCompleteEvt+0x20>
40013bb0:	ebffd92b 	bl	4000a064 <_txe_event_flags_set>
40013bb4:	e8bd8010 	pop	{r4, pc}
40013bb8:	400314a8 	.word	0x400314a8

Disassembly of section i.CyU3PSysThreadEntry:

40013bbc <CyU3PSysThreadEntry>:
40013bbc:	e92d4010 	push	{r4, lr}
40013bc0:	e24dd028 	sub	sp, sp, #40	; 0x28
40013bc4:	e3a04c02 	mov	r4, #512	; 0x200
40013bc8:	e3844080 	orr	r4, r4, #128	; 0x80
40013bcc:	e3e03000 	mvn	r3, #0
40013bd0:	e58d3000 	str	r3, [sp]
40013bd4:	e28d3024 	add	r3, sp, #36	; 0x24
40013bd8:	e3a02003 	mov	r2, #3
40013bdc:	e1a01004 	mov	r1, r4
40013be0:	e59f00d8 	ldr	r0, [pc, #216]	; 40013cc0 <CyU3PSysThreadEntry+0x104>
40013be4:	ebffd8ee 	bl	40009fa4 <_txe_event_flags_get>
40013be8:	e28d2020 	add	r2, sp, #32
40013bec:	e3a01000 	mov	r1, #0
40013bf0:	e59f00cc 	ldr	r0, [pc, #204]	; 40013cc4 <CyU3PSysThreadEntry+0x108>
40013bf4:	ebffdbab 	bl	4000aaa8 <_txe_thread_priority_change>
40013bf8:	ebffd2f0 	bl	400087c0 <CyFxApplicationDefine>
40013bfc:	e28d2020 	add	r2, sp, #32
40013c00:	e3a01004 	mov	r1, #4
40013c04:	e59f00b8 	ldr	r0, [pc, #184]	; 40013cc4 <CyU3PSysThreadEntry+0x108>
40013c08:	ebffdba6 	bl	4000aaa8 <_txe_thread_priority_change>
40013c0c:	ea00002a 	b	40013cbc <CyU3PSysThreadEntry+0x100>
40013c10:	e59f00b0 	ldr	r0, [pc, #176]	; 40013cc8 <CyU3PSysThreadEntry+0x10c>
40013c14:	e5903000 	ldr	r3, [r0]
40013c18:	e58d3000 	str	r3, [sp]
40013c1c:	e28d3024 	add	r3, sp, #36	; 0x24
40013c20:	e3a02001 	mov	r2, #1
40013c24:	e3e01000 	mvn	r1, #0
40013c28:	e59f0090 	ldr	r0, [pc, #144]	; 40013cc0 <CyU3PSysThreadEntry+0x104>
40013c2c:	ebffd8dc 	bl	40009fa4 <_txe_event_flags_get>
40013c30:	e58d0020 	str	r0, [sp, #32]
40013c34:	e59d0020 	ldr	r0, [sp, #32]
40013c38:	e3500000 	cmp	r0, #0
40013c3c:	0a000000 	beq	40013c44 <CyU3PSysThreadEntry+0x88>
40013c40:	ea00001d 	b	40013cbc <CyU3PSysThreadEntry+0x100>
40013c44:	e3a04001 	mov	r4, #1
40013c48:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c4c:	e0000004 	and	r0, r0, r4
40013c50:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013c54:	ea000014 	b	40013cac <CyU3PSysThreadEntry+0xf0>
40013c58:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c5c:	e3100001 	tst	r0, #1
40013c60:	0a000011 	beq	40013cac <CyU3PSysThreadEntry+0xf0>
40013c64:	e3a02000 	mov	r2, #0
40013c68:	e28d1008 	add	r1, sp, #8
40013c6c:	e59f0058 	ldr	r0, [pc, #88]	; 40013ccc <CyU3PSysThreadEntry+0x110>
40013c70:	ebffda86 	bl	4000a690 <_txe_queue_receive>
40013c74:	e58d0020 	str	r0, [sp, #32]
40013c78:	e59d0020 	ldr	r0, [sp, #32]
40013c7c:	e3500000 	cmp	r0, #0
40013c80:	1a000006 	bne	40013ca0 <CyU3PSysThreadEntry+0xe4>
40013c84:	e1dd00b8 	ldrh	r0, [sp, #8]
40013c88:	e2000902 	and	r0, r0, #32768	; 0x8000
40013c8c:	e1b007a0 	lsrs	r0, r0, #15
40013c90:	1a000005 	bne	40013cac <CyU3PSysThreadEntry+0xf0>
40013c94:	e28d0008 	add	r0, sp, #8
40013c98:	ebffffbd 	bl	40013b94 <CyU3PSysFwMsgHandler>
40013c9c:	ea000002 	b	40013cac <CyU3PSysThreadEntry+0xf0>
40013ca0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013ca4:	e3c00001 	bic	r0, r0, #1
40013ca8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013cac:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013cb0:	e3500000 	cmp	r0, #0
40013cb4:	1affffe7 	bne	40013c58 <CyU3PSysThreadEntry+0x9c>
40013cb8:	e1a00000 	nop			; (mov r0, r0)
40013cbc:	eaffffd3 	b	40013c10 <CyU3PSysThreadEntry+0x54>
40013cc0:	400314a8 	.word	0x400314a8
40013cc4:	40031400 	.word	0x40031400
40013cc8:	40030c84 	.word	0x40030c84
40013ccc:	400314d0 	.word	0x400314d0

Disassembly of section i.CyU3PSibApplicationDefine:

40013cd0 <CyU3PSibApplicationDefine>:
40013cd0:	e92d4010 	push	{r4, lr}
40013cd4:	e24dd020 	sub	sp, sp, #32
40013cd8:	e3a04000 	mov	r4, #0
40013cdc:	e3a02028 	mov	r2, #40	; 0x28
40013ce0:	e3a01000 	mov	r1, #0
40013ce4:	e59f0064 	ldr	r0, [pc, #100]	; 40013d50 <CyU3PSibApplicationDefine+0x80>
40013ce8:	ebffd83d 	bl	40009de4 <_txe_event_flags_create>
40013cec:	e3a00000 	mov	r0, #0
40013cf0:	e59f105c 	ldr	r1, [pc, #92]	; 40013d54 <CyU3PSibApplicationDefine+0x84>
40013cf4:	e5810000 	str	r0, [r1]
40013cf8:	e3a00b02 	mov	r0, #2048	; 0x800
40013cfc:	ebffbe5c 	bl	40003674 <CyU3PMemAlloc>
40013d00:	e1a04000 	mov	r4, r0
40013d04:	e3540000 	cmp	r4, #0
40013d08:	0a00000e 	beq	40013d48 <CyU3PSibApplicationDefine+0x78>
40013d0c:	e3a030a8 	mov	r3, #168	; 0xa8
40013d10:	e3a02001 	mov	r2, #1
40013d14:	e3a01000 	mov	r1, #0
40013d18:	e3a00004 	mov	r0, #4
40013d1c:	e28dc00c 	add	ip, sp, #12
40013d20:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013d24:	e3a02b02 	mov	r2, #2048	; 0x800
40013d28:	e1a03001 	mov	r3, r1
40013d2c:	e58d2004 	str	r2, [sp, #4]
40013d30:	e59f2020 	ldr	r2, [pc, #32]	; 40013d58 <CyU3PSibApplicationDefine+0x88>
40013d34:	e28f1020 	add	r1, pc, #32
40013d38:	e58d0008 	str	r0, [sp, #8]
40013d3c:	e59f0028 	ldr	r0, [pc, #40]	; 40013d6c <CyU3PSibApplicationDefine+0x9c>
40013d40:	e58d4000 	str	r4, [sp]
40013d44:	ebffdaa1 	bl	4000a7d0 <_txe_thread_create>
40013d48:	e28dd020 	add	sp, sp, #32
40013d4c:	e8bd8010 	pop	{r4, pc}
40013d50:	400315b4 	.word	0x400315b4
40013d54:	40030c90 	.word	0x40030c90
40013d58:	40013dc8 	.word	0x40013dc8
40013d5c:	535f3630 	.word	0x535f3630
40013d60:	545f4249 	.word	0x545f4249
40013d64:	41455248 	.word	0x41455248
40013d68:	00000044 	.word	0x00000044
40013d6c:	4003150c 	.word	0x4003150c

Disassembly of section i.CyU3PSibInitIntfParams:

40013d70 <CyU3PSibInitIntfParams>:
40013d70:	e0802100 	add	r2, r0, r0, lsl #2
40013d74:	e59f3048 	ldr	r3, [pc, #72]	; 40013dc4 <CyU3PSibInitIntfParams+0x54>
40013d78:	e0831102 	add	r1, r3, r2, lsl #2
40013d7c:	e3a020ff 	mov	r2, #255	; 0xff
40013d80:	e5c12000 	strb	r2, [r1]
40013d84:	e3a02002 	mov	r2, #2
40013d88:	e5c12008 	strb	r2, [r1, #8]
40013d8c:	e3a02001 	mov	r2, #1
40013d90:	e5c12009 	strb	r2, [r1, #9]
40013d94:	e3a02000 	mov	r2, #0
40013d98:	e5c12010 	strb	r2, [r1, #16]
40013d9c:	e5c1200a 	strb	r2, [r1, #10]
40013da0:	e3a020ff 	mov	r2, #255	; 0xff
40013da4:	e5c1200b 	strb	r2, [r1, #11]
40013da8:	e3a02000 	mov	r2, #0
40013dac:	e581200c 	str	r2, [r1, #12]
40013db0:	e3a02004 	mov	r2, #4
40013db4:	e5c12011 	strb	r2, [r1, #17]
40013db8:	e3a02000 	mov	r2, #0
40013dbc:	e5c12012 	strb	r2, [r1, #18]
40013dc0:	e12fff1e 	bx	lr
40013dc4:	400315dc 	.word	0x400315dc

Disassembly of section i.CyU3PSibThreadEntry:

40013dc8 <CyU3PSibThreadEntry>:
40013dc8:	e92d4010 	push	{r4, lr}
40013dcc:	e3a00000 	mov	r0, #0
40013dd0:	ebffffe6 	bl	40013d70 <CyU3PSibInitIntfParams>
40013dd4:	e3a00001 	mov	r0, #1
40013dd8:	ebffffe4 	bl	40013d70 <CyU3PSibInitIntfParams>
40013ddc:	e3a00003 	mov	r0, #3
40013de0:	ebffff6c 	bl	40013b98 <CyU3PSysModuleInitCompleteEvt>
40013de4:	ea000009 	b	40013e10 <CyU3PSibThreadEntry+0x48>
40013de8:	e59f0024 	ldr	r0, [pc, #36]	; 40013e14 <CyU3PSibThreadEntry+0x4c>
40013dec:	e5900000 	ldr	r0, [r0]
40013df0:	e3500000 	cmp	r0, #0
40013df4:	0a000003 	beq	40013e08 <CyU3PSibThreadEntry+0x40>
40013df8:	e59f0014 	ldr	r0, [pc, #20]	; 40013e14 <CyU3PSibThreadEntry+0x4c>
40013dfc:	e5900000 	ldr	r0, [r0]
40013e00:	e12fff30 	blx	r0
40013e04:	ea000001 	b	40013e10 <CyU3PSibThreadEntry+0x48>
40013e08:	e3a0000a 	mov	r0, #10
40013e0c:	ebffd39c 	bl	40008c84 <_tx_thread_sleep>
40013e10:	eafffff4 	b	40013de8 <CyU3PSibThreadEntry+0x20>
40013e14:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PGpioSetClock:

40013e18 <CyU3PGpioSetClock>:
40013e18:	e92d4070 	push	{r4, r5, r6, lr}
40013e1c:	e1a04000 	mov	r4, r0
40013e20:	e3a05000 	mov	r5, #0
40013e24:	e5d40000 	ldrb	r0, [r4]
40013e28:	e3500002 	cmp	r0, #2
40013e2c:	ba000002 	blt	40013e3c <CyU3PGpioSetClock+0x24>
40013e30:	e5d40000 	ldrb	r0, [r4]
40013e34:	e3500010 	cmp	r0, #16
40013e38:	da000001 	ble	40013e44 <CyU3PGpioSetClock+0x2c>
40013e3c:	e3a00040 	mov	r0, #64	; 0x40
40013e40:	e8bd8070 	pop	{r4, r5, r6, pc}
40013e44:	e5d40001 	ldrb	r0, [r4, #1]
40013e48:	e3500000 	cmp	r0, #0
40013e4c:	1a000004 	bne	40013e64 <CyU3PGpioSetClock+0x4c>
40013e50:	e5940004 	ldr	r0, [r4, #4]
40013e54:	e3500000 	cmp	r0, #0
40013e58:	0a000009 	beq	40013e84 <CyU3PGpioSetClock+0x6c>
40013e5c:	e3a00040 	mov	r0, #64	; 0x40
40013e60:	eafffff6 	b	40013e40 <CyU3PGpioSetClock+0x28>
40013e64:	e5d40001 	ldrb	r0, [r4, #1]
40013e68:	e3500002 	cmp	r0, #2
40013e6c:	ba000002 	blt	40013e7c <CyU3PGpioSetClock+0x64>
40013e70:	e5d40001 	ldrb	r0, [r4, #1]
40013e74:	e3500040 	cmp	r0, #64	; 0x40
40013e78:	da000001 	ble	40013e84 <CyU3PGpioSetClock+0x6c>
40013e7c:	e3a00040 	mov	r0, #64	; 0x40
40013e80:	eaffffee 	b	40013e40 <CyU3PGpioSetClock+0x28>
40013e84:	e5d40009 	ldrb	r0, [r4, #9]
40013e88:	e3500004 	cmp	r0, #4
40013e8c:	ba000001 	blt	40013e98 <CyU3PGpioSetClock+0x80>
40013e90:	e3a00040 	mov	r0, #64	; 0x40
40013e94:	eaffffe9 	b	40013e40 <CyU3PGpioSetClock+0x28>
40013e98:	e5d40008 	ldrb	r0, [r4, #8]
40013e9c:	e3500004 	cmp	r0, #4
40013ea0:	ba000001 	blt	40013eac <CyU3PGpioSetClock+0x94>
40013ea4:	e3a00040 	mov	r0, #64	; 0x40
40013ea8:	eaffffe4 	b	40013e40 <CyU3PGpioSetClock+0x28>
40013eac:	e5d40000 	ldrb	r0, [r4]
40013eb0:	e2400001 	sub	r0, r0, #1
40013eb4:	e5d41009 	ldrb	r1, [r4, #9]
40013eb8:	e1800281 	orr	r0, r0, r1, lsl #5
40013ebc:	e5d41008 	ldrb	r1, [r4, #8]
40013ec0:	e1800381 	orr	r0, r0, r1, lsl #7
40013ec4:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013ec8:	e5940004 	ldr	r0, [r4, #4]
40013ecc:	e3500000 	cmp	r0, #0
40013ed0:	0a000000 	beq	40013ed8 <CyU3PGpioSetClock+0xc0>
40013ed4:	e3855010 	orr	r5, r5, #16
40013ed8:	e59f0030 	ldr	r0, [pc, #48]	; 40013f10 <CyU3PGpioSetClock+0xf8>
40013edc:	e5805018 	str	r5, [r0, #24]
40013ee0:	e5d40001 	ldrb	r0, [r4, #1]
40013ee4:	e3500000 	cmp	r0, #0
40013ee8:	0a000006 	beq	40013f08 <CyU3PGpioSetClock+0xf0>
40013eec:	e3a00001 	mov	r0, #1
40013ef0:	ebfffe72 	bl	400138c0 <CyU3PBusyWait>
40013ef4:	e5d40001 	ldrb	r0, [r4, #1]
40013ef8:	e2400001 	sub	r0, r0, #1
40013efc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013f00:	e59f1008 	ldr	r1, [pc, #8]	; 40013f10 <CyU3PGpioSetClock+0xf8>
40013f04:	e581001c 	str	r0, [r1, #28]
40013f08:	e3a00000 	mov	r0, #0
40013f0c:	eaffffcb 	b	40013e40 <CyU3PGpioSetClock+0x28>
40013f10:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013f14 <CyU3PI2cSetClock>:
40013f14:	e92d4070 	push	{r4, r5, r6, lr}
40013f18:	e1a05000 	mov	r5, r0
40013f1c:	e3a06000 	mov	r6, #0
40013f20:	e3550000 	cmp	r5, #0
40013f24:	1a000001 	bne	40013f30 <CyU3PI2cSetClock+0x1c>
40013f28:	e3a00040 	mov	r0, #64	; 0x40
40013f2c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013f30:	e0852105 	add	r2, r5, r5, lsl #2
40013f34:	e1a01082 	lsl	r1, r2, #1
40013f38:	e59f207c 	ldr	r2, [pc, #124]	; 40013fbc <CyU3PI2cSetClock+0xa8>
40013f3c:	e5922000 	ldr	r2, [r2]
40013f40:	e1a00122 	lsr	r0, r2, #2
40013f44:	ebfff33a 	bl	40010c34 <__aeabi_uidivmod>
40013f48:	e1a04000 	mov	r4, r0
40013f4c:	e3140003 	tst	r4, #3
40013f50:	1a000001 	bne	40013f5c <CyU3PI2cSetClock+0x48>
40013f54:	e1a04144 	asr	r4, r4, #2
40013f58:	ea00000a 	b	40013f88 <CyU3PI2cSetClock+0x74>
40013f5c:	e2040003 	and	r0, r4, #3
40013f60:	e3500001 	cmp	r0, #1
40013f64:	0a000002 	beq	40013f74 <CyU3PI2cSetClock+0x60>
40013f68:	e2040003 	and	r0, r4, #3
40013f6c:	e3500002 	cmp	r0, #2
40013f70:	1a000002 	bne	40013f80 <CyU3PI2cSetClock+0x6c>
40013f74:	e1a04144 	asr	r4, r4, #2
40013f78:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013f7c:	ea000001 	b	40013f88 <CyU3PI2cSetClock+0x74>
40013f80:	e3a00001 	mov	r0, #1
40013f84:	e0804144 	add	r4, r0, r4, asr #2
40013f88:	e2444001 	sub	r4, r4, #1
40013f8c:	e3540001 	cmp	r4, #1
40013f90:	ba000001 	blt	40013f9c <CyU3PI2cSetClock+0x88>
40013f94:	e3540a01 	cmp	r4, #4096	; 0x1000
40013f98:	ba000001 	blt	40013fa4 <CyU3PI2cSetClock+0x90>
40013f9c:	e3a00040 	mov	r0, #64	; 0x40
40013fa0:	eaffffe1 	b	40013f2c <CyU3PI2cSetClock+0x18>
40013fa4:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013fa8:	e1866000 	orr	r6, r6, r0
40013fac:	e59f000c 	ldr	r0, [pc, #12]	; 40013fc0 <CyU3PI2cSetClock+0xac>
40013fb0:	e5806020 	str	r6, [r0, #32]
40013fb4:	e3a00000 	mov	r0, #0
40013fb8:	eaffffdb 	b	40013f2c <CyU3PI2cSetClock+0x18>
40013fbc:	40030c50 	.word	0x40030c50
40013fc0:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013fc4 <CyU3PLppApplicationDefine>:
40013fc4:	e92d4010 	push	{r4, lr}
40013fc8:	e24dd020 	sub	sp, sp, #32
40013fcc:	e3a00b01 	mov	r0, #1024	; 0x400
40013fd0:	ebffbda7 	bl	40003674 <CyU3PMemAlloc>
40013fd4:	e1a04000 	mov	r4, r0
40013fd8:	e3a030a8 	mov	r3, #168	; 0xa8
40013fdc:	e3a02001 	mov	r2, #1
40013fe0:	e3a01000 	mov	r1, #0
40013fe4:	e3a00004 	mov	r0, #4
40013fe8:	e28dc00c 	add	ip, sp, #12
40013fec:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013ff0:	e3a02b01 	mov	r2, #1024	; 0x400
40013ff4:	e1a03001 	mov	r3, r1
40013ff8:	e58d2004 	str	r2, [sp, #4]
40013ffc:	e59f2054 	ldr	r2, [pc, #84]	; 40014058 <CyU3PLppApplicationDefine+0x94>
40014000:	e28f1054 	add	r1, pc, #84	; 0x54
40014004:	e58d0008 	str	r0, [sp, #8]
40014008:	e59f005c 	ldr	r0, [pc, #92]	; 4001406c <CyU3PLppApplicationDefine+0xa8>
4001400c:	e58d4000 	str	r4, [sp]
40014010:	ebffd9ee 	bl	4000a7d0 <_txe_thread_create>
40014014:	e3a02028 	mov	r2, #40	; 0x28
40014018:	e3a01000 	mov	r1, #0
4001401c:	e59f004c 	ldr	r0, [pc, #76]	; 40014070 <CyU3PLppApplicationDefine+0xac>
40014020:	ebffd76f 	bl	40009de4 <_txe_event_flags_create>
40014024:	e3a00040 	mov	r0, #64	; 0x40
40014028:	ebffbd91 	bl	40003674 <CyU3PMemAlloc>
4001402c:	e1a04000 	mov	r4, r0
40014030:	e3a0303c 	mov	r3, #60	; 0x3c
40014034:	e3a02040 	mov	r2, #64	; 0x40
40014038:	e1cd20f0 	strd	r2, [sp]
4001403c:	e1a03004 	mov	r3, r4
40014040:	e3a02005 	mov	r2, #5
40014044:	e3a01000 	mov	r1, #0
40014048:	e59f0024 	ldr	r0, [pc, #36]	; 40014074 <CyU3PLppApplicationDefine+0xb0>
4001404c:	ebffd8f9 	bl	4000a438 <_txe_queue_create>
40014050:	e28dd020 	add	sp, sp, #32
40014054:	e8bd8010 	pop	{r4, pc}
40014058:	400143b8 	.word	0x400143b8
4001405c:	4c5f3530 	.word	0x4c5f3530
40014060:	545f5050 	.word	0x545f5050
40014064:	41455248 	.word	0x41455248
40014068:	00000044 	.word	0x00000044
4001406c:	40031640 	.word	0x40031640
40014070:	40031618 	.word	0x40031618
40014074:	400316e8 	.word	0x400316e8

Disassembly of section i.CyU3PLppEventSend:

40014078 <CyU3PLppEventSend>:
40014078:	e92d4070 	push	{r4, r5, r6, lr}
4001407c:	e1a04000 	mov	r4, r0
40014080:	e3a02000 	mov	r2, #0
40014084:	e1a01004 	mov	r1, r4
40014088:	e59f000c 	ldr	r0, [pc, #12]	; 4001409c <CyU3PLppEventSend+0x24>
4001408c:	ebffd7f4 	bl	4000a064 <_txe_event_flags_set>
40014090:	e1a05000 	mov	r5, r0
40014094:	e1a00005 	mov	r0, r5
40014098:	e8bd8070 	pop	{r4, r5, r6, pc}
4001409c:	40031618 	.word	0x40031618

Disassembly of section i.CyU3PLppGpioBlockIsOn:

400140a0 <CyU3PLppGpioBlockIsOn>:
400140a0:	e59f0004 	ldr	r0, [pc, #4]	; 400140ac <CyU3PLppGpioBlockIsOn+0xc>
400140a4:	e5900000 	ldr	r0, [r0]
400140a8:	e12fff1e 	bx	lr
400140ac:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PLppInit:

400140b0 <CyU3PLppInit>:
400140b0:	e92d4070 	push	{r4, r5, r6, lr}
400140b4:	e1a04000 	mov	r4, r0
400140b8:	e1a05001 	mov	r5, r1
400140bc:	e3a06000 	mov	r6, #0
400140c0:	e3a00001 	mov	r0, #1
400140c4:	e59f1174 	ldr	r1, [pc, #372]	; 40014240 <CyU3PLppInit+0x190>
400140c8:	e5d11000 	ldrb	r1, [r1]
400140cc:	e1110410 	tst	r1, r0, lsl r4
400140d0:	0a000001 	beq	400140dc <CyU3PLppInit+0x2c>
400140d4:	e3a00043 	mov	r0, #67	; 0x43
400140d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400140dc:	e3540001 	cmp	r4, #1
400140e0:	1a000004 	bne	400140f8 <CyU3PLppInit+0x48>
400140e4:	eb000310 	bl	40014d2c <CyFx3DevIsI2sSupported>
400140e8:	e3500000 	cmp	r0, #0
400140ec:	1a000001 	bne	400140f8 <CyU3PLppInit+0x48>
400140f0:	e3a00046 	mov	r0, #70	; 0x46
400140f4:	eafffff7 	b	400140d8 <CyU3PLppInit+0x28>
400140f8:	e3540005 	cmp	r4, #5
400140fc:	308ff104 	addcc	pc, pc, r4, lsl #2
40014100:	ea000027 	b	400141a4 <CyU3PLppInit+0xf4>
40014104:	ea000003 	b	40014118 <CyU3PLppInit+0x68>
40014108:	ea000009 	b	40014134 <CyU3PLppInit+0x84>
4001410c:	ea00000f 	b	40014150 <CyU3PLppInit+0xa0>
40014110:	ea000015 	b	4001416c <CyU3PLppInit+0xbc>
40014114:	ea00001b 	b	40014188 <CyU3PLppInit+0xd8>
40014118:	e1a00000 	nop			; (mov r0, r0)
4001411c:	e59f0120 	ldr	r0, [pc, #288]	; 40014244 <CyU3PLppInit+0x194>
40014120:	e5900020 	ldr	r0, [r0, #32]
40014124:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014128:	0a000000 	beq	40014130 <CyU3PLppInit+0x80>
4001412c:	e3a06001 	mov	r6, #1
40014130:	ea00001b 	b	400141a4 <CyU3PLppInit+0xf4>
40014134:	e1a00000 	nop			; (mov r0, r0)
40014138:	e59f0104 	ldr	r0, [pc, #260]	; 40014244 <CyU3PLppInit+0x194>
4001413c:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40014140:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014144:	0a000000 	beq	4001414c <CyU3PLppInit+0x9c>
40014148:	e3a06001 	mov	r6, #1
4001414c:	ea000014 	b	400141a4 <CyU3PLppInit+0xf4>
40014150:	e1a00000 	nop			; (mov r0, r0)
40014154:	e59f00e8 	ldr	r0, [pc, #232]	; 40014244 <CyU3PLppInit+0x194>
40014158:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4001415c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014160:	0a000000 	beq	40014168 <CyU3PLppInit+0xb8>
40014164:	e3a06001 	mov	r6, #1
40014168:	ea00000d 	b	400141a4 <CyU3PLppInit+0xf4>
4001416c:	e1a00000 	nop			; (mov r0, r0)
40014170:	e59f00cc 	ldr	r0, [pc, #204]	; 40014244 <CyU3PLppInit+0x194>
40014174:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40014178:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001417c:	0a000000 	beq	40014184 <CyU3PLppInit+0xd4>
40014180:	e3a06001 	mov	r6, #1
40014184:	ea000006 	b	400141a4 <CyU3PLppInit+0xf4>
40014188:	e1a00000 	nop			; (mov r0, r0)
4001418c:	e59f00b0 	ldr	r0, [pc, #176]	; 40014244 <CyU3PLppInit+0x194>
40014190:	e5900018 	ldr	r0, [r0, #24]
40014194:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014198:	0a000000 	beq	400141a0 <CyU3PLppInit+0xf0>
4001419c:	e3a06001 	mov	r6, #1
400141a0:	e1a00000 	nop			; (mov r0, r0)
400141a4:	e1a00000 	nop			; (mov r0, r0)
400141a8:	e3560000 	cmp	r6, #0
400141ac:	1a000001 	bne	400141b8 <CyU3PLppInit+0x108>
400141b0:	e3a00047 	mov	r0, #71	; 0x47
400141b4:	eaffffc7 	b	400140d8 <CyU3PLppInit+0x28>
400141b8:	e59f0080 	ldr	r0, [pc, #128]	; 40014240 <CyU3PLppInit+0x190>
400141bc:	e5d00000 	ldrb	r0, [r0]
400141c0:	e3500000 	cmp	r0, #0
400141c4:	1a000017 	bne	40014228 <CyU3PLppInit+0x178>
400141c8:	e59f0078 	ldr	r0, [pc, #120]	; 40014248 <CyU3PLppInit+0x198>
400141cc:	e5900000 	ldr	r0, [r0]
400141d0:	e3500000 	cmp	r0, #0
400141d4:	1a000010 	bne	4001421c <CyU3PLppInit+0x16c>
400141d8:	e59f006c 	ldr	r0, [pc, #108]	; 4001424c <CyU3PLppInit+0x19c>
400141dc:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141e0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400141e4:	e59f1060 	ldr	r1, [pc, #96]	; 4001424c <CyU3PLppInit+0x19c>
400141e8:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400141ec:	e3a0000a 	mov	r0, #10
400141f0:	ebfffdb2 	bl	400138c0 <CyU3PBusyWait>
400141f4:	e59f0050 	ldr	r0, [pc, #80]	; 4001424c <CyU3PLppInit+0x19c>
400141f8:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141fc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014200:	e59f1044 	ldr	r1, [pc, #68]	; 4001424c <CyU3PLppInit+0x19c>
40014204:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40014208:	e1a00000 	nop			; (mov r0, r0)
4001420c:	e59f0038 	ldr	r0, [pc, #56]	; 4001424c <CyU3PLppInit+0x19c>
40014210:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40014214:	e3100001 	tst	r0, #1
40014218:	0afffffb 	beq	4001420c <CyU3PLppInit+0x15c>
4001421c:	eb000051 	bl	40014368 <CyU3PLppSocketInit>
40014220:	e3a00014 	mov	r0, #20
40014224:	eb003828 	bl	400222cc <CyU3PVicEnableInt>
40014228:	e1a02005 	mov	r2, r5
4001422c:	e3a01001 	mov	r1, #1
40014230:	e1a00004 	mov	r0, r4
40014234:	eb0000f1 	bl	40014600 <CyU3UpdateLppActiveInfo>
40014238:	e3a00000 	mov	r0, #0
4001423c:	eaffffa5 	b	400140d8 <CyU3PLppInit+0x28>
40014240:	40030c94 	.word	0x40030c94
40014244:	e0052000 	.word	0xe0052000
40014248:	40030c6c 	.word	0x40030c6c
4001424c:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40014250 <CyU3PLppRestoreState>:
40014250:	e92d4070 	push	{r4, r5, r6, lr}
40014254:	e1a04000 	mov	r4, r0
40014258:	e3a00000 	mov	r0, #0
4001425c:	e59f10ec 	ldr	r1, [pc, #236]	; 40014350 <CyU3PLppRestoreState+0x100>
40014260:	e5c10000 	strb	r0, [r1]
40014264:	e5940000 	ldr	r0, [r4]
40014268:	e59f10e4 	ldr	r1, [pc, #228]	; 40014354 <CyU3PLppRestoreState+0x104>
4001426c:	e5810018 	str	r0, [r1, #24]
40014270:	e3a00001 	mov	r0, #1
40014274:	ebfffd91 	bl	400138c0 <CyU3PBusyWait>
40014278:	e5940004 	ldr	r0, [r4, #4]
4001427c:	e59f10d0 	ldr	r1, [pc, #208]	; 40014354 <CyU3PLppRestoreState+0x104>
40014280:	e581001c 	str	r0, [r1, #28]
40014284:	e3a00001 	mov	r0, #1
40014288:	ebfffd8c 	bl	400138c0 <CyU3PBusyWait>
4001428c:	e5940008 	ldr	r0, [r4, #8]
40014290:	e59f10c0 	ldr	r1, [pc, #192]	; 40014358 <CyU3PLppRestoreState+0x108>
40014294:	e581000c 	str	r0, [r1, #12]
40014298:	e3a00001 	mov	r0, #1
4001429c:	ebfffd87 	bl	400138c0 <CyU3PBusyWait>
400142a0:	e594000c 	ldr	r0, [r4, #12]
400142a4:	e59f10ac 	ldr	r1, [pc, #172]	; 40014358 <CyU3PLppRestoreState+0x108>
400142a8:	e5810010 	str	r0, [r1, #16]
400142ac:	e3a00001 	mov	r0, #1
400142b0:	ebfffd82 	bl	400138c0 <CyU3PBusyWait>
400142b4:	e5940010 	ldr	r0, [r4, #16]
400142b8:	e59f1098 	ldr	r1, [pc, #152]	; 40014358 <CyU3PLppRestoreState+0x108>
400142bc:	e5810008 	str	r0, [r1, #8]
400142c0:	e3a00001 	mov	r0, #1
400142c4:	ebfffd7d 	bl	400138c0 <CyU3PBusyWait>
400142c8:	e3a00004 	mov	r0, #4
400142cc:	e5941014 	ldr	r1, [r4, #20]
400142d0:	ebffff76 	bl	400140b0 <CyU3PLppInit>
400142d4:	e3a00001 	mov	r0, #1
400142d8:	ebfffd78 	bl	400138c0 <CyU3PBusyWait>
400142dc:	e59f0078 	ldr	r0, [pc, #120]	; 4001435c <CyU3PLppRestoreState+0x10c>
400142e0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400142e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400142e8:	e59f106c 	ldr	r1, [pc, #108]	; 4001435c <CyU3PLppRestoreState+0x10c>
400142ec:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
400142f0:	e3a0000a 	mov	r0, #10
400142f4:	ebfffd71 	bl	400138c0 <CyU3PBusyWait>
400142f8:	e1a00000 	nop			; (mov r0, r0)
400142fc:	e59f0058 	ldr	r0, [pc, #88]	; 4001435c <CyU3PLppRestoreState+0x10c>
40014300:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40014304:	e3100001 	tst	r0, #1
40014308:	0afffffb 	beq	400142fc <CyU3PLppRestoreState+0xac>
4001430c:	e3a05000 	mov	r5, #0
40014310:	ea000006 	b	40014330 <CyU3PLppRestoreState+0xe0>
40014314:	e2850006 	add	r0, r5, #6
40014318:	e7940100 	ldr	r0, [r4, r0, lsl #2]
4001431c:	e59f103c 	ldr	r1, [pc, #60]	; 40014360 <CyU3PLppRestoreState+0x110>
40014320:	e7810105 	str	r0, [r1, r5, lsl #2]
40014324:	e3a00001 	mov	r0, #1
40014328:	ebfffd64 	bl	400138c0 <CyU3PBusyWait>
4001432c:	e2855001 	add	r5, r5, #1
40014330:	e355003d 	cmp	r5, #61	; 0x3d
40014334:	3afffff6 	bcc	40014314 <CyU3PLppRestoreState+0xc4>
40014338:	e59f0024 	ldr	r0, [pc, #36]	; 40014364 <CyU3PLppRestoreState+0x114>
4001433c:	e5900000 	ldr	r0, [r0]
40014340:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40014344:	e59f1018 	ldr	r1, [pc, #24]	; 40014364 <CyU3PLppRestoreState+0x114>
40014348:	e5810000 	str	r0, [r1]
4001434c:	e8bd8070 	pop	{r4, r5, r6, pc}
40014350:	40030c94 	.word	0x40030c94
40014354:	e0052000 	.word	0xe0052000
40014358:	e0051000 	.word	0xe0051000
4001435c:	e0001000 	.word	0xe0001000
40014360:	e0001100 	.word	0xe0001100
40014364:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40014368 <CyU3PLppSocketInit>:
40014368:	e3a00000 	mov	r0, #0
4001436c:	ea00000d 	b	400143a8 <CyU3PLppSocketInit+0x40>
40014370:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40014374:	e59f2038 	ldr	r2, [pc, #56]	; 400143b4 <CyU3PLppSocketInit+0x4c>
40014378:	e0822380 	add	r2, r2, r0, lsl #7
4001437c:	e582100c 	str	r1, [r2, #12]
40014380:	e3e01000 	mvn	r1, #0
40014384:	e59f2028 	ldr	r2, [pc, #40]	; 400143b4 <CyU3PLppSocketInit+0x4c>
40014388:	e0822380 	add	r2, r2, r0, lsl #7
4001438c:	e5821010 	str	r1, [r2, #16]
40014390:	e3a01000 	mov	r1, #0
40014394:	e59f2018 	ldr	r2, [pc, #24]	; 400143b4 <CyU3PLppSocketInit+0x4c>
40014398:	e0822380 	add	r2, r2, r0, lsl #7
4001439c:	e5821014 	str	r1, [r2, #20]
400143a0:	e2801001 	add	r1, r0, #1
400143a4:	e20100ff 	and	r0, r1, #255	; 0xff
400143a8:	e3500008 	cmp	r0, #8
400143ac:	baffffef 	blt	40014370 <CyU3PLppSocketInit+0x8>
400143b0:	e12fff1e 	bx	lr
400143b4:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

400143b8 <CyU3PLppThreadEntry>:
400143b8:	e92d4010 	push	{r4, lr}
400143bc:	e24dd020 	sub	sp, sp, #32
400143c0:	e3a00006 	mov	r0, #6
400143c4:	ebfffdf3 	bl	40013b98 <CyU3PSysModuleInitCompleteEvt>
400143c8:	e3a000f1 	mov	r0, #241	; 0xf1
400143cc:	e59f1144 	ldr	r1, [pc, #324]	; 40014518 <CyU3PLppThreadEntry+0x160>
400143d0:	e5810000 	str	r0, [r1]
400143d4:	e1a00000 	nop			; (mov r0, r0)
400143d8:	e3e03000 	mvn	r3, #0
400143dc:	e58d3000 	str	r3, [sp]
400143e0:	e28d301c 	add	r3, sp, #28
400143e4:	e3a02001 	mov	r2, #1
400143e8:	e59f0128 	ldr	r0, [pc, #296]	; 40014518 <CyU3PLppThreadEntry+0x160>
400143ec:	e5901000 	ldr	r1, [r0]
400143f0:	e59f0124 	ldr	r0, [pc, #292]	; 4001451c <CyU3PLppThreadEntry+0x164>
400143f4:	ebffd6ea 	bl	40009fa4 <_txe_event_flags_get>
400143f8:	e1a04000 	mov	r4, r0
400143fc:	e59f1114 	ldr	r1, [pc, #276]	; 40014518 <CyU3PLppThreadEntry+0x160>
40014400:	e59d001c 	ldr	r0, [sp, #28]
40014404:	e5911000 	ldr	r1, [r1]
40014408:	e0000001 	and	r0, r0, r1
4001440c:	e58d001c 	str	r0, [sp, #28]
40014410:	e3540000 	cmp	r4, #0
40014414:	0a000000 	beq	4001441c <CyU3PLppThreadEntry+0x64>
40014418:	eaffffee 	b	400143d8 <CyU3PLppThreadEntry+0x20>
4001441c:	ea000009 	b	40014448 <CyU3PLppThreadEntry+0x90>
40014420:	e3a02000 	mov	r2, #0
40014424:	e28d1008 	add	r1, sp, #8
40014428:	e59f00f0 	ldr	r0, [pc, #240]	; 40014520 <CyU3PLppThreadEntry+0x168>
4001442c:	ebffd897 	bl	4000a690 <_txe_queue_receive>
40014430:	e1a04000 	mov	r4, r0
40014434:	e3540000 	cmp	r4, #0
40014438:	0a000002 	beq	40014448 <CyU3PLppThreadEntry+0x90>
4001443c:	e59d001c 	ldr	r0, [sp, #28]
40014440:	e3c00001 	bic	r0, r0, #1
40014444:	e58d001c 	str	r0, [sp, #28]
40014448:	e59d001c 	ldr	r0, [sp, #28]
4001444c:	e3100001 	tst	r0, #1
40014450:	1afffff2 	bne	40014420 <CyU3PLppThreadEntry+0x68>
40014454:	e59d001c 	ldr	r0, [sp, #28]
40014458:	e3100020 	tst	r0, #32
4001445c:	0a000008 	beq	40014484 <CyU3PLppThreadEntry+0xcc>
40014460:	e59f00bc 	ldr	r0, [pc, #188]	; 40014524 <CyU3PLppThreadEntry+0x16c>
40014464:	e5900000 	ldr	r0, [r0]
40014468:	e3500000 	cmp	r0, #0
4001446c:	0a000002 	beq	4001447c <CyU3PLppThreadEntry+0xc4>
40014470:	e59f10ac 	ldr	r1, [pc, #172]	; 40014524 <CyU3PLppThreadEntry+0x16c>
40014474:	e5910000 	ldr	r0, [r1]
40014478:	e12fff30 	blx	r0
4001447c:	e3a0000f 	mov	r0, #15
40014480:	eb003791 	bl	400222cc <CyU3PVicEnableInt>
40014484:	e59d001c 	ldr	r0, [sp, #28]
40014488:	e3100010 	tst	r0, #16
4001448c:	0a000008 	beq	400144b4 <CyU3PLppThreadEntry+0xfc>
40014490:	e59f008c 	ldr	r0, [pc, #140]	; 40014524 <CyU3PLppThreadEntry+0x16c>
40014494:	e5900004 	ldr	r0, [r0, #4]
40014498:	e3500000 	cmp	r0, #0
4001449c:	0a000002 	beq	400144ac <CyU3PLppThreadEntry+0xf4>
400144a0:	e59f107c 	ldr	r1, [pc, #124]	; 40014524 <CyU3PLppThreadEntry+0x16c>
400144a4:	e5910004 	ldr	r0, [r1, #4]
400144a8:	e12fff30 	blx	r0
400144ac:	e3a00010 	mov	r0, #16
400144b0:	eb003785 	bl	400222cc <CyU3PVicEnableInt>
400144b4:	e59d001c 	ldr	r0, [sp, #28]
400144b8:	e3100080 	tst	r0, #128	; 0x80
400144bc:	0a000008 	beq	400144e4 <CyU3PLppThreadEntry+0x12c>
400144c0:	e59f005c 	ldr	r0, [pc, #92]	; 40014524 <CyU3PLppThreadEntry+0x16c>
400144c4:	e5900008 	ldr	r0, [r0, #8]
400144c8:	e3500000 	cmp	r0, #0
400144cc:	0a000002 	beq	400144dc <CyU3PLppThreadEntry+0x124>
400144d0:	e59f104c 	ldr	r1, [pc, #76]	; 40014524 <CyU3PLppThreadEntry+0x16c>
400144d4:	e5910008 	ldr	r0, [r1, #8]
400144d8:	e12fff30 	blx	r0
400144dc:	e3a00011 	mov	r0, #17
400144e0:	eb003779 	bl	400222cc <CyU3PVicEnableInt>
400144e4:	e59d001c 	ldr	r0, [sp, #28]
400144e8:	e3100040 	tst	r0, #64	; 0x40
400144ec:	0a000008 	beq	40014514 <CyU3PLppThreadEntry+0x15c>
400144f0:	e59f002c 	ldr	r0, [pc, #44]	; 40014524 <CyU3PLppThreadEntry+0x16c>
400144f4:	e590000c 	ldr	r0, [r0, #12]
400144f8:	e3500000 	cmp	r0, #0
400144fc:	0a000002 	beq	4001450c <CyU3PLppThreadEntry+0x154>
40014500:	e59f101c 	ldr	r1, [pc, #28]	; 40014524 <CyU3PLppThreadEntry+0x16c>
40014504:	e591000c 	ldr	r0, [r1, #12]
40014508:	e12fff30 	blx	r0
4001450c:	e3a00012 	mov	r0, #18
40014510:	eb00376d 	bl	400222cc <CyU3PVicEnableInt>
40014514:	eaffffaf 	b	400143d8 <CyU3PLppThreadEntry+0x20>
40014518:	40030c98 	.word	0x40030c98
4001451c:	40031618 	.word	0x40031618
40014520:	400316e8 	.word	0x400316e8
40014524:	40031604 	.word	0x40031604

Disassembly of section i.CyU3PUartSetClock:

40014528 <CyU3PUartSetClock>:
40014528:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001452c:	e1a04000 	mov	r4, r0
40014530:	e3a06000 	mov	r6, #0
40014534:	e59f00bc 	ldr	r0, [pc, #188]	; 400145f8 <CyU3PUartSetClock+0xd0>
40014538:	e5907000 	ldr	r7, [r0]
4001453c:	e3540000 	cmp	r4, #0
40014540:	1a000001 	bne	4001454c <CyU3PUartSetClock+0x24>
40014544:	e3a00040 	mov	r0, #64	; 0x40
40014548:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001454c:	e3540f96 	cmp	r4, #600	; 0x258
40014550:	2a000002 	bcs	40014560 <CyU3PUartSetClock+0x38>
40014554:	e59f009c 	ldr	r0, [pc, #156]	; 400145f8 <CyU3PUartSetClock+0xd0>
40014558:	e5900000 	ldr	r0, [r0]
4001455c:	e1a07220 	lsr	r7, r0, #4
40014560:	e1a01204 	lsl	r1, r4, #4
40014564:	e1a00107 	lsl	r0, r7, #2
40014568:	ebfff1b1 	bl	40010c34 <__aeabi_uidivmod>
4001456c:	e1a05000 	mov	r5, r0
40014570:	e3150003 	tst	r5, #3
40014574:	1a000001 	bne	40014580 <CyU3PUartSetClock+0x58>
40014578:	e1a05145 	asr	r5, r5, #2
4001457c:	ea00000a 	b	400145ac <CyU3PUartSetClock+0x84>
40014580:	e2050003 	and	r0, r5, #3
40014584:	e3500001 	cmp	r0, #1
40014588:	0a000002 	beq	40014598 <CyU3PUartSetClock+0x70>
4001458c:	e2050003 	and	r0, r5, #3
40014590:	e3500002 	cmp	r0, #2
40014594:	1a000002 	bne	400145a4 <CyU3PUartSetClock+0x7c>
40014598:	e1a05145 	asr	r5, r5, #2
4001459c:	e3866801 	orr	r6, r6, #65536	; 0x10000
400145a0:	ea000001 	b	400145ac <CyU3PUartSetClock+0x84>
400145a4:	e3a00001 	mov	r0, #1
400145a8:	e0805145 	add	r5, r0, r5, asr #2
400145ac:	e2455001 	sub	r5, r5, #1
400145b0:	e3550001 	cmp	r5, #1
400145b4:	ba000001 	blt	400145c0 <CyU3PUartSetClock+0x98>
400145b8:	e3550801 	cmp	r5, #65536	; 0x10000
400145bc:	ba000001 	blt	400145c8 <CyU3PUartSetClock+0xa0>
400145c0:	e3a00040 	mov	r0, #64	; 0x40
400145c4:	eaffffdf 	b	40014548 <CyU3PUartSetClock+0x20>
400145c8:	e3540f96 	cmp	r4, #600	; 0x258
400145cc:	2a000002 	bcs	400145dc <CyU3PUartSetClock+0xb4>
400145d0:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400145d4:	e1866000 	orr	r6, r6, r0
400145d8:	ea000002 	b	400145e8 <CyU3PUartSetClock+0xc0>
400145dc:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400145e0:	e3800806 	orr	r0, r0, #393216	; 0x60000
400145e4:	e1866000 	orr	r6, r6, r0
400145e8:	e59f000c 	ldr	r0, [pc, #12]	; 400145fc <CyU3PUartSetClock+0xd4>
400145ec:	e5806024 	str	r6, [r0, #36]	; 0x24
400145f0:	e3a00000 	mov	r0, #0
400145f4:	eaffffd3 	b	40014548 <CyU3PUartSetClock+0x20>
400145f8:	40030c50 	.word	0x40030c50
400145fc:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014600 <CyU3UpdateLppActiveInfo>:
40014600:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014604:	e1a04000 	mov	r4, r0
40014608:	e1a05001 	mov	r5, r1
4001460c:	e1a06002 	mov	r6, r2
40014610:	e3a00001 	mov	r0, #1
40014614:	e1a00410 	lsl	r0, r0, r4
40014618:	e20070ff 	and	r7, r0, #255	; 0xff
4001461c:	e284000f 	add	r0, r4, #15
40014620:	e20080ff 	and	r8, r0, #255	; 0xff
40014624:	e59f0050 	ldr	r0, [pc, #80]	; 4001467c <CyU3UpdateLppActiveInfo+0x7c>
40014628:	e7806104 	str	r6, [r0, r4, lsl #2]
4001462c:	e3550000 	cmp	r5, #0
40014630:	0a000009 	beq	4001465c <CyU3UpdateLppActiveInfo+0x5c>
40014634:	e3560000 	cmp	r6, #0
40014638:	0a000001 	beq	40014644 <CyU3UpdateLppActiveInfo+0x44>
4001463c:	e1a00008 	mov	r0, r8
40014640:	eb003721 	bl	400222cc <CyU3PVicEnableInt>
40014644:	e59f0034 	ldr	r0, [pc, #52]	; 40014680 <CyU3UpdateLppActiveInfo+0x80>
40014648:	e5d00000 	ldrb	r0, [r0]
4001464c:	e1800007 	orr	r0, r0, r7
40014650:	e59f1028 	ldr	r1, [pc, #40]	; 40014680 <CyU3UpdateLppActiveInfo+0x80>
40014654:	e5c10000 	strb	r0, [r1]
40014658:	ea000006 	b	40014678 <CyU3UpdateLppActiveInfo+0x78>
4001465c:	e59f001c 	ldr	r0, [pc, #28]	; 40014680 <CyU3UpdateLppActiveInfo+0x80>
40014660:	e5d00000 	ldrb	r0, [r0]
40014664:	e1c00007 	bic	r0, r0, r7
40014668:	e59f1010 	ldr	r1, [pc, #16]	; 40014680 <CyU3UpdateLppActiveInfo+0x80>
4001466c:	e5c10000 	strb	r0, [r1]
40014670:	e1a00008 	mov	r0, r8
40014674:	eb00370f 	bl	400222b8 <CyU3PVicDisableInt>
40014678:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001467c:	40031604 	.word	0x40031604
40014680:	40030c94 	.word	0x40030c94

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014684 <CyFx3DevClearSwInterrupt>:
40014684:	e59f000c 	ldr	r0, [pc, #12]	; 40014698 <CyFx3DevClearSwInterrupt+0x14>
40014688:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
4001468c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014690:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014694:	e12fff1e 	bx	lr
40014698:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

4001469c <CyFx3DevIOConfigure>:
4001469c:	e92d4030 	push	{r4, r5, lr}
400146a0:	e1b04000 	movs	r4, r0
400146a4:	e24dd024 	sub	sp, sp, #36	; 0x24
400146a8:	0a000045 	beq	400147c4 <CyFx3DevIOConfigure+0x128>
400146ac:	eb00017b 	bl	40014ca0 <CyFx3DevIsGpif32Supported>
400146b0:	e3500000 	cmp	r0, #0
400146b4:	e3a05000 	mov	r5, #0
400146b8:	05845000 	streq	r5, [r4]
400146bc:	eb0001ae 	bl	40014d7c <CyFx3DevIsSib0Supported>
400146c0:	e3500000 	cmp	r0, #0
400146c4:	05c45014 	strbeq	r5, [r4, #20]
400146c8:	eb0001b5 	bl	40014da4 <CyFx3DevIsSib1Supported>
400146cc:	e3500000 	cmp	r0, #0
400146d0:	05c45015 	strbeq	r5, [r4, #21]
400146d4:	eb000194 	bl	40014d2c <CyFx3DevIsI2sSupported>
400146d8:	e3500000 	cmp	r0, #0
400146dc:	1a000002 	bne	400146ec <CyFx3DevIOConfigure+0x50>
400146e0:	e594000c 	ldr	r0, [r4, #12]
400146e4:	e3500000 	cmp	r0, #0
400146e8:	1a000035 	bne	400147c4 <CyFx3DevIOConfigure+0x128>
400146ec:	e5940000 	ldr	r0, [r4]
400146f0:	e3500000 	cmp	r0, #0
400146f4:	0a000009 	beq	40014720 <CyFx3DevIOConfigure+0x84>
400146f8:	e5d40016 	ldrb	r0, [r4, #22]
400146fc:	e3500000 	cmp	r0, #0
40014700:	05d40014 	ldrbeq	r0, [r4, #20]
40014704:	03500000 	cmpeq	r0, #0
40014708:	05d40015 	ldrbeq	r0, [r4, #21]
4001470c:	03500000 	cmpeq	r0, #0
40014710:	1a00002b 	bne	400147c4 <CyFx3DevIOConfigure+0x128>
40014714:	e3a00002 	mov	r0, #2
40014718:	e5cd0000 	strb	r0, [sp]
4001471c:	ea000022 	b	400147ac <CyFx3DevIOConfigure+0x110>
40014720:	e5d40014 	ldrb	r0, [r4, #20]
40014724:	e3a02003 	mov	r2, #3
40014728:	e3a03001 	mov	r3, #1
4001472c:	e3500000 	cmp	r0, #0
40014730:	05cd2000 	strbeq	r2, [sp]
40014734:	0a000004 	beq	4001474c <CyFx3DevIOConfigure+0xb0>
40014738:	e3500001 	cmp	r0, #1
4001473c:	05cd3000 	strbeq	r3, [sp]
40014740:	0a000001 	beq	4001474c <CyFx3DevIOConfigure+0xb0>
40014744:	e3500002 	cmp	r0, #2
40014748:	05cd5000 	strbeq	r5, [sp]
4001474c:	e5d41015 	ldrb	r1, [r4, #21]
40014750:	e5d40016 	ldrb	r0, [r4, #22]
40014754:	e3510002 	cmp	r1, #2
40014758:	1a000009 	bne	40014784 <CyFx3DevIOConfigure+0xe8>
4001475c:	e3500004 	cmp	r0, #4
40014760:	05940004 	ldreq	r0, [r4, #4]
40014764:	03500000 	cmpeq	r0, #0
40014768:	05940010 	ldreq	r0, [r4, #16]
4001476c:	03500000 	cmpeq	r0, #0
40014770:	0594000c 	ldreq	r0, [r4, #12]
40014774:	03500000 	cmpeq	r0, #0
40014778:	05cd5001 	strbeq	r5, [sp, #1]
4001477c:	0a000013 	beq	400147d0 <CyFx3DevIOConfigure+0x134>
40014780:	ea00000f 	b	400147c4 <CyFx3DevIOConfigure+0x128>
40014784:	e3500000 	cmp	r0, #0
40014788:	0a000009 	beq	400147b4 <CyFx3DevIOConfigure+0x118>
4001478c:	e3500001 	cmp	r0, #1
40014790:	13500002 	cmpne	r0, #2
40014794:	13500003 	cmpne	r0, #3
40014798:	1a000009 	bne	400147c4 <CyFx3DevIOConfigure+0x128>
4001479c:	e3510001 	cmp	r1, #1
400147a0:	05cd3001 	strbeq	r3, [sp, #1]
400147a4:	0a000009 	beq	400147d0 <CyFx3DevIOConfigure+0x134>
400147a8:	e3a00004 	mov	r0, #4
400147ac:	e5cd0001 	strb	r0, [sp, #1]
400147b0:	ea000006 	b	400147d0 <CyFx3DevIOConfigure+0x134>
400147b4:	e5cd2001 	strb	r2, [sp, #1]
400147b8:	e5d40015 	ldrb	r0, [r4, #21]
400147bc:	e3500000 	cmp	r0, #0
400147c0:	0a000002 	beq	400147d0 <CyFx3DevIOConfigure+0x134>
400147c4:	e3a00000 	mov	r0, #0
400147c8:	e28dd024 	add	sp, sp, #36	; 0x24
400147cc:	e8bd8030 	pop	{r4, r5, pc}
400147d0:	e5940004 	ldr	r0, [r4, #4]
400147d4:	e58d0004 	str	r0, [sp, #4]
400147d8:	e594000c 	ldr	r0, [r4, #12]
400147dc:	e58d000c 	str	r0, [sp, #12]
400147e0:	e5940010 	ldr	r0, [r4, #16]
400147e4:	e58d0010 	str	r0, [sp, #16]
400147e8:	e5940008 	ldr	r0, [r4, #8]
400147ec:	e58d0008 	str	r0, [sp, #8]
400147f0:	e5940018 	ldr	r0, [r4, #24]
400147f4:	e58d0014 	str	r0, [sp, #20]
400147f8:	e594001c 	ldr	r0, [r4, #28]
400147fc:	e58d0018 	str	r0, [sp, #24]
40014800:	e5940020 	ldr	r0, [r4, #32]
40014804:	e58d001c 	str	r0, [sp, #28]
40014808:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4001480c:	e58d0020 	str	r0, [sp, #32]
40014810:	e1a0000d 	mov	r0, sp
40014814:	eb000054 	bl	4001496c <CyFx3DevIOSetConfig>
40014818:	eaffffea 	b	400147c8 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

4001481c <CyFx3DevIOIsGpio>:
4001481c:	e350003d 	cmp	r0, #61	; 0x3d
40014820:	e3a02000 	mov	r2, #0
40014824:	23a00000 	movcs	r0, #0
40014828:	212fff1e 	bxcs	lr
4001482c:	e3500020 	cmp	r0, #32
40014830:	83a02001 	movhi	r2, #1
40014834:	82400020 	subhi	r0, r0, #32
40014838:	e59fc018 	ldr	ip, [pc, #24]	; 40014858 <CyFx3DevIOIsGpio+0x3c>
4001483c:	e3510000 	cmp	r1, #0
40014840:	e08c1102 	add	r1, ip, r2, lsl #2
40014844:	0591101c 	ldreq	r1, [r1, #28]
40014848:	15911014 	ldrne	r1, [r1, #20]
4001484c:	e3a03001 	mov	r3, #1
40014850:	e0010013 	and	r0, r1, r3, lsl r0
40014854:	e12fff1e 	bx	lr
40014858:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

4001485c <CyFx3DevIOIsI2cConfigured>:
4001485c:	e59f0004 	ldr	r0, [pc, #4]	; 40014868 <CyFx3DevIOIsI2cConfigured+0xc>
40014860:	e5900008 	ldr	r0, [r0, #8]
40014864:	e12fff1e 	bx	lr
40014868:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

4001486c <CyFx3DevIOIsI2sConfigured>:
4001486c:	e59f0004 	ldr	r0, [pc, #4]	; 40014878 <CyFx3DevIOIsI2sConfigured+0xc>
40014870:	e590000c 	ldr	r0, [r0, #12]
40014874:	e12fff1e 	bx	lr
40014878:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

4001487c <CyFx3DevIOIsSpiConfigured>:
4001487c:	e59f0004 	ldr	r0, [pc, #4]	; 40014888 <CyFx3DevIOIsSpiConfigured+0xc>
40014880:	e5900010 	ldr	r0, [r0, #16]
40014884:	e12fff1e 	bx	lr
40014888:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

4001488c <CyFx3DevIOIsUartConfigured>:
4001488c:	e59f0004 	ldr	r0, [pc, #4]	; 40014898 <CyFx3DevIOIsUartConfigured+0xc>
40014890:	e5900004 	ldr	r0, [r0, #4]
40014894:	e12fff1e 	bx	lr
40014898:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOSelectGpio:

4001489c <CyFx3DevIOSelectGpio>:
4001489c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400148a0:	e350003d 	cmp	r0, #61	; 0x3d
400148a4:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
400148a8:	e3a08001 	mov	r8, #1
400148ac:	e59f30b0 	ldr	r3, [pc, #176]	; 40014964 <CyFx3DevIOSelectGpio+0xc8>
400148b0:	e1a0c018 	lsl	ip, r8, r0
400148b4:	e2837014 	add	r7, r3, #20
400148b8:	e89700d0 	ldm	r7, {r4, r6, r7}
400148bc:	e5935020 	ldr	r5, [r3, #32]
400148c0:	e3510000 	cmp	r1, #0
400148c4:	e240e020 	sub	lr, r0, #32
400148c8:	0a00000f 	beq	4001490c <CyFx3DevIOSelectGpio+0x70>
400148cc:	e3500020 	cmp	r0, #32
400148d0:	2a000005 	bcs	400148ec <CyFx3DevIOSelectGpio+0x50>
400148d4:	e3520000 	cmp	r2, #0
400148d8:	0187000c 	orreq	r0, r7, ip
400148dc:	0a00000f 	beq	40014920 <CyFx3DevIOSelectGpio+0x84>
400148e0:	e184000c 	orr	r0, r4, ip
400148e4:	e5830014 	str	r0, [r3, #20]
400148e8:	ea000013 	b	4001493c <CyFx3DevIOSelectGpio+0xa0>
400148ec:	e3520000 	cmp	r2, #0
400148f0:	e20e00ff 	and	r0, lr, #255	; 0xff
400148f4:	e1a00018 	lsl	r0, r8, r0
400148f8:	01800005 	orreq	r0, r0, r5
400148fc:	0a00000d 	beq	40014938 <CyFx3DevIOSelectGpio+0x9c>
40014900:	e1800006 	orr	r0, r0, r6
40014904:	e5830018 	str	r0, [r3, #24]
40014908:	ea00000b 	b	4001493c <CyFx3DevIOSelectGpio+0xa0>
4001490c:	e3500020 	cmp	r0, #32
40014910:	2a000004 	bcs	40014928 <CyFx3DevIOSelectGpio+0x8c>
40014914:	e1c4000c 	bic	r0, r4, ip
40014918:	e5830014 	str	r0, [r3, #20]
4001491c:	e1c7000c 	bic	r0, r7, ip
40014920:	e583001c 	str	r0, [r3, #28]
40014924:	ea000004 	b	4001493c <CyFx3DevIOSelectGpio+0xa0>
40014928:	e1a00e18 	lsl	r0, r8, lr
4001492c:	e1c61000 	bic	r1, r6, r0
40014930:	e1c50000 	bic	r0, r5, r0
40014934:	e5831018 	str	r1, [r3, #24]
40014938:	e5830020 	str	r0, [r3, #32]
4001493c:	e5931014 	ldr	r1, [r3, #20]
40014940:	e59f0020 	ldr	r0, [pc, #32]	; 40014968 <CyFx3DevIOSelectGpio+0xcc>
40014944:	e580100c 	str	r1, [r0, #12]
40014948:	e5931018 	ldr	r1, [r3, #24]
4001494c:	e5801010 	str	r1, [r0, #16]
40014950:	e593101c 	ldr	r1, [r3, #28]
40014954:	e5801014 	str	r1, [r0, #20]
40014958:	e5931020 	ldr	r1, [r3, #32]
4001495c:	e5801018 	str	r1, [r0, #24]
40014960:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014964:	40030cb0 	.word	0x40030cb0
40014968:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

4001496c <CyFx3DevIOSetConfig>:
4001496c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014970:	e59f8208 	ldr	r8, [pc, #520]	; 40014b80 <CyFx3DevIOSetConfig+0x214>
40014974:	e1a05000 	mov	r5, r0
40014978:	e5980008 	ldr	r0, [r8, #8]
4001497c:	e59f7200 	ldr	r7, [pc, #512]	; 40014b84 <CyFx3DevIOSetConfig+0x218>
40014980:	e2006002 	and	r6, r0, #2
40014984:	e5d50000 	ldrb	r0, [r5]
40014988:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
4001498c:	e3500000 	cmp	r0, #0
40014990:	01c44944 	biceq	r4, r4, r4, asr #18
40014994:	0a000008 	beq	400149bc <CyFx3DevIOSetConfig+0x50>
40014998:	e3500001 	cmp	r0, #1
4001499c:	059f41e4 	ldreq	r4, [pc, #484]	; 40014b88 <CyFx3DevIOSetConfig+0x21c>
400149a0:	0a000005 	beq	400149bc <CyFx3DevIOSetConfig+0x50>
400149a4:	e3500002 	cmp	r0, #2
400149a8:	059f41dc 	ldreq	r4, [pc, #476]	; 40014b8c <CyFx3DevIOSetConfig+0x220>
400149ac:	0a000001 	beq	400149b8 <CyFx3DevIOSetConfig+0x4c>
400149b0:	e3500003 	cmp	r0, #3
400149b4:	1a000058 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
400149b8:	e3866010 	orr	r6, r6, #16
400149bc:	e5d50001 	ldrb	r0, [r5, #1]
400149c0:	e3500005 	cmp	r0, #5
400149c4:	308ff100 	addcc	pc, pc, r0, lsl #2
400149c8:	ea000053 	b	40014b1c <CyFx3DevIOSetConfig+0x1b0>
400149cc:	ea000003 	b	400149e0 <CyFx3DevIOSetConfig+0x74>
400149d0:	ea000005 	b	400149ec <CyFx3DevIOSetConfig+0x80>
400149d4:	ea000021 	b	40014a60 <CyFx3DevIOSetConfig+0xf4>
400149d8:	ea00002c 	b	40014a90 <CyFx3DevIOSetConfig+0x124>
400149dc:	ea000002 	b	400149ec <CyFx3DevIOSetConfig+0x80>
400149e0:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
400149e4:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
400149e8:	ea000032 	b	40014ab8 <CyFx3DevIOSetConfig+0x14c>
400149ec:	e3500001 	cmp	r0, #1
400149f0:	e5950004 	ldr	r0, [r5, #4]
400149f4:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
400149f8:	e3500000 	cmp	r0, #0
400149fc:	1a000006 	bne	40014a1c <CyFx3DevIOSetConfig+0xb0>
40014a00:	e5950010 	ldr	r0, [r5, #16]
40014a04:	e3500000 	cmp	r0, #0
40014a08:	1a00000b 	bne	40014a3c <CyFx3DevIOSetConfig+0xd0>
40014a0c:	e595000c 	ldr	r0, [r5, #12]
40014a10:	e3500000 	cmp	r0, #0
40014a14:	1a00000e 	bne	40014a54 <CyFx3DevIOSetConfig+0xe8>
40014a18:	ea000005 	b	40014a34 <CyFx3DevIOSetConfig+0xc8>
40014a1c:	e595000c 	ldr	r0, [r5, #12]
40014a20:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014a24:	e3500000 	cmp	r0, #0
40014a28:	05950010 	ldreq	r0, [r5, #16]
40014a2c:	03500000 	cmpeq	r0, #0
40014a30:	1a000039 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
40014a34:	e3866c01 	orr	r6, r6, #256	; 0x100
40014a38:	ea00001e 	b	40014ab8 <CyFx3DevIOSetConfig+0x14c>
40014a3c:	e595000c 	ldr	r0, [r5, #12]
40014a40:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014a44:	e3500000 	cmp	r0, #0
40014a48:	1a000033 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
40014a4c:	e3866c02 	orr	r6, r6, #512	; 0x200
40014a50:	ea000018 	b	40014ab8 <CyFx3DevIOSetConfig+0x14c>
40014a54:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014a58:	e3866c03 	orr	r6, r6, #768	; 0x300
40014a5c:	ea000015 	b	40014ab8 <CyFx3DevIOSetConfig+0x14c>
40014a60:	e5950010 	ldr	r0, [r5, #16]
40014a64:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014a68:	e3500000 	cmp	r0, #0
40014a6c:	1a00002a 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
40014a70:	e5950004 	ldr	r0, [r5, #4]
40014a74:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014a78:	e3500000 	cmp	r0, #0
40014a7c:	e595000c 	ldr	r0, [r5, #12]
40014a80:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014a84:	e3500000 	cmp	r0, #0
40014a88:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014a8c:	ea000009 	b	40014ab8 <CyFx3DevIOSetConfig+0x14c>
40014a90:	e5950004 	ldr	r0, [r5, #4]
40014a94:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014a98:	e3500000 	cmp	r0, #0
40014a9c:	e5950010 	ldr	r0, [r5, #16]
40014aa0:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014aa4:	e3500000 	cmp	r0, #0
40014aa8:	e595000c 	ldr	r0, [r5, #12]
40014aac:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014ab0:	e3500000 	cmp	r0, #0
40014ab4:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014ab8:	e5950008 	ldr	r0, [r5, #8]
40014abc:	e5959014 	ldr	r9, [r5, #20]
40014ac0:	e3500000 	cmp	r0, #0
40014ac4:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014ac8:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014acc:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014ad0:	05950018 	ldreq	r0, [r5, #24]
40014ad4:	01d00004 	bicseq	r0, r0, r4
40014ad8:	0595e01c 	ldreq	lr, [r5, #28]
40014adc:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014ae0:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014ae4:	0595c020 	ldreq	ip, [r5, #32]
40014ae8:	01dc0004 	bicseq	r0, ip, r4
40014aec:	1a00000a 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
40014af0:	e59f0098 	ldr	r0, [pc, #152]	; 40014b90 <CyFx3DevIOSetConfig+0x224>
40014af4:	e3a01000 	mov	r1, #0
40014af8:	e01e2000 	ands	r2, lr, r0
40014afc:	000c2000 	andeq	r2, ip, r0
40014b00:	0a000001 	beq	40014b0c <CyFx3DevIOSetConfig+0x1a0>
40014b04:	e11c0000 	tst	ip, r0
40014b08:	1a000003 	bne	40014b1c <CyFx3DevIOSetConfig+0x1b0>
40014b0c:	e2523001 	subs	r3, r2, #1
40014b10:	13a03001 	movne	r3, #1
40014b14:	e1120003 	tst	r2, r3
40014b18:	0a000001 	beq	40014b24 <CyFx3DevIOSetConfig+0x1b8>
40014b1c:	e3a00000 	mov	r0, #0
40014b20:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014b24:	e2811001 	add	r1, r1, #1
40014b28:	e3510008 	cmp	r1, #8
40014b2c:	e1a00080 	lsl	r0, r0, #1
40014b30:	3afffff0 	bcc	40014af8 <CyFx3DevIOSetConfig+0x18c>
40014b34:	e588900c 	str	r9, [r8, #12]
40014b38:	e5950018 	ldr	r0, [r5, #24]
40014b3c:	e5880010 	str	r0, [r8, #16]
40014b40:	e595001c 	ldr	r0, [r5, #28]
40014b44:	e5880014 	str	r0, [r8, #20]
40014b48:	e5950020 	ldr	r0, [r5, #32]
40014b4c:	e5880018 	str	r0, [r8, #24]
40014b50:	e3a00001 	mov	r0, #1
40014b54:	eb0000a6 	bl	40014df4 <CyFx3BusyWait>
40014b58:	e5886008 	str	r6, [r8, #8]
40014b5c:	e59f0030 	ldr	r0, [pc, #48]	; 40014b94 <CyFx3DevIOSetConfig+0x228>
40014b60:	e3a02024 	mov	r2, #36	; 0x24
40014b64:	e1a01005 	mov	r1, r5
40014b68:	ebfffb98 	bl	400139d0 <__aeabi_memcpy4>
40014b6c:	e59f0024 	ldr	r0, [pc, #36]	; 40014b98 <CyFx3DevIOSetConfig+0x22c>
40014b70:	e5804004 	str	r4, [r0, #4]
40014b74:	e5807000 	str	r7, [r0]
40014b78:	e3a00001 	mov	r0, #1
40014b7c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014b80:	e0051000 	.word	0xe0051000
40014b84:	3fe00000 	.word	0x3fe00000
40014b88:	1ffff9e0 	.word	0x1ffff9e0
40014b8c:	1fffe000 	.word	0x1fffe000
40014b90:	01010101 	.word	0x01010101
40014b94:	40030cb0 	.word	0x40030cb0
40014b98:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyFx3DevIdentifyPart:

40014b9c <CyFx3DevIdentifyPart>:
40014b9c:	e59f0078 	ldr	r0, [pc, #120]	; 40014c1c <CyFx3DevIdentifyPart+0x80>
40014ba0:	e5901008 	ldr	r1, [r0, #8]
40014ba4:	e59f2074 	ldr	r2, [pc, #116]	; 40014c20 <CyFx3DevIdentifyPart+0x84>
40014ba8:	e1a01221 	lsr	r1, r1, #4
40014bac:	e5923004 	ldr	r3, [r2, #4]
40014bb0:	e3530000 	cmp	r3, #0
40014bb4:	15d20000 	ldrbne	r0, [r2]
40014bb8:	112fff1e 	bxne	lr
40014bbc:	e5900004 	ldr	r0, [r0, #4]
40014bc0:	e3100040 	tst	r0, #64	; 0x40
40014bc4:	e59f2058 	ldr	r2, [pc, #88]	; 40014c24 <CyFx3DevIdentifyPart+0x88>
40014bc8:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014bcc:	e3a00000 	mov	r0, #0
40014bd0:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014bd4:	e1530001 	cmp	r3, r1
40014bd8:	12800001 	addne	r0, r0, #1
40014bdc:	120000ff 	andne	r0, r0, #255	; 0xff
40014be0:	1350001b 	cmpne	r0, #27
40014be4:	3afffff9 	bcc	40014bd0 <CyFx3DevIdentifyPart+0x34>
40014be8:	e350001b 	cmp	r0, #27
40014bec:	03a00003 	moveq	r0, #3
40014bf0:	0a000000 	beq	40014bf8 <CyFx3DevIdentifyPart+0x5c>
40014bf4:	2a000003 	bcs	40014c08 <CyFx3DevIdentifyPart+0x6c>
40014bf8:	e0821180 	add	r1, r2, r0, lsl #3
40014bfc:	e5911004 	ldr	r1, [r1, #4]
40014c00:	e3110004 	tst	r1, #4
40014c04:	112fff1e 	bxne	lr
40014c08:	e59f1018 	ldr	r1, [pc, #24]	; 40014c28 <CyFx3DevIdentifyPart+0x8c>
40014c0c:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014c10:	e3822004 	orr	r2, r2, #4
40014c14:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014c18:	e12fff1e 	bx	lr
40014c1c:	e0055000 	.word	0xe0055000
40014c20:	40030c9c 	.word	0x40030c9c
40014c24:	40011fd0 	.word	0x40011fd0
40014c28:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014c2c <CyFx3DevInitPageTables>:
40014c2c:	e92d4030 	push	{r4, r5, lr}
40014c30:	e59f0058 	ldr	r0, [pc, #88]	; 40014c90 <CyFx3DevInitPageTables+0x64>
40014c34:	e3a04000 	mov	r4, #0
40014c38:	e59f504c 	ldr	r5, [pc, #76]	; 40014c8c <CyFx3DevInitPageTables+0x60>
40014c3c:	e5804004 	str	r4, [r0, #4]
40014c40:	ebffffd5 	bl	40014b9c <CyFx3DevIdentifyPart>
40014c44:	e59f1048 	ldr	r1, [pc, #72]	; 40014c94 <CyFx3DevInitPageTables+0x68>
40014c48:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014c4c:	e5801000 	str	r1, [r0]
40014c50:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014c54:	e5801008 	str	r1, [r0, #8]
40014c58:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014c5c:	e5801010 	str	r1, [r0, #16]
40014c60:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014c64:	e5801018 	str	r1, [r0, #24]
40014c68:	e59f1028 	ldr	r1, [pc, #40]	; 40014c98 <CyFx3DevInitPageTables+0x6c>
40014c6c:	e5801020 	str	r1, [r0, #32]
40014c70:	e59f1024 	ldr	r1, [pc, #36]	; 40014c9c <CyFx3DevInitPageTables+0x70>
40014c74:	e580101c 	str	r1, [r0, #28]
40014c78:	e5804024 	str	r4, [r0, #36]	; 0x24
40014c7c:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014c80:	e3a00003 	mov	r0, #3
40014c84:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014c88:	e8bd8030 	pop	{r4, r5, pc}
40014c8c:	e0058000 	.word	0xe0058000
40014c90:	40030c9c 	.word	0x40030c9c
40014c94:	00000c12 	.word	0x00000c12
40014c98:	fff00c12 	.word	0xfff00c12
40014c9c:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014ca0 <CyFx3DevIsGpif32Supported>:
40014ca0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014ca4:	ebffffbc 	bl	40014b9c <CyFx3DevIdentifyPart>
40014ca8:	e350001b 	cmp	r0, #27
40014cac:	359f1010 	ldrcc	r1, [pc, #16]	; 40014cc4 <CyFx3DevIsGpif32Supported+0x24>
40014cb0:	30810180 	addcc	r0, r1, r0, lsl #3
40014cb4:	35900004 	ldrcc	r0, [r0, #4]
40014cb8:	32000010 	andcc	r0, r0, #16
40014cbc:	23a00000 	movcs	r0, #0
40014cc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cc4:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014cc8 <CyFx3DevIsGpifConfigurable>:
40014cc8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014ccc:	ebffffb2 	bl	40014b9c <CyFx3DevIdentifyPart>
40014cd0:	e350001b 	cmp	r0, #27
40014cd4:	2a000006 	bcs	40014cf4 <CyFx3DevIsGpifConfigurable+0x2c>
40014cd8:	e59f101c 	ldr	r1, [pc, #28]	; 40014cfc <CyFx3DevIsGpifConfigurable+0x34>
40014cdc:	e0810180 	add	r0, r1, r0, lsl #3
40014ce0:	e5900004 	ldr	r0, [r0, #4]
40014ce4:	e3100c0f 	tst	r0, #3840	; 0xf00
40014ce8:	159f0010 	ldrne	r0, [pc, #16]	; 40014d00 <CyFx3DevIsGpifConfigurable+0x38>
40014cec:	15900008 	ldrne	r0, [r0, #8]
40014cf0:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014cf4:	e3a00001 	mov	r0, #1
40014cf8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cfc:	40011fd0 	.word	0x40011fd0
40014d00:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyFx3DevIsGpifSupported:

40014d04 <CyFx3DevIsGpifSupported>:
40014d04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d08:	ebffffa3 	bl	40014b9c <CyFx3DevIdentifyPart>
40014d0c:	e350001b 	cmp	r0, #27
40014d10:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d28 <CyFx3DevIsGpifSupported+0x24>
40014d14:	30810180 	addcc	r0, r1, r0, lsl #3
40014d18:	35900004 	ldrcc	r0, [r0, #4]
40014d1c:	32000008 	andcc	r0, r0, #8
40014d20:	23a00000 	movcs	r0, #0
40014d24:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d28:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsI2sSupported:

40014d2c <CyFx3DevIsI2sSupported>:
40014d2c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d30:	ebffff99 	bl	40014b9c <CyFx3DevIdentifyPart>
40014d34:	e350001b 	cmp	r0, #27
40014d38:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d50 <CyFx3DevIsI2sSupported+0x24>
40014d3c:	30810180 	addcc	r0, r1, r0, lsl #3
40014d40:	35900004 	ldrcc	r0, [r0, #4]
40014d44:	32000080 	andcc	r0, r0, #128	; 0x80
40014d48:	23a00000 	movcs	r0, #0
40014d4c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d50:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsOtgSupported:

40014d54 <CyFx3DevIsOtgSupported>:
40014d54:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d58:	ebffff8f 	bl	40014b9c <CyFx3DevIdentifyPart>
40014d5c:	e350001b 	cmp	r0, #27
40014d60:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d78 <CyFx3DevIsOtgSupported+0x24>
40014d64:	30810180 	addcc	r0, r1, r0, lsl #3
40014d68:	35900004 	ldrcc	r0, [r0, #4]
40014d6c:	32000002 	andcc	r0, r0, #2
40014d70:	23a00000 	movcs	r0, #0
40014d74:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d78:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsSib0Supported:

40014d7c <CyFx3DevIsSib0Supported>:
40014d7c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d80:	ebffff85 	bl	40014b9c <CyFx3DevIdentifyPart>
40014d84:	e350001b 	cmp	r0, #27
40014d88:	359f1010 	ldrcc	r1, [pc, #16]	; 40014da0 <CyFx3DevIsSib0Supported+0x24>
40014d8c:	30810180 	addcc	r0, r1, r0, lsl #3
40014d90:	35900004 	ldrcc	r0, [r0, #4]
40014d94:	32000020 	andcc	r0, r0, #32
40014d98:	23a00000 	movcs	r0, #0
40014d9c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014da0:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsSib1Supported:

40014da4 <CyFx3DevIsSib1Supported>:
40014da4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014da8:	ebffff7b 	bl	40014b9c <CyFx3DevIdentifyPart>
40014dac:	e350001b 	cmp	r0, #27
40014db0:	359f1010 	ldrcc	r1, [pc, #16]	; 40014dc8 <CyFx3DevIsSib1Supported+0x24>
40014db4:	30810180 	addcc	r0, r1, r0, lsl #3
40014db8:	35900004 	ldrcc	r0, [r0, #4]
40014dbc:	32000040 	andcc	r0, r0, #64	; 0x40
40014dc0:	23a00000 	movcs	r0, #0
40014dc4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014dc8:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014dcc <CyFx3DevIsUsb3Supported>:
40014dcc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014dd0:	ebffff71 	bl	40014b9c <CyFx3DevIdentifyPart>
40014dd4:	e350001b 	cmp	r0, #27
40014dd8:	359f1010 	ldrcc	r1, [pc, #16]	; 40014df0 <CyFx3DevIsUsb3Supported+0x24>
40014ddc:	30810180 	addcc	r0, r1, r0, lsl #3
40014de0:	35900004 	ldrcc	r0, [r0, #4]
40014de4:	32000001 	andcc	r0, r0, #1
40014de8:	23a00000 	movcs	r0, #0
40014dec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014df0:	40011fd0 	.word	0x40011fd0

Disassembly of section i.CyFx3BusyWait:

40014df4 <CyFx3BusyWait>:
40014df4:	ea000003 	b	40014e08 <CyFx3BusyWait+0x14>
40014df8:	e3a01000 	mov	r1, #0
40014dfc:	e2811001 	add	r1, r1, #1
40014e00:	e351002f 	cmp	r1, #47	; 0x2f
40014e04:	3afffffc 	bcc	40014dfc <CyFx3BusyWait+0x8>
40014e08:	e1b01000 	movs	r1, r0
40014e0c:	e2400001 	sub	r0, r0, #1
40014e10:	e1a00800 	lsl	r0, r0, #16
40014e14:	e1a00820 	lsr	r0, r0, #16
40014e18:	1afffff6 	bne	40014df8 <CyFx3BusyWait+0x4>
40014e1c:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014e20 <CyFx3PibDllEnable>:
40014e20:	e59f205c 	ldr	r2, [pc, #92]	; 40014e84 <CyFx3PibDllEnable+0x64>
40014e24:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e28:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e2c:	e3c00001 	bic	r0, r0, #1
40014e30:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e34:	e3a00001 	mov	r0, #1
40014e38:	ebffffed 	bl	40014df4 <CyFx3BusyWait>
40014e3c:	e3a00003 	mov	r0, #3
40014e40:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e44:	e3a00001 	mov	r0, #1
40014e48:	ebffffe9 	bl	40014df4 <CyFx3BusyWait>
40014e4c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e50:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014e54:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e58:	e3a00001 	mov	r0, #1
40014e5c:	ebffffe4 	bl	40014df4 <CyFx3BusyWait>
40014e60:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e64:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014e68:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e6c:	e3a00001 	mov	r0, #1
40014e70:	ebffffdf 	bl	40014df4 <CyFx3BusyWait>
40014e74:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e78:	e3100004 	tst	r0, #4
40014e7c:	0afffffc 	beq	40014e74 <CyFx3PibDllEnable+0x54>
40014e80:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e84:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014e88 <CyFx3PibGetDllStatus>:
40014e88:	e59f0008 	ldr	r0, [pc, #8]	; 40014e98 <CyFx3PibGetDllStatus+0x10>
40014e8c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014e90:	e2000004 	and	r0, r0, #4
40014e94:	e12fff1e 	bx	lr
40014e98:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014e9c <CyFx3PibPowerOn>:
40014e9c:	e92d4010 	push	{r4, lr}
40014ea0:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014ea4:	ebffff96 	bl	40014d04 <CyFx3DevIsGpifSupported>
40014ea8:	e3500000 	cmp	r0, #0
40014eac:	1a000002 	bne	40014ebc <CyFx3PibPowerOn+0x20>
40014eb0:	e4940004 	ldr	r0, [r4], #4
40014eb4:	e3500000 	cmp	r0, #0
40014eb8:	1afffffc 	bne	40014eb0 <CyFx3PibPowerOn+0x14>
40014ebc:	e59f2028 	ldr	r2, [pc, #40]	; 40014eec <CyFx3PibPowerOn+0x50>
40014ec0:	e3a00000 	mov	r0, #0
40014ec4:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014ec8:	e3a0000a 	mov	r0, #10
40014ecc:	ebffffc8 	bl	40014df4 <CyFx3BusyWait>
40014ed0:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014ed4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014ed8:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014edc:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014ee0:	e3100001 	tst	r0, #1
40014ee4:	0afffffc 	beq	40014edc <CyFx3PibPowerOn+0x40>
40014ee8:	e8bd8010 	pop	{r4, pc}
40014eec:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014ef0 <CyU3PDmaSocketDisable>:
40014ef0:	e3a0c03f 	mov	ip, #63	; 0x3f
40014ef4:	e00c1440 	and	r1, ip, r0, asr #8
40014ef8:	e20030ff 	and	r3, r0, #255	; 0xff
40014efc:	e59fc048 	ldr	ip, [pc, #72]	; 40014f4c <CyU3PDmaSocketDisable+0x5c>
40014f00:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f04:	e08cc383 	add	ip, ip, r3, lsl #7
40014f08:	e59c200c 	ldr	r2, [ip, #12]
40014f0c:	e3120601 	tst	r2, #1048576	; 0x100000
40014f10:	1a000000 	bne	40014f18 <CyU3PDmaSocketDisable+0x28>
40014f14:	e12fff1e 	bx	lr
40014f18:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014f1c:	e59fc028 	ldr	ip, [pc, #40]	; 40014f4c <CyU3PDmaSocketDisable+0x5c>
40014f20:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f24:	e08cc383 	add	ip, ip, r3, lsl #7
40014f28:	e58c200c 	str	r2, [ip, #12]
40014f2c:	e1a00000 	nop			; (mov r0, r0)
40014f30:	e59fc014 	ldr	ip, [pc, #20]	; 40014f4c <CyU3PDmaSocketDisable+0x5c>
40014f34:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f38:	e08cc383 	add	ip, ip, r3, lsl #7
40014f3c:	e59cc00c 	ldr	ip, [ip, #12]
40014f40:	e31c0601 	tst	ip, #1048576	; 0x100000
40014f44:	1afffff9 	bne	40014f30 <CyU3PDmaSocketDisable+0x40>
40014f48:	eafffff1 	b	40014f14 <CyU3PDmaSocketDisable+0x24>
40014f4c:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014f50 <CyU3PDmaSocketGetConfig>:
40014f50:	e1a02000 	mov	r2, r0
40014f54:	e3a0003f 	mov	r0, #63	; 0x3f
40014f58:	e0003442 	and	r3, r0, r2, asr #8
40014f5c:	e202c0ff 	and	ip, r2, #255	; 0xff
40014f60:	e3510000 	cmp	r1, #0
40014f64:	1a000001 	bne	40014f70 <CyU3PDmaSocketGetConfig+0x20>
40014f68:	e3a00040 	mov	r0, #64	; 0x40
40014f6c:	e12fff1e 	bx	lr
40014f70:	e59f0074 	ldr	r0, [pc, #116]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014f74:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f78:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014f7c:	e5810000 	str	r0, [r1]
40014f80:	e59f0064 	ldr	r0, [pc, #100]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014f84:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f88:	e080038c 	add	r0, r0, ip, lsl #7
40014f8c:	e5900004 	ldr	r0, [r0, #4]
40014f90:	e5810004 	str	r0, [r1, #4]
40014f94:	e59f0050 	ldr	r0, [pc, #80]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014f98:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f9c:	e080038c 	add	r0, r0, ip, lsl #7
40014fa0:	e5900008 	ldr	r0, [r0, #8]
40014fa4:	e5810008 	str	r0, [r1, #8]
40014fa8:	e59f003c 	ldr	r0, [pc, #60]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014fac:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fb0:	e080038c 	add	r0, r0, ip, lsl #7
40014fb4:	e590000c 	ldr	r0, [r0, #12]
40014fb8:	e581000c 	str	r0, [r1, #12]
40014fbc:	e59f0028 	ldr	r0, [pc, #40]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014fc0:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fc4:	e080038c 	add	r0, r0, ip, lsl #7
40014fc8:	e5900010 	ldr	r0, [r0, #16]
40014fcc:	e5810010 	str	r0, [r1, #16]
40014fd0:	e59f0014 	ldr	r0, [pc, #20]	; 40014fec <CyU3PDmaSocketGetConfig+0x9c>
40014fd4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fd8:	e080038c 	add	r0, r0, ip, lsl #7
40014fdc:	e5900014 	ldr	r0, [r0, #20]
40014fe0:	e5810014 	str	r0, [r1, #20]
40014fe4:	e3a00000 	mov	r0, #0
40014fe8:	eaffffdf 	b	40014f6c <CyU3PDmaSocketGetConfig+0x1c>
40014fec:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014ff0 <CyU3PDmaSocketIsValidConsumer>:
40014ff0:	e92d4010 	push	{r4, lr}
40014ff4:	e1a01000 	mov	r1, r0
40014ff8:	e3a0003f 	mov	r0, #63	; 0x3f
40014ffc:	e0002441 	and	r2, r0, r1, asr #8
40015000:	e20130ff 	and	r3, r1, #255	; 0xff
40015004:	e3a04000 	mov	r4, #0
40015008:	e3520000 	cmp	r2, #0
4001500c:	0a000006 	beq	4001502c <CyU3PDmaSocketIsValidConsumer+0x3c>
40015010:	e3520001 	cmp	r2, #1
40015014:	0a000009 	beq	40015040 <CyU3PDmaSocketIsValidConsumer+0x50>
40015018:	e3520002 	cmp	r2, #2
4001501c:	0a00000c 	beq	40015054 <CyU3PDmaSocketIsValidConsumer+0x64>
40015020:	e3520003 	cmp	r2, #3
40015024:	1a000014 	bne	4001507c <CyU3PDmaSocketIsValidConsumer+0x8c>
40015028:	ea00000e 	b	40015068 <CyU3PDmaSocketIsValidConsumer+0x78>
4001502c:	e1a00000 	nop			; (mov r0, r0)
40015030:	e3a0c000 	mov	ip, #0
40015034:	e3a0e004 	mov	lr, #4
40015038:	e59f4080 	ldr	r4, [pc, #128]	; 400150c0 <CyU3PDmaSocketIsValidConsumer+0xd0>
4001503c:	ea000011 	b	40015088 <CyU3PDmaSocketIsValidConsumer+0x98>
40015040:	e1a00000 	nop			; (mov r0, r0)
40015044:	e3a0c000 	mov	ip, #0
40015048:	e3a0e00f 	mov	lr, #15
4001504c:	e59f4070 	ldr	r4, [pc, #112]	; 400150c4 <CyU3PDmaSocketIsValidConsumer+0xd4>
40015050:	ea00000c 	b	40015088 <CyU3PDmaSocketIsValidConsumer+0x98>
40015054:	e1a00000 	nop			; (mov r0, r0)
40015058:	e3a0c000 	mov	ip, #0
4001505c:	e3a0e007 	mov	lr, #7
40015060:	e59f4060 	ldr	r4, [pc, #96]	; 400150c8 <CyU3PDmaSocketIsValidConsumer+0xd8>
40015064:	ea000007 	b	40015088 <CyU3PDmaSocketIsValidConsumer+0x98>
40015068:	e1a00000 	nop			; (mov r0, r0)
4001506c:	e3a0c000 	mov	ip, #0
40015070:	e3a0e00f 	mov	lr, #15
40015074:	e59f4050 	ldr	r4, [pc, #80]	; 400150cc <CyU3PDmaSocketIsValidConsumer+0xdc>
40015078:	ea000002 	b	40015088 <CyU3PDmaSocketIsValidConsumer+0x98>
4001507c:	e1a00000 	nop			; (mov r0, r0)
40015080:	e3a00000 	mov	r0, #0
40015084:	e8bd8010 	pop	{r4, pc}
40015088:	e1a00000 	nop			; (mov r0, r0)
4001508c:	e5940000 	ldr	r0, [r4]
40015090:	e3100001 	tst	r0, #1
40015094:	1a000001 	bne	400150a0 <CyU3PDmaSocketIsValidConsumer+0xb0>
40015098:	e3a00000 	mov	r0, #0
4001509c:	eafffff8 	b	40015084 <CyU3PDmaSocketIsValidConsumer+0x94>
400150a0:	e153000c 	cmp	r3, ip
400150a4:	ba000003 	blt	400150b8 <CyU3PDmaSocketIsValidConsumer+0xc8>
400150a8:	e153000e 	cmp	r3, lr
400150ac:	ca000001 	bgt	400150b8 <CyU3PDmaSocketIsValidConsumer+0xc8>
400150b0:	e3a00001 	mov	r0, #1
400150b4:	eafffff2 	b	40015084 <CyU3PDmaSocketIsValidConsumer+0x94>
400150b8:	e3a00000 	mov	r0, #0
400150bc:	eafffff0 	b	40015084 <CyU3PDmaSocketIsValidConsumer+0x94>
400150c0:	e0007f04 	.word	0xe0007f04
400150c4:	e0017f04 	.word	0xe0017f04
400150c8:	e0027f04 	.word	0xe0027f04
400150cc:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

400150d0 <CyU3PDmaSocketIsValidProducer>:
400150d0:	e92d4010 	push	{r4, lr}
400150d4:	e1a01000 	mov	r1, r0
400150d8:	e3a0003f 	mov	r0, #63	; 0x3f
400150dc:	e0002441 	and	r2, r0, r1, asr #8
400150e0:	e20130ff 	and	r3, r1, #255	; 0xff
400150e4:	e3a04000 	mov	r4, #0
400150e8:	e3520000 	cmp	r2, #0
400150ec:	0a000006 	beq	4001510c <CyU3PDmaSocketIsValidProducer+0x3c>
400150f0:	e3520001 	cmp	r2, #1
400150f4:	0a000009 	beq	40015120 <CyU3PDmaSocketIsValidProducer+0x50>
400150f8:	e3520002 	cmp	r2, #2
400150fc:	0a00000c 	beq	40015134 <CyU3PDmaSocketIsValidProducer+0x64>
40015100:	e3520004 	cmp	r2, #4
40015104:	1a000014 	bne	4001515c <CyU3PDmaSocketIsValidProducer+0x8c>
40015108:	ea00000e 	b	40015148 <CyU3PDmaSocketIsValidProducer+0x78>
4001510c:	e1a00000 	nop			; (mov r0, r0)
40015110:	e3a0c005 	mov	ip, #5
40015114:	e3a0e007 	mov	lr, #7
40015118:	e59f4080 	ldr	r4, [pc, #128]	; 400151a0 <CyU3PDmaSocketIsValidProducer+0xd0>
4001511c:	ea000011 	b	40015168 <CyU3PDmaSocketIsValidProducer+0x98>
40015120:	e1a00000 	nop			; (mov r0, r0)
40015124:	e3a0c000 	mov	ip, #0
40015128:	e3a0e01f 	mov	lr, #31
4001512c:	e59f4070 	ldr	r4, [pc, #112]	; 400151a4 <CyU3PDmaSocketIsValidProducer+0xd4>
40015130:	ea00000c 	b	40015168 <CyU3PDmaSocketIsValidProducer+0x98>
40015134:	e1a00000 	nop			; (mov r0, r0)
40015138:	e3a0c000 	mov	ip, #0
4001513c:	e3a0e007 	mov	lr, #7
40015140:	e59f4060 	ldr	r4, [pc, #96]	; 400151a8 <CyU3PDmaSocketIsValidProducer+0xd8>
40015144:	ea000007 	b	40015168 <CyU3PDmaSocketIsValidProducer+0x98>
40015148:	e1a00000 	nop			; (mov r0, r0)
4001514c:	e3a0c000 	mov	ip, #0
40015150:	e3a0e00f 	mov	lr, #15
40015154:	e59f4050 	ldr	r4, [pc, #80]	; 400151ac <CyU3PDmaSocketIsValidProducer+0xdc>
40015158:	ea000002 	b	40015168 <CyU3PDmaSocketIsValidProducer+0x98>
4001515c:	e1a00000 	nop			; (mov r0, r0)
40015160:	e3a00000 	mov	r0, #0
40015164:	e8bd8010 	pop	{r4, pc}
40015168:	e1a00000 	nop			; (mov r0, r0)
4001516c:	e5940000 	ldr	r0, [r4]
40015170:	e3100001 	tst	r0, #1
40015174:	1a000001 	bne	40015180 <CyU3PDmaSocketIsValidProducer+0xb0>
40015178:	e3a00000 	mov	r0, #0
4001517c:	eafffff8 	b	40015164 <CyU3PDmaSocketIsValidProducer+0x94>
40015180:	e153000c 	cmp	r3, ip
40015184:	ba000003 	blt	40015198 <CyU3PDmaSocketIsValidProducer+0xc8>
40015188:	e153000e 	cmp	r3, lr
4001518c:	ca000001 	bgt	40015198 <CyU3PDmaSocketIsValidProducer+0xc8>
40015190:	e3a00001 	mov	r0, #1
40015194:	eafffff2 	b	40015164 <CyU3PDmaSocketIsValidProducer+0x94>
40015198:	e3a00000 	mov	r0, #0
4001519c:	eafffff0 	b	40015164 <CyU3PDmaSocketIsValidProducer+0x94>
400151a0:	e0007f04 	.word	0xe0007f04
400151a4:	e0017f04 	.word	0xe0017f04
400151a8:	e0027f04 	.word	0xe0027f04
400151ac:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

400151b0 <CyU3PDmaSocketSendEvent>:
400151b0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400151b4:	e1a04000 	mov	r4, r0
400151b8:	e1a05001 	mov	r5, r1
400151bc:	e1a06002 	mov	r6, r2
400151c0:	e3a0003f 	mov	r0, #63	; 0x3f
400151c4:	e0007444 	and	r7, r0, r4, asr #8
400151c8:	e20480ff 	and	r8, r4, #255	; 0xff
400151cc:	e1a09005 	mov	r9, r5
400151d0:	e3560001 	cmp	r6, #1
400151d4:	1a000000 	bne	400151dc <CyU3PDmaSocketSendEvent+0x2c>
400151d8:	e3899801 	orr	r9, r9, #65536	; 0x10000
400151dc:	e59f0010 	ldr	r0, [pc, #16]	; 400151f4 <CyU3PDmaSocketSendEvent+0x44>
400151e0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400151e4:	e0800388 	add	r0, r0, r8, lsl #7
400151e8:	e580907c 	str	r9, [r0, #124]	; 0x7c
400151ec:	ebfff6e1 	bl	40012d78 <CyU3PSysBarrierSync>
400151f0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400151f4:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetConfig:

400151f8 <CyU3PDmaSocketSetConfig>:
400151f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400151fc:	e1a04000 	mov	r4, r0
40015200:	e1a05001 	mov	r5, r1
40015204:	e3a0003f 	mov	r0, #63	; 0x3f
40015208:	e0006444 	and	r6, r0, r4, asr #8
4001520c:	e20470ff 	and	r7, r4, #255	; 0xff
40015210:	e3550000 	cmp	r5, #0
40015214:	1a000001 	bne	40015220 <CyU3PDmaSocketSetConfig+0x28>
40015218:	e3a00040 	mov	r0, #64	; 0x40
4001521c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015220:	e59f1078 	ldr	r1, [pc, #120]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
40015224:	e5950000 	ldr	r0, [r5]
40015228:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001522c:	e7810387 	str	r0, [r1, r7, lsl #7]
40015230:	e59f1068 	ldr	r1, [pc, #104]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
40015234:	e5950004 	ldr	r0, [r5, #4]
40015238:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001523c:	e0811387 	add	r1, r1, r7, lsl #7
40015240:	e5810004 	str	r0, [r1, #4]
40015244:	e59f1054 	ldr	r1, [pc, #84]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
40015248:	e5950008 	ldr	r0, [r5, #8]
4001524c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015250:	e0811387 	add	r1, r1, r7, lsl #7
40015254:	e5810008 	str	r0, [r1, #8]
40015258:	e59f1040 	ldr	r1, [pc, #64]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
4001525c:	e5950010 	ldr	r0, [r5, #16]
40015260:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015264:	e0811387 	add	r1, r1, r7, lsl #7
40015268:	e5810010 	str	r0, [r1, #16]
4001526c:	e59f102c 	ldr	r1, [pc, #44]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
40015270:	e5950014 	ldr	r0, [r5, #20]
40015274:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015278:	e0811387 	add	r1, r1, r7, lsl #7
4001527c:	e5810014 	str	r0, [r1, #20]
40015280:	e59f1018 	ldr	r1, [pc, #24]	; 400152a0 <CyU3PDmaSocketSetConfig+0xa8>
40015284:	e595000c 	ldr	r0, [r5, #12]
40015288:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001528c:	e0811387 	add	r1, r1, r7, lsl #7
40015290:	e581000c 	str	r0, [r1, #12]
40015294:	ebfff6b7 	bl	40012d78 <CyU3PSysBarrierSync>
40015298:	e3a00000 	mov	r0, #0
4001529c:	eaffffde 	b	4001521c <CyU3PDmaSocketSetConfig+0x24>
400152a0:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

400152a4 <CyU3PDmaSocketSetWrapUp>:
400152a4:	e3a0c03f 	mov	ip, #63	; 0x3f
400152a8:	e00c1440 	and	r1, ip, r0, asr #8
400152ac:	e20030ff 	and	r3, r0, #255	; 0xff
400152b0:	e59fc02c 	ldr	ip, [pc, #44]	; 400152e4 <CyU3PDmaSocketSetWrapUp+0x40>
400152b4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
400152b8:	e08cc383 	add	ip, ip, r3, lsl #7
400152bc:	e59c200c 	ldr	r2, [ip, #12]
400152c0:	e3120601 	tst	r2, #1048576	; 0x100000
400152c4:	1a000000 	bne	400152cc <CyU3PDmaSocketSetWrapUp+0x28>
400152c8:	e12fff1e 	bx	lr
400152cc:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
400152d0:	e59fc00c 	ldr	ip, [pc, #12]	; 400152e4 <CyU3PDmaSocketSetWrapUp+0x40>
400152d4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
400152d8:	e08cc383 	add	ip, ip, r3, lsl #7
400152dc:	e58c200c 	str	r2, [ip, #12]
400152e0:	eafffff8 	b	400152c8 <CyU3PDmaSocketSetWrapUp+0x24>
400152e4:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

400152e8 <CyU3PDmaSocketUpdateStatus>:
400152e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400152ec:	e1a04000 	mov	r4, r0
400152f0:	e1a05001 	mov	r5, r1
400152f4:	e3a0003f 	mov	r0, #63	; 0x3f
400152f8:	e0006444 	and	r6, r0, r4, asr #8
400152fc:	e20470ff 	and	r7, r4, #255	; 0xff
40015300:	e3550000 	cmp	r5, #0
40015304:	1a000001 	bne	40015310 <CyU3PDmaSocketUpdateStatus+0x28>
40015308:	e3a00040 	mov	r0, #64	; 0x40
4001530c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015310:	e59f1040 	ldr	r1, [pc, #64]	; 40015358 <CyU3PDmaSocketUpdateStatus+0x70>
40015314:	e5950010 	ldr	r0, [r5, #16]
40015318:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001531c:	e0811387 	add	r1, r1, r7, lsl #7
40015320:	e5810010 	str	r0, [r1, #16]
40015324:	e59f102c 	ldr	r1, [pc, #44]	; 40015358 <CyU3PDmaSocketUpdateStatus+0x70>
40015328:	e5950014 	ldr	r0, [r5, #20]
4001532c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015330:	e0811387 	add	r1, r1, r7, lsl #7
40015334:	e5810014 	str	r0, [r1, #20]
40015338:	e59f1018 	ldr	r1, [pc, #24]	; 40015358 <CyU3PDmaSocketUpdateStatus+0x70>
4001533c:	e595000c 	ldr	r0, [r5, #12]
40015340:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015344:	e0811387 	add	r1, r1, r7, lsl #7
40015348:	e581000c 	str	r0, [r1, #12]
4001534c:	ebfff689 	bl	40012d78 <CyU3PSysBarrierSync>
40015350:	e3a00000 	mov	r0, #0
40015354:	eaffffec 	b	4001530c <CyU3PDmaSocketUpdateStatus+0x24>
40015358:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

4001535c <CyU3PDmaUpdateSocketSuspendOption>:
4001535c:	e92d4070 	push	{r4, r5, r6, lr}
40015360:	e24dd018 	sub	sp, sp, #24
40015364:	e1a04000 	mov	r4, r0
40015368:	e1a06001 	mov	r6, r1
4001536c:	e1a0100d 	mov	r1, sp
40015370:	e1a00004 	mov	r0, r4
40015374:	ebfffef5 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40015378:	e59d000c 	ldr	r0, [sp, #12]
4001537c:	e2000702 	and	r0, r0, #524288	; 0x80000
40015380:	e1a059a0 	lsr	r5, r0, #19
40015384:	e3550001 	cmp	r5, #1
40015388:	1a000010 	bne	400153d0 <CyU3PDmaUpdateSocketSuspendOption+0x74>
4001538c:	e59d000c 	ldr	r0, [sp, #12]
40015390:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015394:	1a00000a 	bne	400153c4 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40015398:	e59d000c 	ldr	r0, [sp, #12]
4001539c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400153a0:	e58d000c 	str	r0, [sp, #12]
400153a4:	e3a00000 	mov	r0, #0
400153a8:	e58d0010 	str	r0, [sp, #16]
400153ac:	e1a0100d 	mov	r1, sp
400153b0:	e1a00004 	mov	r0, r4
400153b4:	ebffffcb 	bl	400152e8 <CyU3PDmaSocketUpdateStatus>
400153b8:	e1a0100d 	mov	r1, sp
400153bc:	e1a00004 	mov	r0, r4
400153c0:	ebfffee2 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400153c4:	e3a00000 	mov	r0, #0
400153c8:	e58d0010 	str	r0, [sp, #16]
400153cc:	ea000004 	b	400153e4 <CyU3PDmaUpdateSocketSuspendOption+0x88>
400153d0:	e59d000c 	ldr	r0, [sp, #12]
400153d4:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400153d8:	e58d000c 	str	r0, [sp, #12]
400153dc:	e3a00e12 	mov	r0, #288	; 0x120
400153e0:	e58d0010 	str	r0, [sp, #16]
400153e4:	e59d000c 	ldr	r0, [sp, #12]
400153e8:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
400153ec:	e58d000c 	str	r0, [sp, #12]
400153f0:	e59d0014 	ldr	r0, [sp, #20]
400153f4:	e3c00e12 	bic	r0, r0, #288	; 0x120
400153f8:	e58d0014 	str	r0, [sp, #20]
400153fc:	e3560000 	cmp	r6, #0
40015400:	0a000006 	beq	40015420 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40015404:	e3560001 	cmp	r6, #1
40015408:	0a000006 	beq	40015428 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
4001540c:	e3560002 	cmp	r6, #2
40015410:	0a00000e 	beq	40015450 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40015414:	e3560003 	cmp	r6, #3
40015418:	1a000020 	bne	400154a0 <CyU3PDmaUpdateSocketSuspendOption+0x144>
4001541c:	ea000015 	b	40015478 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40015420:	e1a00000 	nop			; (mov r0, r0)
40015424:	ea00001f 	b	400154a8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015428:	e1a00000 	nop			; (mov r0, r0)
4001542c:	e59d000c 	ldr	r0, [sp, #12]
40015430:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40015434:	e58d000c 	str	r0, [sp, #12]
40015438:	e3550000 	cmp	r5, #0
4001543c:	1a000002 	bne	4001544c <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40015440:	e59d0014 	ldr	r0, [sp, #20]
40015444:	e3800020 	orr	r0, r0, #32
40015448:	e58d0014 	str	r0, [sp, #20]
4001544c:	ea000015 	b	400154a8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015450:	e1a00000 	nop			; (mov r0, r0)
40015454:	e3550000 	cmp	r5, #0
40015458:	1a000005 	bne	40015474 <CyU3PDmaUpdateSocketSuspendOption+0x118>
4001545c:	e59d000c 	ldr	r0, [sp, #12]
40015460:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015464:	e58d000c 	str	r0, [sp, #12]
40015468:	e59d0014 	ldr	r0, [sp, #20]
4001546c:	e3800020 	orr	r0, r0, #32
40015470:	e58d0014 	str	r0, [sp, #20]
40015474:	ea00000b 	b	400154a8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015478:	e1a00000 	nop			; (mov r0, r0)
4001547c:	e59d000c 	ldr	r0, [sp, #12]
40015480:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015484:	e58d000c 	str	r0, [sp, #12]
40015488:	e3550000 	cmp	r5, #0
4001548c:	1a000002 	bne	4001549c <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015490:	e59d0014 	ldr	r0, [sp, #20]
40015494:	e3800c01 	orr	r0, r0, #256	; 0x100
40015498:	e58d0014 	str	r0, [sp, #20]
4001549c:	ea000001 	b	400154a8 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
400154a0:	e1a00000 	nop			; (mov r0, r0)
400154a4:	e1a00000 	nop			; (mov r0, r0)
400154a8:	e1a00000 	nop			; (mov r0, r0)
400154ac:	e1a0100d 	mov	r1, sp
400154b0:	e1a00004 	mov	r0, r4
400154b4:	ebffff8b 	bl	400152e8 <CyU3PDmaSocketUpdateStatus>
400154b8:	e28dd018 	add	sp, sp, #24
400154bc:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

400154c0 <CyU3PDmaChannelAcquireLock>:
400154c0:	e92d4070 	push	{r4, r5, r6, lr}
400154c4:	e1a04000 	mov	r4, r0
400154c8:	e1a05001 	mov	r5, r1
400154cc:	e3540000 	cmp	r4, #0
400154d0:	1a000001 	bne	400154dc <CyU3PDmaChannelAcquireLock+0x1c>
400154d4:	e3a00041 	mov	r0, #65	; 0x41
400154d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400154dc:	e5940000 	ldr	r0, [r4]
400154e0:	e3500000 	cmp	r0, #0
400154e4:	1a000001 	bne	400154f0 <CyU3PDmaChannelAcquireLock+0x30>
400154e8:	e3a00044 	mov	r0, #68	; 0x44
400154ec:	eafffff9 	b	400154d8 <CyU3PDmaChannelAcquireLock+0x18>
400154f0:	e1a01005 	mov	r1, r5
400154f4:	e284003c 	add	r0, r4, #60	; 0x3c
400154f8:	ebffd371 	bl	4000a2c4 <_txe_mutex_get>
400154fc:	e3500000 	cmp	r0, #0
40015500:	0a000001 	beq	4001550c <CyU3PDmaChannelAcquireLock+0x4c>
40015504:	e3a0001d 	mov	r0, #29
40015508:	eafffff2 	b	400154d8 <CyU3PDmaChannelAcquireLock+0x18>
4001550c:	e3a00000 	mov	r0, #0
40015510:	eafffff0 	b	400154d8 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015514 <CyU3PDmaChannelCacheControl>:
40015514:	e92d4070 	push	{r4, r5, r6, lr}
40015518:	e1a04000 	mov	r4, r0
4001551c:	e1a05001 	mov	r5, r1
40015520:	e3e01000 	mvn	r1, #0
40015524:	e1a00004 	mov	r0, r4
40015528:	ebffffe4 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
4001552c:	e1a06000 	mov	r6, r0
40015530:	e3560000 	cmp	r6, #0
40015534:	0a000001 	beq	40015540 <CyU3PDmaChannelCacheControl+0x2c>
40015538:	e1a00006 	mov	r0, r6
4001553c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015540:	e5940000 	ldr	r0, [r4]
40015544:	e3500001 	cmp	r0, #1
40015548:	1a000001 	bne	40015554 <CyU3PDmaChannelCacheControl+0x40>
4001554c:	e5845038 	str	r5, [r4, #56]	; 0x38
40015550:	ea000000 	b	40015558 <CyU3PDmaChannelCacheControl+0x44>
40015554:	e3a06047 	mov	r6, #71	; 0x47
40015558:	e284003c 	add	r0, r4, #60	; 0x3c
4001555c:	ebffd38d 	bl	4000a398 <_txe_mutex_put>
40015560:	e1a00006 	mov	r0, r6
40015564:	eafffff4 	b	4001553c <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

40015568 <CyU3PDmaChannelCommitBuffer>:
40015568:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001556c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40015570:	e1a04000 	mov	r4, r0
40015574:	e1a05001 	mov	r5, r1
40015578:	e1a06002 	mov	r6, r2
4001557c:	e3e01000 	mvn	r1, #0
40015580:	e1a00004 	mov	r0, r4
40015584:	ebffffcd 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40015588:	e1a09000 	mov	r9, r0
4001558c:	e3590000 	cmp	r9, #0
40015590:	0a000002 	beq	400155a0 <CyU3PDmaChannelCommitBuffer+0x38>
40015594:	e1a00009 	mov	r0, r9
40015598:	e28dd03c 	add	sp, sp, #60	; 0x3c
4001559c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400155a0:	e1d400b6 	ldrh	r0, [r4, #6]
400155a4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155a8:	e0400001 	sub	r0, r0, r1
400155ac:	e1500005 	cmp	r0, r5
400155b0:	aa000000 	bge	400155b8 <CyU3PDmaChannelCommitBuffer+0x50>
400155b4:	e3a09040 	mov	r9, #64	; 0x40
400155b8:	e5940000 	ldr	r0, [r4]
400155bc:	e3500002 	cmp	r0, #2
400155c0:	0a000000 	beq	400155c8 <CyU3PDmaChannelCommitBuffer+0x60>
400155c4:	e3a09042 	mov	r9, #66	; 0x42
400155c8:	e1d400b4 	ldrh	r0, [r4, #4]
400155cc:	e3500003 	cmp	r0, #3
400155d0:	1a000000 	bne	400155d8 <CyU3PDmaChannelCommitBuffer+0x70>
400155d4:	e3a09046 	mov	r9, #70	; 0x46
400155d8:	e3590000 	cmp	r9, #0
400155dc:	0a000003 	beq	400155f0 <CyU3PDmaChannelCommitBuffer+0x88>
400155e0:	e284003c 	add	r0, r4, #60	; 0x3c
400155e4:	ebffd36b 	bl	4000a398 <_txe_mutex_put>
400155e8:	e1a00009 	mov	r0, r9
400155ec:	eaffffe9 	b	40015598 <CyU3PDmaChannelCommitBuffer+0x30>
400155f0:	e1d400b4 	ldrh	r0, [r4, #4]
400155f4:	e20070ff 	and	r7, r0, #255	; 0xff
400155f8:	e3570002 	cmp	r7, #2
400155fc:	1a000037 	bne	400156e0 <CyU3PDmaChannelCommitBuffer+0x178>
40015600:	e1d401b6 	ldrh	r0, [r4, #22]
40015604:	e28d1014 	add	r1, sp, #20
40015608:	eb0034ae 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001560c:	e1d401b8 	ldrh	r0, [r4, #24]
40015610:	e28d1004 	add	r1, sp, #4
40015614:	eb0034ab 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40015618:	e59d0020 	ldr	r0, [sp, #32]
4001561c:	e3100008 	tst	r0, #8
40015620:	1a000000 	bne	40015628 <CyU3PDmaChannelCommitBuffer+0xc0>
40015624:	e3a09047 	mov	r9, #71	; 0x47
40015628:	e59d0010 	ldr	r0, [sp, #16]
4001562c:	e3100008 	tst	r0, #8
40015630:	0a000000 	beq	40015638 <CyU3PDmaChannelCommitBuffer+0xd0>
40015634:	e3a09047 	mov	r9, #71	; 0x47
40015638:	e3590000 	cmp	r9, #0
4001563c:	1a000080 	bne	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015640:	e59d0010 	ldr	r0, [sp, #16]
40015644:	e59f1208 	ldr	r1, [pc, #520]	; 40015854 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015648:	e0000001 	and	r0, r0, r1
4001564c:	e58d0010 	str	r0, [sp, #16]
40015650:	e59d0010 	ldr	r0, [sp, #16]
40015654:	e1800805 	orr	r0, r0, r5, lsl #16
40015658:	e58d0010 	str	r0, [sp, #16]
4001565c:	e3560000 	cmp	r6, #0
40015660:	1a000005 	bne	4001567c <CyU3PDmaChannelCommitBuffer+0x114>
40015664:	e59d1020 	ldr	r1, [sp, #32]
40015668:	e201100f 	and	r1, r1, #15
4001566c:	e59d0010 	ldr	r0, [sp, #16]
40015670:	e1800001 	orr	r0, r0, r1
40015674:	e58d0010 	str	r0, [sp, #16]
40015678:	ea000004 	b	40015690 <CyU3PDmaChannelCommitBuffer+0x128>
4001567c:	e206100e 	and	r1, r6, #14
40015680:	e3811008 	orr	r1, r1, #8
40015684:	e59d0010 	ldr	r0, [sp, #16]
40015688:	e1800001 	orr	r0, r0, r1
4001568c:	e58d0010 	str	r0, [sp, #16]
40015690:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015694:	e3500000 	cmp	r0, #0
40015698:	0a000004 	beq	400156b0 <CyU3PDmaChannelCommitBuffer+0x148>
4001569c:	e59d2010 	ldr	r2, [sp, #16]
400156a0:	e59f31ac 	ldr	r3, [pc, #428]	; 40015854 <CyU3PDmaChannelCommitBuffer+0x2ec>
400156a4:	e0021003 	and	r1, r2, r3
400156a8:	e59d0004 	ldr	r0, [sp, #4]
400156ac:	ebfff34a 	bl	400123dc <CyU3PSysCleanDRegion>
400156b0:	e1d401b8 	ldrh	r0, [r4, #24]
400156b4:	e28d1004 	add	r1, sp, #4
400156b8:	eb00349d 	bl	40022934 <CyU3PDmaDscrSetConfig>
400156bc:	e1d411b8 	ldrh	r1, [r4, #24]
400156c0:	e1d401b2 	ldrh	r0, [r4, #18]
400156c4:	e3a02001 	mov	r2, #1
400156c8:	ebfffeb8 	bl	400151b0 <CyU3PDmaSocketSendEvent>
400156cc:	e59d001c 	ldr	r0, [sp, #28]
400156d0:	e1c401b6 	strh	r0, [r4, #22]
400156d4:	e59d000c 	ldr	r0, [sp, #12]
400156d8:	e1c401b8 	strh	r0, [r4, #24]
400156dc:	ea000058 	b	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
400156e0:	e3570004 	cmp	r7, #4
400156e4:	1a000027 	bne	40015788 <CyU3PDmaChannelCommitBuffer+0x220>
400156e8:	e1d401b8 	ldrh	r0, [r4, #24]
400156ec:	e28d1004 	add	r1, sp, #4
400156f0:	eb003474 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400156f4:	e59d0010 	ldr	r0, [sp, #16]
400156f8:	e3100008 	tst	r0, #8
400156fc:	0a000000 	beq	40015704 <CyU3PDmaChannelCommitBuffer+0x19c>
40015700:	e3a09047 	mov	r9, #71	; 0x47
40015704:	e3590000 	cmp	r9, #0
40015708:	1a00004d 	bne	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001570c:	e59d0010 	ldr	r0, [sp, #16]
40015710:	e1a00800 	lsl	r0, r0, #16
40015714:	e1a00820 	lsr	r0, r0, #16
40015718:	e58d0010 	str	r0, [sp, #16]
4001571c:	e3a01008 	mov	r1, #8
40015720:	e1811805 	orr	r1, r1, r5, lsl #16
40015724:	e59d0010 	ldr	r0, [sp, #16]
40015728:	e1800001 	orr	r0, r0, r1
4001572c:	e58d0010 	str	r0, [sp, #16]
40015730:	e206100e 	and	r1, r6, #14
40015734:	e59d0010 	ldr	r0, [sp, #16]
40015738:	e1800001 	orr	r0, r0, r1
4001573c:	e58d0010 	str	r0, [sp, #16]
40015740:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015744:	e3500000 	cmp	r0, #0
40015748:	0a000004 	beq	40015760 <CyU3PDmaChannelCommitBuffer+0x1f8>
4001574c:	e59d2010 	ldr	r2, [sp, #16]
40015750:	e59f30fc 	ldr	r3, [pc, #252]	; 40015854 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015754:	e0021003 	and	r1, r2, r3
40015758:	e59d0004 	ldr	r0, [sp, #4]
4001575c:	ebfff31e 	bl	400123dc <CyU3PSysCleanDRegion>
40015760:	e1d401b8 	ldrh	r0, [r4, #24]
40015764:	e28d1004 	add	r1, sp, #4
40015768:	eb003471 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001576c:	e1d411b8 	ldrh	r1, [r4, #24]
40015770:	e1d401b2 	ldrh	r0, [r4, #18]
40015774:	e3a02001 	mov	r2, #1
40015778:	ebfffe8c 	bl	400151b0 <CyU3PDmaSocketSendEvent>
4001577c:	e59d000c 	ldr	r0, [sp, #12]
40015780:	e1c401b8 	strh	r0, [r4, #24]
40015784:	ea00002e 	b	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015788:	e1d401b2 	ldrh	r0, [r4, #18]
4001578c:	e28d1024 	add	r1, sp, #36	; 0x24
40015790:	ebfffdee 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40015794:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015798:	e3100702 	tst	r0, #524288	; 0x80000
4001579c:	0a000027 	beq	40015840 <CyU3PDmaChannelCommitBuffer+0x2d8>
400157a0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400157a4:	e1a08800 	lsl	r8, r0, #16
400157a8:	e1a08828 	lsr	r8, r8, #16
400157ac:	e28d1004 	add	r1, sp, #4
400157b0:	e1a00008 	mov	r0, r8
400157b4:	eb003443 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400157b8:	e59d0010 	ldr	r0, [sp, #16]
400157bc:	e3100008 	tst	r0, #8
400157c0:	0a00001c 	beq	40015838 <CyU3PDmaChannelCommitBuffer+0x2d0>
400157c4:	e59d0010 	ldr	r0, [sp, #16]
400157c8:	e1a00800 	lsl	r0, r0, #16
400157cc:	e1a00820 	lsr	r0, r0, #16
400157d0:	e58d0010 	str	r0, [sp, #16]
400157d4:	e59d0010 	ldr	r0, [sp, #16]
400157d8:	e1800805 	orr	r0, r0, r5, lsl #16
400157dc:	e58d0010 	str	r0, [sp, #16]
400157e0:	e3560000 	cmp	r6, #0
400157e4:	0a000007 	beq	40015808 <CyU3PDmaChannelCommitBuffer+0x2a0>
400157e8:	e59d0010 	ldr	r0, [sp, #16]
400157ec:	e3c0000f 	bic	r0, r0, #15
400157f0:	e58d0010 	str	r0, [sp, #16]
400157f4:	e206100e 	and	r1, r6, #14
400157f8:	e3811008 	orr	r1, r1, #8
400157fc:	e59d0010 	ldr	r0, [sp, #16]
40015800:	e1800001 	orr	r0, r0, r1
40015804:	e58d0010 	str	r0, [sp, #16]
40015808:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001580c:	e3500000 	cmp	r0, #0
40015810:	0a000004 	beq	40015828 <CyU3PDmaChannelCommitBuffer+0x2c0>
40015814:	e59d2010 	ldr	r2, [sp, #16]
40015818:	e59f3034 	ldr	r3, [pc, #52]	; 40015854 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001581c:	e0021003 	and	r1, r2, r3
40015820:	e59d0004 	ldr	r0, [sp, #4]
40015824:	ebfff2ec 	bl	400123dc <CyU3PSysCleanDRegion>
40015828:	e28d1004 	add	r1, sp, #4
4001582c:	e1a00008 	mov	r0, r8
40015830:	eb00343f 	bl	40022934 <CyU3PDmaDscrSetConfig>
40015834:	ea000002 	b	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015838:	e3a09047 	mov	r9, #71	; 0x47
4001583c:	ea000000 	b	40015844 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015840:	e3a09047 	mov	r9, #71	; 0x47
40015844:	e284003c 	add	r0, r4, #60	; 0x3c
40015848:	ebffd2d2 	bl	4000a398 <_txe_mutex_put>
4001584c:	e1a00009 	mov	r0, r9
40015850:	eaffff50 	b	40015598 <CyU3PDmaChannelCommitBuffer+0x30>
40015854:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

40015858 <CyU3PDmaChannelConfigure_TypeAuto>:
40015858:	e92d4070 	push	{r4, r5, r6, lr}
4001585c:	e1a05000 	mov	r5, r0
40015860:	e1d501b2 	ldrh	r0, [r5, #18]
40015864:	e3806901 	orr	r6, r0, #16384	; 0x4000
40015868:	e1d501b0 	ldrh	r0, [r5, #16]
4001586c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015870:	e1810800 	orr	r0, r1, r0, lsl #16
40015874:	e1866000 	orr	r6, r6, r0
40015878:	e1d500b4 	ldrh	r0, [r5, #4]
4001587c:	e3500001 	cmp	r0, #1
40015880:	1a000000 	bne	40015888 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015884:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015888:	e1d520b6 	ldrh	r2, [r5, #6]
4001588c:	e1d510b8 	ldrh	r1, [r5, #8]
40015890:	e1a03006 	mov	r3, r6
40015894:	e285000c 	add	r0, r5, #12
40015898:	eb00331b 	bl	4002250c <CyU3PDmaDscrChainCreate>
4001589c:	e1a04000 	mov	r4, r0
400158a0:	e3540000 	cmp	r4, #0
400158a4:	0a000001 	beq	400158b0 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
400158a8:	e1a00004 	mov	r0, r4
400158ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400158b0:	e1d500bc 	ldrh	r0, [r5, #12]
400158b4:	e1c501b6 	strh	r0, [r5, #22]
400158b8:	e1c501ba 	strh	r0, [r5, #26]
400158bc:	e1c501be 	strh	r0, [r5, #30]
400158c0:	e1d500be 	ldrh	r0, [r5, #14]
400158c4:	e1c501b8 	strh	r0, [r5, #24]
400158c8:	e1c501bc 	strh	r0, [r5, #28]
400158cc:	e1c502b0 	strh	r0, [r5, #32]
400158d0:	e2850014 	add	r0, r5, #20
400158d4:	eb003383 	bl	400226e8 <CyU3PDmaDscrGet>
400158d8:	e1a00005 	mov	r0, r5
400158dc:	eb0006b7 	bl	400173c0 <CyU3PDmaConfigureSockets_TypeAuto>
400158e0:	e3a00000 	mov	r0, #0
400158e4:	eafffff0 	b	400158ac <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

400158e8 <CyU3PDmaChannelConfigure_TypeManual>:
400158e8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400158ec:	e24dd024 	sub	sp, sp, #36	; 0x24
400158f0:	e1a04000 	mov	r4, r0
400158f4:	e284700c 	add	r7, r4, #12
400158f8:	e3a06cff 	mov	r6, #65280	; 0xff00
400158fc:	e1d401b0 	ldrh	r0, [r4, #16]
40015900:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015904:	e1810800 	orr	r0, r1, r0, lsl #16
40015908:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001590c:	e1866000 	orr	r6, r6, r0
40015910:	e1d400b4 	ldrh	r0, [r4, #4]
40015914:	e3500003 	cmp	r0, #3
40015918:	1a000002 	bne	40015928 <CyU3PDmaChannelConfigure_TypeManual+0x40>
4001591c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015920:	e1c401b2 	strh	r0, [r4, #18]
40015924:	ea000009 	b	40015950 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015928:	e1d400b4 	ldrh	r0, [r4, #4]
4001592c:	e3500004 	cmp	r0, #4
40015930:	1a000006 	bne	40015950 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015934:	e59f020c 	ldr	r0, [pc, #524]	; 40015b48 <CyU3PDmaChannelConfigure_TypeManual+0x260>
40015938:	e1c401b0 	strh	r0, [r4, #16]
4001593c:	e284700e 	add	r7, r4, #14
40015940:	e1d401b2 	ldrh	r0, [r4, #18]
40015944:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015948:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001594c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015950:	e1d400b8 	ldrh	r0, [r4, #8]
40015954:	e3500000 	cmp	r0, #0
40015958:	0a00006b 	beq	40015b0c <CyU3PDmaChannelConfigure_TypeManual+0x224>
4001595c:	e1d420b6 	ldrh	r2, [r4, #6]
40015960:	e1d410b8 	ldrh	r1, [r4, #8]
40015964:	e1a03006 	mov	r3, r6
40015968:	e1a00007 	mov	r0, r7
4001596c:	eb0032e6 	bl	4002250c <CyU3PDmaDscrChainCreate>
40015970:	e1a05000 	mov	r5, r0
40015974:	e3550000 	cmp	r5, #0
40015978:	0a000002 	beq	40015988 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
4001597c:	e1a00005 	mov	r0, r5
40015980:	e28dd024 	add	sp, sp, #36	; 0x24
40015984:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015988:	e1d400b4 	ldrh	r0, [r4, #4]
4001598c:	e3500002 	cmp	r0, #2
40015990:	1a000012 	bne	400159e0 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015994:	e1d401b2 	ldrh	r0, [r4, #18]
40015998:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001599c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400159a0:	e3866801 	orr	r6, r6, #65536	; 0x10000
400159a4:	e1d410b8 	ldrh	r1, [r4, #8]
400159a8:	e1a03006 	mov	r3, r6
400159ac:	e3a02000 	mov	r2, #0
400159b0:	e284000e 	add	r0, r4, #14
400159b4:	eb0032d4 	bl	4002250c <CyU3PDmaDscrChainCreate>
400159b8:	e1a05000 	mov	r5, r0
400159bc:	e3550000 	cmp	r5, #0
400159c0:	0a000006 	beq	400159e0 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400159c4:	e1d410b8 	ldrh	r1, [r4, #8]
400159c8:	e1d700b0 	ldrh	r0, [r7]
400159cc:	e3a03001 	mov	r3, #1
400159d0:	e1a02003 	mov	r2, r3
400159d4:	eb003320 	bl	4002265c <CyU3PDmaDscrChainDestroy>
400159d8:	e1a00005 	mov	r0, r5
400159dc:	eaffffe7 	b	40015980 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400159e0:	e1d400bc 	ldrh	r0, [r4, #12]
400159e4:	e1c401b6 	strh	r0, [r4, #22]
400159e8:	e1c401ba 	strh	r0, [r4, #26]
400159ec:	e1c401be 	strh	r0, [r4, #30]
400159f0:	e1d400be 	ldrh	r0, [r4, #14]
400159f4:	e1c401b8 	strh	r0, [r4, #24]
400159f8:	e1c401bc 	strh	r0, [r4, #28]
400159fc:	e1c402b0 	strh	r0, [r4, #32]
40015a00:	e3a08000 	mov	r8, #0
40015a04:	e1d790b0 	ldrh	r9, [r7]
40015a08:	ea00003b 	b	40015afc <CyU3PDmaChannelConfigure_TypeManual+0x214>
40015a0c:	e28d1014 	add	r1, sp, #20
40015a10:	e1a00009 	mov	r0, r9
40015a14:	eb0033ab 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40015a18:	e1d400b4 	ldrh	r0, [r4, #4]
40015a1c:	e3500004 	cmp	r0, #4
40015a20:	1a00000b 	bne	40015a54 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015a24:	e59d0014 	ldr	r0, [sp, #20]
40015a28:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a2c:	e0800001 	add	r0, r0, r1
40015a30:	e58d0014 	str	r0, [sp, #20]
40015a34:	e1d400b6 	ldrh	r0, [r4, #6]
40015a38:	e280000f 	add	r0, r0, #15
40015a3c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a40:	e0400001 	sub	r0, r0, r1
40015a44:	e59f1100 	ldr	r1, [pc, #256]	; 40015b4c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a48:	e0000001 	and	r0, r0, r1
40015a4c:	e58d0020 	str	r0, [sp, #32]
40015a50:	ea000021 	b	40015adc <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015a54:	e1d400b4 	ldrh	r0, [r4, #4]
40015a58:	e3500002 	cmp	r0, #2
40015a5c:	1a000012 	bne	40015aac <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
40015a60:	e1d401b8 	ldrh	r0, [r4, #24]
40015a64:	e28d1004 	add	r1, sp, #4
40015a68:	eb003396 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40015a6c:	e59d0014 	ldr	r0, [sp, #20]
40015a70:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a74:	e0800001 	add	r0, r0, r1
40015a78:	e58d0004 	str	r0, [sp, #4]
40015a7c:	e1d400b6 	ldrh	r0, [r4, #6]
40015a80:	e280000f 	add	r0, r0, #15
40015a84:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a88:	e0400001 	sub	r0, r0, r1
40015a8c:	e59f10b8 	ldr	r1, [pc, #184]	; 40015b4c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a90:	e0000001 	and	r0, r0, r1
40015a94:	e58d0010 	str	r0, [sp, #16]
40015a98:	e1d401b8 	ldrh	r0, [r4, #24]
40015a9c:	e28d1004 	add	r1, sp, #4
40015aa0:	eb0033a3 	bl	40022934 <CyU3PDmaDscrSetConfig>
40015aa4:	e59d000c 	ldr	r0, [sp, #12]
40015aa8:	e1c401b8 	strh	r0, [r4, #24]
40015aac:	e59d0014 	ldr	r0, [sp, #20]
40015ab0:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015ab4:	e0800001 	add	r0, r0, r1
40015ab8:	e58d0014 	str	r0, [sp, #20]
40015abc:	e1d400b6 	ldrh	r0, [r4, #6]
40015ac0:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015ac4:	e0400001 	sub	r0, r0, r1
40015ac8:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015acc:	e0400001 	sub	r0, r0, r1
40015ad0:	e59f1074 	ldr	r1, [pc, #116]	; 40015b4c <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015ad4:	e0000001 	and	r0, r0, r1
40015ad8:	e58d0020 	str	r0, [sp, #32]
40015adc:	e28d1014 	add	r1, sp, #20
40015ae0:	e1a00009 	mov	r0, r9
40015ae4:	eb003392 	bl	40022934 <CyU3PDmaDscrSetConfig>
40015ae8:	e59d001c 	ldr	r0, [sp, #28]
40015aec:	e1a09800 	lsl	r9, r0, #16
40015af0:	e1a09829 	lsr	r9, r9, #16
40015af4:	e2880001 	add	r0, r8, #1
40015af8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015afc:	e1d400b8 	ldrh	r0, [r4, #8]
40015b00:	e1500008 	cmp	r0, r8
40015b04:	caffffc0 	bgt	40015a0c <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015b08:	ea000008 	b	40015b30 <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015b0c:	e59f003c 	ldr	r0, [pc, #60]	; 40015b50 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015b10:	e1c400bc 	strh	r0, [r4, #12]
40015b14:	e1c401b6 	strh	r0, [r4, #22]
40015b18:	e1c401ba 	strh	r0, [r4, #26]
40015b1c:	e1c401be 	strh	r0, [r4, #30]
40015b20:	e1c400be 	strh	r0, [r4, #14]
40015b24:	e1c401b8 	strh	r0, [r4, #24]
40015b28:	e1c401bc 	strh	r0, [r4, #28]
40015b2c:	e1c402b0 	strh	r0, [r4, #32]
40015b30:	e2840014 	add	r0, r4, #20
40015b34:	eb0032eb 	bl	400226e8 <CyU3PDmaDscrGet>
40015b38:	e1a00004 	mov	r0, r4
40015b3c:	eb00065f 	bl	400174c0 <CyU3PDmaConfigureSockets_TypeManual>
40015b40:	e3a00000 	mov	r0, #0
40015b44:	eaffff8d 	b	40015980 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015b48:	00003f01 	.word	0x00003f01
40015b4c:	0000fff0 	.word	0x0000fff0
40015b50:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015b54 <CyU3PDmaChannelCreate>:
40015b54:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015b58:	e1a04000 	mov	r4, r0
40015b5c:	e1a05001 	mov	r5, r1
40015b60:	e1a06002 	mov	r6, r2
40015b64:	e3560000 	cmp	r6, #0
40015b68:	1a000001 	bne	40015b74 <CyU3PDmaChannelCreate+0x20>
40015b6c:	e3a00041 	mov	r0, #65	; 0x41
40015b70:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015b74:	e3540000 	cmp	r4, #0
40015b78:	1a000001 	bne	40015b84 <CyU3PDmaChannelCreate+0x30>
40015b7c:	e3a00041 	mov	r0, #65	; 0x41
40015b80:	eafffffa 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015b84:	eb00330f 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
40015b88:	e1d610b2 	ldrh	r1, [r6, #2]
40015b8c:	e2811001 	add	r1, r1, #1
40015b90:	e1500001 	cmp	r0, r1
40015b94:	da000007 	ble	40015bb8 <CyU3PDmaChannelCreate+0x64>
40015b98:	e3550002 	cmp	r5, #2
40015b9c:	1a000007 	bne	40015bc0 <CyU3PDmaChannelCreate+0x6c>
40015ba0:	eb003308 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
40015ba4:	e1d610b2 	ldrh	r1, [r6, #2]
40015ba8:	e3a02001 	mov	r2, #1
40015bac:	e0821101 	add	r1, r2, r1, lsl #2
40015bb0:	e1500001 	cmp	r0, r1
40015bb4:	ca000001 	bgt	40015bc0 <CyU3PDmaChannelCreate+0x6c>
40015bb8:	e3a00010 	mov	r0, #16
40015bbc:	eaffffeb 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015bc0:	e1d600b0 	ldrh	r0, [r6]
40015bc4:	e3500000 	cmp	r0, #0
40015bc8:	0a000003 	beq	40015bdc <CyU3PDmaChannelCreate+0x88>
40015bcc:	e1d600b0 	ldrh	r0, [r6]
40015bd0:	e59f1354 	ldr	r1, [pc, #852]	; 40015f2c <CyU3PDmaChannelCreate+0x3d8>
40015bd4:	e1500001 	cmp	r0, r1
40015bd8:	da000001 	ble	40015be4 <CyU3PDmaChannelCreate+0x90>
40015bdc:	e3a00040 	mov	r0, #64	; 0x40
40015be0:	eaffffe2 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015be4:	e3550000 	cmp	r5, #0
40015be8:	0a000001 	beq	40015bf4 <CyU3PDmaChannelCreate+0xa0>
40015bec:	e3550001 	cmp	r5, #1
40015bf0:	1a000009 	bne	40015c1c <CyU3PDmaChannelCreate+0xc8>
40015bf4:	e1d600b0 	ldrh	r0, [r6]
40015bf8:	e310000f 	tst	r0, #15
40015bfc:	0a000001 	beq	40015c08 <CyU3PDmaChannelCreate+0xb4>
40015c00:	e3a00040 	mov	r0, #64	; 0x40
40015c04:	eaffffd9 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015c08:	e1d600b2 	ldrh	r0, [r6, #2]
40015c0c:	e3500000 	cmp	r0, #0
40015c10:	1a00000b 	bne	40015c44 <CyU3PDmaChannelCreate+0xf0>
40015c14:	e3a00040 	mov	r0, #64	; 0x40
40015c18:	eaffffd4 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015c1c:	e1d600b0 	ldrh	r0, [r6]
40015c20:	e1d610ba 	ldrh	r1, [r6, #10]
40015c24:	e0400001 	sub	r0, r0, r1
40015c28:	e1d610bc 	ldrh	r1, [r6, #12]
40015c2c:	e0400001 	sub	r0, r0, r1
40015c30:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015c34:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015c38:	0a000001 	beq	40015c44 <CyU3PDmaChannelCreate+0xf0>
40015c3c:	e3a00040 	mov	r0, #64	; 0x40
40015c40:	eaffffca 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015c44:	e5d60010 	ldrb	r0, [r6, #16]
40015c48:	e3500002 	cmp	r0, #2
40015c4c:	ba000001 	blt	40015c58 <CyU3PDmaChannelCreate+0x104>
40015c50:	e3a00040 	mov	r0, #64	; 0x40
40015c54:	eaffffc5 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015c58:	e3550004 	cmp	r5, #4
40015c5c:	0a000011 	beq	40015ca8 <CyU3PDmaChannelCreate+0x154>
40015c60:	e1d600b4 	ldrh	r0, [r6, #4]
40015c64:	e3a0103f 	mov	r1, #63	; 0x3f
40015c68:	e0018440 	and	r8, r1, r0, asr #8
40015c6c:	e1d600b4 	ldrh	r0, [r6, #4]
40015c70:	e20090ff 	and	r9, r0, #255	; 0xff
40015c74:	e1d600b4 	ldrh	r0, [r6, #4]
40015c78:	ebfffd14 	bl	400150d0 <CyU3PDmaSocketIsValidProducer>
40015c7c:	e3500000 	cmp	r0, #0
40015c80:	1a000001 	bne	40015c8c <CyU3PDmaChannelCreate+0x138>
40015c84:	e3a00040 	mov	r0, #64	; 0x40
40015c88:	eaffffb8 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015c8c:	e59f029c 	ldr	r0, [pc, #668]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015c90:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015c94:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015c98:	e3500000 	cmp	r0, #0
40015c9c:	0a000007 	beq	40015cc0 <CyU3PDmaChannelCreate+0x16c>
40015ca0:	e3a00040 	mov	r0, #64	; 0x40
40015ca4:	eaffffb1 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015ca8:	e1d600b4 	ldrh	r0, [r6, #4]
40015cac:	e59f1280 	ldr	r1, [pc, #640]	; 40015f34 <CyU3PDmaChannelCreate+0x3e0>
40015cb0:	e1500001 	cmp	r0, r1
40015cb4:	0a000001 	beq	40015cc0 <CyU3PDmaChannelCreate+0x16c>
40015cb8:	e3a00040 	mov	r0, #64	; 0x40
40015cbc:	eaffffab 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015cc0:	e3550003 	cmp	r5, #3
40015cc4:	0a000011 	beq	40015d10 <CyU3PDmaChannelCreate+0x1bc>
40015cc8:	e1d600b6 	ldrh	r0, [r6, #6]
40015ccc:	e3a0103f 	mov	r1, #63	; 0x3f
40015cd0:	e0018440 	and	r8, r1, r0, asr #8
40015cd4:	e1d600b6 	ldrh	r0, [r6, #6]
40015cd8:	e20090ff 	and	r9, r0, #255	; 0xff
40015cdc:	e1d600b6 	ldrh	r0, [r6, #6]
40015ce0:	ebfffcc2 	bl	40014ff0 <CyU3PDmaSocketIsValidConsumer>
40015ce4:	e3500000 	cmp	r0, #0
40015ce8:	1a000001 	bne	40015cf4 <CyU3PDmaChannelCreate+0x1a0>
40015cec:	e3a00040 	mov	r0, #64	; 0x40
40015cf0:	eaffff9e 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015cf4:	e59f0234 	ldr	r0, [pc, #564]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015cf8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015cfc:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015d00:	e3500000 	cmp	r0, #0
40015d04:	0a000006 	beq	40015d24 <CyU3PDmaChannelCreate+0x1d0>
40015d08:	e3a00040 	mov	r0, #64	; 0x40
40015d0c:	eaffff97 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015d10:	e1d600b6 	ldrh	r0, [r6, #6]
40015d14:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015d18:	0a000001 	beq	40015d24 <CyU3PDmaChannelCreate+0x1d0>
40015d1c:	e3a00040 	mov	r0, #64	; 0x40
40015d20:	eaffff92 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015d24:	e1d600b8 	ldrh	r0, [r6, #8]
40015d28:	e3500000 	cmp	r0, #0
40015d2c:	0a000008 	beq	40015d54 <CyU3PDmaChannelCreate+0x200>
40015d30:	e1d600b8 	ldrh	r0, [r6, #8]
40015d34:	e1d610b2 	ldrh	r1, [r6, #2]
40015d38:	e1500001 	cmp	r0, r1
40015d3c:	aa000002 	bge	40015d4c <CyU3PDmaChannelCreate+0x1f8>
40015d40:	e1d600b2 	ldrh	r0, [r6, #2]
40015d44:	e350001f 	cmp	r0, #31
40015d48:	da000001 	ble	40015d54 <CyU3PDmaChannelCreate+0x200>
40015d4c:	e3a00040 	mov	r0, #64	; 0x40
40015d50:	eaffff86 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015d54:	e3550004 	cmp	r5, #4
40015d58:	0a000007 	beq	40015d7c <CyU3PDmaChannelCreate+0x228>
40015d5c:	e1d600b4 	ldrh	r0, [r6, #4]
40015d60:	e3a0103f 	mov	r1, #63	; 0x3f
40015d64:	e0018440 	and	r8, r1, r0, asr #8
40015d68:	e1d600b4 	ldrh	r0, [r6, #4]
40015d6c:	e20090ff 	and	r9, r0, #255	; 0xff
40015d70:	e59f01b8 	ldr	r0, [pc, #440]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015d74:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d78:	e7804109 	str	r4, [r0, r9, lsl #2]
40015d7c:	e3550003 	cmp	r5, #3
40015d80:	0a000007 	beq	40015da4 <CyU3PDmaChannelCreate+0x250>
40015d84:	e1d600b6 	ldrh	r0, [r6, #6]
40015d88:	e3a0103f 	mov	r1, #63	; 0x3f
40015d8c:	e0018440 	and	r8, r1, r0, asr #8
40015d90:	e1d600b6 	ldrh	r0, [r6, #6]
40015d94:	e20090ff 	and	r9, r0, #255	; 0xff
40015d98:	e59f0190 	ldr	r0, [pc, #400]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015d9c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015da0:	e7804109 	str	r4, [r0, r9, lsl #2]
40015da4:	e1c450b4 	strh	r5, [r4, #4]
40015da8:	e1d600b0 	ldrh	r0, [r6]
40015dac:	e1c400b6 	strh	r0, [r4, #6]
40015db0:	e1d600b2 	ldrh	r0, [r6, #2]
40015db4:	e1c400b8 	strh	r0, [r4, #8]
40015db8:	e1d600b8 	ldrh	r0, [r6, #8]
40015dbc:	e1c400ba 	strh	r0, [r4, #10]
40015dc0:	e1d600b4 	ldrh	r0, [r6, #4]
40015dc4:	e1c401b0 	strh	r0, [r4, #16]
40015dc8:	e1d600b6 	ldrh	r0, [r6, #6]
40015dcc:	e1c401b2 	strh	r0, [r4, #18]
40015dd0:	e1d600ba 	ldrh	r0, [r6, #10]
40015dd4:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015dd8:	e1d600bc 	ldrh	r0, [r6, #12]
40015ddc:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015de0:	e1d600be 	ldrh	r0, [r6, #14]
40015de4:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015de8:	e5d60010 	ldrb	r0, [r6, #16]
40015dec:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015df0:	e5960014 	ldr	r0, [r6, #20]
40015df4:	e5840030 	str	r0, [r4, #48]	; 0x30
40015df8:	e3a00000 	mov	r0, #0
40015dfc:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015e00:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015e04:	e3a03038 	mov	r3, #56	; 0x38
40015e08:	e3a02000 	mov	r2, #0
40015e0c:	e1a01002 	mov	r1, r2
40015e10:	e284003c 	add	r0, r4, #60	; 0x3c
40015e14:	ebffd0ac 	bl	4000a0cc <_txe_mutex_create>
40015e18:	e3a02028 	mov	r2, #40	; 0x28
40015e1c:	e3a01000 	mov	r1, #0
40015e20:	e2840074 	add	r0, r4, #116	; 0x74
40015e24:	ebffcfee 	bl	40009de4 <_txe_event_flags_create>
40015e28:	e5960018 	ldr	r0, [r6, #24]
40015e2c:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015e30:	e59f0100 	ldr	r0, [pc, #256]	; 40015f38 <CyU3PDmaChannelCreate+0x3e4>
40015e34:	e5900000 	ldr	r0, [r0]
40015e38:	e5840038 	str	r0, [r4, #56]	; 0x38
40015e3c:	e3550005 	cmp	r5, #5
40015e40:	308ff105 	addcc	pc, pc, r5, lsl #2
40015e44:	ea000011 	b	40015e90 <CyU3PDmaChannelCreate+0x33c>
40015e48:	ea000003 	b	40015e5c <CyU3PDmaChannelCreate+0x308>
40015e4c:	ea000004 	b	40015e64 <CyU3PDmaChannelCreate+0x310>
40015e50:	ea00000a 	b	40015e80 <CyU3PDmaChannelCreate+0x32c>
40015e54:	ea000006 	b	40015e74 <CyU3PDmaChannelCreate+0x320>
40015e58:	ea000007 	b	40015e7c <CyU3PDmaChannelCreate+0x328>
40015e5c:	e1a00000 	nop			; (mov r0, r0)
40015e60:	e1a00000 	nop			; (mov r0, r0)
40015e64:	e1a00004 	mov	r0, r4
40015e68:	ebfffe7a 	bl	40015858 <CyU3PDmaChannelConfigure_TypeAuto>
40015e6c:	e1a07000 	mov	r7, r0
40015e70:	ea000009 	b	40015e9c <CyU3PDmaChannelCreate+0x348>
40015e74:	e1a00000 	nop			; (mov r0, r0)
40015e78:	e1a00000 	nop			; (mov r0, r0)
40015e7c:	e1a00000 	nop			; (mov r0, r0)
40015e80:	e1a00004 	mov	r0, r4
40015e84:	ebfffe97 	bl	400158e8 <CyU3PDmaChannelConfigure_TypeManual>
40015e88:	e1a07000 	mov	r7, r0
40015e8c:	ea000002 	b	40015e9c <CyU3PDmaChannelCreate+0x348>
40015e90:	e1a00000 	nop			; (mov r0, r0)
40015e94:	e3a07040 	mov	r7, #64	; 0x40
40015e98:	e1a00000 	nop			; (mov r0, r0)
40015e9c:	e1a00000 	nop			; (mov r0, r0)
40015ea0:	e3570000 	cmp	r7, #0
40015ea4:	1a000002 	bne	40015eb4 <CyU3PDmaChannelCreate+0x360>
40015ea8:	e3a00001 	mov	r0, #1
40015eac:	e5840000 	str	r0, [r4]
40015eb0:	ea00001b 	b	40015f24 <CyU3PDmaChannelCreate+0x3d0>
40015eb4:	e284003c 	add	r0, r4, #60	; 0x3c
40015eb8:	ebffd0e1 	bl	4000a244 <_txe_mutex_delete>
40015ebc:	e2840074 	add	r0, r4, #116	; 0x74
40015ec0:	ebffd017 	bl	40009f24 <_txe_event_flags_delete>
40015ec4:	e3550004 	cmp	r5, #4
40015ec8:	0a000008 	beq	40015ef0 <CyU3PDmaChannelCreate+0x39c>
40015ecc:	e1d600b4 	ldrh	r0, [r6, #4]
40015ed0:	e3a0103f 	mov	r1, #63	; 0x3f
40015ed4:	e0018440 	and	r8, r1, r0, asr #8
40015ed8:	e1d600b4 	ldrh	r0, [r6, #4]
40015edc:	e20090ff 	and	r9, r0, #255	; 0xff
40015ee0:	e3a00000 	mov	r0, #0
40015ee4:	e59f1044 	ldr	r1, [pc, #68]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015ee8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015eec:	e7810109 	str	r0, [r1, r9, lsl #2]
40015ef0:	e3550003 	cmp	r5, #3
40015ef4:	0a000008 	beq	40015f1c <CyU3PDmaChannelCreate+0x3c8>
40015ef8:	e1d600b6 	ldrh	r0, [r6, #6]
40015efc:	e3a0103f 	mov	r1, #63	; 0x3f
40015f00:	e0018440 	and	r8, r1, r0, asr #8
40015f04:	e1d600b6 	ldrh	r0, [r6, #6]
40015f08:	e20090ff 	and	r9, r0, #255	; 0xff
40015f0c:	e3a00000 	mov	r0, #0
40015f10:	e59f1018 	ldr	r1, [pc, #24]	; 40015f30 <CyU3PDmaChannelCreate+0x3dc>
40015f14:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015f18:	e7810109 	str	r0, [r1, r9, lsl #2]
40015f1c:	e3a00000 	mov	r0, #0
40015f20:	e5840000 	str	r0, [r4]
40015f24:	e1a00007 	mov	r0, r7
40015f28:	eaffff10 	b	40015b70 <CyU3PDmaChannelCreate+0x1c>
40015f2c:	0000fff0 	.word	0x0000fff0
40015f30:	40030d00 	.word	0x40030d00
40015f34:	00003f01 	.word	0x00003f01
40015f38:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDmaChannelDestroy:

40015f3c <CyU3PDmaChannelDestroy>:
40015f3c:	e92d4070 	push	{r4, r5, r6, lr}
40015f40:	e1a04000 	mov	r4, r0
40015f44:	e3e01000 	mvn	r1, #0
40015f48:	e1a00004 	mov	r0, r4
40015f4c:	ebfffd5b 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40015f50:	e1a05000 	mov	r5, r0
40015f54:	e3550000 	cmp	r5, #0
40015f58:	0a000001 	beq	40015f64 <CyU3PDmaChannelDestroy+0x28>
40015f5c:	e1a00005 	mov	r0, r5
40015f60:	e8bd8070 	pop	{r4, r5, r6, pc}
40015f64:	e1d400b4 	ldrh	r0, [r4, #4]
40015f68:	e3500005 	cmp	r0, #5
40015f6c:	308ff100 	addcc	pc, pc, r0, lsl #2
40015f70:	ea00000f 	b	40015fb4 <CyU3PDmaChannelDestroy+0x78>
40015f74:	ea000003 	b	40015f88 <CyU3PDmaChannelDestroy+0x4c>
40015f78:	ea000004 	b	40015f90 <CyU3PDmaChannelDestroy+0x54>
40015f7c:	ea000009 	b	40015fa8 <CyU3PDmaChannelDestroy+0x6c>
40015f80:	ea000005 	b	40015f9c <CyU3PDmaChannelDestroy+0x60>
40015f84:	ea000006 	b	40015fa4 <CyU3PDmaChannelDestroy+0x68>
40015f88:	e1a00000 	nop			; (mov r0, r0)
40015f8c:	e1a00000 	nop			; (mov r0, r0)
40015f90:	e1a00004 	mov	r0, r4
40015f94:	eb000014 	bl	40015fec <CyU3PDmaChannelDestroy_TypeAuto>
40015f98:	ea00000a 	b	40015fc8 <CyU3PDmaChannelDestroy+0x8c>
40015f9c:	e1a00000 	nop			; (mov r0, r0)
40015fa0:	e1a00000 	nop			; (mov r0, r0)
40015fa4:	e1a00000 	nop			; (mov r0, r0)
40015fa8:	e1a00004 	mov	r0, r4
40015fac:	eb000043 	bl	400160c0 <CyU3PDmaChannelDestroy_TypeManual>
40015fb0:	ea000004 	b	40015fc8 <CyU3PDmaChannelDestroy+0x8c>
40015fb4:	e1a00000 	nop			; (mov r0, r0)
40015fb8:	e284003c 	add	r0, r4, #60	; 0x3c
40015fbc:	ebffd0f5 	bl	4000a398 <_txe_mutex_put>
40015fc0:	e3a00040 	mov	r0, #64	; 0x40
40015fc4:	eaffffe5 	b	40015f60 <CyU3PDmaChannelDestroy+0x24>
40015fc8:	e1a00000 	nop			; (mov r0, r0)
40015fcc:	e3a00000 	mov	r0, #0
40015fd0:	e5840000 	str	r0, [r4]
40015fd4:	e284003c 	add	r0, r4, #60	; 0x3c
40015fd8:	ebffd099 	bl	4000a244 <_txe_mutex_delete>
40015fdc:	e2840074 	add	r0, r4, #116	; 0x74
40015fe0:	ebffcfcf 	bl	40009f24 <_txe_event_flags_delete>
40015fe4:	e3a00000 	mov	r0, #0
40015fe8:	eaffffdc 	b	40015f60 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015fec <CyU3PDmaChannelDestroy_TypeAuto>:
40015fec:	e92d4070 	push	{r4, r5, r6, lr}
40015ff0:	e24dd018 	sub	sp, sp, #24
40015ff4:	e1a04000 	mov	r4, r0
40015ff8:	e1d401b0 	ldrh	r0, [r4, #16]
40015ffc:	ebfffbbb 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016000:	e1d401b2 	ldrh	r0, [r4, #18]
40016004:	ebfffbb9 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016008:	e1d401b0 	ldrh	r0, [r4, #16]
4001600c:	e1a0100d 	mov	r1, sp
40016010:	ebfffbce 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016014:	e59f009c 	ldr	r0, [pc, #156]	; 400160b8 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40016018:	e58d0000 	str	r0, [sp]
4001601c:	e1d401b0 	ldrh	r0, [r4, #16]
40016020:	e1a0100d 	mov	r1, sp
40016024:	ebfffc73 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016028:	e1d401b0 	ldrh	r0, [r4, #16]
4001602c:	e20050ff 	and	r5, r0, #255	; 0xff
40016030:	e1d401b0 	ldrh	r0, [r4, #16]
40016034:	e3a0103f 	mov	r1, #63	; 0x3f
40016038:	e0016440 	and	r6, r1, r0, asr #8
4001603c:	e3a00000 	mov	r0, #0
40016040:	e59f1074 	ldr	r1, [pc, #116]	; 400160bc <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016044:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40016048:	e7810105 	str	r0, [r1, r5, lsl #2]
4001604c:	e1d401b2 	ldrh	r0, [r4, #18]
40016050:	e1a0100d 	mov	r1, sp
40016054:	ebfffbbd 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016058:	e59f0058 	ldr	r0, [pc, #88]	; 400160b8 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
4001605c:	e58d0000 	str	r0, [sp]
40016060:	e1d401b2 	ldrh	r0, [r4, #18]
40016064:	e1a0100d 	mov	r1, sp
40016068:	ebfffc62 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001606c:	e1d401b2 	ldrh	r0, [r4, #18]
40016070:	e20050ff 	and	r5, r0, #255	; 0xff
40016074:	e1d401b2 	ldrh	r0, [r4, #18]
40016078:	e3a0103f 	mov	r1, #63	; 0x3f
4001607c:	e0016440 	and	r6, r1, r0, asr #8
40016080:	e3a00000 	mov	r0, #0
40016084:	e59f1030 	ldr	r1, [pc, #48]	; 400160bc <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016088:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001608c:	e7810105 	str	r0, [r1, r5, lsl #2]
40016090:	e1d410b8 	ldrh	r1, [r4, #8]
40016094:	e1d400bc 	ldrh	r0, [r4, #12]
40016098:	e3a03001 	mov	r3, #1
4001609c:	e1a02003 	mov	r2, r3
400160a0:	eb00316d 	bl	4002265c <CyU3PDmaDscrChainDestroy>
400160a4:	e1d401b4 	ldrh	r0, [r4, #20]
400160a8:	eb0031df 	bl	4002282c <CyU3PDmaDscrPut>
400160ac:	e3a00000 	mov	r0, #0
400160b0:	e28dd018 	add	sp, sp, #24
400160b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400160b8:	0000ffff 	.word	0x0000ffff
400160bc:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

400160c0 <CyU3PDmaChannelDestroy_TypeManual>:
400160c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400160c4:	e24dd028 	sub	sp, sp, #40	; 0x28
400160c8:	e1a04000 	mov	r4, r0
400160cc:	e1d400b4 	ldrh	r0, [r4, #4]
400160d0:	e3500004 	cmp	r0, #4
400160d4:	0a000012 	beq	40016124 <CyU3PDmaChannelDestroy_TypeManual+0x64>
400160d8:	e1d401b0 	ldrh	r0, [r4, #16]
400160dc:	ebfffb83 	bl	40014ef0 <CyU3PDmaSocketDisable>
400160e0:	e1d401b0 	ldrh	r0, [r4, #16]
400160e4:	e1a0100d 	mov	r1, sp
400160e8:	ebfffb98 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400160ec:	e59f0178 	ldr	r0, [pc, #376]	; 4001626c <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
400160f0:	e58d0000 	str	r0, [sp]
400160f4:	e1d401b0 	ldrh	r0, [r4, #16]
400160f8:	e1a0100d 	mov	r1, sp
400160fc:	ebfffc3d 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016100:	e1d401b0 	ldrh	r0, [r4, #16]
40016104:	e20070ff 	and	r7, r0, #255	; 0xff
40016108:	e1d401b0 	ldrh	r0, [r4, #16]
4001610c:	e3a0103f 	mov	r1, #63	; 0x3f
40016110:	e0018440 	and	r8, r1, r0, asr #8
40016114:	e3a00000 	mov	r0, #0
40016118:	e59f1150 	ldr	r1, [pc, #336]	; 40016270 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
4001611c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40016120:	e7810107 	str	r0, [r1, r7, lsl #2]
40016124:	e1d400b4 	ldrh	r0, [r4, #4]
40016128:	e3500003 	cmp	r0, #3
4001612c:	0a000012 	beq	4001617c <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40016130:	e1d401b2 	ldrh	r0, [r4, #18]
40016134:	ebfffb6d 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016138:	e1d401b2 	ldrh	r0, [r4, #18]
4001613c:	e1a0100d 	mov	r1, sp
40016140:	ebfffb82 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016144:	e59f0120 	ldr	r0, [pc, #288]	; 4001626c <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40016148:	e58d0000 	str	r0, [sp]
4001614c:	e1d401b2 	ldrh	r0, [r4, #18]
40016150:	e1a0100d 	mov	r1, sp
40016154:	ebfffc27 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016158:	e1d401b2 	ldrh	r0, [r4, #18]
4001615c:	e20070ff 	and	r7, r0, #255	; 0xff
40016160:	e1d401b2 	ldrh	r0, [r4, #18]
40016164:	e3a0103f 	mov	r1, #63	; 0x3f
40016168:	e0018440 	and	r8, r1, r0, asr #8
4001616c:	e3a00000 	mov	r0, #0
40016170:	e59f10f8 	ldr	r1, [pc, #248]	; 40016270 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40016174:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40016178:	e7810107 	str	r0, [r1, r7, lsl #2]
4001617c:	e1d400b8 	ldrh	r0, [r4, #8]
40016180:	e3500000 	cmp	r0, #0
40016184:	0a000033 	beq	40016258 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016188:	e1d400b4 	ldrh	r0, [r4, #4]
4001618c:	e3500004 	cmp	r0, #4
40016190:	1a000014 	bne	400161e8 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40016194:	e1d450be 	ldrh	r5, [r4, #14]
40016198:	e3a06000 	mov	r6, #0
4001619c:	ea00000d 	b	400161d8 <CyU3PDmaChannelDestroy_TypeManual+0x118>
400161a0:	e28d1018 	add	r1, sp, #24
400161a4:	e1a00005 	mov	r0, r5
400161a8:	eb0031c6 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400161ac:	e59d1018 	ldr	r1, [sp, #24]
400161b0:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
400161b4:	e0410002 	sub	r0, r1, r2
400161b8:	ebffb74d 	bl	40003ef4 <CyU3PDmaBufferFree>
400161bc:	e1a00005 	mov	r0, r5
400161c0:	eb003199 	bl	4002282c <CyU3PDmaDscrPut>
400161c4:	e59d0020 	ldr	r0, [sp, #32]
400161c8:	e1a05800 	lsl	r5, r0, #16
400161cc:	e1a05825 	lsr	r5, r5, #16
400161d0:	e2860001 	add	r0, r6, #1
400161d4:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400161d8:	e1d400b8 	ldrh	r0, [r4, #8]
400161dc:	e1500006 	cmp	r0, r6
400161e0:	caffffee 	bgt	400161a0 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
400161e4:	ea000013 	b	40016238 <CyU3PDmaChannelDestroy_TypeManual+0x178>
400161e8:	e1d450bc 	ldrh	r5, [r4, #12]
400161ec:	e3a06000 	mov	r6, #0
400161f0:	ea00000d 	b	4001622c <CyU3PDmaChannelDestroy_TypeManual+0x16c>
400161f4:	e28d1018 	add	r1, sp, #24
400161f8:	e1a00005 	mov	r0, r5
400161fc:	eb0031b1 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016200:	e59d1018 	ldr	r1, [sp, #24]
40016204:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40016208:	e0410002 	sub	r0, r1, r2
4001620c:	ebffb738 	bl	40003ef4 <CyU3PDmaBufferFree>
40016210:	e1a00005 	mov	r0, r5
40016214:	eb003184 	bl	4002282c <CyU3PDmaDscrPut>
40016218:	e59d0020 	ldr	r0, [sp, #32]
4001621c:	e1a05800 	lsl	r5, r0, #16
40016220:	e1a05825 	lsr	r5, r5, #16
40016224:	e2860001 	add	r0, r6, #1
40016228:	e3c06801 	bic	r6, r0, #65536	; 0x10000
4001622c:	e1d400b8 	ldrh	r0, [r4, #8]
40016230:	e1500006 	cmp	r0, r6
40016234:	caffffee 	bgt	400161f4 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40016238:	e1d400b4 	ldrh	r0, [r4, #4]
4001623c:	e3500002 	cmp	r0, #2
40016240:	1a000004 	bne	40016258 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016244:	e1d410b8 	ldrh	r1, [r4, #8]
40016248:	e1d400be 	ldrh	r0, [r4, #14]
4001624c:	e3a03000 	mov	r3, #0
40016250:	e1a02003 	mov	r2, r3
40016254:	eb003100 	bl	4002265c <CyU3PDmaDscrChainDestroy>
40016258:	e1d401b4 	ldrh	r0, [r4, #20]
4001625c:	eb003172 	bl	4002282c <CyU3PDmaDscrPut>
40016260:	e3a00000 	mov	r0, #0
40016264:	e28dd028 	add	sp, sp, #40	; 0x28
40016268:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001626c:	0000ffff 	.word	0x0000ffff
40016270:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40016274 <CyU3PDmaChannelGetBuffer>:
40016274:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016278:	e24dd030 	sub	sp, sp, #48	; 0x30
4001627c:	e1a04000 	mov	r4, r0
40016280:	e1a05001 	mov	r5, r1
40016284:	e1a06002 	mov	r6, r2
40016288:	e3550000 	cmp	r5, #0
4001628c:	1a000002 	bne	4001629c <CyU3PDmaChannelGetBuffer+0x28>
40016290:	e3a00041 	mov	r0, #65	; 0x41
40016294:	e28dd030 	add	sp, sp, #48	; 0x30
40016298:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001629c:	e1a01006 	mov	r1, r6
400162a0:	e1a00004 	mov	r0, r4
400162a4:	ebfffc85 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
400162a8:	e1a08000 	mov	r8, r0
400162ac:	e3580000 	cmp	r8, #0
400162b0:	0a000001 	beq	400162bc <CyU3PDmaChannelGetBuffer+0x48>
400162b4:	e1a00008 	mov	r0, r8
400162b8:	eafffff5 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400162bc:	e5940000 	ldr	r0, [r4]
400162c0:	e3500002 	cmp	r0, #2
400162c4:	0a000003 	beq	400162d8 <CyU3PDmaChannelGetBuffer+0x64>
400162c8:	e5940000 	ldr	r0, [r4]
400162cc:	e3500006 	cmp	r0, #6
400162d0:	0a000000 	beq	400162d8 <CyU3PDmaChannelGetBuffer+0x64>
400162d4:	e3a08042 	mov	r8, #66	; 0x42
400162d8:	e5940000 	ldr	r0, [r4]
400162dc:	e3500005 	cmp	r0, #5
400162e0:	1a000000 	bne	400162e8 <CyU3PDmaChannelGetBuffer+0x74>
400162e4:	e3a08049 	mov	r8, #73	; 0x49
400162e8:	e5940000 	ldr	r0, [r4]
400162ec:	e3500007 	cmp	r0, #7
400162f0:	1a000000 	bne	400162f8 <CyU3PDmaChannelGetBuffer+0x84>
400162f4:	e3a08048 	mov	r8, #72	; 0x48
400162f8:	e3580000 	cmp	r8, #0
400162fc:	0a000003 	beq	40016310 <CyU3PDmaChannelGetBuffer+0x9c>
40016300:	e284003c 	add	r0, r4, #60	; 0x3c
40016304:	ebffd023 	bl	4000a398 <_txe_mutex_put>
40016308:	e1a00008 	mov	r0, r8
4001630c:	eaffffe0 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
40016310:	e1d400b4 	ldrh	r0, [r4, #4]
40016314:	e20070ff 	and	r7, r0, #255	; 0xff
40016318:	e3570002 	cmp	r7, #2
4001631c:	0a000001 	beq	40016328 <CyU3PDmaChannelGetBuffer+0xb4>
40016320:	e3570003 	cmp	r7, #3
40016324:	1a00003e 	bne	40016424 <CyU3PDmaChannelGetBuffer+0x1b0>
40016328:	e3a02002 	mov	r2, #2
4001632c:	e3e01008 	mvn	r1, #8
40016330:	e2840074 	add	r0, r4, #116	; 0x74
40016334:	ebffcf4a 	bl	4000a064 <_txe_event_flags_set>
40016338:	e1d401b6 	ldrh	r0, [r4, #22]
4001633c:	e28d101c 	add	r1, sp, #28
40016340:	eb003160 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016344:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016348:	e3100008 	tst	r0, #8
4001634c:	1a000022 	bne	400163dc <CyU3PDmaChannelGetBuffer+0x168>
40016350:	e284003c 	add	r0, r4, #60	; 0x3c
40016354:	ebffd00f 	bl	4000a398 <_txe_mutex_put>
40016358:	e58d6000 	str	r6, [sp]
4001635c:	e28d302c 	add	r3, sp, #44	; 0x2c
40016360:	e3a02000 	mov	r2, #0
40016364:	e3a01068 	mov	r1, #104	; 0x68
40016368:	e2840074 	add	r0, r4, #116	; 0x74
4001636c:	ebffcf0c 	bl	40009fa4 <_txe_event_flags_get>
40016370:	e1a08000 	mov	r8, r0
40016374:	e3580000 	cmp	r8, #0
40016378:	0a000001 	beq	40016384 <CyU3PDmaChannelGetBuffer+0x110>
4001637c:	e3a00045 	mov	r0, #69	; 0x45
40016380:	eaffffc3 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
40016384:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016388:	e3100040 	tst	r0, #64	; 0x40
4001638c:	0a000001 	beq	40016398 <CyU3PDmaChannelGetBuffer+0x124>
40016390:	e3a00049 	mov	r0, #73	; 0x49
40016394:	eaffffbe 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
40016398:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001639c:	e3100020 	tst	r0, #32
400163a0:	0a000001 	beq	400163ac <CyU3PDmaChannelGetBuffer+0x138>
400163a4:	e3a00048 	mov	r0, #72	; 0x48
400163a8:	eaffffb9 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400163ac:	e1a01006 	mov	r1, r6
400163b0:	e1a00004 	mov	r0, r4
400163b4:	ebfffc41 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
400163b8:	e1a08000 	mov	r8, r0
400163bc:	e3580000 	cmp	r8, #0
400163c0:	0a000001 	beq	400163cc <CyU3PDmaChannelGetBuffer+0x158>
400163c4:	e1a00008 	mov	r0, r8
400163c8:	eaffffb1 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400163cc:	e1d401b6 	ldrh	r0, [r4, #22]
400163d0:	e28d101c 	add	r1, sp, #28
400163d4:	eb00313b 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400163d8:	ea000003 	b	400163ec <CyU3PDmaChannelGetBuffer+0x178>
400163dc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400163e0:	e3500000 	cmp	r0, #0
400163e4:	0a000000 	beq	400163ec <CyU3PDmaChannelGetBuffer+0x178>
400163e8:	ebffd1d6 	bl	4000ab48 <_txe_thread_relinquish>
400163ec:	e59d001c 	ldr	r0, [sp, #28]
400163f0:	e5850000 	str	r0, [r5]
400163f4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163f8:	e59f11a4 	ldr	r1, [pc, #420]	; 400165a4 <CyU3PDmaChannelGetBuffer+0x330>
400163fc:	e0010820 	and	r0, r1, r0, lsr #16
40016400:	e1c500b4 	strh	r0, [r5, #4]
40016404:	e241100f 	sub	r1, r1, #15
40016408:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001640c:	e0000001 	and	r0, r0, r1
40016410:	e1c500b6 	strh	r0, [r5, #6]
40016414:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016418:	e200000f 	and	r0, r0, #15
4001641c:	e1c500b8 	strh	r0, [r5, #8]
40016420:	ea00005b 	b	40016594 <CyU3PDmaChannelGetBuffer+0x320>
40016424:	e3570004 	cmp	r7, #4
40016428:	1a000036 	bne	40016508 <CyU3PDmaChannelGetBuffer+0x294>
4001642c:	e3a02002 	mov	r2, #2
40016430:	e3e01010 	mvn	r1, #16
40016434:	e2840074 	add	r0, r4, #116	; 0x74
40016438:	ebffcf09 	bl	4000a064 <_txe_event_flags_set>
4001643c:	e1d401b8 	ldrh	r0, [r4, #24]
40016440:	e28d101c 	add	r1, sp, #28
40016444:	eb00311f 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016448:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001644c:	e3100008 	tst	r0, #8
40016450:	0a000021 	beq	400164dc <CyU3PDmaChannelGetBuffer+0x268>
40016454:	e284003c 	add	r0, r4, #60	; 0x3c
40016458:	ebffcfce 	bl	4000a398 <_txe_mutex_put>
4001645c:	e58d6000 	str	r6, [sp]
40016460:	e28d302c 	add	r3, sp, #44	; 0x2c
40016464:	e3a02000 	mov	r2, #0
40016468:	e3a01070 	mov	r1, #112	; 0x70
4001646c:	e2840074 	add	r0, r4, #116	; 0x74
40016470:	ebffcecb 	bl	40009fa4 <_txe_event_flags_get>
40016474:	e1a08000 	mov	r8, r0
40016478:	e3580000 	cmp	r8, #0
4001647c:	0a000001 	beq	40016488 <CyU3PDmaChannelGetBuffer+0x214>
40016480:	e3a00045 	mov	r0, #69	; 0x45
40016484:	eaffff82 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
40016488:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001648c:	e3100040 	tst	r0, #64	; 0x40
40016490:	0a000001 	beq	4001649c <CyU3PDmaChannelGetBuffer+0x228>
40016494:	e3a00049 	mov	r0, #73	; 0x49
40016498:	eaffff7d 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
4001649c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400164a0:	e3100020 	tst	r0, #32
400164a4:	0a000001 	beq	400164b0 <CyU3PDmaChannelGetBuffer+0x23c>
400164a8:	e3a00048 	mov	r0, #72	; 0x48
400164ac:	eaffff78 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400164b0:	e1a01006 	mov	r1, r6
400164b4:	e1a00004 	mov	r0, r4
400164b8:	ebfffc00 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
400164bc:	e1a08000 	mov	r8, r0
400164c0:	e3580000 	cmp	r8, #0
400164c4:	0a000001 	beq	400164d0 <CyU3PDmaChannelGetBuffer+0x25c>
400164c8:	e1a00008 	mov	r0, r8
400164cc:	eaffff70 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400164d0:	e1d401b8 	ldrh	r0, [r4, #24]
400164d4:	e28d101c 	add	r1, sp, #28
400164d8:	eb0030fa 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400164dc:	e59d001c 	ldr	r0, [sp, #28]
400164e0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400164e4:	e0400001 	sub	r0, r0, r1
400164e8:	e5850000 	str	r0, [r5]
400164ec:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
400164f0:	e1c500b4 	strh	r0, [r5, #4]
400164f4:	e1d400b6 	ldrh	r0, [r4, #6]
400164f8:	e1c500b6 	strh	r0, [r5, #6]
400164fc:	e3a00000 	mov	r0, #0
40016500:	e1c500b8 	strh	r0, [r5, #8]
40016504:	ea000022 	b	40016594 <CyU3PDmaChannelGetBuffer+0x320>
40016508:	e1d401b2 	ldrh	r0, [r4, #18]
4001650c:	e28d1004 	add	r1, sp, #4
40016510:	ebfffa8e 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016514:	e59d1004 	ldr	r1, [sp, #4]
40016518:	e1a00801 	lsl	r0, r1, #16
4001651c:	e1a00820 	lsr	r0, r0, #16
40016520:	e28d101c 	add	r1, sp, #28
40016524:	eb0030e7 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016528:	e59d0010 	ldr	r0, [sp, #16]
4001652c:	e3100702 	tst	r0, #524288	; 0x80000
40016530:	0a000016 	beq	40016590 <CyU3PDmaChannelGetBuffer+0x31c>
40016534:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016538:	e3100008 	tst	r0, #8
4001653c:	0a000013 	beq	40016590 <CyU3PDmaChannelGetBuffer+0x31c>
40016540:	e59d001c 	ldr	r0, [sp, #28]
40016544:	e5850000 	str	r0, [r5]
40016548:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001654c:	e59f1050 	ldr	r1, [pc, #80]	; 400165a4 <CyU3PDmaChannelGetBuffer+0x330>
40016550:	e0010820 	and	r0, r1, r0, lsr #16
40016554:	e1c500b4 	strh	r0, [r5, #4]
40016558:	e241100f 	sub	r1, r1, #15
4001655c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016560:	e0000001 	and	r0, r0, r1
40016564:	e1c500b6 	strh	r0, [r5, #6]
40016568:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001656c:	e200000f 	and	r0, r0, #15
40016570:	e1c500b8 	strh	r0, [r5, #8]
40016574:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016578:	e3500000 	cmp	r0, #0
4001657c:	0a000004 	beq	40016594 <CyU3PDmaChannelGetBuffer+0x320>
40016580:	e1d510b6 	ldrh	r1, [r5, #6]
40016584:	e5950000 	ldr	r0, [r5]
40016588:	ebffefa1 	bl	40012414 <CyU3PSysFlushDRegion>
4001658c:	ea000000 	b	40016594 <CyU3PDmaChannelGetBuffer+0x320>
40016590:	e3a08047 	mov	r8, #71	; 0x47
40016594:	e284003c 	add	r0, r4, #60	; 0x3c
40016598:	ebffcf7e 	bl	4000a398 <_txe_mutex_put>
4001659c:	e1a00008 	mov	r0, r8
400165a0:	eaffff3b 	b	40016294 <CyU3PDmaChannelGetBuffer+0x20>
400165a4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

400165a8 <CyU3PDmaChannelReset>:
400165a8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400165ac:	e1a04000 	mov	r4, r0
400165b0:	e3e01000 	mvn	r1, #0
400165b4:	e1a00004 	mov	r0, r4
400165b8:	ebfffbc0 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
400165bc:	e1a06000 	mov	r6, r0
400165c0:	e3560000 	cmp	r6, #0
400165c4:	0a000001 	beq	400165d0 <CyU3PDmaChannelReset+0x28>
400165c8:	e1a00006 	mov	r0, r6
400165cc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400165d0:	e1d400b4 	ldrh	r0, [r4, #4]
400165d4:	e3500005 	cmp	r0, #5
400165d8:	308ff100 	addcc	pc, pc, r0, lsl #2
400165dc:	ea00000f 	b	40016620 <CyU3PDmaChannelReset+0x78>
400165e0:	ea000003 	b	400165f4 <CyU3PDmaChannelReset+0x4c>
400165e4:	ea000004 	b	400165fc <CyU3PDmaChannelReset+0x54>
400165e8:	ea000009 	b	40016614 <CyU3PDmaChannelReset+0x6c>
400165ec:	ea000005 	b	40016608 <CyU3PDmaChannelReset+0x60>
400165f0:	ea000006 	b	40016610 <CyU3PDmaChannelReset+0x68>
400165f4:	e1a00000 	nop			; (mov r0, r0)
400165f8:	e1a00000 	nop			; (mov r0, r0)
400165fc:	e1a00004 	mov	r0, r4
40016600:	eb000030 	bl	400166c8 <CyU3PDmaChannelReset_TypeAuto>
40016604:	ea000007 	b	40016628 <CyU3PDmaChannelReset+0x80>
40016608:	e1a00000 	nop			; (mov r0, r0)
4001660c:	e1a00000 	nop			; (mov r0, r0)
40016610:	e1a00000 	nop			; (mov r0, r0)
40016614:	e1a00004 	mov	r0, r4
40016618:	eb000045 	bl	40016734 <CyU3PDmaChannelReset_TypeManual>
4001661c:	ea000001 	b	40016628 <CyU3PDmaChannelReset+0x80>
40016620:	e1a00000 	nop			; (mov r0, r0)
40016624:	e1a00000 	nop			; (mov r0, r0)
40016628:	e1a00000 	nop			; (mov r0, r0)
4001662c:	ebffc90f 	bl	40008a70 <_tx_thread_identify>
40016630:	e1a05000 	mov	r5, r0
40016634:	e3550000 	cmp	r5, #0
40016638:	0a000003 	beq	4001664c <CyU3PDmaChannelReset+0xa4>
4001663c:	e1a0200d 	mov	r2, sp
40016640:	e3a01002 	mov	r1, #2
40016644:	e1a00005 	mov	r0, r5
40016648:	ebffd116 	bl	4000aaa8 <_txe_thread_priority_change>
4001664c:	e3a02002 	mov	r2, #2
40016650:	e3e01007 	mvn	r1, #7
40016654:	e2840074 	add	r0, r4, #116	; 0x74
40016658:	ebffce81 	bl	4000a064 <_txe_event_flags_set>
4001665c:	e3a02000 	mov	r2, #0
40016660:	e3a01020 	mov	r1, #32
40016664:	e2840074 	add	r0, r4, #116	; 0x74
40016668:	ebffce7d 	bl	4000a064 <_txe_event_flags_set>
4001666c:	e3a00001 	mov	r0, #1
40016670:	e5840000 	str	r0, [r4]
40016674:	e284003c 	add	r0, r4, #60	; 0x3c
40016678:	ebffcf46 	bl	4000a398 <_txe_mutex_put>
4001667c:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40016680:	e3500000 	cmp	r0, #0
40016684:	0a000007 	beq	400166a8 <CyU3PDmaChannelReset+0x100>
40016688:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001668c:	e3100020 	tst	r0, #32
40016690:	0a000004 	beq	400166a8 <CyU3PDmaChannelReset+0x100>
40016694:	e3a02000 	mov	r2, #0
40016698:	e3a01020 	mov	r1, #32
4001669c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400166a0:	e1a00004 	mov	r0, r4
400166a4:	e12fff33 	blx	r3
400166a8:	e3550000 	cmp	r5, #0
400166ac:	0a000003 	beq	400166c0 <CyU3PDmaChannelReset+0x118>
400166b0:	e1a0200d 	mov	r2, sp
400166b4:	e1a00005 	mov	r0, r5
400166b8:	e59d1000 	ldr	r1, [sp]
400166bc:	ebffd0f9 	bl	4000aaa8 <_txe_thread_priority_change>
400166c0:	e3a00000 	mov	r0, #0
400166c4:	eaffffc0 	b	400165cc <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

400166c8 <CyU3PDmaChannelReset_TypeAuto>:
400166c8:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400166cc:	e1a04000 	mov	r4, r0
400166d0:	e1d450b8 	ldrh	r5, [r4, #8]
400166d4:	e1d460bc 	ldrh	r6, [r4, #12]
400166d8:	e1a00004 	mov	r0, r4
400166dc:	eb000337 	bl	400173c0 <CyU3PDmaConfigureSockets_TypeAuto>
400166e0:	ea00000c 	b	40016718 <CyU3PDmaChannelReset_TypeAuto+0x50>
400166e4:	e1a0100d 	mov	r1, sp
400166e8:	e1a00006 	mov	r0, r6
400166ec:	eb003075 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400166f0:	e59d000c 	ldr	r0, [sp, #12]
400166f4:	e59f1034 	ldr	r1, [pc, #52]	; 40016730 <CyU3PDmaChannelReset_TypeAuto+0x68>
400166f8:	e0000001 	and	r0, r0, r1
400166fc:	e58d000c 	str	r0, [sp, #12]
40016700:	e1a0100d 	mov	r1, sp
40016704:	e1a00006 	mov	r0, r6
40016708:	eb003089 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001670c:	e59d0008 	ldr	r0, [sp, #8]
40016710:	e1a06800 	lsl	r6, r0, #16
40016714:	e1a06826 	lsr	r6, r6, #16
40016718:	e1b00005 	movs	r0, r5
4001671c:	e2451001 	sub	r1, r5, #1
40016720:	e1a05801 	lsl	r5, r1, #16
40016724:	e1a05825 	lsr	r5, r5, #16
40016728:	1affffed 	bne	400166e4 <CyU3PDmaChannelReset_TypeAuto+0x1c>
4001672c:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016730:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016734 <CyU3PDmaChannelReset_TypeManual>:
40016734:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016738:	e1a04000 	mov	r4, r0
4001673c:	e1d450b8 	ldrh	r5, [r4, #8]
40016740:	e1a00004 	mov	r0, r4
40016744:	eb00035d 	bl	400174c0 <CyU3PDmaConfigureSockets_TypeManual>
40016748:	e1d400b4 	ldrh	r0, [r4, #4]
4001674c:	e3500004 	cmp	r0, #4
40016750:	0a000017 	beq	400167b4 <CyU3PDmaChannelReset_TypeManual+0x80>
40016754:	e1d460bc 	ldrh	r6, [r4, #12]
40016758:	ea00000c 	b	40016790 <CyU3PDmaChannelReset_TypeManual+0x5c>
4001675c:	e1a0100d 	mov	r1, sp
40016760:	e1a00006 	mov	r0, r6
40016764:	eb003057 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016768:	e59d000c 	ldr	r0, [sp, #12]
4001676c:	e59f10b4 	ldr	r1, [pc, #180]	; 40016828 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016770:	e0000001 	and	r0, r0, r1
40016774:	e58d000c 	str	r0, [sp, #12]
40016778:	e1a0100d 	mov	r1, sp
4001677c:	e1a00006 	mov	r0, r6
40016780:	eb00306b 	bl	40022934 <CyU3PDmaDscrSetConfig>
40016784:	e59d0008 	ldr	r0, [sp, #8]
40016788:	e1a06800 	lsl	r6, r0, #16
4001678c:	e1a06826 	lsr	r6, r6, #16
40016790:	e1b00005 	movs	r0, r5
40016794:	e2451001 	sub	r1, r5, #1
40016798:	e1a05801 	lsl	r5, r1, #16
4001679c:	e1a05825 	lsr	r5, r5, #16
400167a0:	1affffed 	bne	4001675c <CyU3PDmaChannelReset_TypeManual+0x28>
400167a4:	e1d400bc 	ldrh	r0, [r4, #12]
400167a8:	e1c401b6 	strh	r0, [r4, #22]
400167ac:	e1c401ba 	strh	r0, [r4, #26]
400167b0:	e1c401be 	strh	r0, [r4, #30]
400167b4:	e1d400b4 	ldrh	r0, [r4, #4]
400167b8:	e3500003 	cmp	r0, #3
400167bc:	0a000018 	beq	40016824 <CyU3PDmaChannelReset_TypeManual+0xf0>
400167c0:	e1d460be 	ldrh	r6, [r4, #14]
400167c4:	e1d450b8 	ldrh	r5, [r4, #8]
400167c8:	ea00000c 	b	40016800 <CyU3PDmaChannelReset_TypeManual+0xcc>
400167cc:	e1a0100d 	mov	r1, sp
400167d0:	e1a00006 	mov	r0, r6
400167d4:	eb00303b 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400167d8:	e59d000c 	ldr	r0, [sp, #12]
400167dc:	e59f1044 	ldr	r1, [pc, #68]	; 40016828 <CyU3PDmaChannelReset_TypeManual+0xf4>
400167e0:	e0000001 	and	r0, r0, r1
400167e4:	e58d000c 	str	r0, [sp, #12]
400167e8:	e1a0100d 	mov	r1, sp
400167ec:	e1a00006 	mov	r0, r6
400167f0:	eb00304f 	bl	40022934 <CyU3PDmaDscrSetConfig>
400167f4:	e59d0008 	ldr	r0, [sp, #8]
400167f8:	e1a06800 	lsl	r6, r0, #16
400167fc:	e1a06826 	lsr	r6, r6, #16
40016800:	e1b00005 	movs	r0, r5
40016804:	e2451001 	sub	r1, r5, #1
40016808:	e1a05801 	lsl	r5, r1, #16
4001680c:	e1a05825 	lsr	r5, r5, #16
40016810:	1affffed 	bne	400167cc <CyU3PDmaChannelReset_TypeManual+0x98>
40016814:	e1d400be 	ldrh	r0, [r4, #14]
40016818:	e1c401b8 	strh	r0, [r4, #24]
4001681c:	e1c401bc 	strh	r0, [r4, #28]
40016820:	e1c402b0 	strh	r0, [r4, #32]
40016824:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016828:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

4001682c <CyU3PDmaChannelSetXfer>:
4001682c:	e92d4070 	push	{r4, r5, r6, lr}
40016830:	e1a04000 	mov	r4, r0
40016834:	e1a05001 	mov	r5, r1
40016838:	e3e01000 	mvn	r1, #0
4001683c:	e1a00004 	mov	r0, r4
40016840:	ebfffb1e 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40016844:	e1a06000 	mov	r6, r0
40016848:	e3560000 	cmp	r6, #0
4001684c:	0a000001 	beq	40016858 <CyU3PDmaChannelSetXfer+0x2c>
40016850:	e1a00006 	mov	r0, r6
40016854:	e8bd8070 	pop	{r4, r5, r6, pc}
40016858:	e5940000 	ldr	r0, [r4]
4001685c:	e3500001 	cmp	r0, #1
40016860:	0a000000 	beq	40016868 <CyU3PDmaChannelSetXfer+0x3c>
40016864:	e3a06043 	mov	r6, #67	; 0x43
40016868:	e1d400b8 	ldrh	r0, [r4, #8]
4001686c:	e3500000 	cmp	r0, #0
40016870:	1a000000 	bne	40016878 <CyU3PDmaChannelSetXfer+0x4c>
40016874:	e3a06046 	mov	r6, #70	; 0x46
40016878:	e3560000 	cmp	r6, #0
4001687c:	1a00001d 	bne	400168f8 <CyU3PDmaChannelSetXfer+0xcc>
40016880:	e3a02002 	mov	r2, #2
40016884:	e3e01027 	mvn	r1, #39	; 0x27
40016888:	e2840074 	add	r0, r4, #116	; 0x74
4001688c:	ebffcdf4 	bl	4000a064 <_txe_event_flags_set>
40016890:	e5845034 	str	r5, [r4, #52]	; 0x34
40016894:	e1d400b4 	ldrh	r0, [r4, #4]
40016898:	e3500005 	cmp	r0, #5
4001689c:	308ff100 	addcc	pc, pc, r0, lsl #2
400168a0:	ea000011 	b	400168ec <CyU3PDmaChannelSetXfer+0xc0>
400168a4:	ea000003 	b	400168b8 <CyU3PDmaChannelSetXfer+0x8c>
400168a8:	ea000004 	b	400168c0 <CyU3PDmaChannelSetXfer+0x94>
400168ac:	ea00000a 	b	400168dc <CyU3PDmaChannelSetXfer+0xb0>
400168b0:	ea000006 	b	400168d0 <CyU3PDmaChannelSetXfer+0xa4>
400168b4:	ea000007 	b	400168d8 <CyU3PDmaChannelSetXfer+0xac>
400168b8:	e1a00000 	nop			; (mov r0, r0)
400168bc:	e1a00000 	nop			; (mov r0, r0)
400168c0:	e1a01005 	mov	r1, r5
400168c4:	e1a00004 	mov	r0, r4
400168c8:	eb00000e 	bl	40016908 <CyU3PDmaChannelSetXfer_TypeAuto>
400168cc:	ea000008 	b	400168f4 <CyU3PDmaChannelSetXfer+0xc8>
400168d0:	e1a00000 	nop			; (mov r0, r0)
400168d4:	e1a00000 	nop			; (mov r0, r0)
400168d8:	e1a00000 	nop			; (mov r0, r0)
400168dc:	e1a01005 	mov	r1, r5
400168e0:	e1a00004 	mov	r0, r4
400168e4:	eb00006f 	bl	40016aa8 <CyU3PDmaChannelSetXfer_TypeManual>
400168e8:	ea000001 	b	400168f4 <CyU3PDmaChannelSetXfer+0xc8>
400168ec:	e1a00000 	nop			; (mov r0, r0)
400168f0:	e1a00000 	nop			; (mov r0, r0)
400168f4:	e1a00000 	nop			; (mov r0, r0)
400168f8:	e284003c 	add	r0, r4, #60	; 0x3c
400168fc:	ebffcea5 	bl	4000a398 <_txe_mutex_put>
40016900:	e1a00006 	mov	r0, r6
40016904:	eaffffd2 	b	40016854 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

40016908 <CyU3PDmaChannelSetXfer_TypeAuto>:
40016908:	e92d4030 	push	{r4, r5, lr}
4001690c:	e24dd01c 	sub	sp, sp, #28
40016910:	e1a04000 	mov	r4, r0
40016914:	e1a05001 	mov	r5, r1
40016918:	e1d401b0 	ldrh	r0, [r4, #16]
4001691c:	ebfff973 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016920:	e1d401b2 	ldrh	r0, [r4, #18]
40016924:	ebfff971 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016928:	e3a00002 	mov	r0, #2
4001692c:	e5840000 	str	r0, [r4]
40016930:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016934:	e1d401b0 	ldrh	r0, [r4, #16]
40016938:	ebfffa87 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
4001693c:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016940:	e1d401b2 	ldrh	r0, [r4, #18]
40016944:	ebfffa84 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40016948:	e1d401b0 	ldrh	r0, [r4, #16]
4001694c:	e28d1004 	add	r1, sp, #4
40016950:	ebfff97e 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016954:	e58d5008 	str	r5, [sp, #8]
40016958:	e3a00000 	mov	r0, #0
4001695c:	e58d000c 	str	r0, [sp, #12]
40016960:	e3550000 	cmp	r5, #0
40016964:	1a000003 	bne	40016978 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
40016968:	e59d0010 	ldr	r0, [sp, #16]
4001696c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016970:	e58d0010 	str	r0, [sp, #16]
40016974:	ea000002 	b	40016984 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
40016978:	e59d0010 	ldr	r0, [sp, #16]
4001697c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016980:	e58d0010 	str	r0, [sp, #16]
40016984:	e59d0010 	ldr	r0, [sp, #16]
40016988:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
4001698c:	e58d0010 	str	r0, [sp, #16]
40016990:	e59d0010 	ldr	r0, [sp, #16]
40016994:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016998:	e58d0010 	str	r0, [sp, #16]
4001699c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400169a0:	e3500001 	cmp	r0, #1
400169a4:	1a000003 	bne	400169b8 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
400169a8:	e59d0010 	ldr	r0, [sp, #16]
400169ac:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400169b0:	e58d0010 	str	r0, [sp, #16]
400169b4:	ea000002 	b	400169c4 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
400169b8:	e59d0010 	ldr	r0, [sp, #16]
400169bc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400169c0:	e58d0010 	str	r0, [sp, #16]
400169c4:	e1d400ba 	ldrh	r0, [r4, #10]
400169c8:	e3500000 	cmp	r0, #0
400169cc:	0a000006 	beq	400169ec <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
400169d0:	e1d400b8 	ldrh	r0, [r4, #8]
400169d4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400169d8:	e1d410ba 	ldrh	r1, [r4, #10]
400169dc:	e1800281 	orr	r0, r0, r1, lsl #5
400169e0:	e59d1010 	ldr	r1, [sp, #16]
400169e4:	e1800001 	orr	r0, r0, r1
400169e8:	e58d0010 	str	r0, [sp, #16]
400169ec:	e3e00000 	mvn	r0, #0
400169f0:	e58d0014 	str	r0, [sp, #20]
400169f4:	e1d401b0 	ldrh	r0, [r4, #16]
400169f8:	e28d1004 	add	r1, sp, #4
400169fc:	ebfff9fd 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016a00:	e1d401b2 	ldrh	r0, [r4, #18]
40016a04:	e28d1004 	add	r1, sp, #4
40016a08:	ebfff950 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016a0c:	e58d5008 	str	r5, [sp, #8]
40016a10:	e3a00000 	mov	r0, #0
40016a14:	e58d000c 	str	r0, [sp, #12]
40016a18:	e3550000 	cmp	r5, #0
40016a1c:	1a000006 	bne	40016a3c <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016a20:	e59d0018 	ldr	r0, [sp, #24]
40016a24:	e3c00080 	bic	r0, r0, #128	; 0x80
40016a28:	e58d0018 	str	r0, [sp, #24]
40016a2c:	e59d0010 	ldr	r0, [sp, #16]
40016a30:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016a34:	e58d0010 	str	r0, [sp, #16]
40016a38:	ea000005 	b	40016a54 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016a3c:	e59d0018 	ldr	r0, [sp, #24]
40016a40:	e3800080 	orr	r0, r0, #128	; 0x80
40016a44:	e58d0018 	str	r0, [sp, #24]
40016a48:	e59d0010 	ldr	r0, [sp, #16]
40016a4c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016a50:	e58d0010 	str	r0, [sp, #16]
40016a54:	e59d0010 	ldr	r0, [sp, #16]
40016a58:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016a5c:	e58d0010 	str	r0, [sp, #16]
40016a60:	e59d0010 	ldr	r0, [sp, #16]
40016a64:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a68:	e58d0010 	str	r0, [sp, #16]
40016a6c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016a70:	e3500001 	cmp	r0, #1
40016a74:	1a000003 	bne	40016a88 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016a78:	e59d0010 	ldr	r0, [sp, #16]
40016a7c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a80:	e58d0010 	str	r0, [sp, #16]
40016a84:	ea000002 	b	40016a94 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016a88:	e59d0010 	ldr	r0, [sp, #16]
40016a8c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016a90:	e58d0010 	str	r0, [sp, #16]
40016a94:	e1d401b2 	ldrh	r0, [r4, #18]
40016a98:	e28d1004 	add	r1, sp, #4
40016a9c:	ebfff9d5 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016aa0:	e28dd01c 	add	sp, sp, #28
40016aa4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016aa8 <CyU3PDmaChannelSetXfer_TypeManual>:
40016aa8:	e92d4030 	push	{r4, r5, lr}
40016aac:	e24dd01c 	sub	sp, sp, #28
40016ab0:	e1a04000 	mov	r4, r0
40016ab4:	e1a05001 	mov	r5, r1
40016ab8:	e3a00002 	mov	r0, #2
40016abc:	e5840000 	str	r0, [r4]
40016ac0:	e1d400b4 	ldrh	r0, [r4, #4]
40016ac4:	e3500004 	cmp	r0, #4
40016ac8:	0a00003d 	beq	40016bc4 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016acc:	e1d401b0 	ldrh	r0, [r4, #16]
40016ad0:	ebfff906 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016ad4:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016ad8:	e1d401b0 	ldrh	r0, [r4, #16]
40016adc:	ebfffa1e 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40016ae0:	e1d401b0 	ldrh	r0, [r4, #16]
40016ae4:	e28d1004 	add	r1, sp, #4
40016ae8:	ebfff918 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016aec:	e58d5008 	str	r5, [sp, #8]
40016af0:	e3a00000 	mov	r0, #0
40016af4:	e58d000c 	str	r0, [sp, #12]
40016af8:	e59d0010 	ldr	r0, [sp, #16]
40016afc:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016b00:	e58d0010 	str	r0, [sp, #16]
40016b04:	e59d0010 	ldr	r0, [sp, #16]
40016b08:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016b0c:	e58d0010 	str	r0, [sp, #16]
40016b10:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016b14:	e3500001 	cmp	r0, #1
40016b18:	1a000003 	bne	40016b2c <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016b1c:	e59d0010 	ldr	r0, [sp, #16]
40016b20:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016b24:	e58d0010 	str	r0, [sp, #16]
40016b28:	ea000002 	b	40016b38 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016b2c:	e59d0010 	ldr	r0, [sp, #16]
40016b30:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016b34:	e58d0010 	str	r0, [sp, #16]
40016b38:	e1d400ba 	ldrh	r0, [r4, #10]
40016b3c:	e3500000 	cmp	r0, #0
40016b40:	0a000006 	beq	40016b60 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016b44:	e1d400b8 	ldrh	r0, [r4, #8]
40016b48:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016b4c:	e1d410ba 	ldrh	r1, [r4, #10]
40016b50:	e1800281 	orr	r0, r0, r1, lsl #5
40016b54:	e59d1010 	ldr	r1, [sp, #16]
40016b58:	e1800001 	orr	r0, r0, r1
40016b5c:	e58d0010 	str	r0, [sp, #16]
40016b60:	e3e00000 	mvn	r0, #0
40016b64:	e58d0014 	str	r0, [sp, #20]
40016b68:	e3550000 	cmp	r5, #0
40016b6c:	0a000002 	beq	40016b7c <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
40016b70:	e1d400b4 	ldrh	r0, [r4, #4]
40016b74:	e3500002 	cmp	r0, #2
40016b78:	1a000008 	bne	40016ba0 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016b7c:	e3a00000 	mov	r0, #0
40016b80:	e58d0008 	str	r0, [sp, #8]
40016b84:	e59d0010 	ldr	r0, [sp, #16]
40016b88:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016b8c:	e58d0010 	str	r0, [sp, #16]
40016b90:	e59d0018 	ldr	r0, [sp, #24]
40016b94:	e3c00080 	bic	r0, r0, #128	; 0x80
40016b98:	e58d0018 	str	r0, [sp, #24]
40016b9c:	ea000005 	b	40016bb8 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016ba0:	e59d0010 	ldr	r0, [sp, #16]
40016ba4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016ba8:	e58d0010 	str	r0, [sp, #16]
40016bac:	e59d0018 	ldr	r0, [sp, #24]
40016bb0:	e3800080 	orr	r0, r0, #128	; 0x80
40016bb4:	e58d0018 	str	r0, [sp, #24]
40016bb8:	e1d401b0 	ldrh	r0, [r4, #16]
40016bbc:	e28d1004 	add	r1, sp, #4
40016bc0:	ebfff98c 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016bc4:	e1d400b4 	ldrh	r0, [r4, #4]
40016bc8:	e3500003 	cmp	r0, #3
40016bcc:	0a00002e 	beq	40016c8c <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016bd0:	e1d401b2 	ldrh	r0, [r4, #18]
40016bd4:	ebfff8c5 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016bd8:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016bdc:	e1d401b2 	ldrh	r0, [r4, #18]
40016be0:	ebfff9dd 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40016be4:	e1d401b2 	ldrh	r0, [r4, #18]
40016be8:	e28d1004 	add	r1, sp, #4
40016bec:	ebfff8d7 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016bf0:	e58d5008 	str	r5, [sp, #8]
40016bf4:	e3a00000 	mov	r0, #0
40016bf8:	e58d000c 	str	r0, [sp, #12]
40016bfc:	e59d0010 	ldr	r0, [sp, #16]
40016c00:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016c04:	e58d0010 	str	r0, [sp, #16]
40016c08:	e59d0010 	ldr	r0, [sp, #16]
40016c0c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016c10:	e58d0010 	str	r0, [sp, #16]
40016c14:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016c18:	e3500001 	cmp	r0, #1
40016c1c:	1a000003 	bne	40016c30 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016c20:	e59d0010 	ldr	r0, [sp, #16]
40016c24:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016c28:	e58d0010 	str	r0, [sp, #16]
40016c2c:	ea000002 	b	40016c3c <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016c30:	e59d0010 	ldr	r0, [sp, #16]
40016c34:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016c38:	e58d0010 	str	r0, [sp, #16]
40016c3c:	e3e00000 	mvn	r0, #0
40016c40:	e58d0014 	str	r0, [sp, #20]
40016c44:	e3550000 	cmp	r5, #0
40016c48:	1a000006 	bne	40016c68 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016c4c:	e59d0010 	ldr	r0, [sp, #16]
40016c50:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016c54:	e58d0010 	str	r0, [sp, #16]
40016c58:	e59d0018 	ldr	r0, [sp, #24]
40016c5c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c60:	e58d0018 	str	r0, [sp, #24]
40016c64:	ea000005 	b	40016c80 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016c68:	e59d0010 	ldr	r0, [sp, #16]
40016c6c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c70:	e58d0010 	str	r0, [sp, #16]
40016c74:	e59d0018 	ldr	r0, [sp, #24]
40016c78:	e3800080 	orr	r0, r0, #128	; 0x80
40016c7c:	e58d0018 	str	r0, [sp, #24]
40016c80:	e1d401b2 	ldrh	r0, [r4, #18]
40016c84:	e28d1004 	add	r1, sp, #4
40016c88:	ebfff95a 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016c8c:	e28dd01c 	add	sp, sp, #28
40016c90:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016c94 <CyU3PDmaChannelSetupRecvBuffer>:
40016c94:	e92d4070 	push	{r4, r5, r6, lr}
40016c98:	e24dd028 	sub	sp, sp, #40	; 0x28
40016c9c:	e1a04000 	mov	r4, r0
40016ca0:	e1a05001 	mov	r5, r1
40016ca4:	e3550000 	cmp	r5, #0
40016ca8:	1a000002 	bne	40016cb8 <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016cac:	e3a00041 	mov	r0, #65	; 0x41
40016cb0:	e28dd028 	add	sp, sp, #40	; 0x28
40016cb4:	e8bd8070 	pop	{r4, r5, r6, pc}
40016cb8:	e5950000 	ldr	r0, [r5]
40016cbc:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016cc0:	3a000005 	bcc	40016cdc <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016cc4:	e5950000 	ldr	r0, [r5]
40016cc8:	e1d510b6 	ldrh	r1, [r5, #6]
40016ccc:	e0800001 	add	r0, r0, r1
40016cd0:	e59f11d4 	ldr	r1, [pc, #468]	; 40016eac <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016cd4:	e1500001 	cmp	r0, r1
40016cd8:	3a000001 	bcc	40016ce4 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016cdc:	e3a00040 	mov	r0, #64	; 0x40
40016ce0:	eafffff2 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016ce4:	e1d500b6 	ldrh	r0, [r5, #6]
40016ce8:	e59f11c0 	ldr	r1, [pc, #448]	; 40016eb0 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016cec:	e1500001 	cmp	r0, r1
40016cf0:	da000001 	ble	40016cfc <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016cf4:	e3a00040 	mov	r0, #64	; 0x40
40016cf8:	eaffffec 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cfc:	e1d500b6 	ldrh	r0, [r5, #6]
40016d00:	e3500000 	cmp	r0, #0
40016d04:	0a000002 	beq	40016d14 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016d08:	e1d500b6 	ldrh	r0, [r5, #6]
40016d0c:	e310000f 	tst	r0, #15
40016d10:	0a000001 	beq	40016d1c <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016d14:	e3a00040 	mov	r0, #64	; 0x40
40016d18:	eaffffe4 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d1c:	e3e01000 	mvn	r1, #0
40016d20:	e1a00004 	mov	r0, r4
40016d24:	ebfff9e5 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40016d28:	e1a06000 	mov	r6, r0
40016d2c:	e3560000 	cmp	r6, #0
40016d30:	0a000001 	beq	40016d3c <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016d34:	e1a00006 	mov	r0, r6
40016d38:	eaffffdc 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d3c:	e1d400b4 	ldrh	r0, [r4, #4]
40016d40:	e3500004 	cmp	r0, #4
40016d44:	1a000000 	bne	40016d4c <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016d48:	e3a06046 	mov	r6, #70	; 0x46
40016d4c:	e5940000 	ldr	r0, [r4]
40016d50:	e3500001 	cmp	r0, #1
40016d54:	0a000000 	beq	40016d5c <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016d58:	e3a06043 	mov	r6, #67	; 0x43
40016d5c:	e3560000 	cmp	r6, #0
40016d60:	0a000003 	beq	40016d74 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016d64:	e284003c 	add	r0, r4, #60	; 0x3c
40016d68:	ebffcd8a 	bl	4000a398 <_txe_mutex_put>
40016d6c:	e1a00006 	mov	r0, r6
40016d70:	eaffffce 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d74:	e1d401b0 	ldrh	r0, [r4, #16]
40016d78:	ebfff85c 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016d7c:	e1d401b0 	ldrh	r0, [r4, #16]
40016d80:	e3a01000 	mov	r1, #0
40016d84:	ebfff974 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40016d88:	e3a02002 	mov	r2, #2
40016d8c:	e3e01027 	mvn	r1, #39	; 0x27
40016d90:	e2840074 	add	r0, r4, #116	; 0x74
40016d94:	ebffccb2 	bl	4000a064 <_txe_event_flags_set>
40016d98:	e3a00004 	mov	r0, #4
40016d9c:	e5840000 	str	r0, [r4]
40016da0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016da4:	e3500000 	cmp	r0, #0
40016da8:	0a000002 	beq	40016db8 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016dac:	e1d510b6 	ldrh	r1, [r5, #6]
40016db0:	e5950000 	ldr	r0, [r5]
40016db4:	ebffed96 	bl	40012414 <CyU3PSysFlushDRegion>
40016db8:	e1d401b0 	ldrh	r0, [r4, #16]
40016dbc:	e1a0100d 	mov	r1, sp
40016dc0:	ebfff862 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016dc4:	e59d0000 	ldr	r0, [sp]
40016dc8:	e1c401b6 	strh	r0, [r4, #22]
40016dcc:	e1d401b4 	ldrh	r0, [r4, #20]
40016dd0:	e28d1018 	add	r1, sp, #24
40016dd4:	eb002ebb 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016dd8:	e5950000 	ldr	r0, [r5]
40016ddc:	e58d0018 	str	r0, [sp, #24]
40016de0:	e1d401b0 	ldrh	r0, [r4, #16]
40016de4:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016de8:	e1810800 	orr	r0, r1, r0, lsl #16
40016dec:	e58d001c 	str	r0, [sp, #28]
40016df0:	e59d001c 	ldr	r0, [sp, #28]
40016df4:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016df8:	e58d001c 	str	r0, [sp, #28]
40016dfc:	e1d401b6 	ldrh	r0, [r4, #22]
40016e00:	e1e01741 	mvn	r1, r1, asr #14
40016e04:	e1810800 	orr	r0, r1, r0, lsl #16
40016e08:	e58d0020 	str	r0, [sp, #32]
40016e0c:	e1d500b6 	ldrh	r0, [r5, #6]
40016e10:	e241100f 	sub	r1, r1, #15
40016e14:	e0000001 	and	r0, r0, r1
40016e18:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016e1c:	e1d401b4 	ldrh	r0, [r4, #20]
40016e20:	e28d1018 	add	r1, sp, #24
40016e24:	eb002ec2 	bl	40022934 <CyU3PDmaDscrSetConfig>
40016e28:	e59d000c 	ldr	r0, [sp, #12]
40016e2c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016e30:	e58d000c 	str	r0, [sp, #12]
40016e34:	e59d000c 	ldr	r0, [sp, #12]
40016e38:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016e3c:	e58d000c 	str	r0, [sp, #12]
40016e40:	e59d000c 	ldr	r0, [sp, #12]
40016e44:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016e48:	e58d000c 	str	r0, [sp, #12]
40016e4c:	e59d000c 	ldr	r0, [sp, #12]
40016e50:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016e54:	e58d000c 	str	r0, [sp, #12]
40016e58:	e3a00001 	mov	r0, #1
40016e5c:	e58d0004 	str	r0, [sp, #4]
40016e60:	e3a00000 	mov	r0, #0
40016e64:	e58d0008 	str	r0, [sp, #8]
40016e68:	e3e00000 	mvn	r0, #0
40016e6c:	e58d0010 	str	r0, [sp, #16]
40016e70:	e59d0014 	ldr	r0, [sp, #20]
40016e74:	e3800001 	orr	r0, r0, #1
40016e78:	e58d0014 	str	r0, [sp, #20]
40016e7c:	e59d0014 	ldr	r0, [sp, #20]
40016e80:	e3c00080 	bic	r0, r0, #128	; 0x80
40016e84:	e58d0014 	str	r0, [sp, #20]
40016e88:	e1d401b4 	ldrh	r0, [r4, #20]
40016e8c:	e58d0000 	str	r0, [sp]
40016e90:	e1d401b0 	ldrh	r0, [r4, #16]
40016e94:	e1a0100d 	mov	r1, sp
40016e98:	ebfff8d6 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40016e9c:	e284003c 	add	r0, r4, #60	; 0x3c
40016ea0:	ebffcd3c 	bl	4000a398 <_txe_mutex_put>
40016ea4:	e3a00000 	mov	r0, #0
40016ea8:	eaffff80 	b	40016cb0 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016eac:	40080000 	.word	0x40080000
40016eb0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016eb4 <CyU3PDmaChannelSetupSendBuffer>:
40016eb4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016eb8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016ebc:	e1a04000 	mov	r4, r0
40016ec0:	e1a05001 	mov	r5, r1
40016ec4:	e3550000 	cmp	r5, #0
40016ec8:	1a000002 	bne	40016ed8 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016ecc:	e3a00041 	mov	r0, #65	; 0x41
40016ed0:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016ed4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016ed8:	e5950000 	ldr	r0, [r5]
40016edc:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016ee0:	3a000005 	bcc	40016efc <CyU3PDmaChannelSetupSendBuffer+0x48>
40016ee4:	e5950000 	ldr	r0, [r5]
40016ee8:	e1d510b4 	ldrh	r1, [r5, #4]
40016eec:	e0800001 	add	r0, r0, r1
40016ef0:	e59f11ec 	ldr	r1, [pc, #492]	; 400170e4 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016ef4:	e1500001 	cmp	r0, r1
40016ef8:	3a000001 	bcc	40016f04 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016efc:	e3a00040 	mov	r0, #64	; 0x40
40016f00:	eafffff2 	b	40016ed0 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f04:	e1d500b4 	ldrh	r0, [r5, #4]
40016f08:	e59f11d8 	ldr	r1, [pc, #472]	; 400170e8 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016f0c:	e1500001 	cmp	r0, r1
40016f10:	da000001 	ble	40016f1c <CyU3PDmaChannelSetupSendBuffer+0x68>
40016f14:	e3a00040 	mov	r0, #64	; 0x40
40016f18:	eaffffec 	b	40016ed0 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f1c:	e3e01000 	mvn	r1, #0
40016f20:	e1a00004 	mov	r0, r4
40016f24:	ebfff965 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40016f28:	e1a07000 	mov	r7, r0
40016f2c:	e3570000 	cmp	r7, #0
40016f30:	0a000001 	beq	40016f3c <CyU3PDmaChannelSetupSendBuffer+0x88>
40016f34:	e1a00007 	mov	r0, r7
40016f38:	eaffffe4 	b	40016ed0 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f3c:	e1d400b4 	ldrh	r0, [r4, #4]
40016f40:	e3500003 	cmp	r0, #3
40016f44:	1a000000 	bne	40016f4c <CyU3PDmaChannelSetupSendBuffer+0x98>
40016f48:	e3a07046 	mov	r7, #70	; 0x46
40016f4c:	e5940000 	ldr	r0, [r4]
40016f50:	e3500001 	cmp	r0, #1
40016f54:	0a000000 	beq	40016f5c <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016f58:	e3a07043 	mov	r7, #67	; 0x43
40016f5c:	e3570000 	cmp	r7, #0
40016f60:	0a000003 	beq	40016f74 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016f64:	e284003c 	add	r0, r4, #60	; 0x3c
40016f68:	ebffcd0a 	bl	4000a398 <_txe_mutex_put>
40016f6c:	e1a00007 	mov	r0, r7
40016f70:	eaffffd6 	b	40016ed0 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f74:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016f78:	e3500000 	cmp	r0, #0
40016f7c:	0a000005 	beq	40016f98 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f80:	e1d500b4 	ldrh	r0, [r5, #4]
40016f84:	e3500000 	cmp	r0, #0
40016f88:	0a000002 	beq	40016f98 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f8c:	e1d510b4 	ldrh	r1, [r5, #4]
40016f90:	e5950000 	ldr	r0, [r5]
40016f94:	ebffed10 	bl	400123dc <CyU3PSysCleanDRegion>
40016f98:	e1d401b2 	ldrh	r0, [r4, #18]
40016f9c:	ebfff7d3 	bl	40014ef0 <CyU3PDmaSocketDisable>
40016fa0:	e1d401b2 	ldrh	r0, [r4, #18]
40016fa4:	e3a01000 	mov	r1, #0
40016fa8:	ebfff8eb 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40016fac:	e3a02002 	mov	r2, #2
40016fb0:	e3e01027 	mvn	r1, #39	; 0x27
40016fb4:	e2840074 	add	r0, r4, #116	; 0x74
40016fb8:	ebffcc29 	bl	4000a064 <_txe_event_flags_set>
40016fbc:	e3a00003 	mov	r0, #3
40016fc0:	e5840000 	str	r0, [r4]
40016fc4:	e1d401b2 	ldrh	r0, [r4, #18]
40016fc8:	e28d1004 	add	r1, sp, #4
40016fcc:	ebfff7df 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40016fd0:	e59d0004 	ldr	r0, [sp, #4]
40016fd4:	e1c401b8 	strh	r0, [r4, #24]
40016fd8:	e1d401b4 	ldrh	r0, [r4, #20]
40016fdc:	e28d101c 	add	r1, sp, #28
40016fe0:	eb002e38 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40016fe4:	e5950000 	ldr	r0, [r5]
40016fe8:	e58d001c 	str	r0, [sp, #28]
40016fec:	e1d401b2 	ldrh	r0, [r4, #18]
40016ff0:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016ff4:	e58d0020 	str	r0, [sp, #32]
40016ff8:	e59d0020 	ldr	r0, [sp, #32]
40016ffc:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40017000:	e3800801 	orr	r0, r0, #65536	; 0x10000
40017004:	e58d0020 	str	r0, [sp, #32]
40017008:	e1d401b8 	ldrh	r0, [r4, #24]
4001700c:	e2400801 	sub	r0, r0, #65536	; 0x10000
40017010:	e58d0024 	str	r0, [sp, #36]	; 0x24
40017014:	e1d500b4 	ldrh	r0, [r5, #4]
40017018:	e280000f 	add	r0, r0, #15
4001701c:	e59f10c4 	ldr	r1, [pc, #196]	; 400170e8 <CyU3PDmaChannelSetupSendBuffer+0x234>
40017020:	e0006001 	and	r6, r0, r1
40017024:	e1d500b4 	ldrh	r0, [r5, #4]
40017028:	e1860800 	orr	r0, r6, r0, lsl #16
4001702c:	e3800008 	orr	r0, r0, #8
40017030:	e58d0028 	str	r0, [sp, #40]	; 0x28
40017034:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40017038:	e1d510b8 	ldrh	r1, [r5, #8]
4001703c:	e201100e 	and	r1, r1, #14
40017040:	e1800001 	orr	r0, r0, r1
40017044:	e58d0028 	str	r0, [sp, #40]	; 0x28
40017048:	e1d401b4 	ldrh	r0, [r4, #20]
4001704c:	e28d101c 	add	r1, sp, #28
40017050:	eb002e37 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017054:	e59d0010 	ldr	r0, [sp, #16]
40017058:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001705c:	e58d0010 	str	r0, [sp, #16]
40017060:	e59d0010 	ldr	r0, [sp, #16]
40017064:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017068:	e58d0010 	str	r0, [sp, #16]
4001706c:	e59d0010 	ldr	r0, [sp, #16]
40017070:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40017074:	e58d0010 	str	r0, [sp, #16]
40017078:	e59d0010 	ldr	r0, [sp, #16]
4001707c:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40017080:	e58d0010 	str	r0, [sp, #16]
40017084:	e59d0010 	ldr	r0, [sp, #16]
40017088:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001708c:	e58d0010 	str	r0, [sp, #16]
40017090:	e1d500b4 	ldrh	r0, [r5, #4]
40017094:	e58d0008 	str	r0, [sp, #8]
40017098:	e3a00000 	mov	r0, #0
4001709c:	e58d000c 	str	r0, [sp, #12]
400170a0:	e3e00000 	mvn	r0, #0
400170a4:	e58d0014 	str	r0, [sp, #20]
400170a8:	e59d0018 	ldr	r0, [sp, #24]
400170ac:	e3800002 	orr	r0, r0, #2
400170b0:	e58d0018 	str	r0, [sp, #24]
400170b4:	e59d0018 	ldr	r0, [sp, #24]
400170b8:	e3c00080 	bic	r0, r0, #128	; 0x80
400170bc:	e58d0018 	str	r0, [sp, #24]
400170c0:	e1d401b4 	ldrh	r0, [r4, #20]
400170c4:	e58d0004 	str	r0, [sp, #4]
400170c8:	e1d401b2 	ldrh	r0, [r4, #18]
400170cc:	e28d1004 	add	r1, sp, #4
400170d0:	ebfff848 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400170d4:	e284003c 	add	r0, r4, #60	; 0x3c
400170d8:	ebffccae 	bl	4000a398 <_txe_mutex_put>
400170dc:	e3a00000 	mov	r0, #0
400170e0:	eaffff7a 	b	40016ed0 <CyU3PDmaChannelSetupSendBuffer+0x1c>
400170e4:	40080000 	.word	0x40080000
400170e8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

400170ec <CyU3PDmaChannelWaitForCompletion>:
400170ec:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
400170f0:	e1a04000 	mov	r4, r0
400170f4:	e1a05001 	mov	r5, r1
400170f8:	e3a08000 	mov	r8, #0
400170fc:	e1a01005 	mov	r1, r5
40017100:	e1a00004 	mov	r0, r4
40017104:	ebfff8ed 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40017108:	e1a07000 	mov	r7, r0
4001710c:	e3570000 	cmp	r7, #0
40017110:	0a000001 	beq	4001711c <CyU3PDmaChannelWaitForCompletion+0x30>
40017114:	e1a00007 	mov	r0, r7
40017118:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4001711c:	e5946000 	ldr	r6, [r4]
40017120:	e3560001 	cmp	r6, #1
40017124:	1a00000b 	bne	40017158 <CyU3PDmaChannelWaitForCompletion+0x6c>
40017128:	e3a03000 	mov	r3, #0
4001712c:	e58d3000 	str	r3, [sp]
40017130:	e28d3004 	add	r3, sp, #4
40017134:	e3a02000 	mov	r2, #0
40017138:	e3a01007 	mov	r1, #7
4001713c:	e2840074 	add	r0, r4, #116	; 0x74
40017140:	ebffcb97 	bl	40009fa4 <_txe_event_flags_get>
40017144:	e1a07000 	mov	r7, r0
40017148:	e3570000 	cmp	r7, #0
4001714c:	0a000016 	beq	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
40017150:	e3a07042 	mov	r7, #66	; 0x42
40017154:	ea000014 	b	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
40017158:	e3560002 	cmp	r6, #2
4001715c:	1a000005 	bne	40017178 <CyU3PDmaChannelWaitForCompletion+0x8c>
40017160:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40017164:	e3500000 	cmp	r0, #0
40017168:	1a000000 	bne	40017170 <CyU3PDmaChannelWaitForCompletion+0x84>
4001716c:	e3a07046 	mov	r7, #70	; 0x46
40017170:	e3a08061 	mov	r8, #97	; 0x61
40017174:	ea00000c 	b	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
40017178:	e3560003 	cmp	r6, #3
4001717c:	1a000001 	bne	40017188 <CyU3PDmaChannelWaitForCompletion+0x9c>
40017180:	e3a08062 	mov	r8, #98	; 0x62
40017184:	ea000008 	b	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
40017188:	e3560004 	cmp	r6, #4
4001718c:	1a000001 	bne	40017198 <CyU3PDmaChannelWaitForCompletion+0xac>
40017190:	e3a08064 	mov	r8, #100	; 0x64
40017194:	ea000004 	b	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
40017198:	e3560005 	cmp	r6, #5
4001719c:	1a000001 	bne	400171a8 <CyU3PDmaChannelWaitForCompletion+0xbc>
400171a0:	e3a07049 	mov	r7, #73	; 0x49
400171a4:	ea000000 	b	400171ac <CyU3PDmaChannelWaitForCompletion+0xc0>
400171a8:	e3a07042 	mov	r7, #66	; 0x42
400171ac:	e284003c 	add	r0, r4, #60	; 0x3c
400171b0:	ebffcc78 	bl	4000a398 <_txe_mutex_put>
400171b4:	e3570000 	cmp	r7, #0
400171b8:	1a000015 	bne	40017214 <CyU3PDmaChannelWaitForCompletion+0x128>
400171bc:	e3580000 	cmp	r8, #0
400171c0:	0a000013 	beq	40017214 <CyU3PDmaChannelWaitForCompletion+0x128>
400171c4:	e58d5000 	str	r5, [sp]
400171c8:	e28d3004 	add	r3, sp, #4
400171cc:	e3a02000 	mov	r2, #0
400171d0:	e1a01008 	mov	r1, r8
400171d4:	e2840074 	add	r0, r4, #116	; 0x74
400171d8:	ebffcb71 	bl	40009fa4 <_txe_event_flags_get>
400171dc:	e1a07000 	mov	r7, r0
400171e0:	e3570000 	cmp	r7, #0
400171e4:	0a000001 	beq	400171f0 <CyU3PDmaChannelWaitForCompletion+0x104>
400171e8:	e3a07045 	mov	r7, #69	; 0x45
400171ec:	ea000008 	b	40017214 <CyU3PDmaChannelWaitForCompletion+0x128>
400171f0:	e59d0004 	ldr	r0, [sp, #4]
400171f4:	e3100040 	tst	r0, #64	; 0x40
400171f8:	0a000001 	beq	40017204 <CyU3PDmaChannelWaitForCompletion+0x118>
400171fc:	e3a07049 	mov	r7, #73	; 0x49
40017200:	ea000003 	b	40017214 <CyU3PDmaChannelWaitForCompletion+0x128>
40017204:	e59d0004 	ldr	r0, [sp, #4]
40017208:	e3100020 	tst	r0, #32
4001720c:	0a000000 	beq	40017214 <CyU3PDmaChannelWaitForCompletion+0x128>
40017210:	e3a07048 	mov	r7, #72	; 0x48
40017214:	e1a00007 	mov	r0, r7
40017218:	eaffffbe 	b	40017118 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

4001721c <CyU3PDmaChannelWaitForRecvBuffer>:
4001721c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40017220:	e24dd018 	sub	sp, sp, #24
40017224:	e1a04000 	mov	r4, r0
40017228:	e1a05001 	mov	r5, r1
4001722c:	e1a06002 	mov	r6, r2
40017230:	e3550000 	cmp	r5, #0
40017234:	1a000002 	bne	40017244 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40017238:	e3a00041 	mov	r0, #65	; 0x41
4001723c:	e28dd018 	add	sp, sp, #24
40017240:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017244:	e1a01006 	mov	r1, r6
40017248:	e1a00004 	mov	r0, r4
4001724c:	ebfff89b 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
40017250:	e1a07000 	mov	r7, r0
40017254:	e3570000 	cmp	r7, #0
40017258:	0a000001 	beq	40017264 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
4001725c:	e1a00007 	mov	r0, r7
40017260:	eafffff5 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017264:	e1d400b4 	ldrh	r0, [r4, #4]
40017268:	e3500004 	cmp	r0, #4
4001726c:	1a000000 	bne	40017274 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40017270:	e3a07046 	mov	r7, #70	; 0x46
40017274:	e5948000 	ldr	r8, [r4]
40017278:	e3570000 	cmp	r7, #0
4001727c:	1a000034 	bne	40017354 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017280:	e3580004 	cmp	r8, #4
40017284:	1a00001e 	bne	40017304 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40017288:	e284003c 	add	r0, r4, #60	; 0x3c
4001728c:	ebffcc41 	bl	4000a398 <_txe_mutex_put>
40017290:	e58d6000 	str	r6, [sp]
40017294:	e28d3014 	add	r3, sp, #20
40017298:	e3a02000 	mov	r2, #0
4001729c:	e3a01064 	mov	r1, #100	; 0x64
400172a0:	e2840074 	add	r0, r4, #116	; 0x74
400172a4:	ebffcb3e 	bl	40009fa4 <_txe_event_flags_get>
400172a8:	e1a07000 	mov	r7, r0
400172ac:	e3570000 	cmp	r7, #0
400172b0:	0a000001 	beq	400172bc <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
400172b4:	e3a00045 	mov	r0, #69	; 0x45
400172b8:	eaffffdf 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172bc:	e59d0014 	ldr	r0, [sp, #20]
400172c0:	e3100040 	tst	r0, #64	; 0x40
400172c4:	0a000001 	beq	400172d0 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
400172c8:	e3a00049 	mov	r0, #73	; 0x49
400172cc:	eaffffda 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172d0:	e59d0014 	ldr	r0, [sp, #20]
400172d4:	e3100020 	tst	r0, #32
400172d8:	0a000001 	beq	400172e4 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
400172dc:	e3a00048 	mov	r0, #72	; 0x48
400172e0:	eaffffd5 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172e4:	e1a01006 	mov	r1, r6
400172e8:	e1a00004 	mov	r0, r4
400172ec:	ebfff873 	bl	400154c0 <CyU3PDmaChannelAcquireLock>
400172f0:	e1a07000 	mov	r7, r0
400172f4:	e3570000 	cmp	r7, #0
400172f8:	0a000015 	beq	40017354 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400172fc:	e1a00007 	mov	r0, r7
40017300:	eaffffcd 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017304:	e3580001 	cmp	r8, #1
40017308:	1a000010 	bne	40017350 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
4001730c:	e3a03000 	mov	r3, #0
40017310:	e58d3000 	str	r3, [sp]
40017314:	e28d3014 	add	r3, sp, #20
40017318:	e3a02000 	mov	r2, #0
4001731c:	e3a01024 	mov	r1, #36	; 0x24
40017320:	e2840074 	add	r0, r4, #116	; 0x74
40017324:	ebffcb1e 	bl	40009fa4 <_txe_event_flags_get>
40017328:	e1a07000 	mov	r7, r0
4001732c:	e3570000 	cmp	r7, #0
40017330:	0a000001 	beq	4001733c <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40017334:	e3a07047 	mov	r7, #71	; 0x47
40017338:	ea000005 	b	40017354 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
4001733c:	e59d0014 	ldr	r0, [sp, #20]
40017340:	e3100020 	tst	r0, #32
40017344:	0a000002 	beq	40017354 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017348:	e3a07042 	mov	r7, #66	; 0x42
4001734c:	ea000000 	b	40017354 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017350:	e3a07047 	mov	r7, #71	; 0x47
40017354:	e3570000 	cmp	r7, #0
40017358:	0a000003 	beq	4001736c <CyU3PDmaChannelWaitForRecvBuffer+0x150>
4001735c:	e284003c 	add	r0, r4, #60	; 0x3c
40017360:	ebffcc0c 	bl	4000a398 <_txe_mutex_put>
40017364:	e1a00007 	mov	r0, r7
40017368:	eaffffb3 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
4001736c:	e1d401b4 	ldrh	r0, [r4, #20]
40017370:	e28d1004 	add	r1, sp, #4
40017374:	eb002d53 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017378:	e59d0004 	ldr	r0, [sp, #4]
4001737c:	e5850000 	str	r0, [r5]
40017380:	e59d0010 	ldr	r0, [sp, #16]
40017384:	e59f1030 	ldr	r1, [pc, #48]	; 400173bc <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40017388:	e0010820 	and	r0, r1, r0, lsr #16
4001738c:	e1c500b4 	strh	r0, [r5, #4]
40017390:	e241100f 	sub	r1, r1, #15
40017394:	e59d0010 	ldr	r0, [sp, #16]
40017398:	e0000001 	and	r0, r0, r1
4001739c:	e1c500b6 	strh	r0, [r5, #6]
400173a0:	e59d0010 	ldr	r0, [sp, #16]
400173a4:	e200000f 	and	r0, r0, #15
400173a8:	e1c500b8 	strh	r0, [r5, #8]
400173ac:	e284003c 	add	r0, r4, #60	; 0x3c
400173b0:	ebffcbf8 	bl	4000a398 <_txe_mutex_put>
400173b4:	e3a00000 	mov	r0, #0
400173b8:	eaffff9f 	b	4001723c <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400173bc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

400173c0 <CyU3PDmaConfigureSockets_TypeAuto>:
400173c0:	e92d4010 	push	{r4, lr}
400173c4:	e24dd018 	sub	sp, sp, #24
400173c8:	e1a04000 	mov	r4, r0
400173cc:	e1d401b0 	ldrh	r0, [r4, #16]
400173d0:	ebfff6c6 	bl	40014ef0 <CyU3PDmaSocketDisable>
400173d4:	e1d401b2 	ldrh	r0, [r4, #18]
400173d8:	ebfff6c4 	bl	40014ef0 <CyU3PDmaSocketDisable>
400173dc:	e1d401b0 	ldrh	r0, [r4, #16]
400173e0:	e1a0100d 	mov	r1, sp
400173e4:	ebfff6d9 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400173e8:	e1d400bc 	ldrh	r0, [r4, #12]
400173ec:	e58d0000 	str	r0, [sp]
400173f0:	e3a00000 	mov	r0, #0
400173f4:	e58d0004 	str	r0, [sp, #4]
400173f8:	e58d0008 	str	r0, [sp, #8]
400173fc:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017400:	e58d000c 	str	r0, [sp, #12]
40017404:	e1d401b0 	ldrh	r0, [r4, #16]
40017408:	eb000df6 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
4001740c:	e3500000 	cmp	r0, #0
40017410:	0a000002 	beq	40017420 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40017414:	e59d000c 	ldr	r0, [sp, #12]
40017418:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001741c:	e58d000c 	str	r0, [sp, #12]
40017420:	e3e00000 	mvn	r0, #0
40017424:	e58d0010 	str	r0, [sp, #16]
40017428:	e1d400b4 	ldrh	r0, [r4, #4]
4001742c:	e3500001 	cmp	r0, #1
40017430:	1a000001 	bne	4001743c <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40017434:	e3a00041 	mov	r0, #65	; 0x41
40017438:	ea000000 	b	40017440 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
4001743c:	e3a00040 	mov	r0, #64	; 0x40
40017440:	e58d0014 	str	r0, [sp, #20]
40017444:	e1d401b0 	ldrh	r0, [r4, #16]
40017448:	e1a0100d 	mov	r1, sp
4001744c:	ebfff769 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40017450:	e1d401b2 	ldrh	r0, [r4, #18]
40017454:	e1a0100d 	mov	r1, sp
40017458:	ebfff6bc 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001745c:	e1d400bc 	ldrh	r0, [r4, #12]
40017460:	e58d0000 	str	r0, [sp]
40017464:	e3a00000 	mov	r0, #0
40017468:	e58d0004 	str	r0, [sp, #4]
4001746c:	e58d0008 	str	r0, [sp, #8]
40017470:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017474:	e58d000c 	str	r0, [sp, #12]
40017478:	e1d401b2 	ldrh	r0, [r4, #18]
4001747c:	eb000dd9 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
40017480:	e3500000 	cmp	r0, #0
40017484:	0a000002 	beq	40017494 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017488:	e59d000c 	ldr	r0, [sp, #12]
4001748c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017490:	e58d000c 	str	r0, [sp, #12]
40017494:	e3e00000 	mvn	r0, #0
40017498:	e58d0010 	str	r0, [sp, #16]
4001749c:	e3a000c0 	mov	r0, #192	; 0xc0
400174a0:	e58d0014 	str	r0, [sp, #20]
400174a4:	e1d401b2 	ldrh	r0, [r4, #18]
400174a8:	e1a0100d 	mov	r1, sp
400174ac:	ebfff751 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400174b0:	e3a00000 	mov	r0, #0
400174b4:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400174b8:	e28dd018 	add	sp, sp, #24
400174bc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

400174c0 <CyU3PDmaConfigureSockets_TypeManual>:
400174c0:	e92d4010 	push	{r4, lr}
400174c4:	e24dd018 	sub	sp, sp, #24
400174c8:	e1a04000 	mov	r4, r0
400174cc:	e1d400b4 	ldrh	r0, [r4, #4]
400174d0:	e3500004 	cmp	r0, #4
400174d4:	0a00001f 	beq	40017558 <CyU3PDmaConfigureSockets_TypeManual+0x98>
400174d8:	e1d401b0 	ldrh	r0, [r4, #16]
400174dc:	ebfff683 	bl	40014ef0 <CyU3PDmaSocketDisable>
400174e0:	e1d401b0 	ldrh	r0, [r4, #16]
400174e4:	e1a0100d 	mov	r1, sp
400174e8:	ebfff698 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400174ec:	e1d400bc 	ldrh	r0, [r4, #12]
400174f0:	e58d0000 	str	r0, [sp]
400174f4:	e3a00000 	mov	r0, #0
400174f8:	e58d0004 	str	r0, [sp, #4]
400174fc:	e58d0008 	str	r0, [sp, #8]
40017500:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017504:	e58d000c 	str	r0, [sp, #12]
40017508:	e1d401b0 	ldrh	r0, [r4, #16]
4001750c:	eb000db5 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
40017510:	e3500000 	cmp	r0, #0
40017514:	0a000002 	beq	40017524 <CyU3PDmaConfigureSockets_TypeManual+0x64>
40017518:	e59d000c 	ldr	r0, [sp, #12]
4001751c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017520:	e58d000c 	str	r0, [sp, #12]
40017524:	e3e00000 	mvn	r0, #0
40017528:	e58d0010 	str	r0, [sp, #16]
4001752c:	e3a00041 	mov	r0, #65	; 0x41
40017530:	e58d0014 	str	r0, [sp, #20]
40017534:	e1d400b4 	ldrh	r0, [r4, #4]
40017538:	e3500003 	cmp	r0, #3
4001753c:	1a000002 	bne	4001754c <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017540:	e59d0014 	ldr	r0, [sp, #20]
40017544:	e3800080 	orr	r0, r0, #128	; 0x80
40017548:	e58d0014 	str	r0, [sp, #20]
4001754c:	e1d401b0 	ldrh	r0, [r4, #16]
40017550:	e1a0100d 	mov	r1, sp
40017554:	ebfff727 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40017558:	e1d400b4 	ldrh	r0, [r4, #4]
4001755c:	e3500003 	cmp	r0, #3
40017560:	0a000019 	beq	400175cc <CyU3PDmaConfigureSockets_TypeManual+0x10c>
40017564:	e1d401b2 	ldrh	r0, [r4, #18]
40017568:	ebfff660 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001756c:	e1d401b2 	ldrh	r0, [r4, #18]
40017570:	e1a0100d 	mov	r1, sp
40017574:	ebfff675 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40017578:	e1d400be 	ldrh	r0, [r4, #14]
4001757c:	e58d0000 	str	r0, [sp]
40017580:	e3a00000 	mov	r0, #0
40017584:	e58d0004 	str	r0, [sp, #4]
40017588:	e58d0008 	str	r0, [sp, #8]
4001758c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017590:	e58d000c 	str	r0, [sp, #12]
40017594:	e1d401b2 	ldrh	r0, [r4, #18]
40017598:	eb000d92 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
4001759c:	e3500000 	cmp	r0, #0
400175a0:	0a000002 	beq	400175b0 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
400175a4:	e59d000c 	ldr	r0, [sp, #12]
400175a8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400175ac:	e58d000c 	str	r0, [sp, #12]
400175b0:	e3e00000 	mvn	r0, #0
400175b4:	e58d0010 	str	r0, [sp, #16]
400175b8:	e3a000c2 	mov	r0, #194	; 0xc2
400175bc:	e58d0014 	str	r0, [sp, #20]
400175c0:	e1d401b2 	ldrh	r0, [r4, #18]
400175c4:	e1a0100d 	mov	r1, sp
400175c8:	ebfff70a 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400175cc:	e3a00000 	mov	r0, #0
400175d0:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400175d4:	e28dd018 	add	sp, sp, #24
400175d8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

400175dc <CyU3PDmaMultiChannelAcquireLock>:
400175dc:	e92d4070 	push	{r4, r5, r6, lr}
400175e0:	e1a04000 	mov	r4, r0
400175e4:	e1a05001 	mov	r5, r1
400175e8:	e3540000 	cmp	r4, #0
400175ec:	1a000001 	bne	400175f8 <CyU3PDmaMultiChannelAcquireLock+0x1c>
400175f0:	e3a00041 	mov	r0, #65	; 0x41
400175f4:	e8bd8070 	pop	{r4, r5, r6, pc}
400175f8:	e5940000 	ldr	r0, [r4]
400175fc:	e3500000 	cmp	r0, #0
40017600:	1a000001 	bne	4001760c <CyU3PDmaMultiChannelAcquireLock+0x30>
40017604:	e3a00044 	mov	r0, #68	; 0x44
40017608:	eafffff9 	b	400175f4 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001760c:	e1a01005 	mov	r1, r5
40017610:	e2840078 	add	r0, r4, #120	; 0x78
40017614:	ebffcb2a 	bl	4000a2c4 <_txe_mutex_get>
40017618:	e3500000 	cmp	r0, #0
4001761c:	0a000001 	beq	40017628 <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017620:	e3a0001d 	mov	r0, #29
40017624:	eafffff2 	b	400175f4 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017628:	e3a00000 	mov	r0, #0
4001762c:	eafffff0 	b	400175f4 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

40017630 <CyU3PDmaMultiChannelCommitBuffer>:
40017630:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017634:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40017638:	e1a04000 	mov	r4, r0
4001763c:	e1a05001 	mov	r5, r1
40017640:	e1a06002 	mov	r6, r2
40017644:	e3e01000 	mvn	r1, #0
40017648:	e1a00004 	mov	r0, r4
4001764c:	ebffffe2 	bl	400175dc <CyU3PDmaMultiChannelAcquireLock>
40017650:	e1a0b000 	mov	fp, r0
40017654:	e35b0000 	cmp	fp, #0
40017658:	0a000002 	beq	40017668 <CyU3PDmaMultiChannelCommitBuffer+0x38>
4001765c:	e1a0000b 	mov	r0, fp
40017660:	e28dd03c 	add	sp, sp, #60	; 0x3c
40017664:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40017668:	e1d400b4 	ldrh	r0, [r4, #4]
4001766c:	e20070ff 	and	r7, r0, #255	; 0xff
40017670:	e1d400b6 	ldrh	r0, [r4, #6]
40017674:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017678:	e0400001 	sub	r0, r0, r1
4001767c:	e1500005 	cmp	r0, r5
40017680:	aa000000 	bge	40017688 <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017684:	e3a0b040 	mov	fp, #64	; 0x40
40017688:	e5940000 	ldr	r0, [r4]
4001768c:	e3500002 	cmp	r0, #2
40017690:	0a000000 	beq	40017698 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017694:	e3a0b042 	mov	fp, #66	; 0x42
40017698:	e5940000 	ldr	r0, [r4]
4001769c:	e3500005 	cmp	r0, #5
400176a0:	1a000000 	bne	400176a8 <CyU3PDmaMultiChannelCommitBuffer+0x78>
400176a4:	e3a0b049 	mov	fp, #73	; 0x49
400176a8:	e5940000 	ldr	r0, [r4]
400176ac:	e3500007 	cmp	r0, #7
400176b0:	1a000000 	bne	400176b8 <CyU3PDmaMultiChannelCommitBuffer+0x88>
400176b4:	e3a0b048 	mov	fp, #72	; 0x48
400176b8:	e3570006 	cmp	r7, #6
400176bc:	1a000000 	bne	400176c4 <CyU3PDmaMultiChannelCommitBuffer+0x94>
400176c0:	e3a0b046 	mov	fp, #70	; 0x46
400176c4:	e3570005 	cmp	r7, #5
400176c8:	1a000034 	bne	400177a0 <CyU3PDmaMultiChannelCommitBuffer+0x170>
400176cc:	e35b0000 	cmp	fp, #0
400176d0:	1a000032 	bne	400177a0 <CyU3PDmaMultiChannelCommitBuffer+0x170>
400176d4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400176d8:	e28d1024 	add	r1, sp, #36	; 0x24
400176dc:	ebfff61b 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400176e0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400176e4:	e3100702 	tst	r0, #524288	; 0x80000
400176e8:	0a000027 	beq	4001778c <CyU3PDmaMultiChannelCommitBuffer+0x15c>
400176ec:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400176f0:	e1a09800 	lsl	r9, r0, #16
400176f4:	e1a09829 	lsr	r9, r9, #16
400176f8:	e28d1004 	add	r1, sp, #4
400176fc:	e1a00009 	mov	r0, r9
40017700:	eb002c70 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017704:	e59d0010 	ldr	r0, [sp, #16]
40017708:	e3100008 	tst	r0, #8
4001770c:	0a00001c 	beq	40017784 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017710:	e59d0010 	ldr	r0, [sp, #16]
40017714:	e1a00800 	lsl	r0, r0, #16
40017718:	e1a00820 	lsr	r0, r0, #16
4001771c:	e58d0010 	str	r0, [sp, #16]
40017720:	e59d0010 	ldr	r0, [sp, #16]
40017724:	e1800805 	orr	r0, r0, r5, lsl #16
40017728:	e58d0010 	str	r0, [sp, #16]
4001772c:	e3560000 	cmp	r6, #0
40017730:	0a000007 	beq	40017754 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017734:	e59d0010 	ldr	r0, [sp, #16]
40017738:	e3c0000f 	bic	r0, r0, #15
4001773c:	e58d0010 	str	r0, [sp, #16]
40017740:	e206100e 	and	r1, r6, #14
40017744:	e3811008 	orr	r1, r1, #8
40017748:	e59d0010 	ldr	r0, [sp, #16]
4001774c:	e1800001 	orr	r0, r0, r1
40017750:	e58d0010 	str	r0, [sp, #16]
40017754:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017758:	e3500000 	cmp	r0, #0
4001775c:	0a000004 	beq	40017774 <CyU3PDmaMultiChannelCommitBuffer+0x144>
40017760:	e59d2010 	ldr	r2, [sp, #16]
40017764:	e59f327c 	ldr	r3, [pc, #636]	; 400179e8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017768:	e0021003 	and	r1, r2, r3
4001776c:	e59d0004 	ldr	r0, [sp, #4]
40017770:	ebffeb19 	bl	400123dc <CyU3PSysCleanDRegion>
40017774:	e28d1004 	add	r1, sp, #4
40017778:	e1a00009 	mov	r0, r9
4001777c:	eb002c6c 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017780:	ea000002 	b	40017790 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017784:	e3a0b047 	mov	fp, #71	; 0x47
40017788:	ea000000 	b	40017790 <CyU3PDmaMultiChannelCommitBuffer+0x160>
4001778c:	e3a0b047 	mov	fp, #71	; 0x47
40017790:	e2840078 	add	r0, r4, #120	; 0x78
40017794:	ebffcaff 	bl	4000a398 <_txe_mutex_put>
40017798:	e1a0000b 	mov	r0, fp
4001779c:	eaffffaf 	b	40017660 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400177a0:	e35b0000 	cmp	fp, #0
400177a4:	1a00000d 	bne	400177e0 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400177a8:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400177ac:	e28d1014 	add	r1, sp, #20
400177b0:	eb002c44 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400177b4:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400177b8:	e28d1004 	add	r1, sp, #4
400177bc:	eb002c41 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400177c0:	e59d0020 	ldr	r0, [sp, #32]
400177c4:	e3100008 	tst	r0, #8
400177c8:	1a000000 	bne	400177d0 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
400177cc:	e3a0b047 	mov	fp, #71	; 0x47
400177d0:	e59d0010 	ldr	r0, [sp, #16]
400177d4:	e3100008 	tst	r0, #8
400177d8:	0a000000 	beq	400177e0 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400177dc:	e3a0b047 	mov	fp, #71	; 0x47
400177e0:	e35b0000 	cmp	fp, #0
400177e4:	0a000003 	beq	400177f8 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
400177e8:	e2840078 	add	r0, r4, #120	; 0x78
400177ec:	ebffcae9 	bl	4000a398 <_txe_mutex_put>
400177f0:	e1a0000b 	mov	r0, fp
400177f4:	eaffff99 	b	40017660 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400177f8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400177fc:	e3500000 	cmp	r0, #0
40017800:	0a000004 	beq	40017818 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017804:	e59d2010 	ldr	r2, [sp, #16]
40017808:	e59f31d8 	ldr	r3, [pc, #472]	; 400179e8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001780c:	e0021003 	and	r1, r2, r3
40017810:	e59d0004 	ldr	r0, [sp, #4]
40017814:	ebffeaf0 	bl	400123dc <CyU3PSysCleanDRegion>
40017818:	e3570009 	cmp	r7, #9
4001781c:	1a00003a 	bne	4001790c <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017820:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017824:	e3a0a000 	mov	sl, #0
40017828:	ea00002a 	b	400178d8 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
4001782c:	e28d1004 	add	r1, sp, #4
40017830:	e1a00009 	mov	r0, r9
40017834:	eb002c23 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017838:	e284000c 	add	r0, r4, #12
4001783c:	e080008a 	add	r0, r0, sl, lsl #1
40017840:	e1d000b0 	ldrh	r0, [r0]
40017844:	e3500000 	cmp	r0, #0
40017848:	1a00001d 	bne	400178c4 <CyU3PDmaMultiChannelCommitBuffer+0x294>
4001784c:	e59d0010 	ldr	r0, [sp, #16]
40017850:	e59f1190 	ldr	r1, [pc, #400]	; 400179e8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017854:	e0000001 	and	r0, r0, r1
40017858:	e58d0010 	str	r0, [sp, #16]
4001785c:	e59d0010 	ldr	r0, [sp, #16]
40017860:	e1800805 	orr	r0, r0, r5, lsl #16
40017864:	e58d0010 	str	r0, [sp, #16]
40017868:	e3560000 	cmp	r6, #0
4001786c:	1a000005 	bne	40017888 <CyU3PDmaMultiChannelCommitBuffer+0x258>
40017870:	e59d1020 	ldr	r1, [sp, #32]
40017874:	e201100f 	and	r1, r1, #15
40017878:	e59d0010 	ldr	r0, [sp, #16]
4001787c:	e1800001 	orr	r0, r0, r1
40017880:	e58d0010 	str	r0, [sp, #16]
40017884:	ea000004 	b	4001789c <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017888:	e206100e 	and	r1, r6, #14
4001788c:	e3811008 	orr	r1, r1, #8
40017890:	e59d0010 	ldr	r0, [sp, #16]
40017894:	e1800001 	orr	r0, r0, r1
40017898:	e58d0010 	str	r0, [sp, #16]
4001789c:	e28d1004 	add	r1, sp, #4
400178a0:	e1a00009 	mov	r0, r9
400178a4:	eb002c22 	bl	40022934 <CyU3PDmaDscrSetConfig>
400178a8:	e59d0008 	ldr	r0, [sp, #8]
400178ac:	e1a08900 	lsl	r8, r0, #18
400178b0:	e1a08928 	lsr	r8, r8, #18
400178b4:	e3a02001 	mov	r2, #1
400178b8:	e1a01009 	mov	r1, r9
400178bc:	e1a00008 	mov	r0, r8
400178c0:	ebfff63a 	bl	400151b0 <CyU3PDmaSocketSendEvent>
400178c4:	e59d000c 	ldr	r0, [sp, #12]
400178c8:	e59f111c 	ldr	r1, [pc, #284]	; 400179ec <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400178cc:	e0019820 	and	r9, r1, r0, lsr #16
400178d0:	e28a0001 	add	r0, sl, #1
400178d4:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
400178d8:	e1d400ba 	ldrh	r0, [r4, #10]
400178dc:	e150000a 	cmp	r0, sl
400178e0:	caffffd1 	bgt	4001782c <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
400178e4:	e59d001c 	ldr	r0, [sp, #28]
400178e8:	e59f10fc 	ldr	r1, [pc, #252]	; 400179ec <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400178ec:	e0010820 	and	r0, r1, r0, lsr #16
400178f0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400178f4:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400178f8:	e28d1014 	add	r1, sp, #20
400178fc:	eb002bf1 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017900:	e59d001c 	ldr	r0, [sp, #28]
40017904:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017908:	ea000032 	b	400179d8 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
4001790c:	e59d0010 	ldr	r0, [sp, #16]
40017910:	e59f10d0 	ldr	r1, [pc, #208]	; 400179e8 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017914:	e0000001 	and	r0, r0, r1
40017918:	e58d0010 	str	r0, [sp, #16]
4001791c:	e59d0010 	ldr	r0, [sp, #16]
40017920:	e1800805 	orr	r0, r0, r5, lsl #16
40017924:	e58d0010 	str	r0, [sp, #16]
40017928:	e3560000 	cmp	r6, #0
4001792c:	1a000005 	bne	40017948 <CyU3PDmaMultiChannelCommitBuffer+0x318>
40017930:	e59d1020 	ldr	r1, [sp, #32]
40017934:	e201100f 	and	r1, r1, #15
40017938:	e59d0010 	ldr	r0, [sp, #16]
4001793c:	e1800001 	orr	r0, r0, r1
40017940:	e58d0010 	str	r0, [sp, #16]
40017944:	ea000004 	b	4001795c <CyU3PDmaMultiChannelCommitBuffer+0x32c>
40017948:	e206100e 	and	r1, r6, #14
4001794c:	e3811008 	orr	r1, r1, #8
40017950:	e59d0010 	ldr	r0, [sp, #16]
40017954:	e1800001 	orr	r0, r0, r1
40017958:	e58d0010 	str	r0, [sp, #16]
4001795c:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017960:	e28d1004 	add	r1, sp, #4
40017964:	eb002bf2 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017968:	e59d0008 	ldr	r0, [sp, #8]
4001796c:	e1a08900 	lsl	r8, r0, #18
40017970:	e1a08928 	lsr	r8, r8, #18
40017974:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
40017978:	e3a02001 	mov	r2, #1
4001797c:	e1a00008 	mov	r0, r8
40017980:	ebfff60a 	bl	400151b0 <CyU3PDmaSocketSendEvent>
40017984:	e3570007 	cmp	r7, #7
40017988:	1a000009 	bne	400179b4 <CyU3PDmaMultiChannelCommitBuffer+0x384>
4001798c:	e59d000c 	ldr	r0, [sp, #12]
40017990:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017994:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017998:	e28d1004 	add	r1, sp, #4
4001799c:	eb002bc9 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400179a0:	e59d000c 	ldr	r0, [sp, #12]
400179a4:	e59f1040 	ldr	r1, [pc, #64]	; 400179ec <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400179a8:	e0010820 	and	r0, r1, r0, lsr #16
400179ac:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400179b0:	ea000008 	b	400179d8 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400179b4:	e59d001c 	ldr	r0, [sp, #28]
400179b8:	e59f102c 	ldr	r1, [pc, #44]	; 400179ec <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400179bc:	e0010820 	and	r0, r1, r0, lsr #16
400179c0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400179c4:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400179c8:	e28d1014 	add	r1, sp, #20
400179cc:	eb002bbd 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400179d0:	e59d001c 	ldr	r0, [sp, #28]
400179d4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400179d8:	e2840078 	add	r0, r4, #120	; 0x78
400179dc:	ebffca6d 	bl	4000a398 <_txe_mutex_put>
400179e0:	e3a00000 	mov	r0, #0
400179e4:	eaffff1d 	b	40017660 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400179e8:	0000fff0 	.word	0x0000fff0
400179ec:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

400179f0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
400179f0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400179f4:	e24dd024 	sub	sp, sp, #36	; 0x24
400179f8:	e1a04000 	mov	r4, r0
400179fc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017a00:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017a04:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017a08:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017a0c:	e1d400b8 	ldrh	r0, [r4, #8]
40017a10:	e1d430ba 	ldrh	r3, [r4, #10]
40017a14:	e0000093 	mul	r0, r3, r0
40017a18:	e1a01800 	lsl	r1, r0, #16
40017a1c:	e1a01821 	lsr	r1, r1, #16
40017a20:	e1d420b6 	ldrh	r2, [r4, #6]
40017a24:	e1a03006 	mov	r3, r6
40017a28:	e284001c 	add	r0, r4, #28
40017a2c:	eb002ab6 	bl	4002250c <CyU3PDmaDscrChainCreate>
40017a30:	e1a05000 	mov	r5, r0
40017a34:	e3550000 	cmp	r5, #0
40017a38:	0a000002 	beq	40017a48 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017a3c:	e1a00005 	mov	r0, r5
40017a40:	e28dd024 	add	sp, sp, #36	; 0x24
40017a44:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017a48:	e1d400b4 	ldrh	r0, [r4, #4]
40017a4c:	e3500005 	cmp	r0, #5
40017a50:	1a00003c 	bne	40017b48 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017a54:	e3a07000 	mov	r7, #0
40017a58:	e1d481bc 	ldrh	r8, [r4, #28]
40017a5c:	ea000035 	b	40017b38 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
40017a60:	e3a09000 	mov	r9, #0
40017a64:	ea00002e 	b	40017b24 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017a68:	e28d1004 	add	r1, sp, #4
40017a6c:	e1a00008 	mov	r0, r8
40017a70:	eb002b94 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017a74:	e3570000 	cmp	r7, #0
40017a78:	1a000003 	bne	40017a8c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017a7c:	e2840014 	add	r0, r4, #20
40017a80:	e0800089 	add	r0, r0, r9, lsl #1
40017a84:	e1c080b0 	strh	r8, [r0]
40017a88:	ea000020 	b	40017b10 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017a8c:	e2841014 	add	r1, r4, #20
40017a90:	e0811089 	add	r1, r1, r9, lsl #1
40017a94:	e1d100b0 	ldrh	r0, [r1]
40017a98:	e28d1014 	add	r1, sp, #20
40017a9c:	eb002b89 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017aa0:	e59d0018 	ldr	r0, [sp, #24]
40017aa4:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017aa8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017aac:	e58d0018 	str	r0, [sp, #24]
40017ab0:	e2841024 	add	r1, r4, #36	; 0x24
40017ab4:	e0811089 	add	r1, r1, r9, lsl #1
40017ab8:	e59d0018 	ldr	r0, [sp, #24]
40017abc:	e1d110b0 	ldrh	r1, [r1]
40017ac0:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017ac4:	e1821801 	orr	r1, r2, r1, lsl #16
40017ac8:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017acc:	e1800001 	orr	r0, r0, r1
40017ad0:	e58d0018 	str	r0, [sp, #24]
40017ad4:	e59d001c 	ldr	r0, [sp, #28]
40017ad8:	e1a00800 	lsl	r0, r0, #16
40017adc:	e1a00820 	lsr	r0, r0, #16
40017ae0:	e58d001c 	str	r0, [sp, #28]
40017ae4:	e59d001c 	ldr	r0, [sp, #28]
40017ae8:	e1800808 	orr	r0, r0, r8, lsl #16
40017aec:	e58d001c 	str	r0, [sp, #28]
40017af0:	e2841014 	add	r1, r4, #20
40017af4:	e0811089 	add	r1, r1, r9, lsl #1
40017af8:	e1d100b0 	ldrh	r0, [r1]
40017afc:	e28d1014 	add	r1, sp, #20
40017b00:	eb002b8b 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017b04:	e2840014 	add	r0, r4, #20
40017b08:	e0800089 	add	r0, r0, r9, lsl #1
40017b0c:	e1c080b0 	strh	r8, [r0]
40017b10:	e59d000c 	ldr	r0, [sp, #12]
40017b14:	e1a08800 	lsl	r8, r0, #16
40017b18:	e1a08828 	lsr	r8, r8, #16
40017b1c:	e2890001 	add	r0, r9, #1
40017b20:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017b24:	e1d400ba 	ldrh	r0, [r4, #10]
40017b28:	e1500009 	cmp	r0, r9
40017b2c:	caffffcd 	bgt	40017a68 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017b30:	e2870001 	add	r0, r7, #1
40017b34:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017b38:	e1d400b8 	ldrh	r0, [r4, #8]
40017b3c:	e1500007 	cmp	r0, r7
40017b40:	aaffffc6 	bge	40017a60 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017b44:	ea000056 	b	40017ca4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017b48:	e3a07000 	mov	r7, #0
40017b4c:	e1d481bc 	ldrh	r8, [r4, #28]
40017b50:	ea000050 	b	40017c98 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017b54:	e3a09000 	mov	r9, #0
40017b58:	ea000049 	b	40017c84 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017b5c:	e3570000 	cmp	r7, #0
40017b60:	1a00000d 	bne	40017b9c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
40017b64:	e3a06cff 	mov	r6, #65280	; 0xff00
40017b68:	e2840024 	add	r0, r4, #36	; 0x24
40017b6c:	e0800089 	add	r0, r0, r9, lsl #1
40017b70:	e1d000b0 	ldrh	r0, [r0]
40017b74:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017b78:	e1810800 	orr	r0, r1, r0, lsl #16
40017b7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017b80:	e1866000 	orr	r6, r6, r0
40017b84:	e1d410b8 	ldrh	r1, [r4, #8]
40017b88:	e2842014 	add	r2, r4, #20
40017b8c:	e0820089 	add	r0, r2, r9, lsl #1
40017b90:	e1a03006 	mov	r3, r6
40017b94:	e3a02000 	mov	r2, #0
40017b98:	eb002a5b 	bl	4002250c <CyU3PDmaDscrChainCreate>
40017b9c:	e2841014 	add	r1, r4, #20
40017ba0:	e0811089 	add	r1, r1, r9, lsl #1
40017ba4:	e1d100b0 	ldrh	r0, [r1]
40017ba8:	e28d1014 	add	r1, sp, #20
40017bac:	eb002b45 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017bb0:	e28d1004 	add	r1, sp, #4
40017bb4:	e1a00008 	mov	r0, r8
40017bb8:	eb002b42 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017bbc:	e59d0004 	ldr	r0, [sp, #4]
40017bc0:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017bc4:	e0800001 	add	r0, r0, r1
40017bc8:	e58d0014 	str	r0, [sp, #20]
40017bcc:	e59d0010 	ldr	r0, [sp, #16]
40017bd0:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017bd4:	e0400001 	sub	r0, r0, r1
40017bd8:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017bdc:	e0400001 	sub	r0, r0, r1
40017be0:	e58d0020 	str	r0, [sp, #32]
40017be4:	e2841014 	add	r1, r4, #20
40017be8:	e0811089 	add	r1, r1, r9, lsl #1
40017bec:	e1d100b0 	ldrh	r0, [r1]
40017bf0:	e28d1014 	add	r1, sp, #20
40017bf4:	eb002b4e 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017bf8:	e59d0004 	ldr	r0, [sp, #4]
40017bfc:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017c00:	e0800001 	add	r0, r0, r1
40017c04:	e58d0004 	str	r0, [sp, #4]
40017c08:	e1d400b6 	ldrh	r0, [r4, #6]
40017c0c:	e280000f 	add	r0, r0, #15
40017c10:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017c14:	e0400001 	sub	r0, r0, r1
40017c18:	e59f10b4 	ldr	r1, [pc, #180]	; 40017cd4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017c1c:	e0000001 	and	r0, r0, r1
40017c20:	e58d0010 	str	r0, [sp, #16]
40017c24:	e59d000c 	ldr	r0, [sp, #12]
40017c28:	e1a00800 	lsl	r0, r0, #16
40017c2c:	e1a00820 	lsr	r0, r0, #16
40017c30:	e58d000c 	str	r0, [sp, #12]
40017c34:	e2841014 	add	r1, r4, #20
40017c38:	e0811089 	add	r1, r1, r9, lsl #1
40017c3c:	e59d000c 	ldr	r0, [sp, #12]
40017c40:	e1d110b0 	ldrh	r1, [r1]
40017c44:	e1800801 	orr	r0, r0, r1, lsl #16
40017c48:	e58d000c 	str	r0, [sp, #12]
40017c4c:	e28d1004 	add	r1, sp, #4
40017c50:	e1a00008 	mov	r0, r8
40017c54:	eb002b36 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017c58:	e59d000c 	ldr	r0, [sp, #12]
40017c5c:	e1a08800 	lsl	r8, r0, #16
40017c60:	e1a08828 	lsr	r8, r8, #16
40017c64:	e59d001c 	ldr	r0, [sp, #28]
40017c68:	e59f1068 	ldr	r1, [pc, #104]	; 40017cd8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017c6c:	e0010820 	and	r0, r1, r0, lsr #16
40017c70:	e2841014 	add	r1, r4, #20
40017c74:	e0811089 	add	r1, r1, r9, lsl #1
40017c78:	e1c100b0 	strh	r0, [r1]
40017c7c:	e2890001 	add	r0, r9, #1
40017c80:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017c84:	e1d400ba 	ldrh	r0, [r4, #10]
40017c88:	e1500009 	cmp	r0, r9
40017c8c:	caffffb2 	bgt	40017b5c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017c90:	e2870001 	add	r0, r7, #1
40017c94:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c98:	e1d400b8 	ldrh	r0, [r4, #8]
40017c9c:	e1500007 	cmp	r0, r7
40017ca0:	caffffab 	bgt	40017b54 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017ca4:	e1a00004 	mov	r0, r4
40017ca8:	eb000509 	bl	400190d4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017cac:	e1d401b4 	ldrh	r0, [r4, #20]
40017cb0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017cb4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017cb8:	e1d401bc 	ldrh	r0, [r4, #28]
40017cbc:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017cc0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017cc4:	e2840034 	add	r0, r4, #52	; 0x34
40017cc8:	eb002a86 	bl	400226e8 <CyU3PDmaDscrGet>
40017ccc:	e3a00000 	mov	r0, #0
40017cd0:	eaffff5a 	b	40017a40 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017cd4:	0000fff0 	.word	0x0000fff0
40017cd8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017cdc <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017cdc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017ce0:	e24dd024 	sub	sp, sp, #36	; 0x24
40017ce4:	e1a04000 	mov	r4, r0
40017ce8:	e3a06cff 	mov	r6, #65280	; 0xff00
40017cec:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017cf0:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017cf4:	e1810800 	orr	r0, r1, r0, lsl #16
40017cf8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017cfc:	e1866000 	orr	r6, r6, r0
40017d00:	e1d400b8 	ldrh	r0, [r4, #8]
40017d04:	e1d430ba 	ldrh	r3, [r4, #10]
40017d08:	e0000093 	mul	r0, r3, r0
40017d0c:	e1a01800 	lsl	r1, r0, #16
40017d10:	e1a01821 	lsr	r1, r1, #16
40017d14:	e1d420b6 	ldrh	r2, [r4, #6]
40017d18:	e1a03006 	mov	r3, r6
40017d1c:	e2840014 	add	r0, r4, #20
40017d20:	eb0029f9 	bl	4002250c <CyU3PDmaDscrChainCreate>
40017d24:	e1a05000 	mov	r5, r0
40017d28:	e3550000 	cmp	r5, #0
40017d2c:	0a000002 	beq	40017d3c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017d30:	e1a00005 	mov	r0, r5
40017d34:	e28dd024 	add	sp, sp, #36	; 0x24
40017d38:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017d3c:	e1d400b4 	ldrh	r0, [r4, #4]
40017d40:	e3500006 	cmp	r0, #6
40017d44:	1a00003a 	bne	40017e34 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017d48:	e3a07000 	mov	r7, #0
40017d4c:	e1d481b4 	ldrh	r8, [r4, #20]
40017d50:	ea000033 	b	40017e24 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017d54:	e3a09000 	mov	r9, #0
40017d58:	ea00002c 	b	40017e10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017d5c:	e28d1014 	add	r1, sp, #20
40017d60:	e1a00008 	mov	r0, r8
40017d64:	eb002ad7 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017d68:	e3570000 	cmp	r7, #0
40017d6c:	1a000003 	bne	40017d80 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017d70:	e284001c 	add	r0, r4, #28
40017d74:	e0800089 	add	r0, r0, r9, lsl #1
40017d78:	e1c080b0 	strh	r8, [r0]
40017d7c:	ea00001e 	b	40017dfc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017d80:	e284101c 	add	r1, r4, #28
40017d84:	e0811089 	add	r1, r1, r9, lsl #1
40017d88:	e1d100b0 	ldrh	r0, [r1]
40017d8c:	e28d1004 	add	r1, sp, #4
40017d90:	eb002acc 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017d94:	e59d0008 	ldr	r0, [sp, #8]
40017d98:	e1a00720 	lsr	r0, r0, #14
40017d9c:	e1a00700 	lsl	r0, r0, #14
40017da0:	e58d0008 	str	r0, [sp, #8]
40017da4:	e284102c 	add	r1, r4, #44	; 0x2c
40017da8:	e0811089 	add	r1, r1, r9, lsl #1
40017dac:	e59d0008 	ldr	r0, [sp, #8]
40017db0:	e1d110b0 	ldrh	r1, [r1]
40017db4:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017db8:	e1800001 	orr	r0, r0, r1
40017dbc:	e58d0008 	str	r0, [sp, #8]
40017dc0:	e59d000c 	ldr	r0, [sp, #12]
40017dc4:	e1a00820 	lsr	r0, r0, #16
40017dc8:	e1a00800 	lsl	r0, r0, #16
40017dcc:	e58d000c 	str	r0, [sp, #12]
40017dd0:	e59d000c 	ldr	r0, [sp, #12]
40017dd4:	e1800008 	orr	r0, r0, r8
40017dd8:	e58d000c 	str	r0, [sp, #12]
40017ddc:	e284101c 	add	r1, r4, #28
40017de0:	e0811089 	add	r1, r1, r9, lsl #1
40017de4:	e1d100b0 	ldrh	r0, [r1]
40017de8:	e28d1004 	add	r1, sp, #4
40017dec:	eb002ad0 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017df0:	e284001c 	add	r0, r4, #28
40017df4:	e0800089 	add	r0, r0, r9, lsl #1
40017df8:	e1c080b0 	strh	r8, [r0]
40017dfc:	e59d001c 	ldr	r0, [sp, #28]
40017e00:	e59f11c4 	ldr	r1, [pc, #452]	; 40017fcc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017e04:	e0018820 	and	r8, r1, r0, lsr #16
40017e08:	e2890001 	add	r0, r9, #1
40017e0c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017e10:	e1d400ba 	ldrh	r0, [r4, #10]
40017e14:	e1500009 	cmp	r0, r9
40017e18:	caffffcf 	bgt	40017d5c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017e1c:	e2870001 	add	r0, r7, #1
40017e20:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017e24:	e1d400b8 	ldrh	r0, [r4, #8]
40017e28:	e1500007 	cmp	r0, r7
40017e2c:	aaffffc8 	bge	40017d54 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017e30:	ea000059 	b	40017f9c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017e34:	e3a07000 	mov	r7, #0
40017e38:	e1d481b4 	ldrh	r8, [r4, #20]
40017e3c:	ea000053 	b	40017f90 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017e40:	e3a09000 	mov	r9, #0
40017e44:	ea00004c 	b	40017f7c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017e48:	e3570000 	cmp	r7, #0
40017e4c:	1a00000b 	bne	40017e80 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017e50:	e284002c 	add	r0, r4, #44	; 0x2c
40017e54:	e0800089 	add	r0, r0, r9, lsl #1
40017e58:	e1d000b0 	ldrh	r0, [r0]
40017e5c:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017e60:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017e64:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017e68:	e1d410b8 	ldrh	r1, [r4, #8]
40017e6c:	e284201c 	add	r2, r4, #28
40017e70:	e0820089 	add	r0, r2, r9, lsl #1
40017e74:	e1a03006 	mov	r3, r6
40017e78:	e3a02000 	mov	r2, #0
40017e7c:	eb0029a2 	bl	4002250c <CyU3PDmaDscrChainCreate>
40017e80:	e284101c 	add	r1, r4, #28
40017e84:	e0811089 	add	r1, r1, r9, lsl #1
40017e88:	e1d100b0 	ldrh	r0, [r1]
40017e8c:	e28d1004 	add	r1, sp, #4
40017e90:	eb002a8c 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017e94:	e28d1014 	add	r1, sp, #20
40017e98:	e1a00008 	mov	r0, r8
40017e9c:	eb002a89 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40017ea0:	e59d0014 	ldr	r0, [sp, #20]
40017ea4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017ea8:	e0800001 	add	r0, r0, r1
40017eac:	e58d0004 	str	r0, [sp, #4]
40017eb0:	e1d400b6 	ldrh	r0, [r4, #6]
40017eb4:	e280000f 	add	r0, r0, #15
40017eb8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017ebc:	e0400001 	sub	r0, r0, r1
40017ec0:	e59f1108 	ldr	r1, [pc, #264]	; 40017fd0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017ec4:	e0000001 	and	r0, r0, r1
40017ec8:	e58d0010 	str	r0, [sp, #16]
40017ecc:	e59d000c 	ldr	r0, [sp, #12]
40017ed0:	e1a00800 	lsl	r0, r0, #16
40017ed4:	e1a00820 	lsr	r0, r0, #16
40017ed8:	e58d000c 	str	r0, [sp, #12]
40017edc:	e59d000c 	ldr	r0, [sp, #12]
40017ee0:	e1800808 	orr	r0, r0, r8, lsl #16
40017ee4:	e58d000c 	str	r0, [sp, #12]
40017ee8:	e284101c 	add	r1, r4, #28
40017eec:	e0811089 	add	r1, r1, r9, lsl #1
40017ef0:	e1d100b0 	ldrh	r0, [r1]
40017ef4:	e28d1004 	add	r1, sp, #4
40017ef8:	eb002a8d 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017efc:	e59d0014 	ldr	r0, [sp, #20]
40017f00:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017f04:	e0800001 	add	r0, r0, r1
40017f08:	e58d0014 	str	r0, [sp, #20]
40017f0c:	e1d400b6 	ldrh	r0, [r4, #6]
40017f10:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017f14:	e0400001 	sub	r0, r0, r1
40017f18:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017f1c:	e0400001 	sub	r0, r0, r1
40017f20:	e58d0020 	str	r0, [sp, #32]
40017f24:	e59d001c 	ldr	r0, [sp, #28]
40017f28:	e1a00820 	lsr	r0, r0, #16
40017f2c:	e1a00800 	lsl	r0, r0, #16
40017f30:	e58d001c 	str	r0, [sp, #28]
40017f34:	e284101c 	add	r1, r4, #28
40017f38:	e0811089 	add	r1, r1, r9, lsl #1
40017f3c:	e59d001c 	ldr	r0, [sp, #28]
40017f40:	e1d110b0 	ldrh	r1, [r1]
40017f44:	e1800001 	orr	r0, r0, r1
40017f48:	e58d001c 	str	r0, [sp, #28]
40017f4c:	e28d1014 	add	r1, sp, #20
40017f50:	e1a00008 	mov	r0, r8
40017f54:	eb002a76 	bl	40022934 <CyU3PDmaDscrSetConfig>
40017f58:	e59d001c 	ldr	r0, [sp, #28]
40017f5c:	e59f1068 	ldr	r1, [pc, #104]	; 40017fcc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017f60:	e0018820 	and	r8, r1, r0, lsr #16
40017f64:	e284101c 	add	r1, r4, #28
40017f68:	e0811089 	add	r1, r1, r9, lsl #1
40017f6c:	e59d000c 	ldr	r0, [sp, #12]
40017f70:	e1c100b0 	strh	r0, [r1]
40017f74:	e2890001 	add	r0, r9, #1
40017f78:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017f7c:	e1d400ba 	ldrh	r0, [r4, #10]
40017f80:	e1500009 	cmp	r0, r9
40017f84:	caffffaf 	bgt	40017e48 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017f88:	e2870001 	add	r0, r7, #1
40017f8c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017f90:	e1d400b8 	ldrh	r0, [r4, #8]
40017f94:	e1500007 	cmp	r0, r7
40017f98:	caffffa8 	bgt	40017e40 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017f9c:	e1d401b4 	ldrh	r0, [r4, #20]
40017fa0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017fa4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017fa8:	e1d401bc 	ldrh	r0, [r4, #28]
40017fac:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017fb0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017fb4:	e2840034 	add	r0, r4, #52	; 0x34
40017fb8:	eb0029ca 	bl	400226e8 <CyU3PDmaDscrGet>
40017fbc:	e1a00004 	mov	r0, r4
40017fc0:	eb0004a3 	bl	40019254 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017fc4:	e3a00000 	mov	r0, #0
40017fc8:	eaffff59 	b	40017d34 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017fcc:	0000ffff 	.word	0x0000ffff
40017fd0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017fd4 <CyU3PDmaMultiChannelCreate>:
40017fd4:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017fd8:	e1a04000 	mov	r4, r0
40017fdc:	e1a05001 	mov	r5, r1
40017fe0:	e1a06002 	mov	r6, r2
40017fe4:	e3560000 	cmp	r6, #0
40017fe8:	1a000001 	bne	40017ff4 <CyU3PDmaMultiChannelCreate+0x20>
40017fec:	e3a00041 	mov	r0, #65	; 0x41
40017ff0:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017ff4:	e3540000 	cmp	r4, #0
40017ff8:	1a000001 	bne	40018004 <CyU3PDmaMultiChannelCreate+0x30>
40017ffc:	e3a00041 	mov	r0, #65	; 0x41
40018000:	eafffffa 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018004:	e1d600b2 	ldrh	r0, [r6, #2]
40018008:	e3500000 	cmp	r0, #0
4001800c:	1a000001 	bne	40018018 <CyU3PDmaMultiChannelCreate+0x44>
40018010:	e3a00040 	mov	r0, #64	; 0x40
40018014:	eafffff5 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018018:	e1d600b4 	ldrh	r0, [r6, #4]
4001801c:	e3500002 	cmp	r0, #2
40018020:	ba000002 	blt	40018030 <CyU3PDmaMultiChannelCreate+0x5c>
40018024:	e1d600b4 	ldrh	r0, [r6, #4]
40018028:	e3500004 	cmp	r0, #4
4001802c:	da000001 	ble	40018038 <CyU3PDmaMultiChannelCreate+0x64>
40018030:	e3a00040 	mov	r0, #64	; 0x40
40018034:	eaffffed 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018038:	e3550006 	cmp	r5, #6
4001803c:	0a000001 	beq	40018048 <CyU3PDmaMultiChannelCreate+0x74>
40018040:	e3550005 	cmp	r5, #5
40018044:	1a000007 	bne	40018068 <CyU3PDmaMultiChannelCreate+0x94>
40018048:	eb0029de 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
4001804c:	e1d610b2 	ldrh	r1, [r6, #2]
40018050:	e1d620b4 	ldrh	r2, [r6, #4]
40018054:	e0010192 	mul	r1, r2, r1
40018058:	e1500001 	cmp	r0, r1
4001805c:	ca000016 	bgt	400180bc <CyU3PDmaMultiChannelCreate+0xe8>
40018060:	e3a00010 	mov	r0, #16
40018064:	eaffffe1 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018068:	e3550008 	cmp	r5, #8
4001806c:	0a000001 	beq	40018078 <CyU3PDmaMultiChannelCreate+0xa4>
40018070:	e3550007 	cmp	r5, #7
40018074:	1a000007 	bne	40018098 <CyU3PDmaMultiChannelCreate+0xc4>
40018078:	eb0029d2 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
4001807c:	e1d610b2 	ldrh	r1, [r6, #2]
40018080:	e1d620b4 	ldrh	r2, [r6, #4]
40018084:	e0010192 	mul	r1, r2, r1
40018088:	e1500081 	cmp	r0, r1, lsl #1
4001808c:	ca00000a 	bgt	400180bc <CyU3PDmaMultiChannelCreate+0xe8>
40018090:	e3a00010 	mov	r0, #16
40018094:	eaffffd5 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018098:	eb0029ca 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
4001809c:	e1d610b2 	ldrh	r1, [r6, #2]
400180a0:	e1d620b4 	ldrh	r2, [r6, #4]
400180a4:	e2822001 	add	r2, r2, #1
400180a8:	e0010192 	mul	r1, r2, r1
400180ac:	e1500001 	cmp	r0, r1
400180b0:	ca000001 	bgt	400180bc <CyU3PDmaMultiChannelCreate+0xe8>
400180b4:	e3a00010 	mov	r0, #16
400180b8:	eaffffcc 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400180bc:	e1d600b0 	ldrh	r0, [r6]
400180c0:	e3500000 	cmp	r0, #0
400180c4:	0a000003 	beq	400180d8 <CyU3PDmaMultiChannelCreate+0x104>
400180c8:	e1d600b0 	ldrh	r0, [r6]
400180cc:	e59f1634 	ldr	r1, [pc, #1588]	; 40018708 <CyU3PDmaMultiChannelCreate+0x734>
400180d0:	e1500001 	cmp	r0, r1
400180d4:	da000001 	ble	400180e0 <CyU3PDmaMultiChannelCreate+0x10c>
400180d8:	e3a00040 	mov	r0, #64	; 0x40
400180dc:	eaffffc3 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400180e0:	e3550005 	cmp	r5, #5
400180e4:	0a000001 	beq	400180f0 <CyU3PDmaMultiChannelCreate+0x11c>
400180e8:	e3550006 	cmp	r5, #6
400180ec:	1a000004 	bne	40018104 <CyU3PDmaMultiChannelCreate+0x130>
400180f0:	e1d600b0 	ldrh	r0, [r6]
400180f4:	e310000f 	tst	r0, #15
400180f8:	0a00000b 	beq	4001812c <CyU3PDmaMultiChannelCreate+0x158>
400180fc:	e3a00040 	mov	r0, #64	; 0x40
40018100:	eaffffba 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018104:	e1d600b0 	ldrh	r0, [r6]
40018108:	e1d611b8 	ldrh	r1, [r6, #24]
4001810c:	e0400001 	sub	r0, r0, r1
40018110:	e1d611ba 	ldrh	r1, [r6, #26]
40018114:	e0400001 	sub	r0, r0, r1
40018118:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
4001811c:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40018120:	0a000001 	beq	4001812c <CyU3PDmaMultiChannelCreate+0x158>
40018124:	e3a00040 	mov	r0, #64	; 0x40
40018128:	eaffffb0 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
4001812c:	e5d6001e 	ldrb	r0, [r6, #30]
40018130:	e3500002 	cmp	r0, #2
40018134:	ba000001 	blt	40018140 <CyU3PDmaMultiChannelCreate+0x16c>
40018138:	e3a00040 	mov	r0, #64	; 0x40
4001813c:	eaffffab 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018140:	e3550005 	cmp	r5, #5
40018144:	0a000001 	beq	40018150 <CyU3PDmaMultiChannelCreate+0x17c>
40018148:	e3550007 	cmp	r5, #7
4001814c:	1a000065 	bne	400182e8 <CyU3PDmaMultiChannelCreate+0x314>
40018150:	e1d601b6 	ldrh	r0, [r6, #22]
40018154:	e3500000 	cmp	r0, #0
40018158:	0a000008 	beq	40018180 <CyU3PDmaMultiChannelCreate+0x1ac>
4001815c:	e1d601b6 	ldrh	r0, [r6, #22]
40018160:	e1d610b2 	ldrh	r1, [r6, #2]
40018164:	e1500001 	cmp	r0, r1
40018168:	aa000002 	bge	40018178 <CyU3PDmaMultiChannelCreate+0x1a4>
4001816c:	e1d600b2 	ldrh	r0, [r6, #2]
40018170:	e350001f 	cmp	r0, #31
40018174:	da000001 	ble	40018180 <CyU3PDmaMultiChannelCreate+0x1ac>
40018178:	e3a00040 	mov	r0, #64	; 0x40
4001817c:	eaffff9b 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018180:	e3a09000 	mov	r9, #0
40018184:	ea00002b 	b	40018238 <CyU3PDmaMultiChannelCreate+0x264>
40018188:	e2860006 	add	r0, r6, #6
4001818c:	e0800089 	add	r0, r0, r9, lsl #1
40018190:	e1d000b0 	ldrh	r0, [r0]
40018194:	e3a0103f 	mov	r1, #63	; 0x3f
40018198:	e0018440 	and	r8, r1, r0, asr #8
4001819c:	e2860006 	add	r0, r6, #6
400181a0:	e0800089 	add	r0, r0, r9, lsl #1
400181a4:	e1d000b0 	ldrh	r0, [r0]
400181a8:	e20070ff 	and	r7, r0, #255	; 0xff
400181ac:	e2861006 	add	r1, r6, #6
400181b0:	e0811089 	add	r1, r1, r9, lsl #1
400181b4:	e1d100b0 	ldrh	r0, [r1]
400181b8:	ebfff3c4 	bl	400150d0 <CyU3PDmaSocketIsValidProducer>
400181bc:	e3500000 	cmp	r0, #0
400181c0:	1a000001 	bne	400181cc <CyU3PDmaMultiChannelCreate+0x1f8>
400181c4:	e3a00040 	mov	r0, #64	; 0x40
400181c8:	eaffff88 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400181cc:	e59f0538 	ldr	r0, [pc, #1336]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
400181d0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400181d4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400181d8:	e3500000 	cmp	r0, #0
400181dc:	0a000001 	beq	400181e8 <CyU3PDmaMultiChannelCreate+0x214>
400181e0:	e3a00040 	mov	r0, #64	; 0x40
400181e4:	eaffff81 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400181e8:	e2890001 	add	r0, r9, #1
400181ec:	e200a0ff 	and	sl, r0, #255	; 0xff
400181f0:	ea00000b 	b	40018224 <CyU3PDmaMultiChannelCreate+0x250>
400181f4:	e2860006 	add	r0, r6, #6
400181f8:	e0800089 	add	r0, r0, r9, lsl #1
400181fc:	e1d000b0 	ldrh	r0, [r0]
40018200:	e2861006 	add	r1, r6, #6
40018204:	e081108a 	add	r1, r1, sl, lsl #1
40018208:	e1d110b0 	ldrh	r1, [r1]
4001820c:	e1500001 	cmp	r0, r1
40018210:	1a000001 	bne	4001821c <CyU3PDmaMultiChannelCreate+0x248>
40018214:	e3a00040 	mov	r0, #64	; 0x40
40018218:	eaffff74 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
4001821c:	e28a0001 	add	r0, sl, #1
40018220:	e200a0ff 	and	sl, r0, #255	; 0xff
40018224:	e1d600b4 	ldrh	r0, [r6, #4]
40018228:	e150000a 	cmp	r0, sl
4001822c:	cafffff0 	bgt	400181f4 <CyU3PDmaMultiChannelCreate+0x220>
40018230:	e2890001 	add	r0, r9, #1
40018234:	e20090ff 	and	r9, r0, #255	; 0xff
40018238:	e1d600b4 	ldrh	r0, [r6, #4]
4001823c:	e1500009 	cmp	r0, r9
40018240:	caffffd0 	bgt	40018188 <CyU3PDmaMultiChannelCreate+0x1b4>
40018244:	e1d600be 	ldrh	r0, [r6, #14]
40018248:	e3a0103f 	mov	r1, #63	; 0x3f
4001824c:	e0018440 	and	r8, r1, r0, asr #8
40018250:	e1d600be 	ldrh	r0, [r6, #14]
40018254:	e20070ff 	and	r7, r0, #255	; 0xff
40018258:	e1d600be 	ldrh	r0, [r6, #14]
4001825c:	ebfff363 	bl	40014ff0 <CyU3PDmaSocketIsValidConsumer>
40018260:	e3500000 	cmp	r0, #0
40018264:	1a000001 	bne	40018270 <CyU3PDmaMultiChannelCreate+0x29c>
40018268:	e3a00040 	mov	r0, #64	; 0x40
4001826c:	eaffff5f 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018270:	e59f0494 	ldr	r0, [pc, #1172]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
40018274:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018278:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001827c:	e3500000 	cmp	r0, #0
40018280:	0a000001 	beq	4001828c <CyU3PDmaMultiChannelCreate+0x2b8>
40018284:	e3a00040 	mov	r0, #64	; 0x40
40018288:	eaffff58 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
4001828c:	e59f0478 	ldr	r0, [pc, #1144]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
40018290:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018294:	e7804107 	str	r4, [r0, r7, lsl #2]
40018298:	e3a09000 	mov	r9, #0
4001829c:	ea00000d 	b	400182d8 <CyU3PDmaMultiChannelCreate+0x304>
400182a0:	e2860006 	add	r0, r6, #6
400182a4:	e0800089 	add	r0, r0, r9, lsl #1
400182a8:	e1d000b0 	ldrh	r0, [r0]
400182ac:	e3a0103f 	mov	r1, #63	; 0x3f
400182b0:	e0018440 	and	r8, r1, r0, asr #8
400182b4:	e2860006 	add	r0, r6, #6
400182b8:	e0800089 	add	r0, r0, r9, lsl #1
400182bc:	e1d000b0 	ldrh	r0, [r0]
400182c0:	e20070ff 	and	r7, r0, #255	; 0xff
400182c4:	e59f0440 	ldr	r0, [pc, #1088]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
400182c8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400182cc:	e7804107 	str	r4, [r0, r7, lsl #2]
400182d0:	e2890001 	add	r0, r9, #1
400182d4:	e20090ff 	and	r9, r0, #255	; 0xff
400182d8:	e1d600b4 	ldrh	r0, [r6, #4]
400182dc:	e1500009 	cmp	r0, r9
400182e0:	caffffee 	bgt	400182a0 <CyU3PDmaMultiChannelCreate+0x2cc>
400182e4:	ea00005d 	b	40018460 <CyU3PDmaMultiChannelCreate+0x48c>
400182e8:	e1d601b6 	ldrh	r0, [r6, #22]
400182ec:	e3500000 	cmp	r0, #0
400182f0:	0a000001 	beq	400182fc <CyU3PDmaMultiChannelCreate+0x328>
400182f4:	e3a00040 	mov	r0, #64	; 0x40
400182f8:	eaffff3c 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400182fc:	e3a09000 	mov	r9, #0
40018300:	ea00002b 	b	400183b4 <CyU3PDmaMultiChannelCreate+0x3e0>
40018304:	e286000e 	add	r0, r6, #14
40018308:	e0800089 	add	r0, r0, r9, lsl #1
4001830c:	e1d000b0 	ldrh	r0, [r0]
40018310:	e3a0103f 	mov	r1, #63	; 0x3f
40018314:	e0018440 	and	r8, r1, r0, asr #8
40018318:	e286000e 	add	r0, r6, #14
4001831c:	e0800089 	add	r0, r0, r9, lsl #1
40018320:	e1d000b0 	ldrh	r0, [r0]
40018324:	e20070ff 	and	r7, r0, #255	; 0xff
40018328:	e286100e 	add	r1, r6, #14
4001832c:	e0811089 	add	r1, r1, r9, lsl #1
40018330:	e1d100b0 	ldrh	r0, [r1]
40018334:	ebfff32d 	bl	40014ff0 <CyU3PDmaSocketIsValidConsumer>
40018338:	e3500000 	cmp	r0, #0
4001833c:	1a000001 	bne	40018348 <CyU3PDmaMultiChannelCreate+0x374>
40018340:	e3a00040 	mov	r0, #64	; 0x40
40018344:	eaffff29 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018348:	e59f03bc 	ldr	r0, [pc, #956]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
4001834c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018350:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018354:	e3500000 	cmp	r0, #0
40018358:	0a000001 	beq	40018364 <CyU3PDmaMultiChannelCreate+0x390>
4001835c:	e3a00040 	mov	r0, #64	; 0x40
40018360:	eaffff22 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018364:	e2890001 	add	r0, r9, #1
40018368:	e200a0ff 	and	sl, r0, #255	; 0xff
4001836c:	ea00000b 	b	400183a0 <CyU3PDmaMultiChannelCreate+0x3cc>
40018370:	e286000e 	add	r0, r6, #14
40018374:	e0800089 	add	r0, r0, r9, lsl #1
40018378:	e1d000b0 	ldrh	r0, [r0]
4001837c:	e286100e 	add	r1, r6, #14
40018380:	e081108a 	add	r1, r1, sl, lsl #1
40018384:	e1d110b0 	ldrh	r1, [r1]
40018388:	e1500001 	cmp	r0, r1
4001838c:	1a000001 	bne	40018398 <CyU3PDmaMultiChannelCreate+0x3c4>
40018390:	e3a00040 	mov	r0, #64	; 0x40
40018394:	eaffff15 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018398:	e28a0001 	add	r0, sl, #1
4001839c:	e200a0ff 	and	sl, r0, #255	; 0xff
400183a0:	e1d600b4 	ldrh	r0, [r6, #4]
400183a4:	e150000a 	cmp	r0, sl
400183a8:	cafffff0 	bgt	40018370 <CyU3PDmaMultiChannelCreate+0x39c>
400183ac:	e2890001 	add	r0, r9, #1
400183b0:	e20090ff 	and	r9, r0, #255	; 0xff
400183b4:	e1d600b4 	ldrh	r0, [r6, #4]
400183b8:	e1500009 	cmp	r0, r9
400183bc:	caffffd0 	bgt	40018304 <CyU3PDmaMultiChannelCreate+0x330>
400183c0:	e1d600b6 	ldrh	r0, [r6, #6]
400183c4:	e3a0103f 	mov	r1, #63	; 0x3f
400183c8:	e0018440 	and	r8, r1, r0, asr #8
400183cc:	e1d600b6 	ldrh	r0, [r6, #6]
400183d0:	e20070ff 	and	r7, r0, #255	; 0xff
400183d4:	e1d600b6 	ldrh	r0, [r6, #6]
400183d8:	ebfff33c 	bl	400150d0 <CyU3PDmaSocketIsValidProducer>
400183dc:	e3500000 	cmp	r0, #0
400183e0:	1a000001 	bne	400183ec <CyU3PDmaMultiChannelCreate+0x418>
400183e4:	e3a00040 	mov	r0, #64	; 0x40
400183e8:	eaffff00 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
400183ec:	e59f0318 	ldr	r0, [pc, #792]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
400183f0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400183f4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400183f8:	e3500000 	cmp	r0, #0
400183fc:	0a000001 	beq	40018408 <CyU3PDmaMultiChannelCreate+0x434>
40018400:	e3a00040 	mov	r0, #64	; 0x40
40018404:	eafffef9 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018408:	e59f02fc 	ldr	r0, [pc, #764]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
4001840c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018410:	e7804107 	str	r4, [r0, r7, lsl #2]
40018414:	e3a09000 	mov	r9, #0
40018418:	ea00000d 	b	40018454 <CyU3PDmaMultiChannelCreate+0x480>
4001841c:	e286000e 	add	r0, r6, #14
40018420:	e0800089 	add	r0, r0, r9, lsl #1
40018424:	e1d000b0 	ldrh	r0, [r0]
40018428:	e3a0103f 	mov	r1, #63	; 0x3f
4001842c:	e0018440 	and	r8, r1, r0, asr #8
40018430:	e286000e 	add	r0, r6, #14
40018434:	e0800089 	add	r0, r0, r9, lsl #1
40018438:	e1d000b0 	ldrh	r0, [r0]
4001843c:	e20070ff 	and	r7, r0, #255	; 0xff
40018440:	e59f02c4 	ldr	r0, [pc, #708]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
40018444:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018448:	e7804107 	str	r4, [r0, r7, lsl #2]
4001844c:	e2890001 	add	r0, r9, #1
40018450:	e20090ff 	and	r9, r0, #255	; 0xff
40018454:	e1d600b4 	ldrh	r0, [r6, #4]
40018458:	e1500009 	cmp	r0, r9
4001845c:	caffffee 	bgt	4001841c <CyU3PDmaMultiChannelCreate+0x448>
40018460:	e1c450b4 	strh	r5, [r4, #4]
40018464:	e1d600b0 	ldrh	r0, [r6]
40018468:	e1c400b6 	strh	r0, [r4, #6]
4001846c:	e1d600b2 	ldrh	r0, [r6, #2]
40018470:	e1c400b8 	strh	r0, [r4, #8]
40018474:	e1d601b6 	ldrh	r0, [r6, #22]
40018478:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
4001847c:	e1d600b4 	ldrh	r0, [r6, #4]
40018480:	e1c400ba 	strh	r0, [r4, #10]
40018484:	e3a09000 	mov	r9, #0
40018488:	ea000014 	b	400184e0 <CyU3PDmaMultiChannelCreate+0x50c>
4001848c:	e2860006 	add	r0, r6, #6
40018490:	e0800089 	add	r0, r0, r9, lsl #1
40018494:	e1d000b0 	ldrh	r0, [r0]
40018498:	e2841024 	add	r1, r4, #36	; 0x24
4001849c:	e0811089 	add	r1, r1, r9, lsl #1
400184a0:	e1c100b0 	strh	r0, [r1]
400184a4:	e286000e 	add	r0, r6, #14
400184a8:	e0800089 	add	r0, r0, r9, lsl #1
400184ac:	e1d000b0 	ldrh	r0, [r0]
400184b0:	e284102c 	add	r1, r4, #44	; 0x2c
400184b4:	e0811089 	add	r1, r1, r9, lsl #1
400184b8:	e1c100b0 	strh	r0, [r1]
400184bc:	e3a00000 	mov	r0, #0
400184c0:	e284105c 	add	r1, r4, #92	; 0x5c
400184c4:	e0811089 	add	r1, r1, r9, lsl #1
400184c8:	e1c100b0 	strh	r0, [r1]
400184cc:	e2841064 	add	r1, r4, #100	; 0x64
400184d0:	e0811089 	add	r1, r1, r9, lsl #1
400184d4:	e1c100b0 	strh	r0, [r1]
400184d8:	e2890001 	add	r0, r9, #1
400184dc:	e20090ff 	and	r9, r0, #255	; 0xff
400184e0:	e3590004 	cmp	r9, #4
400184e4:	baffffe8 	blt	4001848c <CyU3PDmaMultiChannelCreate+0x4b8>
400184e8:	e1d601b8 	ldrh	r0, [r6, #24]
400184ec:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
400184f0:	e1d601ba 	ldrh	r0, [r6, #26]
400184f4:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400184f8:	e1d601bc 	ldrh	r0, [r6, #28]
400184fc:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018500:	e5d6001e 	ldrb	r0, [r6, #30]
40018504:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
40018508:	e5960020 	ldr	r0, [r6, #32]
4001850c:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018510:	e3a03038 	mov	r3, #56	; 0x38
40018514:	e3a02000 	mov	r2, #0
40018518:	e1a01002 	mov	r1, r2
4001851c:	e2840078 	add	r0, r4, #120	; 0x78
40018520:	ebffc6e9 	bl	4000a0cc <_txe_mutex_create>
40018524:	e3a02028 	mov	r2, #40	; 0x28
40018528:	e3a01000 	mov	r1, #0
4001852c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018530:	ebffc62b 	bl	40009de4 <_txe_event_flags_create>
40018534:	e5960024 	ldr	r0, [r6, #36]	; 0x24
40018538:	e58400d8 	str	r0, [r4, #216]	; 0xd8
4001853c:	e59f01cc 	ldr	r0, [pc, #460]	; 40018710 <CyU3PDmaMultiChannelCreate+0x73c>
40018540:	e5900000 	ldr	r0, [r0]
40018544:	e5840074 	str	r0, [r4, #116]	; 0x74
40018548:	e2450005 	sub	r0, r5, #5
4001854c:	e3500005 	cmp	r0, #5
40018550:	308ff100 	addcc	pc, pc, r0, lsl #2
40018554:	ea00001d 	b	400185d0 <CyU3PDmaMultiChannelCreate+0x5fc>
40018558:	ea000003 	b	4001856c <CyU3PDmaMultiChannelCreate+0x598>
4001855c:	ea000008 	b	40018584 <CyU3PDmaMultiChannelCreate+0x5b0>
40018560:	ea000003 	b	40018574 <CyU3PDmaMultiChannelCreate+0x5a0>
40018564:	ea000008 	b	4001858c <CyU3PDmaMultiChannelCreate+0x5b8>
40018568:	ea00000b 	b	4001859c <CyU3PDmaMultiChannelCreate+0x5c8>
4001856c:	e1a00000 	nop			; (mov r0, r0)
40018570:	e1a00000 	nop			; (mov r0, r0)
40018574:	e1a00004 	mov	r0, r4
40018578:	ebfffd1c 	bl	400179f0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
4001857c:	e1a0b000 	mov	fp, r0
40018580:	ea000015 	b	400185dc <CyU3PDmaMultiChannelCreate+0x608>
40018584:	e1a00000 	nop			; (mov r0, r0)
40018588:	e1a00000 	nop			; (mov r0, r0)
4001858c:	e1a00004 	mov	r0, r4
40018590:	ebfffdd1 	bl	40017cdc <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018594:	e1a0b000 	mov	fp, r0
40018598:	ea00000f 	b	400185dc <CyU3PDmaMultiChannelCreate+0x608>
4001859c:	e1a00000 	nop			; (mov r0, r0)
400185a0:	e59f016c 	ldr	r0, [pc, #364]	; 40018714 <CyU3PDmaMultiChannelCreate+0x740>
400185a4:	e5900000 	ldr	r0, [r0]
400185a8:	e3500000 	cmp	r0, #0
400185ac:	1a000001 	bne	400185b8 <CyU3PDmaMultiChannelCreate+0x5e4>
400185b0:	e3a0b047 	mov	fp, #71	; 0x47
400185b4:	ea000004 	b	400185cc <CyU3PDmaMultiChannelCreate+0x5f8>
400185b8:	e1a00004 	mov	r0, r4
400185bc:	e59f1150 	ldr	r1, [pc, #336]	; 40018714 <CyU3PDmaMultiChannelCreate+0x740>
400185c0:	e5911000 	ldr	r1, [r1]
400185c4:	e12fff31 	blx	r1
400185c8:	e1a0b000 	mov	fp, r0
400185cc:	ea000002 	b	400185dc <CyU3PDmaMultiChannelCreate+0x608>
400185d0:	e1a00000 	nop			; (mov r0, r0)
400185d4:	e3a0b040 	mov	fp, #64	; 0x40
400185d8:	e1a00000 	nop			; (mov r0, r0)
400185dc:	e1a00000 	nop			; (mov r0, r0)
400185e0:	e35b0000 	cmp	fp, #0
400185e4:	1a000002 	bne	400185f4 <CyU3PDmaMultiChannelCreate+0x620>
400185e8:	e3a00001 	mov	r0, #1
400185ec:	e5840000 	str	r0, [r4]
400185f0:	ea000042 	b	40018700 <CyU3PDmaMultiChannelCreate+0x72c>
400185f4:	e2840078 	add	r0, r4, #120	; 0x78
400185f8:	ebffc711 	bl	4000a244 <_txe_mutex_delete>
400185fc:	e28400b0 	add	r0, r4, #176	; 0xb0
40018600:	ebffc647 	bl	40009f24 <_txe_event_flags_delete>
40018604:	e3550005 	cmp	r5, #5
40018608:	0a000001 	beq	40018614 <CyU3PDmaMultiChannelCreate+0x640>
4001860c:	e3550007 	cmp	r5, #7
40018610:	1a00001d 	bne	4001868c <CyU3PDmaMultiChannelCreate+0x6b8>
40018614:	e1d600be 	ldrh	r0, [r6, #14]
40018618:	e3a0103f 	mov	r1, #63	; 0x3f
4001861c:	e0018440 	and	r8, r1, r0, asr #8
40018620:	e1d600be 	ldrh	r0, [r6, #14]
40018624:	e20070ff 	and	r7, r0, #255	; 0xff
40018628:	e3a00000 	mov	r0, #0
4001862c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
40018630:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018634:	e7810107 	str	r0, [r1, r7, lsl #2]
40018638:	e3a09000 	mov	r9, #0
4001863c:	ea00000e 	b	4001867c <CyU3PDmaMultiChannelCreate+0x6a8>
40018640:	e2860006 	add	r0, r6, #6
40018644:	e0800089 	add	r0, r0, r9, lsl #1
40018648:	e1d000b0 	ldrh	r0, [r0]
4001864c:	e3a0103f 	mov	r1, #63	; 0x3f
40018650:	e0018440 	and	r8, r1, r0, asr #8
40018654:	e2860006 	add	r0, r6, #6
40018658:	e0800089 	add	r0, r0, r9, lsl #1
4001865c:	e1d000b0 	ldrh	r0, [r0]
40018660:	e20070ff 	and	r7, r0, #255	; 0xff
40018664:	e3a00000 	mov	r0, #0
40018668:	e59f109c 	ldr	r1, [pc, #156]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
4001866c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018670:	e7810107 	str	r0, [r1, r7, lsl #2]
40018674:	e2890001 	add	r0, r9, #1
40018678:	e20090ff 	and	r9, r0, #255	; 0xff
4001867c:	e1d600b4 	ldrh	r0, [r6, #4]
40018680:	e1500009 	cmp	r0, r9
40018684:	caffffed 	bgt	40018640 <CyU3PDmaMultiChannelCreate+0x66c>
40018688:	ea00001c 	b	40018700 <CyU3PDmaMultiChannelCreate+0x72c>
4001868c:	e1d600b6 	ldrh	r0, [r6, #6]
40018690:	e3a0103f 	mov	r1, #63	; 0x3f
40018694:	e0018440 	and	r8, r1, r0, asr #8
40018698:	e1d600b6 	ldrh	r0, [r6, #6]
4001869c:	e20070ff 	and	r7, r0, #255	; 0xff
400186a0:	e3a00000 	mov	r0, #0
400186a4:	e59f1060 	ldr	r1, [pc, #96]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
400186a8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186ac:	e7810107 	str	r0, [r1, r7, lsl #2]
400186b0:	e3a09000 	mov	r9, #0
400186b4:	ea00000e 	b	400186f4 <CyU3PDmaMultiChannelCreate+0x720>
400186b8:	e286000e 	add	r0, r6, #14
400186bc:	e0800089 	add	r0, r0, r9, lsl #1
400186c0:	e1d000b0 	ldrh	r0, [r0]
400186c4:	e3a0103f 	mov	r1, #63	; 0x3f
400186c8:	e0018440 	and	r8, r1, r0, asr #8
400186cc:	e286000e 	add	r0, r6, #14
400186d0:	e0800089 	add	r0, r0, r9, lsl #1
400186d4:	e1d000b0 	ldrh	r0, [r0]
400186d8:	e20070ff 	and	r7, r0, #255	; 0xff
400186dc:	e3a00000 	mov	r0, #0
400186e0:	e59f1024 	ldr	r1, [pc, #36]	; 4001870c <CyU3PDmaMultiChannelCreate+0x738>
400186e4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186e8:	e7810107 	str	r0, [r1, r7, lsl #2]
400186ec:	e2890001 	add	r0, r9, #1
400186f0:	e20090ff 	and	r9, r0, #255	; 0xff
400186f4:	e1d600b4 	ldrh	r0, [r6, #4]
400186f8:	e1500009 	cmp	r0, r9
400186fc:	caffffed 	bgt	400186b8 <CyU3PDmaMultiChannelCreate+0x6e4>
40018700:	e1a0000b 	mov	r0, fp
40018704:	eafffe39 	b	40017ff0 <CyU3PDmaMultiChannelCreate+0x1c>
40018708:	0000fff0 	.word	0x0000fff0
4001870c:	40030d00 	.word	0x40030d00
40018710:	40030c64 	.word	0x40030c64
40018714:	40030cec 	.word	0x40030cec

Disassembly of section i.CyU3PDmaMultiChannelReset:

40018718 <CyU3PDmaMultiChannelReset>:
40018718:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001871c:	e1a04000 	mov	r4, r0
40018720:	e3e01000 	mvn	r1, #0
40018724:	e1a00004 	mov	r0, r4
40018728:	ebfffbab 	bl	400175dc <CyU3PDmaMultiChannelAcquireLock>
4001872c:	e1a06000 	mov	r6, r0
40018730:	e3560000 	cmp	r6, #0
40018734:	0a000001 	beq	40018740 <CyU3PDmaMultiChannelReset+0x28>
40018738:	e1a00006 	mov	r0, r6
4001873c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018740:	e1d400b4 	ldrh	r0, [r4, #4]
40018744:	e2400005 	sub	r0, r0, #5
40018748:	e3500005 	cmp	r0, #5
4001874c:	308ff100 	addcc	pc, pc, r0, lsl #2
40018750:	ea00001a 	b	400187c0 <CyU3PDmaMultiChannelReset+0xa8>
40018754:	ea000003 	b	40018768 <CyU3PDmaMultiChannelReset+0x50>
40018758:	ea000007 	b	4001877c <CyU3PDmaMultiChannelReset+0x64>
4001875c:	ea000003 	b	40018770 <CyU3PDmaMultiChannelReset+0x58>
40018760:	ea000007 	b	40018784 <CyU3PDmaMultiChannelReset+0x6c>
40018764:	ea000009 	b	40018790 <CyU3PDmaMultiChannelReset+0x78>
40018768:	e1a00000 	nop			; (mov r0, r0)
4001876c:	e1a00000 	nop			; (mov r0, r0)
40018770:	e1a00004 	mov	r0, r4
40018774:	eb00003c 	bl	4001886c <CyU3PDmaMultiChannelReset_TypeManyToOne>
40018778:	ea000012 	b	400187c8 <CyU3PDmaMultiChannelReset+0xb0>
4001877c:	e1a00000 	nop			; (mov r0, r0)
40018780:	e1a00000 	nop			; (mov r0, r0)
40018784:	e1a00004 	mov	r0, r4
40018788:	eb000083 	bl	4001899c <CyU3PDmaMultiChannelReset_TypeOneToMany>
4001878c:	ea00000d 	b	400187c8 <CyU3PDmaMultiChannelReset+0xb0>
40018790:	e1a00000 	nop			; (mov r0, r0)
40018794:	e59f00cc 	ldr	r0, [pc, #204]	; 40018868 <CyU3PDmaMultiChannelReset+0x150>
40018798:	e5900000 	ldr	r0, [r0]
4001879c:	e3500000 	cmp	r0, #0
400187a0:	1a000001 	bne	400187ac <CyU3PDmaMultiChannelReset+0x94>
400187a4:	e3a00047 	mov	r0, #71	; 0x47
400187a8:	eaffffe3 	b	4001873c <CyU3PDmaMultiChannelReset+0x24>
400187ac:	e1a00004 	mov	r0, r4
400187b0:	e59f10b0 	ldr	r1, [pc, #176]	; 40018868 <CyU3PDmaMultiChannelReset+0x150>
400187b4:	e5911000 	ldr	r1, [r1]
400187b8:	e12fff31 	blx	r1
400187bc:	ea000001 	b	400187c8 <CyU3PDmaMultiChannelReset+0xb0>
400187c0:	e1a00000 	nop			; (mov r0, r0)
400187c4:	e1a00000 	nop			; (mov r0, r0)
400187c8:	e1a00000 	nop			; (mov r0, r0)
400187cc:	ebffc0a7 	bl	40008a70 <_tx_thread_identify>
400187d0:	e1a05000 	mov	r5, r0
400187d4:	e3550000 	cmp	r5, #0
400187d8:	0a000003 	beq	400187ec <CyU3PDmaMultiChannelReset+0xd4>
400187dc:	e1a0200d 	mov	r2, sp
400187e0:	e3a01002 	mov	r1, #2
400187e4:	e1a00005 	mov	r0, r5
400187e8:	ebffc8ae 	bl	4000aaa8 <_txe_thread_priority_change>
400187ec:	e3a02002 	mov	r2, #2
400187f0:	e3e01047 	mvn	r1, #71	; 0x47
400187f4:	e28400b0 	add	r0, r4, #176	; 0xb0
400187f8:	ebffc619 	bl	4000a064 <_txe_event_flags_set>
400187fc:	e3a02000 	mov	r2, #0
40018800:	e3a01020 	mov	r1, #32
40018804:	e28400b0 	add	r0, r4, #176	; 0xb0
40018808:	ebffc615 	bl	4000a064 <_txe_event_flags_set>
4001880c:	e3a00001 	mov	r0, #1
40018810:	e5840000 	str	r0, [r4]
40018814:	e2840078 	add	r0, r4, #120	; 0x78
40018818:	ebffc6de 	bl	4000a398 <_txe_mutex_put>
4001881c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018820:	e3500000 	cmp	r0, #0
40018824:	0a000007 	beq	40018848 <CyU3PDmaMultiChannelReset+0x130>
40018828:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001882c:	e3100020 	tst	r0, #32
40018830:	0a000004 	beq	40018848 <CyU3PDmaMultiChannelReset+0x130>
40018834:	e3a02000 	mov	r2, #0
40018838:	e3a01020 	mov	r1, #32
4001883c:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018840:	e1a00004 	mov	r0, r4
40018844:	e12fff33 	blx	r3
40018848:	e3550000 	cmp	r5, #0
4001884c:	0a000003 	beq	40018860 <CyU3PDmaMultiChannelReset+0x148>
40018850:	e1a0200d 	mov	r2, sp
40018854:	e1a00005 	mov	r0, r5
40018858:	e59d1000 	ldr	r1, [sp]
4001885c:	ebffc891 	bl	4000aaa8 <_txe_thread_priority_change>
40018860:	e3a00000 	mov	r0, #0
40018864:	eaffffb4 	b	4001873c <CyU3PDmaMultiChannelReset+0x24>
40018868:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

4001886c <CyU3PDmaMultiChannelReset_TypeManyToOne>:
4001886c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018870:	e1a04000 	mov	r4, r0
40018874:	e1a00004 	mov	r0, r4
40018878:	eb000215 	bl	400190d4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
4001887c:	e1d451bc 	ldrh	r5, [r4, #28]
40018880:	e1d400b8 	ldrh	r0, [r4, #8]
40018884:	e1d410ba 	ldrh	r1, [r4, #10]
40018888:	e0000091 	mul	r0, r1, r0
4001888c:	e1a06800 	lsl	r6, r0, #16
40018890:	e1a06826 	lsr	r6, r6, #16
40018894:	ea00000c 	b	400188cc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018898:	e1a0100d 	mov	r1, sp
4001889c:	e1a00005 	mov	r0, r5
400188a0:	eb002808 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400188a4:	e59d000c 	ldr	r0, [sp, #12]
400188a8:	e59f10e4 	ldr	r1, [pc, #228]	; 40018994 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400188ac:	e0000001 	and	r0, r0, r1
400188b0:	e58d000c 	str	r0, [sp, #12]
400188b4:	e1a0100d 	mov	r1, sp
400188b8:	e1a00005 	mov	r0, r5
400188bc:	eb00281c 	bl	40022934 <CyU3PDmaDscrSetConfig>
400188c0:	e59d0008 	ldr	r0, [sp, #8]
400188c4:	e1a05800 	lsl	r5, r0, #16
400188c8:	e1a05825 	lsr	r5, r5, #16
400188cc:	e1b00006 	movs	r0, r6
400188d0:	e2461001 	sub	r1, r6, #1
400188d4:	e1a06801 	lsl	r6, r1, #16
400188d8:	e1a06826 	lsr	r6, r6, #16
400188dc:	1affffed 	bne	40018898 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
400188e0:	e1d400b4 	ldrh	r0, [r4, #4]
400188e4:	e3500007 	cmp	r0, #7
400188e8:	1a000021 	bne	40018974 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
400188ec:	e3a07000 	mov	r7, #0
400188f0:	ea00001c 	b	40018968 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400188f4:	e2840014 	add	r0, r4, #20
400188f8:	e0800087 	add	r0, r0, r7, lsl #1
400188fc:	e1d000b0 	ldrh	r0, [r0]
40018900:	e284103e 	add	r1, r4, #62	; 0x3e
40018904:	e0811087 	add	r1, r1, r7, lsl #1
40018908:	e1c100b0 	strh	r0, [r1]
4001890c:	e1a05000 	mov	r5, r0
40018910:	e3a06000 	mov	r6, #0
40018914:	ea00000e 	b	40018954 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
40018918:	e1a0100d 	mov	r1, sp
4001891c:	e1a00005 	mov	r0, r5
40018920:	eb0027e8 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40018924:	e59d000c 	ldr	r0, [sp, #12]
40018928:	e59f1064 	ldr	r1, [pc, #100]	; 40018994 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001892c:	e0000001 	and	r0, r0, r1
40018930:	e58d000c 	str	r0, [sp, #12]
40018934:	e1a0100d 	mov	r1, sp
40018938:	e1a00005 	mov	r0, r5
4001893c:	eb0027fc 	bl	40022934 <CyU3PDmaDscrSetConfig>
40018940:	e59d0008 	ldr	r0, [sp, #8]
40018944:	e59f104c 	ldr	r1, [pc, #76]	; 40018998 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
40018948:	e0015820 	and	r5, r1, r0, lsr #16
4001894c:	e2860001 	add	r0, r6, #1
40018950:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018954:	e1d400b8 	ldrh	r0, [r4, #8]
40018958:	e1500006 	cmp	r0, r6
4001895c:	caffffed 	bgt	40018918 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
40018960:	e2870001 	add	r0, r7, #1
40018964:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018968:	e1d400ba 	ldrh	r0, [r4, #10]
4001896c:	e1500007 	cmp	r0, r7
40018970:	caffffdf 	bgt	400188f4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
40018974:	e1d401b4 	ldrh	r0, [r4, #20]
40018978:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
4001897c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018980:	e1d401bc 	ldrh	r0, [r4, #28]
40018984:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018988:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001898c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018990:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018994:	0000fff0 	.word	0x0000fff0
40018998:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

4001899c <CyU3PDmaMultiChannelReset_TypeOneToMany>:
4001899c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400189a0:	e1a04000 	mov	r4, r0
400189a4:	e1a00004 	mov	r0, r4
400189a8:	eb000229 	bl	40019254 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
400189ac:	e1d451b4 	ldrh	r5, [r4, #20]
400189b0:	e1d400b8 	ldrh	r0, [r4, #8]
400189b4:	e1d410ba 	ldrh	r1, [r4, #10]
400189b8:	e0000091 	mul	r0, r1, r0
400189bc:	e1a06800 	lsl	r6, r0, #16
400189c0:	e1a06826 	lsr	r6, r6, #16
400189c4:	ea00000c 	b	400189fc <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
400189c8:	e1a0100d 	mov	r1, sp
400189cc:	e1a00005 	mov	r0, r5
400189d0:	eb0027bc 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400189d4:	e59d000c 	ldr	r0, [sp, #12]
400189d8:	e59f10e4 	ldr	r1, [pc, #228]	; 40018ac4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400189dc:	e0000001 	and	r0, r0, r1
400189e0:	e58d000c 	str	r0, [sp, #12]
400189e4:	e1a0100d 	mov	r1, sp
400189e8:	e1a00005 	mov	r0, r5
400189ec:	eb0027d0 	bl	40022934 <CyU3PDmaDscrSetConfig>
400189f0:	e59d0008 	ldr	r0, [sp, #8]
400189f4:	e59f10cc 	ldr	r1, [pc, #204]	; 40018ac8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
400189f8:	e0015820 	and	r5, r1, r0, lsr #16
400189fc:	e1b00006 	movs	r0, r6
40018a00:	e2461001 	sub	r1, r6, #1
40018a04:	e1a06801 	lsl	r6, r1, #16
40018a08:	e1a06826 	lsr	r6, r6, #16
40018a0c:	1affffed 	bne	400189c8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018a10:	e1d400b4 	ldrh	r0, [r4, #4]
40018a14:	e3500008 	cmp	r0, #8
40018a18:	1a000021 	bne	40018aa4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
40018a1c:	e3a07000 	mov	r7, #0
40018a20:	ea00001c 	b	40018a98 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018a24:	e284001c 	add	r0, r4, #28
40018a28:	e0800087 	add	r0, r0, r7, lsl #1
40018a2c:	e1d000b0 	ldrh	r0, [r0]
40018a30:	e2841046 	add	r1, r4, #70	; 0x46
40018a34:	e0811087 	add	r1, r1, r7, lsl #1
40018a38:	e1c100b0 	strh	r0, [r1]
40018a3c:	e1a05000 	mov	r5, r0
40018a40:	e3a06000 	mov	r6, #0
40018a44:	ea00000e 	b	40018a84 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018a48:	e1a0100d 	mov	r1, sp
40018a4c:	e1a00005 	mov	r0, r5
40018a50:	eb00279c 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40018a54:	e59d000c 	ldr	r0, [sp, #12]
40018a58:	e59f1064 	ldr	r1, [pc, #100]	; 40018ac4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018a5c:	e0000001 	and	r0, r0, r1
40018a60:	e58d000c 	str	r0, [sp, #12]
40018a64:	e1a0100d 	mov	r1, sp
40018a68:	e1a00005 	mov	r0, r5
40018a6c:	eb0027b0 	bl	40022934 <CyU3PDmaDscrSetConfig>
40018a70:	e59d0008 	ldr	r0, [sp, #8]
40018a74:	e1a05800 	lsl	r5, r0, #16
40018a78:	e1a05825 	lsr	r5, r5, #16
40018a7c:	e2860001 	add	r0, r6, #1
40018a80:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018a84:	e1d400b8 	ldrh	r0, [r4, #8]
40018a88:	e1500006 	cmp	r0, r6
40018a8c:	caffffed 	bgt	40018a48 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018a90:	e2870001 	add	r0, r7, #1
40018a94:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a98:	e1d400ba 	ldrh	r0, [r4, #10]
40018a9c:	e1500007 	cmp	r0, r7
40018aa0:	caffffdf 	bgt	40018a24 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018aa4:	e1d401b4 	ldrh	r0, [r4, #20]
40018aa8:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018aac:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018ab0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018ab4:	e1d401bc 	ldrh	r0, [r4, #28]
40018ab8:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018abc:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018ac0:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018ac4:	0000fff0 	.word	0x0000fff0
40018ac8:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018acc <CyU3PDmaMultiChannelSetXfer>:
40018acc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018ad0:	e1a04000 	mov	r4, r0
40018ad4:	e1a05001 	mov	r5, r1
40018ad8:	e1a06002 	mov	r6, r2
40018adc:	e3e01000 	mvn	r1, #0
40018ae0:	e1a00004 	mov	r0, r4
40018ae4:	ebfffabc 	bl	400175dc <CyU3PDmaMultiChannelAcquireLock>
40018ae8:	e1a07000 	mov	r7, r0
40018aec:	e3570000 	cmp	r7, #0
40018af0:	0a000001 	beq	40018afc <CyU3PDmaMultiChannelSetXfer+0x30>
40018af4:	e1a00007 	mov	r0, r7
40018af8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018afc:	e5940000 	ldr	r0, [r4]
40018b00:	e3500001 	cmp	r0, #1
40018b04:	0a000000 	beq	40018b0c <CyU3PDmaMultiChannelSetXfer+0x40>
40018b08:	e3a07043 	mov	r7, #67	; 0x43
40018b0c:	e1d400ba 	ldrh	r0, [r4, #10]
40018b10:	e1500006 	cmp	r0, r6
40018b14:	ca000000 	bgt	40018b1c <CyU3PDmaMultiChannelSetXfer+0x50>
40018b18:	e3a07040 	mov	r7, #64	; 0x40
40018b1c:	e1d400b4 	ldrh	r0, [r4, #4]
40018b20:	e3500009 	cmp	r0, #9
40018b24:	1a000002 	bne	40018b34 <CyU3PDmaMultiChannelSetXfer+0x68>
40018b28:	e3560000 	cmp	r6, #0
40018b2c:	0a000000 	beq	40018b34 <CyU3PDmaMultiChannelSetXfer+0x68>
40018b30:	e3a07040 	mov	r7, #64	; 0x40
40018b34:	e3570000 	cmp	r7, #0
40018b38:	1a00002d 	bne	40018bf4 <CyU3PDmaMultiChannelSetXfer+0x128>
40018b3c:	e3a02002 	mov	r2, #2
40018b40:	e3e01027 	mvn	r1, #39	; 0x27
40018b44:	e28400b0 	add	r0, r4, #176	; 0xb0
40018b48:	ebffc545 	bl	4000a064 <_txe_event_flags_set>
40018b4c:	e5845070 	str	r5, [r4, #112]	; 0x70
40018b50:	e1d400b4 	ldrh	r0, [r4, #4]
40018b54:	e2400005 	sub	r0, r0, #5
40018b58:	e3500005 	cmp	r0, #5
40018b5c:	308ff100 	addcc	pc, pc, r0, lsl #2
40018b60:	ea000020 	b	40018be8 <CyU3PDmaMultiChannelSetXfer+0x11c>
40018b64:	ea000003 	b	40018b78 <CyU3PDmaMultiChannelSetXfer+0xac>
40018b68:	ea000009 	b	40018b94 <CyU3PDmaMultiChannelSetXfer+0xc8>
40018b6c:	ea000003 	b	40018b80 <CyU3PDmaMultiChannelSetXfer+0xb4>
40018b70:	ea000009 	b	40018b9c <CyU3PDmaMultiChannelSetXfer+0xd0>
40018b74:	ea00000d 	b	40018bb0 <CyU3PDmaMultiChannelSetXfer+0xe4>
40018b78:	e1a00000 	nop			; (mov r0, r0)
40018b7c:	e1a00000 	nop			; (mov r0, r0)
40018b80:	e1a02006 	mov	r2, r6
40018b84:	e1a01005 	mov	r1, r5
40018b88:	e1a00004 	mov	r0, r4
40018b8c:	eb00001d 	bl	40018c08 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018b90:	ea000016 	b	40018bf0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018b94:	e1a00000 	nop			; (mov r0, r0)
40018b98:	e1a00000 	nop			; (mov r0, r0)
40018b9c:	e1a02006 	mov	r2, r6
40018ba0:	e1a01005 	mov	r1, r5
40018ba4:	e1a00004 	mov	r0, r4
40018ba8:	eb0000b2 	bl	40018e78 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018bac:	ea00000f 	b	40018bf0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018bb0:	e1a00000 	nop			; (mov r0, r0)
40018bb4:	e59f0048 	ldr	r0, [pc, #72]	; 40018c04 <CyU3PDmaMultiChannelSetXfer+0x138>
40018bb8:	e5900000 	ldr	r0, [r0]
40018bbc:	e3500000 	cmp	r0, #0
40018bc0:	1a000001 	bne	40018bcc <CyU3PDmaMultiChannelSetXfer+0x100>
40018bc4:	e3a00047 	mov	r0, #71	; 0x47
40018bc8:	eaffffca 	b	40018af8 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018bcc:	e1a02006 	mov	r2, r6
40018bd0:	e1a01005 	mov	r1, r5
40018bd4:	e1a00004 	mov	r0, r4
40018bd8:	e59f3024 	ldr	r3, [pc, #36]	; 40018c04 <CyU3PDmaMultiChannelSetXfer+0x138>
40018bdc:	e5933000 	ldr	r3, [r3]
40018be0:	e12fff33 	blx	r3
40018be4:	ea000001 	b	40018bf0 <CyU3PDmaMultiChannelSetXfer+0x124>
40018be8:	e1a00000 	nop			; (mov r0, r0)
40018bec:	e1a00000 	nop			; (mov r0, r0)
40018bf0:	e1a00000 	nop			; (mov r0, r0)
40018bf4:	e2840078 	add	r0, r4, #120	; 0x78
40018bf8:	ebffc5e6 	bl	4000a398 <_txe_mutex_put>
40018bfc:	e1a00007 	mov	r0, r7
40018c00:	eaffffbc 	b	40018af8 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018c04:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018c08 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018c08:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018c0c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018c10:	e1a04000 	mov	r4, r0
40018c14:	e1a05001 	mov	r5, r1
40018c18:	e1a06002 	mov	r6, r2
40018c1c:	e3a00002 	mov	r0, #2
40018c20:	e5840000 	str	r0, [r4]
40018c24:	e3a07000 	mov	r7, #0
40018c28:	ea000005 	b	40018c44 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018c2c:	e2841024 	add	r1, r4, #36	; 0x24
40018c30:	e0811087 	add	r1, r1, r7, lsl #1
40018c34:	e1d100b0 	ldrh	r0, [r1]
40018c38:	ebfff0ac 	bl	40014ef0 <CyU3PDmaSocketDisable>
40018c3c:	e2870001 	add	r0, r7, #1
40018c40:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c44:	e1d400ba 	ldrh	r0, [r4, #10]
40018c48:	e1500007 	cmp	r0, r7
40018c4c:	cafffff6 	bgt	40018c2c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018c50:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c54:	ebfff0a5 	bl	40014ef0 <CyU3PDmaSocketDisable>
40018c58:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018c5c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c60:	ebfff1bd 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40018c64:	e2840014 	add	r0, r4, #20
40018c68:	e0800086 	add	r0, r0, r6, lsl #1
40018c6c:	e1d000b0 	ldrh	r0, [r0]
40018c70:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018c74:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018c78:	e3a07000 	mov	r7, #0
40018c7c:	ea000040 	b	40018d84 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018c80:	e2841024 	add	r1, r4, #36	; 0x24
40018c84:	e0811087 	add	r1, r1, r7, lsl #1
40018c88:	e1d100b0 	ldrh	r0, [r1]
40018c8c:	e28d1010 	add	r1, sp, #16
40018c90:	ebfff0ae 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40018c94:	e3a00000 	mov	r0, #0
40018c98:	e58d0014 	str	r0, [sp, #20]
40018c9c:	e58d0018 	str	r0, [sp, #24]
40018ca0:	e59d001c 	ldr	r0, [sp, #28]
40018ca4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018ca8:	e58d001c 	str	r0, [sp, #28]
40018cac:	e59d001c 	ldr	r0, [sp, #28]
40018cb0:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018cb4:	e58d001c 	str	r0, [sp, #28]
40018cb8:	e59d001c 	ldr	r0, [sp, #28]
40018cbc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018cc0:	e58d001c 	str	r0, [sp, #28]
40018cc4:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018cc8:	e3500001 	cmp	r0, #1
40018ccc:	1a000003 	bne	40018ce0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018cd0:	e59d001c 	ldr	r0, [sp, #28]
40018cd4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018cd8:	e58d001c 	str	r0, [sp, #28]
40018cdc:	ea000002 	b	40018cec <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018ce0:	e59d001c 	ldr	r0, [sp, #28]
40018ce4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018ce8:	e58d001c 	str	r0, [sp, #28]
40018cec:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018cf0:	e3500000 	cmp	r0, #0
40018cf4:	0a000006 	beq	40018d14 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018cf8:	e1d400b8 	ldrh	r0, [r4, #8]
40018cfc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018d00:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018d04:	e1800281 	orr	r0, r0, r1, lsl #5
40018d08:	e59d101c 	ldr	r1, [sp, #28]
40018d0c:	e1800001 	orr	r0, r0, r1
40018d10:	e58d001c 	str	r0, [sp, #28]
40018d14:	e3e00000 	mvn	r0, #0
40018d18:	e58d0020 	str	r0, [sp, #32]
40018d1c:	e1570006 	cmp	r7, r6
40018d20:	ba000004 	blt	40018d38 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018d24:	e2840014 	add	r0, r4, #20
40018d28:	e0800087 	add	r0, r0, r7, lsl #1
40018d2c:	e1d000b0 	ldrh	r0, [r0]
40018d30:	e58d0010 	str	r0, [sp, #16]
40018d34:	ea000007 	b	40018d58 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018d38:	e2841014 	add	r1, r4, #20
40018d3c:	e0811087 	add	r1, r1, r7, lsl #1
40018d40:	e1d100b0 	ldrh	r0, [r1]
40018d44:	e1a0100d 	mov	r1, sp
40018d48:	eb0026de 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40018d4c:	e59d0008 	ldr	r0, [sp, #8]
40018d50:	e1a00820 	lsr	r0, r0, #16
40018d54:	e58d0010 	str	r0, [sp, #16]
40018d58:	e284103e 	add	r1, r4, #62	; 0x3e
40018d5c:	e0811087 	add	r1, r1, r7, lsl #1
40018d60:	e59d0010 	ldr	r0, [sp, #16]
40018d64:	e1c100b0 	strh	r0, [r1]
40018d68:	e2841024 	add	r1, r4, #36	; 0x24
40018d6c:	e0811087 	add	r1, r1, r7, lsl #1
40018d70:	e1d100b0 	ldrh	r0, [r1]
40018d74:	e28d1010 	add	r1, sp, #16
40018d78:	ebfff11e 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40018d7c:	e2870001 	add	r0, r7, #1
40018d80:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018d84:	e1d400ba 	ldrh	r0, [r4, #10]
40018d88:	e1500007 	cmp	r0, r7
40018d8c:	caffffbb 	bgt	40018c80 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018d90:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d94:	e28d1010 	add	r1, sp, #16
40018d98:	ebfff06c 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40018d9c:	e58d5014 	str	r5, [sp, #20]
40018da0:	e3a00000 	mov	r0, #0
40018da4:	e58d0018 	str	r0, [sp, #24]
40018da8:	e3550000 	cmp	r5, #0
40018dac:	1a000006 	bne	40018dcc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018db0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018db4:	e3c00080 	bic	r0, r0, #128	; 0x80
40018db8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018dbc:	e59d001c 	ldr	r0, [sp, #28]
40018dc0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018dc4:	e58d001c 	str	r0, [sp, #28]
40018dc8:	ea000005 	b	40018de4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018dcc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018dd0:	e3800080 	orr	r0, r0, #128	; 0x80
40018dd4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018dd8:	e59d001c 	ldr	r0, [sp, #28]
40018ddc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018de0:	e58d001c 	str	r0, [sp, #28]
40018de4:	e59d001c 	ldr	r0, [sp, #28]
40018de8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018dec:	e58d001c 	str	r0, [sp, #28]
40018df0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018df4:	e3500001 	cmp	r0, #1
40018df8:	1a000003 	bne	40018e0c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018dfc:	e59d001c 	ldr	r0, [sp, #28]
40018e00:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018e04:	e58d001c 	str	r0, [sp, #28]
40018e08:	ea000002 	b	40018e18 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018e0c:	e59d001c 	ldr	r0, [sp, #28]
40018e10:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018e14:	e58d001c 	str	r0, [sp, #28]
40018e18:	e3e00000 	mvn	r0, #0
40018e1c:	e58d0020 	str	r0, [sp, #32]
40018e20:	e1d481bc 	ldrh	r8, [r4, #28]
40018e24:	e3a07000 	mov	r7, #0
40018e28:	ea000007 	b	40018e4c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018e2c:	e1a0100d 	mov	r1, sp
40018e30:	e1a00008 	mov	r0, r8
40018e34:	eb0026a3 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40018e38:	e59d0008 	ldr	r0, [sp, #8]
40018e3c:	e1a08800 	lsl	r8, r0, #16
40018e40:	e1a08828 	lsr	r8, r8, #16
40018e44:	e2870001 	add	r0, r7, #1
40018e48:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018e4c:	e1570006 	cmp	r7, r6
40018e50:	bafffff5 	blt	40018e2c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018e54:	e58d8010 	str	r8, [sp, #16]
40018e58:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018e5c:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018e60:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018e64:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e68:	e28d1010 	add	r1, sp, #16
40018e6c:	ebfff0e1 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40018e70:	e28dd028 	add	sp, sp, #40	; 0x28
40018e74:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018e78 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018e78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018e7c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018e80:	e1a04000 	mov	r4, r0
40018e84:	e1a05001 	mov	r5, r1
40018e88:	e1a06002 	mov	r6, r2
40018e8c:	e3a00002 	mov	r0, #2
40018e90:	e5840000 	str	r0, [r4]
40018e94:	e3a07000 	mov	r7, #0
40018e98:	ea000005 	b	40018eb4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018e9c:	e284102c 	add	r1, r4, #44	; 0x2c
40018ea0:	e0811087 	add	r1, r1, r7, lsl #1
40018ea4:	e1d100b0 	ldrh	r0, [r1]
40018ea8:	ebfff010 	bl	40014ef0 <CyU3PDmaSocketDisable>
40018eac:	e2870001 	add	r0, r7, #1
40018eb0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018eb4:	e1d400ba 	ldrh	r0, [r4, #10]
40018eb8:	e1500007 	cmp	r0, r7
40018ebc:	cafffff6 	bgt	40018e9c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018ec0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ec4:	ebfff009 	bl	40014ef0 <CyU3PDmaSocketDisable>
40018ec8:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018ecc:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ed0:	ebfff121 	bl	4001535c <CyU3PDmaUpdateSocketSuspendOption>
40018ed4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ed8:	e28d1010 	add	r1, sp, #16
40018edc:	ebfff01b 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40018ee0:	e58d5014 	str	r5, [sp, #20]
40018ee4:	e3a00000 	mov	r0, #0
40018ee8:	e58d0018 	str	r0, [sp, #24]
40018eec:	e3550000 	cmp	r5, #0
40018ef0:	1a000006 	bne	40018f10 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018ef4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018ef8:	e3c00080 	bic	r0, r0, #128	; 0x80
40018efc:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018f00:	e59d001c 	ldr	r0, [sp, #28]
40018f04:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018f08:	e58d001c 	str	r0, [sp, #28]
40018f0c:	ea000005 	b	40018f28 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018f10:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018f14:	e3800080 	orr	r0, r0, #128	; 0x80
40018f18:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018f1c:	e59d001c 	ldr	r0, [sp, #28]
40018f20:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018f24:	e58d001c 	str	r0, [sp, #28]
40018f28:	e59d001c 	ldr	r0, [sp, #28]
40018f2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018f30:	e58d001c 	str	r0, [sp, #28]
40018f34:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018f38:	e3500001 	cmp	r0, #1
40018f3c:	1a000003 	bne	40018f50 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018f40:	e59d001c 	ldr	r0, [sp, #28]
40018f44:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018f48:	e58d001c 	str	r0, [sp, #28]
40018f4c:	ea000002 	b	40018f5c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018f50:	e59d001c 	ldr	r0, [sp, #28]
40018f54:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018f58:	e58d001c 	str	r0, [sp, #28]
40018f5c:	e3e00000 	mvn	r0, #0
40018f60:	e58d0020 	str	r0, [sp, #32]
40018f64:	e1d481b4 	ldrh	r8, [r4, #20]
40018f68:	e3a07000 	mov	r7, #0
40018f6c:	ea000007 	b	40018f90 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018f70:	e1a0100d 	mov	r1, sp
40018f74:	e1a00008 	mov	r0, r8
40018f78:	eb002652 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40018f7c:	e59d0008 	ldr	r0, [sp, #8]
40018f80:	e59f1148 	ldr	r1, [pc, #328]	; 400190d0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018f84:	e0018820 	and	r8, r1, r0, lsr #16
40018f88:	e2870001 	add	r0, r7, #1
40018f8c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018f90:	e1570006 	cmp	r7, r6
40018f94:	bafffff5 	blt	40018f70 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018f98:	e58d8010 	str	r8, [sp, #16]
40018f9c:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018fa0:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018fa4:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018fa8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018fac:	e28d1010 	add	r1, sp, #16
40018fb0:	ebfff090 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40018fb4:	e284001c 	add	r0, r4, #28
40018fb8:	e0800086 	add	r0, r0, r6, lsl #1
40018fbc:	e1d000b0 	ldrh	r0, [r0]
40018fc0:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018fc4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018fc8:	e3a07000 	mov	r7, #0
40018fcc:	ea00003a 	b	400190bc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018fd0:	e284102c 	add	r1, r4, #44	; 0x2c
40018fd4:	e0811087 	add	r1, r1, r7, lsl #1
40018fd8:	e1d100b0 	ldrh	r0, [r1]
40018fdc:	e28d1010 	add	r1, sp, #16
40018fe0:	ebffefda 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40018fe4:	e3a00000 	mov	r0, #0
40018fe8:	e58d0014 	str	r0, [sp, #20]
40018fec:	e58d0018 	str	r0, [sp, #24]
40018ff0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018ff4:	e3c00080 	bic	r0, r0, #128	; 0x80
40018ff8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ffc:	e59d001c 	ldr	r0, [sp, #28]
40019000:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40019004:	e58d001c 	str	r0, [sp, #28]
40019008:	e59d001c 	ldr	r0, [sp, #28]
4001900c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40019010:	e58d001c 	str	r0, [sp, #28]
40019014:	e59d001c 	ldr	r0, [sp, #28]
40019018:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001901c:	e58d001c 	str	r0, [sp, #28]
40019020:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40019024:	e3500001 	cmp	r0, #1
40019028:	1a000003 	bne	4001903c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
4001902c:	e59d001c 	ldr	r0, [sp, #28]
40019030:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40019034:	e58d001c 	str	r0, [sp, #28]
40019038:	ea000002 	b	40019048 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
4001903c:	e59d001c 	ldr	r0, [sp, #28]
40019040:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40019044:	e58d001c 	str	r0, [sp, #28]
40019048:	e3e00000 	mvn	r0, #0
4001904c:	e58d0020 	str	r0, [sp, #32]
40019050:	e1570006 	cmp	r7, r6
40019054:	ba000004 	blt	4001906c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40019058:	e284001c 	add	r0, r4, #28
4001905c:	e0800087 	add	r0, r0, r7, lsl #1
40019060:	e1d000b0 	ldrh	r0, [r0]
40019064:	e58d0010 	str	r0, [sp, #16]
40019068:	ea000008 	b	40019090 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
4001906c:	e284101c 	add	r1, r4, #28
40019070:	e0811087 	add	r1, r1, r7, lsl #1
40019074:	e1d100b0 	ldrh	r0, [r1]
40019078:	e1a0100d 	mov	r1, sp
4001907c:	eb002611 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019080:	e59d0008 	ldr	r0, [sp, #8]
40019084:	e1a00800 	lsl	r0, r0, #16
40019088:	e1a00820 	lsr	r0, r0, #16
4001908c:	e58d0010 	str	r0, [sp, #16]
40019090:	e2841046 	add	r1, r4, #70	; 0x46
40019094:	e0811087 	add	r1, r1, r7, lsl #1
40019098:	e59d0010 	ldr	r0, [sp, #16]
4001909c:	e1c100b0 	strh	r0, [r1]
400190a0:	e284102c 	add	r1, r4, #44	; 0x2c
400190a4:	e0811087 	add	r1, r1, r7, lsl #1
400190a8:	e1d100b0 	ldrh	r0, [r1]
400190ac:	e28d1010 	add	r1, sp, #16
400190b0:	ebfff050 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400190b4:	e2870001 	add	r0, r7, #1
400190b8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400190bc:	e1d400ba 	ldrh	r0, [r4, #10]
400190c0:	e1500007 	cmp	r0, r7
400190c4:	caffffc1 	bgt	40018fd0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
400190c8:	e28dd028 	add	sp, sp, #40	; 0x28
400190cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400190d0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

400190d4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
400190d4:	e92d4030 	push	{r4, r5, lr}
400190d8:	e24dd01c 	sub	sp, sp, #28
400190dc:	e1a04000 	mov	r4, r0
400190e0:	e3a05000 	mov	r5, #0
400190e4:	ea000031 	b	400191b0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
400190e8:	e2840014 	add	r0, r4, #20
400190ec:	e0800085 	add	r0, r0, r5, lsl #1
400190f0:	e1d000b0 	ldrh	r0, [r0]
400190f4:	e284103e 	add	r1, r4, #62	; 0x3e
400190f8:	e0811085 	add	r1, r1, r5, lsl #1
400190fc:	e1c100b0 	strh	r0, [r1]
40019100:	e2841024 	add	r1, r4, #36	; 0x24
40019104:	e0811085 	add	r1, r1, r5, lsl #1
40019108:	e1d100b0 	ldrh	r0, [r1]
4001910c:	ebffef77 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019110:	e2841024 	add	r1, r4, #36	; 0x24
40019114:	e0811085 	add	r1, r1, r5, lsl #1
40019118:	e1d100b0 	ldrh	r0, [r1]
4001911c:	e28d1004 	add	r1, sp, #4
40019120:	ebffef8a 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40019124:	e2840014 	add	r0, r4, #20
40019128:	e0800085 	add	r0, r0, r5, lsl #1
4001912c:	e1d000b0 	ldrh	r0, [r0]
40019130:	e58d0004 	str	r0, [sp, #4]
40019134:	e3a00000 	mov	r0, #0
40019138:	e58d0008 	str	r0, [sp, #8]
4001913c:	e58d000c 	str	r0, [sp, #12]
40019140:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019144:	e58d0010 	str	r0, [sp, #16]
40019148:	e2841024 	add	r1, r4, #36	; 0x24
4001914c:	e0811085 	add	r1, r1, r5, lsl #1
40019150:	e1d100b0 	ldrh	r0, [r1]
40019154:	eb0006a3 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
40019158:	e3500000 	cmp	r0, #0
4001915c:	0a000002 	beq	4001916c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40019160:	e59d0010 	ldr	r0, [sp, #16]
40019164:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019168:	e58d0010 	str	r0, [sp, #16]
4001916c:	e3e00000 	mvn	r0, #0
40019170:	e58d0014 	str	r0, [sp, #20]
40019174:	e1d400b4 	ldrh	r0, [r4, #4]
40019178:	e3500005 	cmp	r0, #5
4001917c:	1a000002 	bne	4001918c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40019180:	e3a00040 	mov	r0, #64	; 0x40
40019184:	e58d0018 	str	r0, [sp, #24]
40019188:	ea000001 	b	40019194 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
4001918c:	e3a00041 	mov	r0, #65	; 0x41
40019190:	e58d0018 	str	r0, [sp, #24]
40019194:	e2841024 	add	r1, r4, #36	; 0x24
40019198:	e0811085 	add	r1, r1, r5, lsl #1
4001919c:	e1d100b0 	ldrh	r0, [r1]
400191a0:	e28d1004 	add	r1, sp, #4
400191a4:	ebfff013 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400191a8:	e2850001 	add	r0, r5, #1
400191ac:	e3c05801 	bic	r5, r0, #65536	; 0x10000
400191b0:	e1d400ba 	ldrh	r0, [r4, #10]
400191b4:	e1500005 	cmp	r0, r5
400191b8:	caffffca 	bgt	400190e8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
400191bc:	e1d401bc 	ldrh	r0, [r4, #28]
400191c0:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400191c4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191c8:	ebffef48 	bl	40014ef0 <CyU3PDmaSocketDisable>
400191cc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191d0:	e28d1004 	add	r1, sp, #4
400191d4:	ebffef5d 	bl	40014f50 <CyU3PDmaSocketGetConfig>
400191d8:	e1d401bc 	ldrh	r0, [r4, #28]
400191dc:	e58d0004 	str	r0, [sp, #4]
400191e0:	e3a00000 	mov	r0, #0
400191e4:	e58d0008 	str	r0, [sp, #8]
400191e8:	e58d000c 	str	r0, [sp, #12]
400191ec:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400191f0:	e58d0010 	str	r0, [sp, #16]
400191f4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191f8:	eb00067a 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
400191fc:	e3500000 	cmp	r0, #0
40019200:	0a000002 	beq	40019210 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40019204:	e59d0010 	ldr	r0, [sp, #16]
40019208:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001920c:	e58d0010 	str	r0, [sp, #16]
40019210:	e3e00000 	mvn	r0, #0
40019214:	e58d0014 	str	r0, [sp, #20]
40019218:	e1d400b4 	ldrh	r0, [r4, #4]
4001921c:	e3500005 	cmp	r0, #5
40019220:	1a000002 	bne	40019230 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40019224:	e3a000c0 	mov	r0, #192	; 0xc0
40019228:	e58d0018 	str	r0, [sp, #24]
4001922c:	ea000001 	b	40019238 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40019230:	e3a000c2 	mov	r0, #194	; 0xc2
40019234:	e58d0018 	str	r0, [sp, #24]
40019238:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001923c:	e28d1004 	add	r1, sp, #4
40019240:	ebffefec 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40019244:	e3a00000 	mov	r0, #0
40019248:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
4001924c:	e28dd01c 	add	sp, sp, #28
40019250:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40019254 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40019254:	e92d4030 	push	{r4, r5, lr}
40019258:	e24dd01c 	sub	sp, sp, #28
4001925c:	e1a04000 	mov	r4, r0
40019260:	e1d401b4 	ldrh	r0, [r4, #20]
40019264:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40019268:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001926c:	ebffef1f 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019270:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019274:	e28d1004 	add	r1, sp, #4
40019278:	ebffef34 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001927c:	e1d401b4 	ldrh	r0, [r4, #20]
40019280:	e58d0004 	str	r0, [sp, #4]
40019284:	e3a00000 	mov	r0, #0
40019288:	e58d0008 	str	r0, [sp, #8]
4001928c:	e58d000c 	str	r0, [sp, #12]
40019290:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019294:	e58d0010 	str	r0, [sp, #16]
40019298:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001929c:	eb000651 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
400192a0:	e3500000 	cmp	r0, #0
400192a4:	0a000002 	beq	400192b4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
400192a8:	e59d0010 	ldr	r0, [sp, #16]
400192ac:	e3800b01 	orr	r0, r0, #1024	; 0x400
400192b0:	e58d0010 	str	r0, [sp, #16]
400192b4:	e3e00000 	mvn	r0, #0
400192b8:	e58d0014 	str	r0, [sp, #20]
400192bc:	e1d400b4 	ldrh	r0, [r4, #4]
400192c0:	e3500006 	cmp	r0, #6
400192c4:	1a000002 	bne	400192d4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
400192c8:	e3a000c0 	mov	r0, #192	; 0xc0
400192cc:	e58d0018 	str	r0, [sp, #24]
400192d0:	ea000001 	b	400192dc <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
400192d4:	e3a000c1 	mov	r0, #193	; 0xc1
400192d8:	e58d0018 	str	r0, [sp, #24]
400192dc:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400192e0:	e28d1004 	add	r1, sp, #4
400192e4:	ebffefc3 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400192e8:	e3a05000 	mov	r5, #0
400192ec:	ea000035 	b	400193c8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
400192f0:	e284001c 	add	r0, r4, #28
400192f4:	e0800085 	add	r0, r0, r5, lsl #1
400192f8:	e1d000b0 	ldrh	r0, [r0]
400192fc:	e2841046 	add	r1, r4, #70	; 0x46
40019300:	e0811085 	add	r1, r1, r5, lsl #1
40019304:	e1c100b0 	strh	r0, [r1]
40019308:	e284102c 	add	r1, r4, #44	; 0x2c
4001930c:	e0811085 	add	r1, r1, r5, lsl #1
40019310:	e1d100b0 	ldrh	r0, [r1]
40019314:	ebffeef5 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019318:	e284102c 	add	r1, r4, #44	; 0x2c
4001931c:	e0811085 	add	r1, r1, r5, lsl #1
40019320:	e1d100b0 	ldrh	r0, [r1]
40019324:	e28d1004 	add	r1, sp, #4
40019328:	ebffef08 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001932c:	e284001c 	add	r0, r4, #28
40019330:	e0800085 	add	r0, r0, r5, lsl #1
40019334:	e1d000b0 	ldrh	r0, [r0]
40019338:	e58d0004 	str	r0, [sp, #4]
4001933c:	e3a00000 	mov	r0, #0
40019340:	e58d0008 	str	r0, [sp, #8]
40019344:	e58d000c 	str	r0, [sp, #12]
40019348:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001934c:	e58d0010 	str	r0, [sp, #16]
40019350:	e284102c 	add	r1, r4, #44	; 0x2c
40019354:	e0811085 	add	r1, r1, r5, lsl #1
40019358:	e1d100b0 	ldrh	r0, [r1]
4001935c:	eb000621 	bl	4001abe8 <CyU3PDmaIsSockAvlEnReqd>
40019360:	e3500000 	cmp	r0, #0
40019364:	0a000002 	beq	40019374 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40019368:	e59d0010 	ldr	r0, [sp, #16]
4001936c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019370:	e58d0010 	str	r0, [sp, #16]
40019374:	e3e00000 	mvn	r0, #0
40019378:	e58d0014 	str	r0, [sp, #20]
4001937c:	e1d400b4 	ldrh	r0, [r4, #4]
40019380:	e3500006 	cmp	r0, #6
40019384:	1a000002 	bne	40019394 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40019388:	e3a00040 	mov	r0, #64	; 0x40
4001938c:	e58d0018 	str	r0, [sp, #24]
40019390:	ea000001 	b	4001939c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019394:	e3a00042 	mov	r0, #66	; 0x42
40019398:	e58d0018 	str	r0, [sp, #24]
4001939c:	e284102c 	add	r1, r4, #44	; 0x2c
400193a0:	e0811085 	add	r1, r1, r5, lsl #1
400193a4:	e1d100b0 	ldrh	r0, [r1]
400193a8:	e28d1004 	add	r1, sp, #4
400193ac:	ebffef91 	bl	400151f8 <CyU3PDmaSocketSetConfig>
400193b0:	e3a00000 	mov	r0, #0
400193b4:	e2841064 	add	r1, r4, #100	; 0x64
400193b8:	e0811085 	add	r1, r1, r5, lsl #1
400193bc:	e1c100b0 	strh	r0, [r1]
400193c0:	e2850001 	add	r0, r5, #1
400193c4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
400193c8:	e1d400ba 	ldrh	r0, [r4, #10]
400193cc:	e1500005 	cmp	r0, r5
400193d0:	caffffc6 	bgt	400192f0 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
400193d4:	e28dd01c 	add	sp, sp, #28
400193d8:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

400193dc <CyU3PDmaMultiChannelSetWrapUp>:
400193dc:	e92d4070 	push	{r4, r5, r6, lr}
400193e0:	e1a04000 	mov	r4, r0
400193e4:	e1a05001 	mov	r5, r1
400193e8:	e3e01000 	mvn	r1, #0
400193ec:	e1a00004 	mov	r0, r4
400193f0:	ebfff879 	bl	400175dc <CyU3PDmaMultiChannelAcquireLock>
400193f4:	e1a06000 	mov	r6, r0
400193f8:	e3560000 	cmp	r6, #0
400193fc:	0a000001 	beq	40019408 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40019400:	e1a00006 	mov	r0, r6
40019404:	e8bd8070 	pop	{r4, r5, r6, pc}
40019408:	e5940000 	ldr	r0, [r4]
4001940c:	e3500004 	cmp	r0, #4
40019410:	0a000003 	beq	40019424 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019414:	e5940000 	ldr	r0, [r4]
40019418:	e3500002 	cmp	r0, #2
4001941c:	0a000000 	beq	40019424 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019420:	e3a06047 	mov	r6, #71	; 0x47
40019424:	e1d400b4 	ldrh	r0, [r4, #4]
40019428:	e3500006 	cmp	r0, #6
4001942c:	0a000005 	beq	40019448 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019430:	e1d400b4 	ldrh	r0, [r4, #4]
40019434:	e3500008 	cmp	r0, #8
40019438:	0a000002 	beq	40019448 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
4001943c:	e1d400b4 	ldrh	r0, [r4, #4]
40019440:	e3500009 	cmp	r0, #9
40019444:	1a000003 	bne	40019458 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40019448:	e3550000 	cmp	r5, #0
4001944c:	0a000005 	beq	40019468 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019450:	e3a06040 	mov	r6, #64	; 0x40
40019454:	ea000003 	b	40019468 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019458:	e1d400ba 	ldrh	r0, [r4, #10]
4001945c:	e1500005 	cmp	r0, r5
40019460:	ca000000 	bgt	40019468 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019464:	e3a06040 	mov	r6, #64	; 0x40
40019468:	e3560000 	cmp	r6, #0
4001946c:	1a000003 	bne	40019480 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40019470:	e2841024 	add	r1, r4, #36	; 0x24
40019474:	e0811085 	add	r1, r1, r5, lsl #1
40019478:	e1d100b0 	ldrh	r0, [r1]
4001947c:	ebffef88 	bl	400152a4 <CyU3PDmaSocketSetWrapUp>
40019480:	e2840078 	add	r0, r4, #120	; 0x78
40019484:	ebffc3c3 	bl	4000a398 <_txe_mutex_put>
40019488:	e1a00006 	mov	r0, r6
4001948c:	eaffffdc 	b	40019404 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019490 <CyU3PDmaApplicationDefine>:
40019490:	e92d4010 	push	{r4, lr}
40019494:	e24dd020 	sub	sp, sp, #32
40019498:	eb000051 	bl	400195e4 <CyU3PDmaInit>
4001949c:	e3a02028 	mov	r2, #40	; 0x28
400194a0:	e3a01000 	mov	r1, #0
400194a4:	e59f007c 	ldr	r0, [pc, #124]	; 40019528 <CyU3PDmaApplicationDefine+0x98>
400194a8:	ebffc24d 	bl	40009de4 <_txe_event_flags_create>
400194ac:	e3a00c02 	mov	r0, #512	; 0x200
400194b0:	ebffa86f 	bl	40003674 <CyU3PMemAlloc>
400194b4:	e1a04000 	mov	r4, r0
400194b8:	e3a0303c 	mov	r3, #60	; 0x3c
400194bc:	e3a02c02 	mov	r2, #512	; 0x200
400194c0:	e1cd20f0 	strd	r2, [sp]
400194c4:	e1a03004 	mov	r3, r4
400194c8:	e3a02004 	mov	r2, #4
400194cc:	e3a01000 	mov	r1, #0
400194d0:	e59f0054 	ldr	r0, [pc, #84]	; 4001952c <CyU3PDmaApplicationDefine+0x9c>
400194d4:	ebffc3d7 	bl	4000a438 <_txe_queue_create>
400194d8:	e3a00b01 	mov	r0, #1024	; 0x400
400194dc:	ebffa864 	bl	40003674 <CyU3PMemAlloc>
400194e0:	e1a04000 	mov	r4, r0
400194e4:	e3a030a8 	mov	r3, #168	; 0xa8
400194e8:	e3a02001 	mov	r2, #1
400194ec:	e3a01000 	mov	r1, #0
400194f0:	e3a00002 	mov	r0, #2
400194f4:	e28dc00c 	add	ip, sp, #12
400194f8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400194fc:	e3a02b01 	mov	r2, #1024	; 0x400
40019500:	e1a03001 	mov	r3, r1
40019504:	e58d2004 	str	r2, [sp, #4]
40019508:	e59f2020 	ldr	r2, [pc, #32]	; 40019530 <CyU3PDmaApplicationDefine+0xa0>
4001950c:	e28f1020 	add	r1, pc, #32
40019510:	e58d0008 	str	r0, [sp, #8]
40019514:	e59f0028 	ldr	r0, [pc, #40]	; 40019544 <CyU3PDmaApplicationDefine+0xb4>
40019518:	e58d4000 	str	r4, [sp]
4001951c:	ebffc4ab 	bl	4000a7d0 <_txe_thread_create>
40019520:	e28dd020 	add	sp, sp, #32
40019524:	e8bd8010 	pop	{r4, pc}
40019528:	4003190c 	.word	0x4003190c
4001952c:	40031934 	.word	0x40031934
40019530:	4001ad94 	.word	0x4001ad94
40019534:	445f3130 	.word	0x445f3130
40019538:	545f414d 	.word	0x545f414d
4001953c:	41455248 	.word	0x41455248
40019540:	00000044 	.word	0x00000044
40019544:	40031864 	.word	0x40031864

Disassembly of section i.CyU3PDmaChannelHandleError:

40019548 <CyU3PDmaChannelHandleError>:
40019548:	e92d4010 	push	{r4, lr}
4001954c:	e1a04000 	mov	r4, r0
40019550:	e3e01000 	mvn	r1, #0
40019554:	e284003c 	add	r0, r4, #60	; 0x3c
40019558:	ebffc359 	bl	4000a2c4 <_txe_mutex_get>
4001955c:	e1d400b4 	ldrh	r0, [r4, #4]
40019560:	e3500004 	cmp	r0, #4
40019564:	0a000001 	beq	40019570 <CyU3PDmaChannelHandleError+0x28>
40019568:	e1d401b0 	ldrh	r0, [r4, #16]
4001956c:	ebffee5f 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019570:	e1d400b4 	ldrh	r0, [r4, #4]
40019574:	e3500003 	cmp	r0, #3
40019578:	0a000001 	beq	40019584 <CyU3PDmaChannelHandleError+0x3c>
4001957c:	e1d401b2 	ldrh	r0, [r4, #18]
40019580:	ebffee5a 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019584:	e3a02002 	mov	r2, #2
40019588:	e3e01007 	mvn	r1, #7
4001958c:	e2840074 	add	r0, r4, #116	; 0x74
40019590:	ebffc2b3 	bl	4000a064 <_txe_event_flags_set>
40019594:	e3a02000 	mov	r2, #0
40019598:	e3a01040 	mov	r1, #64	; 0x40
4001959c:	e2840074 	add	r0, r4, #116	; 0x74
400195a0:	ebffc2af 	bl	4000a064 <_txe_event_flags_set>
400195a4:	e3a00005 	mov	r0, #5
400195a8:	e5840000 	str	r0, [r4]
400195ac:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400195b0:	e3500000 	cmp	r0, #0
400195b4:	0a000007 	beq	400195d8 <CyU3PDmaChannelHandleError+0x90>
400195b8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400195bc:	e3100040 	tst	r0, #64	; 0x40
400195c0:	0a000004 	beq	400195d8 <CyU3PDmaChannelHandleError+0x90>
400195c4:	e3a02000 	mov	r2, #0
400195c8:	e3a01040 	mov	r1, #64	; 0x40
400195cc:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400195d0:	e1a00004 	mov	r0, r4
400195d4:	e12fff33 	blx	r3
400195d8:	e284003c 	add	r0, r4, #60	; 0x3c
400195dc:	ebffc36d 	bl	4000a398 <_txe_mutex_put>
400195e0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

400195e4 <CyU3PDmaInit>:
400195e4:	e92d4010 	push	{r4, lr}
400195e8:	e3a02020 	mov	r2, #32
400195ec:	e3a01000 	mov	r1, #0
400195f0:	e59f006c 	ldr	r0, [pc, #108]	; 40019664 <CyU3PDmaInit+0x80>
400195f4:	ebffa82f 	bl	400036b8 <CyU3PMemSet>
400195f8:	e3a02080 	mov	r2, #128	; 0x80
400195fc:	e3a01000 	mov	r1, #0
40019600:	e59f0060 	ldr	r0, [pc, #96]	; 40019668 <CyU3PDmaInit+0x84>
40019604:	ebffa82b 	bl	400036b8 <CyU3PMemSet>
40019608:	e3a02020 	mov	r2, #32
4001960c:	e3a01000 	mov	r1, #0
40019610:	e59f0054 	ldr	r0, [pc, #84]	; 4001966c <CyU3PDmaInit+0x88>
40019614:	ebffa827 	bl	400036b8 <CyU3PMemSet>
40019618:	e3a02040 	mov	r2, #64	; 0x40
4001961c:	e3a01000 	mov	r1, #0
40019620:	e59f0048 	ldr	r0, [pc, #72]	; 40019670 <CyU3PDmaInit+0x8c>
40019624:	ebffa823 	bl	400036b8 <CyU3PMemSet>
40019628:	e3a02040 	mov	r2, #64	; 0x40
4001962c:	e3a01000 	mov	r1, #0
40019630:	e59f003c 	ldr	r0, [pc, #60]	; 40019674 <CyU3PDmaInit+0x90>
40019634:	ebffa81f 	bl	400036b8 <CyU3PMemSet>
40019638:	e3a00000 	mov	r0, #0
4001963c:	e59f1034 	ldr	r1, [pc, #52]	; 40019678 <CyU3PDmaInit+0x94>
40019640:	e5810000 	str	r0, [r1]
40019644:	eb002463 	bl	400227d8 <CyU3PDmaDscrListCreate>
40019648:	ebffa95b 	bl	40003bbc <CyU3PDmaBufferInit>
4001964c:	e3a00000 	mov	r0, #0
40019650:	e59f1024 	ldr	r1, [pc, #36]	; 4001967c <CyU3PDmaInit+0x98>
40019654:	e1c100b0 	strh	r0, [r1]
40019658:	e59f1020 	ldr	r1, [pc, #32]	; 40019680 <CyU3PDmaInit+0x9c>
4001965c:	e1c100b0 	strh	r0, [r1]
40019660:	e8bd8010 	pop	{r4, pc}
40019664:	40031724 	.word	0x40031724
40019668:	40031744 	.word	0x40031744
4001966c:	400317c4 	.word	0x400317c4
40019670:	400317e4 	.word	0x400317e4
40019674:	40031824 	.word	0x40031824
40019678:	40030cd4 	.word	0x40030cd4
4001967c:	40030cfc 	.word	0x40030cfc
40019680:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019684 <CyU3PDmaIntHandler_TypeAuto>:
40019684:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019688:	e24dd01c 	sub	sp, sp, #28
4001968c:	e1a04000 	mov	r4, r0
40019690:	e5949004 	ldr	r9, [r4, #4]
40019694:	e5948008 	ldr	r8, [r4, #8]
40019698:	e3180040 	tst	r8, #64	; 0x40
4001969c:	0a000003 	beq	400196b0 <CyU3PDmaIntHandler_TypeAuto+0x2c>
400196a0:	e1a00009 	mov	r0, r9
400196a4:	ebffffa7 	bl	40019548 <CyU3PDmaChannelHandleError>
400196a8:	e28dd01c 	add	sp, sp, #28
400196ac:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400196b0:	e3e01000 	mvn	r1, #0
400196b4:	e289003c 	add	r0, r9, #60	; 0x3c
400196b8:	ebffc301 	bl	4000a2c4 <_txe_mutex_get>
400196bc:	e1d901b2 	ldrh	r0, [r9, #18]
400196c0:	e5941000 	ldr	r1, [r4]
400196c4:	e1500821 	cmp	r0, r1, lsr #16
400196c8:	1a00004b 	bne	400197fc <CyU3PDmaIntHandler_TypeAuto+0x178>
400196cc:	e1d901b2 	ldrh	r0, [r9, #18]
400196d0:	e3a0103f 	mov	r1, #63	; 0x3f
400196d4:	e0015440 	and	r5, r1, r0, asr #8
400196d8:	e1d901b2 	ldrh	r0, [r9, #18]
400196dc:	e20060ff 	and	r6, r0, #255	; 0xff
400196e0:	e594000c 	ldr	r0, [r4, #12]
400196e4:	e1a07800 	lsl	r7, r0, #16
400196e8:	e1a07827 	lsr	r7, r7, #16
400196ec:	e3180080 	tst	r8, #128	; 0x80
400196f0:	0a000012 	beq	40019740 <CyU3PDmaIntHandler_TypeAuto+0xbc>
400196f4:	e3a00001 	mov	r0, #1
400196f8:	e5890000 	str	r0, [r9]
400196fc:	e3a02000 	mov	r2, #0
40019700:	e3a01001 	mov	r1, #1
40019704:	e2890074 	add	r0, r9, #116	; 0x74
40019708:	ebffc255 	bl	4000a064 <_txe_event_flags_set>
4001970c:	ebffe599 	bl	40012d78 <CyU3PSysBarrierSync>
40019710:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019714:	e3500000 	cmp	r0, #0
40019718:	0a000028 	beq	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001971c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019720:	e3100001 	tst	r0, #1
40019724:	0a000025 	beq	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019728:	e3a02000 	mov	r2, #0
4001972c:	e3a01001 	mov	r1, #1
40019730:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019734:	e1a00009 	mov	r0, r9
40019738:	e12fff33 	blx	r3
4001973c:	ea00001f 	b	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019740:	e3180002 	tst	r8, #2
40019744:	0a00001d 	beq	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019748:	e5990000 	ldr	r0, [r9]
4001974c:	e3500003 	cmp	r0, #3
40019750:	1a00001a 	bne	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019754:	e3a00001 	mov	r0, #1
40019758:	e5890000 	str	r0, [r9]
4001975c:	e59f0284 	ldr	r0, [pc, #644]	; 400199e8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019760:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019764:	e0800386 	add	r0, r0, r6, lsl #7
40019768:	e5900014 	ldr	r0, [r0, #20]
4001976c:	e3c00002 	bic	r0, r0, #2
40019770:	e59f1270 	ldr	r1, [pc, #624]	; 400199e8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019774:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019778:	e0811386 	add	r1, r1, r6, lsl #7
4001977c:	e5810014 	str	r0, [r1, #20]
40019780:	e3a02000 	mov	r2, #0
40019784:	e3a01002 	mov	r1, #2
40019788:	e2890074 	add	r0, r9, #116	; 0x74
4001978c:	ebffc234 	bl	4000a064 <_txe_event_flags_set>
40019790:	ebffe578 	bl	40012d78 <CyU3PSysBarrierSync>
40019794:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019798:	e3500000 	cmp	r0, #0
4001979c:	0a000007 	beq	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197a0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400197a4:	e3100002 	tst	r0, #2
400197a8:	0a000004 	beq	400197c0 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197ac:	e3a02000 	mov	r2, #0
400197b0:	e3a01002 	mov	r1, #2
400197b4:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197b8:	e1a00009 	mov	r0, r9
400197bc:	e12fff33 	blx	r3
400197c0:	e3180e12 	tst	r8, #288	; 0x120
400197c4:	0a000084 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400197c8:	ebffe56a 	bl	40012d78 <CyU3PSysBarrierSync>
400197cc:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400197d0:	e3500000 	cmp	r0, #0
400197d4:	0a000080 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400197d8:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400197dc:	e3100c01 	tst	r0, #256	; 0x100
400197e0:	0a00007d 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400197e4:	e3a02000 	mov	r2, #0
400197e8:	e3a01c01 	mov	r1, #256	; 0x100
400197ec:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197f0:	e1a00009 	mov	r0, r9
400197f4:	e12fff33 	blx	r3
400197f8:	ea000077 	b	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400197fc:	e1d901b0 	ldrh	r0, [r9, #16]
40019800:	e3a0103f 	mov	r1, #63	; 0x3f
40019804:	e0015440 	and	r5, r1, r0, asr #8
40019808:	e1d901b0 	ldrh	r0, [r9, #16]
4001980c:	e20060ff 	and	r6, r0, #255	; 0xff
40019810:	e594000c 	ldr	r0, [r4, #12]
40019814:	e1a07800 	lsl	r7, r0, #16
40019818:	e1a07827 	lsr	r7, r7, #16
4001981c:	e3180001 	tst	r8, #1
40019820:	0a00005f 	beq	400199a4 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019824:	e5990000 	ldr	r0, [r9]
40019828:	e3500004 	cmp	r0, #4
4001982c:	0a00002b 	beq	400198e0 <CyU3PDmaIntHandler_TypeAuto+0x25c>
40019830:	e1a00000 	nop			; (mov r0, r0)
40019834:	e1d901b6 	ldrh	r0, [r9, #22]
40019838:	e28d100c 	add	r1, sp, #12
4001983c:	eb002421 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019840:	e59d000c 	ldr	r0, [sp, #12]
40019844:	e58d0000 	str	r0, [sp]
40019848:	e59d0018 	ldr	r0, [sp, #24]
4001984c:	e59f1198 	ldr	r1, [pc, #408]	; 400199ec <CyU3PDmaIntHandler_TypeAuto+0x368>
40019850:	e0010820 	and	r0, r1, r0, lsr #16
40019854:	e1cd00b4 	strh	r0, [sp, #4]
40019858:	e241100f 	sub	r1, r1, #15
4001985c:	e59d0018 	ldr	r0, [sp, #24]
40019860:	e0000001 	and	r0, r0, r1
40019864:	e1cd00b6 	strh	r0, [sp, #6]
40019868:	e59d0018 	ldr	r0, [sp, #24]
4001986c:	e200000f 	and	r0, r0, #15
40019870:	e1cd00b8 	strh	r0, [sp, #8]
40019874:	e1811241 	orr	r1, r1, r1, asr #4
40019878:	e59d0014 	ldr	r0, [sp, #20]
4001987c:	e0010820 	and	r0, r1, r0, lsr #16
40019880:	e1c901b6 	strh	r0, [r9, #22]
40019884:	ebffe53b 	bl	40012d78 <CyU3PSysBarrierSync>
40019888:	e5990038 	ldr	r0, [r9, #56]	; 0x38
4001988c:	e3500000 	cmp	r0, #0
40019890:	0a000002 	beq	400198a0 <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019894:	e1dd10b6 	ldrh	r1, [sp, #6]
40019898:	e59d0000 	ldr	r0, [sp]
4001989c:	ebffe2dc 	bl	40012414 <CyU3PSysFlushDRegion>
400198a0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400198a4:	e3500000 	cmp	r0, #0
400198a8:	0a000007 	beq	400198cc <CyU3PDmaIntHandler_TypeAuto+0x248>
400198ac:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400198b0:	e3100008 	tst	r0, #8
400198b4:	0a000004 	beq	400198cc <CyU3PDmaIntHandler_TypeAuto+0x248>
400198b8:	e1a0200d 	mov	r2, sp
400198bc:	e3a01008 	mov	r1, #8
400198c0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400198c4:	e1a00009 	mov	r0, r9
400198c8:	e12fff33 	blx	r3
400198cc:	e1d901b6 	ldrh	r0, [r9, #22]
400198d0:	e1500007 	cmp	r0, r7
400198d4:	1affffd6 	bne	40019834 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
400198d8:	e1c971be 	strh	r7, [r9, #30]
400198dc:	ea000030 	b	400199a4 <CyU3PDmaIntHandler_TypeAuto+0x320>
400198e0:	e1d901b4 	ldrh	r0, [r9, #20]
400198e4:	e28d100c 	add	r1, sp, #12
400198e8:	eb0023f6 	bl	400228c8 <CyU3PDmaDscrGetConfig>
400198ec:	e59d000c 	ldr	r0, [sp, #12]
400198f0:	e58d0000 	str	r0, [sp]
400198f4:	e59d0018 	ldr	r0, [sp, #24]
400198f8:	e59f10ec 	ldr	r1, [pc, #236]	; 400199ec <CyU3PDmaIntHandler_TypeAuto+0x368>
400198fc:	e0010820 	and	r0, r1, r0, lsr #16
40019900:	e1cd00b4 	strh	r0, [sp, #4]
40019904:	e241100f 	sub	r1, r1, #15
40019908:	e59d0018 	ldr	r0, [sp, #24]
4001990c:	e0000001 	and	r0, r0, r1
40019910:	e1cd00b6 	strh	r0, [sp, #6]
40019914:	e59d0018 	ldr	r0, [sp, #24]
40019918:	e200000f 	and	r0, r0, #15
4001991c:	e1cd00b8 	strh	r0, [sp, #8]
40019920:	e3a00001 	mov	r0, #1
40019924:	e5890000 	str	r0, [r9]
40019928:	e59f00b8 	ldr	r0, [pc, #184]	; 400199e8 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001992c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019930:	e0800386 	add	r0, r0, r6, lsl #7
40019934:	e5900014 	ldr	r0, [r0, #20]
40019938:	e3c00001 	bic	r0, r0, #1
4001993c:	e59f10a4 	ldr	r1, [pc, #164]	; 400199e8 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019940:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019944:	e0811386 	add	r1, r1, r6, lsl #7
40019948:	e5810014 	str	r0, [r1, #20]
4001994c:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019950:	e3500000 	cmp	r0, #0
40019954:	0a000002 	beq	40019964 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
40019958:	e1dd10b6 	ldrh	r1, [sp, #6]
4001995c:	e59d0000 	ldr	r0, [sp]
40019960:	ebffe2ab 	bl	40012414 <CyU3PSysFlushDRegion>
40019964:	e3a02000 	mov	r2, #0
40019968:	e3a01004 	mov	r1, #4
4001996c:	e2890074 	add	r0, r9, #116	; 0x74
40019970:	ebffc1bb 	bl	4000a064 <_txe_event_flags_set>
40019974:	ebffe4ff 	bl	40012d78 <CyU3PSysBarrierSync>
40019978:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001997c:	e3500000 	cmp	r0, #0
40019980:	0a000007 	beq	400199a4 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019984:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019988:	e3100004 	tst	r0, #4
4001998c:	0a000004 	beq	400199a4 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019990:	e1a0200d 	mov	r2, sp
40019994:	e3a01004 	mov	r1, #4
40019998:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001999c:	e1a00009 	mov	r0, r9
400199a0:	e12fff33 	blx	r3
400199a4:	e3180020 	tst	r8, #32
400199a8:	0a00000b 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400199ac:	ebffe4f1 	bl	40012d78 <CyU3PSysBarrierSync>
400199b0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400199b4:	e3500000 	cmp	r0, #0
400199b8:	0a000007 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400199bc:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400199c0:	e3100080 	tst	r0, #128	; 0x80
400199c4:	0a000004 	beq	400199dc <CyU3PDmaIntHandler_TypeAuto+0x358>
400199c8:	e3a02000 	mov	r2, #0
400199cc:	e3a01080 	mov	r1, #128	; 0x80
400199d0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400199d4:	e1a00009 	mov	r0, r9
400199d8:	e12fff33 	blx	r3
400199dc:	e289003c 	add	r0, r9, #60	; 0x3c
400199e0:	ebffc26c 	bl	4000a398 <_txe_mutex_put>
400199e4:	eaffff2f 	b	400196a8 <CyU3PDmaIntHandler_TypeAuto+0x24>
400199e8:	40030cd8 	.word	0x40030cd8
400199ec:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

400199f0 <CyU3PDmaIntHandler_TypeManual>:
400199f0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400199f4:	e24dd034 	sub	sp, sp, #52	; 0x34
400199f8:	e1a04000 	mov	r4, r0
400199fc:	e5945004 	ldr	r5, [r4, #4]
40019a00:	e5946008 	ldr	r6, [r4, #8]
40019a04:	e3160040 	tst	r6, #64	; 0x40
40019a08:	0a000003 	beq	40019a1c <CyU3PDmaIntHandler_TypeManual+0x2c>
40019a0c:	e1a00005 	mov	r0, r5
40019a10:	ebfffecc 	bl	40019548 <CyU3PDmaChannelHandleError>
40019a14:	e28dd034 	add	sp, sp, #52	; 0x34
40019a18:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40019a1c:	e3e01000 	mvn	r1, #0
40019a20:	e285003c 	add	r0, r5, #60	; 0x3c
40019a24:	ebffc226 	bl	4000a2c4 <_txe_mutex_get>
40019a28:	e1d501b2 	ldrh	r0, [r5, #18]
40019a2c:	e5941000 	ldr	r1, [r4]
40019a30:	e1500821 	cmp	r0, r1, lsr #16
40019a34:	1a0000d6 	bne	40019d94 <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019a38:	e594000c 	ldr	r0, [r4, #12]
40019a3c:	e1a07800 	lsl	r7, r0, #16
40019a40:	e1a07827 	lsr	r7, r7, #16
40019a44:	e3160002 	tst	r6, #2
40019a48:	0a000060 	beq	40019bd0 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a4c:	e5950000 	ldr	r0, [r5]
40019a50:	e3500003 	cmp	r0, #3
40019a54:	1a000013 	bne	40019aa8 <CyU3PDmaIntHandler_TypeManual+0xb8>
40019a58:	e3a00001 	mov	r0, #1
40019a5c:	e5850000 	str	r0, [r5]
40019a60:	e3a02000 	mov	r2, #0
40019a64:	e3a01002 	mov	r1, #2
40019a68:	e2850074 	add	r0, r5, #116	; 0x74
40019a6c:	ebffc17c 	bl	4000a064 <_txe_event_flags_set>
40019a70:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a74:	ebffe4bf 	bl	40012d78 <CyU3PSysBarrierSync>
40019a78:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a7c:	e3500000 	cmp	r0, #0
40019a80:	0a000052 	beq	40019bd0 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a84:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a88:	e3100002 	tst	r0, #2
40019a8c:	0a00004f 	beq	40019bd0 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a90:	e3a02000 	mov	r2, #0
40019a94:	e3a01002 	mov	r1, #2
40019a98:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a9c:	e1a00005 	mov	r0, r5
40019aa0:	e12fff33 	blx	r3
40019aa4:	ea000049 	b	40019bd0 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019aa8:	e1d500b4 	ldrh	r0, [r5, #4]
40019aac:	e3500002 	cmp	r0, #2
40019ab0:	1a000027 	bne	40019b54 <CyU3PDmaIntHandler_TypeManual+0x164>
40019ab4:	e1a00000 	nop			; (mov r0, r0)
40019ab8:	e1d501ba 	ldrh	r0, [r5, #26]
40019abc:	e28d1024 	add	r1, sp, #36	; 0x24
40019ac0:	eb002380 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019ac4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ac8:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019f78 <CyU3PDmaIntHandler_TypeManual+0x588>
40019acc:	e0000001 	and	r0, r0, r1
40019ad0:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ad4:	e1d501ba 	ldrh	r0, [r5, #26]
40019ad8:	e28d1024 	add	r1, sp, #36	; 0x24
40019adc:	eb002394 	bl	40022934 <CyU3PDmaDscrSetConfig>
40019ae0:	e1d511ba 	ldrh	r1, [r5, #26]
40019ae4:	e1d501b0 	ldrh	r0, [r5, #16]
40019ae8:	e3a02000 	mov	r2, #0
40019aec:	ebffedaf 	bl	400151b0 <CyU3PDmaSocketSendEvent>
40019af0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019af4:	e59f1480 	ldr	r1, [pc, #1152]	; 40019f7c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019af8:	e0010820 	and	r0, r1, r0, lsr #16
40019afc:	e1c501ba 	strh	r0, [r5, #26]
40019b00:	e1d502b0 	ldrh	r0, [r5, #32]
40019b04:	e28d1024 	add	r1, sp, #36	; 0x24
40019b08:	eb00236e 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019b0c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b10:	e1c502b0 	strh	r0, [r5, #32]
40019b14:	ebffe497 	bl	40012d78 <CyU3PSysBarrierSync>
40019b18:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b1c:	e3500000 	cmp	r0, #0
40019b20:	0a000007 	beq	40019b44 <CyU3PDmaIntHandler_TypeManual+0x154>
40019b24:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b28:	e3100010 	tst	r0, #16
40019b2c:	0a000004 	beq	40019b44 <CyU3PDmaIntHandler_TypeManual+0x154>
40019b30:	e3a02000 	mov	r2, #0
40019b34:	e3a01010 	mov	r1, #16
40019b38:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b3c:	e1a00005 	mov	r0, r5
40019b40:	e12fff33 	blx	r3
40019b44:	e1d502b0 	ldrh	r0, [r5, #32]
40019b48:	e1500007 	cmp	r0, r7
40019b4c:	1affffd9 	bne	40019ab8 <CyU3PDmaIntHandler_TypeManual+0xc8>
40019b50:	ea00001e 	b	40019bd0 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b54:	e1a00000 	nop			; (mov r0, r0)
40019b58:	e1d501b8 	ldrh	r0, [r5, #24]
40019b5c:	e28d1024 	add	r1, sp, #36	; 0x24
40019b60:	eb002358 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019b64:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b68:	e3100008 	tst	r0, #8
40019b6c:	1a000003 	bne	40019b80 <CyU3PDmaIntHandler_TypeManual+0x190>
40019b70:	e3a02000 	mov	r2, #0
40019b74:	e3a01010 	mov	r1, #16
40019b78:	e2850074 	add	r0, r5, #116	; 0x74
40019b7c:	ebffc138 	bl	4000a064 <_txe_event_flags_set>
40019b80:	e1d502b0 	ldrh	r0, [r5, #32]
40019b84:	e28d1024 	add	r1, sp, #36	; 0x24
40019b88:	eb00234e 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019b8c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b90:	e1c502b0 	strh	r0, [r5, #32]
40019b94:	ebffe477 	bl	40012d78 <CyU3PSysBarrierSync>
40019b98:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b9c:	e3500000 	cmp	r0, #0
40019ba0:	0a000007 	beq	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019ba4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ba8:	e3100010 	tst	r0, #16
40019bac:	0a000004 	beq	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019bb0:	e3a02000 	mov	r2, #0
40019bb4:	e3a01010 	mov	r1, #16
40019bb8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019bbc:	e1a00005 	mov	r0, r5
40019bc0:	e12fff33 	blx	r3
40019bc4:	e1d502b0 	ldrh	r0, [r5, #32]
40019bc8:	e1500007 	cmp	r0, r7
40019bcc:	1affffe1 	bne	40019b58 <CyU3PDmaIntHandler_TypeManual+0x168>
40019bd0:	e3160010 	tst	r6, #16
40019bd4:	0a000046 	beq	40019cf4 <CyU3PDmaIntHandler_TypeManual+0x304>
40019bd8:	e1d502b0 	ldrh	r0, [r5, #32]
40019bdc:	e28d1024 	add	r1, sp, #36	; 0x24
40019be0:	eb002338 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019be4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019be8:	e3100001 	tst	r0, #1
40019bec:	0a000040 	beq	40019cf4 <CyU3PDmaIntHandler_TypeManual+0x304>
40019bf0:	e1d501b2 	ldrh	r0, [r5, #18]
40019bf4:	ebffecbd 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019bf8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019bfc:	e59f1374 	ldr	r1, [pc, #884]	; 40019f78 <CyU3PDmaIntHandler_TypeManual+0x588>
40019c00:	e0000001 	and	r0, r0, r1
40019c04:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019c08:	e1d502b0 	ldrh	r0, [r5, #32]
40019c0c:	e28d1024 	add	r1, sp, #36	; 0x24
40019c10:	eb002347 	bl	40022934 <CyU3PDmaDscrSetConfig>
40019c14:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c18:	e1c502b0 	strh	r0, [r5, #32]
40019c1c:	e1d501b2 	ldrh	r0, [r5, #18]
40019c20:	e28d100c 	add	r1, sp, #12
40019c24:	ebffecc9 	bl	40014f50 <CyU3PDmaSocketGetConfig>
40019c28:	e59d0018 	ldr	r0, [sp, #24]
40019c2c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019c30:	e58d0018 	str	r0, [sp, #24]
40019c34:	e59d0018 	ldr	r0, [sp, #24]
40019c38:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019c3c:	e58d0018 	str	r0, [sp, #24]
40019c40:	e3a00000 	mov	r0, #0
40019c44:	e58d001c 	str	r0, [sp, #28]
40019c48:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c4c:	e2400001 	sub	r0, r0, #1
40019c50:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019c54:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c58:	e3500000 	cmp	r0, #0
40019c5c:	1a000004 	bne	40019c74 <CyU3PDmaIntHandler_TypeManual+0x284>
40019c60:	e3a00010 	mov	r0, #16
40019c64:	e58d001c 	str	r0, [sp, #28]
40019c68:	e59d0020 	ldr	r0, [sp, #32]
40019c6c:	e3c00010 	bic	r0, r0, #16
40019c70:	e58d0020 	str	r0, [sp, #32]
40019c74:	e1d502b0 	ldrh	r0, [r5, #32]
40019c78:	e58d000c 	str	r0, [sp, #12]
40019c7c:	e1d501b2 	ldrh	r0, [r5, #18]
40019c80:	e28d100c 	add	r1, sp, #12
40019c84:	ebffed5b 	bl	400151f8 <CyU3PDmaSocketSetConfig>
40019c88:	e1d501ba 	ldrh	r0, [r5, #26]
40019c8c:	e28d1024 	add	r1, sp, #36	; 0x24
40019c90:	eb00230c 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019c94:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c98:	e59f12d8 	ldr	r1, [pc, #728]	; 40019f78 <CyU3PDmaIntHandler_TypeManual+0x588>
40019c9c:	e0000001 	and	r0, r0, r1
40019ca0:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ca4:	e1d501ba 	ldrh	r0, [r5, #26]
40019ca8:	e28d1024 	add	r1, sp, #36	; 0x24
40019cac:	eb002320 	bl	40022934 <CyU3PDmaDscrSetConfig>
40019cb0:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019cb4:	e3500000 	cmp	r0, #0
40019cb8:	0a000004 	beq	40019cd0 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019cbc:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019cc0:	e59f32b0 	ldr	r3, [pc, #688]	; 40019f78 <CyU3PDmaIntHandler_TypeManual+0x588>
40019cc4:	e0021003 	and	r1, r2, r3
40019cc8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019ccc:	ebffe1d0 	bl	40012414 <CyU3PSysFlushDRegion>
40019cd0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cd4:	e59f12a0 	ldr	r1, [pc, #672]	; 40019f7c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019cd8:	e0010820 	and	r0, r1, r0, lsr #16
40019cdc:	e1c501ba 	strh	r0, [r5, #26]
40019ce0:	e1d511ba 	ldrh	r1, [r5, #26]
40019ce4:	e1d501b0 	ldrh	r0, [r5, #16]
40019ce8:	e3a02000 	mov	r2, #0
40019cec:	ebffed2f 	bl	400151b0 <CyU3PDmaSocketSendEvent>
40019cf0:	ebffe420 	bl	40012d78 <CyU3PSysBarrierSync>
40019cf4:	e3160080 	tst	r6, #128	; 0x80
40019cf8:	0a000016 	beq	40019d58 <CyU3PDmaIntHandler_TypeManual+0x368>
40019cfc:	e1d500b4 	ldrh	r0, [r5, #4]
40019d00:	e3500002 	cmp	r0, #2
40019d04:	1a000001 	bne	40019d10 <CyU3PDmaIntHandler_TypeManual+0x320>
40019d08:	e1d501b0 	ldrh	r0, [r5, #16]
40019d0c:	ebffec77 	bl	40014ef0 <CyU3PDmaSocketDisable>
40019d10:	e3a00001 	mov	r0, #1
40019d14:	e5850000 	str	r0, [r5]
40019d18:	e3a02000 	mov	r2, #0
40019d1c:	e3a01001 	mov	r1, #1
40019d20:	e2850074 	add	r0, r5, #116	; 0x74
40019d24:	ebffc0ce 	bl	4000a064 <_txe_event_flags_set>
40019d28:	ebffe412 	bl	40012d78 <CyU3PSysBarrierSync>
40019d2c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d30:	e3500000 	cmp	r0, #0
40019d34:	0a000007 	beq	40019d58 <CyU3PDmaIntHandler_TypeManual+0x368>
40019d38:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d3c:	e3100001 	tst	r0, #1
40019d40:	0a000004 	beq	40019d58 <CyU3PDmaIntHandler_TypeManual+0x368>
40019d44:	e3a02000 	mov	r2, #0
40019d48:	e3a01001 	mov	r1, #1
40019d4c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d50:	e1a00005 	mov	r0, r5
40019d54:	e12fff33 	blx	r3
40019d58:	e3160e12 	tst	r6, #288	; 0x120
40019d5c:	0a000082 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d60:	ebffe404 	bl	40012d78 <CyU3PSysBarrierSync>
40019d64:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d68:	e3500000 	cmp	r0, #0
40019d6c:	0a00007e 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d70:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d74:	e3100c01 	tst	r0, #256	; 0x100
40019d78:	0a00007b 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d7c:	e3a02000 	mov	r2, #0
40019d80:	e3a01c01 	mov	r1, #256	; 0x100
40019d84:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d88:	e1a00005 	mov	r0, r5
40019d8c:	e12fff33 	blx	r3
40019d90:	ea000075 	b	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d94:	e594000c 	ldr	r0, [r4, #12]
40019d98:	e1a07800 	lsl	r7, r0, #16
40019d9c:	e1a07827 	lsr	r7, r7, #16
40019da0:	e3160001 	tst	r6, #1
40019da4:	0a00005d 	beq	40019f20 <CyU3PDmaIntHandler_TypeManual+0x530>
40019da8:	e5950000 	ldr	r0, [r5]
40019dac:	e3500004 	cmp	r0, #4
40019db0:	0a000031 	beq	40019e7c <CyU3PDmaIntHandler_TypeManual+0x48c>
40019db4:	e1a00000 	nop			; (mov r0, r0)
40019db8:	e1d501be 	ldrh	r0, [r5, #30]
40019dbc:	e28d1024 	add	r1, sp, #36	; 0x24
40019dc0:	eb0022c0 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019dc4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019dc8:	e58d0000 	str	r0, [sp]
40019dcc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dd0:	e59f11a4 	ldr	r1, [pc, #420]	; 40019f7c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019dd4:	e0010820 	and	r0, r1, r0, lsr #16
40019dd8:	e1cd00b4 	strh	r0, [sp, #4]
40019ddc:	e241100f 	sub	r1, r1, #15
40019de0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019de4:	e0000001 	and	r0, r0, r1
40019de8:	e1cd00b6 	strh	r0, [sp, #6]
40019dec:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019df0:	e200000f 	and	r0, r0, #15
40019df4:	e1cd00b8 	strh	r0, [sp, #8]
40019df8:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019dfc:	e3500000 	cmp	r0, #0
40019e00:	0a000002 	beq	40019e10 <CyU3PDmaIntHandler_TypeManual+0x420>
40019e04:	e1dd10b6 	ldrh	r1, [sp, #6]
40019e08:	e59d0000 	ldr	r0, [sp]
40019e0c:	ebffe180 	bl	40012414 <CyU3PSysFlushDRegion>
40019e10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e14:	e3100008 	tst	r0, #8
40019e18:	0a000003 	beq	40019e2c <CyU3PDmaIntHandler_TypeManual+0x43c>
40019e1c:	e3a02000 	mov	r2, #0
40019e20:	e3a01008 	mov	r1, #8
40019e24:	e2850074 	add	r0, r5, #116	; 0x74
40019e28:	ebffc08d 	bl	4000a064 <_txe_event_flags_set>
40019e2c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e30:	e59f1144 	ldr	r1, [pc, #324]	; 40019f7c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e34:	e0010820 	and	r0, r1, r0, lsr #16
40019e38:	e1c501be 	strh	r0, [r5, #30]
40019e3c:	ebffe3cd 	bl	40012d78 <CyU3PSysBarrierSync>
40019e40:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019e44:	e3500000 	cmp	r0, #0
40019e48:	0a000007 	beq	40019e6c <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e4c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019e50:	e3100008 	tst	r0, #8
40019e54:	0a000004 	beq	40019e6c <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e58:	e1a0200d 	mov	r2, sp
40019e5c:	e3a01008 	mov	r1, #8
40019e60:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019e64:	e1a00005 	mov	r0, r5
40019e68:	e12fff33 	blx	r3
40019e6c:	e1d501be 	ldrh	r0, [r5, #30]
40019e70:	e1500007 	cmp	r0, r7
40019e74:	1affffcf 	bne	40019db8 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019e78:	ea000028 	b	40019f20 <CyU3PDmaIntHandler_TypeManual+0x530>
40019e7c:	e1d501b4 	ldrh	r0, [r5, #20]
40019e80:	e28d1024 	add	r1, sp, #36	; 0x24
40019e84:	eb00228f 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019e88:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019e8c:	e58d0000 	str	r0, [sp]
40019e90:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e94:	e59f10e0 	ldr	r1, [pc, #224]	; 40019f7c <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e98:	e0010820 	and	r0, r1, r0, lsr #16
40019e9c:	e1cd00b4 	strh	r0, [sp, #4]
40019ea0:	e241100f 	sub	r1, r1, #15
40019ea4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ea8:	e0000001 	and	r0, r0, r1
40019eac:	e1cd00b6 	strh	r0, [sp, #6]
40019eb0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019eb4:	e200000f 	and	r0, r0, #15
40019eb8:	e1cd00b8 	strh	r0, [sp, #8]
40019ebc:	e3a00001 	mov	r0, #1
40019ec0:	e5850000 	str	r0, [r5]
40019ec4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ec8:	e3500000 	cmp	r0, #0
40019ecc:	0a000002 	beq	40019edc <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019ed0:	e1dd10b6 	ldrh	r1, [sp, #6]
40019ed4:	e59d0000 	ldr	r0, [sp]
40019ed8:	ebffe14d 	bl	40012414 <CyU3PSysFlushDRegion>
40019edc:	e3a02000 	mov	r2, #0
40019ee0:	e3a01004 	mov	r1, #4
40019ee4:	e2850074 	add	r0, r5, #116	; 0x74
40019ee8:	ebffc05d 	bl	4000a064 <_txe_event_flags_set>
40019eec:	e3c66080 	bic	r6, r6, #128	; 0x80
40019ef0:	ebffe3a0 	bl	40012d78 <CyU3PSysBarrierSync>
40019ef4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ef8:	e3500000 	cmp	r0, #0
40019efc:	0a000007 	beq	40019f20 <CyU3PDmaIntHandler_TypeManual+0x530>
40019f00:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019f04:	e3100004 	tst	r0, #4
40019f08:	0a000004 	beq	40019f20 <CyU3PDmaIntHandler_TypeManual+0x530>
40019f0c:	e1a0200d 	mov	r2, sp
40019f10:	e3a01004 	mov	r1, #4
40019f14:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f18:	e1a00005 	mov	r0, r5
40019f1c:	e12fff33 	blx	r3
40019f20:	e3160080 	tst	r6, #128	; 0x80
40019f24:	0a000002 	beq	40019f34 <CyU3PDmaIntHandler_TypeManual+0x544>
40019f28:	e3a00006 	mov	r0, #6
40019f2c:	e5850000 	str	r0, [r5]
40019f30:	ebffe390 	bl	40012d78 <CyU3PSysBarrierSync>
40019f34:	e3160020 	tst	r6, #32
40019f38:	0a00000b 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f3c:	ebffe38d 	bl	40012d78 <CyU3PSysBarrierSync>
40019f40:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019f44:	e3500000 	cmp	r0, #0
40019f48:	0a000007 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f4c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019f50:	e3100080 	tst	r0, #128	; 0x80
40019f54:	0a000004 	beq	40019f6c <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f58:	e3a02000 	mov	r2, #0
40019f5c:	e3a01080 	mov	r1, #128	; 0x80
40019f60:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f64:	e1a00005 	mov	r0, r5
40019f68:	e12fff33 	blx	r3
40019f6c:	e285003c 	add	r0, r5, #60	; 0x3c
40019f70:	ebffc108 	bl	4000a398 <_txe_mutex_put>
40019f74:	eafffea6 	b	40019a14 <CyU3PDmaIntHandler_TypeManual+0x24>
40019f78:	0000fff0 	.word	0x0000fff0
40019f7c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019f80 <CyU3PDmaIntHandler_TypeManyToOne>:
40019f80:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019f84:	e24dd034 	sub	sp, sp, #52	; 0x34
40019f88:	e1a04000 	mov	r4, r0
40019f8c:	e5945004 	ldr	r5, [r4, #4]
40019f90:	e5946008 	ldr	r6, [r4, #8]
40019f94:	e3160040 	tst	r6, #64	; 0x40
40019f98:	0a000003 	beq	40019fac <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019f9c:	e1a00005 	mov	r0, r5
40019fa0:	eb00033d 	bl	4001ac9c <CyU3PDmaMultiChannelHandleError>
40019fa4:	e28dd034 	add	sp, sp, #52	; 0x34
40019fa8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019fac:	e3e01000 	mvn	r1, #0
40019fb0:	e2850078 	add	r0, r5, #120	; 0x78
40019fb4:	ebffc0c2 	bl	4000a2c4 <_txe_mutex_get>
40019fb8:	e5940000 	ldr	r0, [r4]
40019fbc:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fc0:	e0019820 	and	r9, r1, r0, lsr #16
40019fc4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019fc8:	e1500009 	cmp	r0, r9
40019fcc:	1a0000d8 	bne	4001a334 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019fd0:	e594000c 	ldr	r0, [r4, #12]
40019fd4:	e0007001 	and	r7, r0, r1
40019fd8:	e3160002 	tst	r6, #2
40019fdc:	0a000054 	beq	4001a134 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019fe0:	e5950000 	ldr	r0, [r5]
40019fe4:	e3500003 	cmp	r0, #3
40019fe8:	0a000030 	beq	4001a0b0 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019fec:	e1a00000 	nop			; (mov r0, r0)
40019ff0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019ff4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ff8:	eb002232 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40019ffc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a000:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a004:	e0010820 	and	r0, r1, r0, lsr #16
4001a008:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a00c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a010:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a014:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a018:	e28d1024 	add	r1, sp, #36	; 0x24
4001a01c:	eb002229 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a020:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a024:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a558 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a028:	e0000001 	and	r0, r0, r1
4001a02c:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a030:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a034:	e28d1024 	add	r1, sp, #36	; 0x24
4001a038:	eb00223d 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a03c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a040:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a55c <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a044:	e0000001 	and	r0, r0, r1
4001a048:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a04c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a050:	e1a00820 	lsr	r0, r0, #16
4001a054:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a058:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a05c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a060:	e1a00802 	lsl	r0, r2, #16
4001a064:	e1a00820 	lsr	r0, r0, #16
4001a068:	e3a02000 	mov	r2, #0
4001a06c:	ebffec4f 	bl	400151b0 <CyU3PDmaSocketSendEvent>
4001a070:	ebffe340 	bl	40012d78 <CyU3PSysBarrierSync>
4001a074:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a078:	e3500000 	cmp	r0, #0
4001a07c:	0a000007 	beq	4001a0a0 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a080:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a084:	e3100010 	tst	r0, #16
4001a088:	0a000004 	beq	4001a0a0 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a08c:	e3a02000 	mov	r2, #0
4001a090:	e3a01010 	mov	r1, #16
4001a094:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a098:	e1a00005 	mov	r0, r5
4001a09c:	e12fff33 	blx	r3
4001a0a0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a0a4:	e1500007 	cmp	r0, r7
4001a0a8:	1affffd0 	bne	40019ff0 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
4001a0ac:	ea000020 	b	4001a134 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a0b0:	e3a00001 	mov	r0, #1
4001a0b4:	e5850000 	str	r0, [r5]
4001a0b8:	e1d500b4 	ldrh	r0, [r5, #4]
4001a0bc:	e3500005 	cmp	r0, #5
4001a0c0:	1a00000a 	bne	4001a0f0 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
4001a0c4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a0c8:	e1a0100d 	mov	r1, sp
4001a0cc:	ebffeb9f 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001a0d0:	e3a00000 	mov	r0, #0
4001a0d4:	e58d0010 	str	r0, [sp, #16]
4001a0d8:	e59d0014 	ldr	r0, [sp, #20]
4001a0dc:	e3c00002 	bic	r0, r0, #2
4001a0e0:	e58d0014 	str	r0, [sp, #20]
4001a0e4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a0e8:	e1a0100d 	mov	r1, sp
4001a0ec:	ebffec41 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001a0f0:	e3a02000 	mov	r2, #0
4001a0f4:	e3a01002 	mov	r1, #2
4001a0f8:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a0fc:	ebffbfd8 	bl	4000a064 <_txe_event_flags_set>
4001a100:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a104:	ebffe31b 	bl	40012d78 <CyU3PSysBarrierSync>
4001a108:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a10c:	e3500000 	cmp	r0, #0
4001a110:	0a000007 	beq	4001a134 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a114:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a118:	e3100002 	tst	r0, #2
4001a11c:	0a000004 	beq	4001a134 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a120:	e3a02000 	mov	r2, #0
4001a124:	e3a01002 	mov	r1, #2
4001a128:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a12c:	e1a00005 	mov	r0, r5
4001a130:	e12fff33 	blx	r3
4001a134:	e3160010 	tst	r6, #16
4001a138:	0a00004f 	beq	4001a27c <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a13c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a140:	e28d1024 	add	r1, sp, #36	; 0x24
4001a144:	eb0021df 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a148:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a14c:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a150:	e0010820 	and	r0, r1, r0, lsr #16
4001a154:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a158:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a15c:	e3100001 	tst	r0, #1
4001a160:	0a000045 	beq	4001a27c <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a164:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a168:	ebffeb60 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001a16c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a170:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a558 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a174:	e0000001 	and	r0, r0, r1
4001a178:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a17c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a180:	e28d1024 	add	r1, sp, #36	; 0x24
4001a184:	eb0021ea 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a188:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a18c:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a190:	e1a0100d 	mov	r1, sp
4001a194:	e1a00009 	mov	r0, r9
4001a198:	ebffeb6c 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001a19c:	e59d000c 	ldr	r0, [sp, #12]
4001a1a0:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a1a4:	e58d000c 	str	r0, [sp, #12]
4001a1a8:	e59d000c 	ldr	r0, [sp, #12]
4001a1ac:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a1b0:	e58d000c 	str	r0, [sp, #12]
4001a1b4:	e3a00000 	mov	r0, #0
4001a1b8:	e58d0010 	str	r0, [sp, #16]
4001a1bc:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a1c0:	e2400001 	sub	r0, r0, #1
4001a1c4:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
4001a1c8:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a1cc:	e3500000 	cmp	r0, #0
4001a1d0:	1a000004 	bne	4001a1e8 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
4001a1d4:	e3a00010 	mov	r0, #16
4001a1d8:	e58d0010 	str	r0, [sp, #16]
4001a1dc:	e59d0014 	ldr	r0, [sp, #20]
4001a1e0:	e3c00010 	bic	r0, r0, #16
4001a1e4:	e58d0014 	str	r0, [sp, #20]
4001a1e8:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a1ec:	e58d0000 	str	r0, [sp]
4001a1f0:	e1a0100d 	mov	r1, sp
4001a1f4:	e1a00009 	mov	r0, r9
4001a1f8:	ebffebfe 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001a1fc:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a200:	e28d1024 	add	r1, sp, #36	; 0x24
4001a204:	eb0021af 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a208:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a20c:	e59f1344 	ldr	r1, [pc, #836]	; 4001a558 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a210:	e0000001 	and	r0, r0, r1
4001a214:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a218:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a21c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a220:	eb0021c3 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a224:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a228:	e3500000 	cmp	r0, #0
4001a22c:	0a000004 	beq	4001a244 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
4001a230:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001a234:	e59f331c 	ldr	r3, [pc, #796]	; 4001a558 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a238:	e0021003 	and	r1, r2, r3
4001a23c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a240:	ebffe073 	bl	40012414 <CyU3PSysFlushDRegion>
4001a244:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a248:	e59f130c 	ldr	r1, [pc, #780]	; 4001a55c <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a24c:	e0000001 	and	r0, r0, r1
4001a250:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a254:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a258:	e1a00820 	lsr	r0, r0, #16
4001a25c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a260:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a264:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a268:	e1a00802 	lsl	r0, r2, #16
4001a26c:	e1a00820 	lsr	r0, r0, #16
4001a270:	e3a02000 	mov	r2, #0
4001a274:	ebffebcd 	bl	400151b0 <CyU3PDmaSocketSendEvent>
4001a278:	ebffe2be 	bl	40012d78 <CyU3PSysBarrierSync>
4001a27c:	e3160080 	tst	r6, #128	; 0x80
4001a280:	0a00001c 	beq	4001a2f8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a284:	e3a08000 	mov	r8, #0
4001a288:	ea000005 	b	4001a2a4 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
4001a28c:	e2851024 	add	r1, r5, #36	; 0x24
4001a290:	e0811088 	add	r1, r1, r8, lsl #1
4001a294:	e1d100b0 	ldrh	r0, [r1]
4001a298:	ebffeb14 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001a29c:	e2880001 	add	r0, r8, #1
4001a2a0:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a2a4:	e1d500ba 	ldrh	r0, [r5, #10]
4001a2a8:	e1500008 	cmp	r0, r8
4001a2ac:	cafffff6 	bgt	4001a28c <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
4001a2b0:	e3a00001 	mov	r0, #1
4001a2b4:	e5850000 	str	r0, [r5]
4001a2b8:	e3a02000 	mov	r2, #0
4001a2bc:	e3a01001 	mov	r1, #1
4001a2c0:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a2c4:	ebffbf66 	bl	4000a064 <_txe_event_flags_set>
4001a2c8:	ebffe2aa 	bl	40012d78 <CyU3PSysBarrierSync>
4001a2cc:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a2d0:	e3500000 	cmp	r0, #0
4001a2d4:	0a000007 	beq	4001a2f8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a2d8:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a2dc:	e3100001 	tst	r0, #1
4001a2e0:	0a000004 	beq	4001a2f8 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a2e4:	e3a02000 	mov	r2, #0
4001a2e8:	e3a01001 	mov	r1, #1
4001a2ec:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a2f0:	e1a00005 	mov	r0, r5
4001a2f4:	e12fff33 	blx	r3
4001a2f8:	e3160e12 	tst	r6, #288	; 0x120
4001a2fc:	0a000091 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a300:	ebffe29c 	bl	40012d78 <CyU3PSysBarrierSync>
4001a304:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a308:	e3500000 	cmp	r0, #0
4001a30c:	0a00008d 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a310:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a314:	e3100c01 	tst	r0, #256	; 0x100
4001a318:	0a00008a 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a31c:	e3a02000 	mov	r2, #0
4001a320:	e3a01c01 	mov	r1, #256	; 0x100
4001a324:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a328:	e1a00005 	mov	r0, r5
4001a32c:	e12fff33 	blx	r3
4001a330:	ea000084 	b	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a334:	e594000c 	ldr	r0, [r4, #12]
4001a338:	e1a07800 	lsl	r7, r0, #16
4001a33c:	e1a07827 	lsr	r7, r7, #16
4001a340:	e3160001 	tst	r6, #1
4001a344:	0a000048 	beq	4001a46c <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a348:	e5950000 	ldr	r0, [r5]
4001a34c:	e3500004 	cmp	r0, #4
4001a350:	0a00007c 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a354:	e3a08000 	mov	r8, #0
4001a358:	ea000007 	b	4001a37c <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a35c:	e2850024 	add	r0, r5, #36	; 0x24
4001a360:	e0800088 	add	r0, r0, r8, lsl #1
4001a364:	e1d000b0 	ldrh	r0, [r0]
4001a368:	e1500009 	cmp	r0, r9
4001a36c:	1a000000 	bne	4001a374 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a370:	ea000004 	b	4001a388 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a374:	e2880001 	add	r0, r8, #1
4001a378:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a37c:	e1d500ba 	ldrh	r0, [r5, #10]
4001a380:	e1500008 	cmp	r0, r8
4001a384:	cafffff4 	bgt	4001a35c <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a388:	e1a00000 	nop			; (mov r0, r0)
4001a38c:	e1a00000 	nop			; (mov r0, r0)
4001a390:	e285103e 	add	r1, r5, #62	; 0x3e
4001a394:	e0811088 	add	r1, r1, r8, lsl #1
4001a398:	e1d100b0 	ldrh	r0, [r1]
4001a39c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a3a0:	eb002148 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a3a4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a3a8:	e58d0018 	str	r0, [sp, #24]
4001a3ac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3b0:	e59f119c 	ldr	r1, [pc, #412]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a3b4:	e0010820 	and	r0, r1, r0, lsr #16
4001a3b8:	e1cd01bc 	strh	r0, [sp, #28]
4001a3bc:	e241100f 	sub	r1, r1, #15
4001a3c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3c4:	e0000001 	and	r0, r0, r1
4001a3c8:	e1cd01be 	strh	r0, [sp, #30]
4001a3cc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3d0:	e200000f 	and	r0, r0, #15
4001a3d4:	e1cd02b0 	strh	r0, [sp, #32]
4001a3d8:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a3dc:	e3500000 	cmp	r0, #0
4001a3e0:	0a000002 	beq	4001a3f0 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a3e4:	e1dd11be 	ldrh	r1, [sp, #30]
4001a3e8:	e59d0018 	ldr	r0, [sp, #24]
4001a3ec:	ebffe008 	bl	40012414 <CyU3PSysFlushDRegion>
4001a3f0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3f4:	e3100008 	tst	r0, #8
4001a3f8:	0a000003 	beq	4001a40c <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a3fc:	e3a02000 	mov	r2, #0
4001a400:	e3a01008 	mov	r1, #8
4001a404:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a408:	ebffbf15 	bl	4000a064 <_txe_event_flags_set>
4001a40c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a410:	e59f113c 	ldr	r1, [pc, #316]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a414:	e0010820 	and	r0, r1, r0, lsr #16
4001a418:	e285103e 	add	r1, r5, #62	; 0x3e
4001a41c:	e0811088 	add	r1, r1, r8, lsl #1
4001a420:	e1c100b0 	strh	r0, [r1]
4001a424:	ebffe253 	bl	40012d78 <CyU3PSysBarrierSync>
4001a428:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a42c:	e3500000 	cmp	r0, #0
4001a430:	0a000007 	beq	4001a454 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a434:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a438:	e3100008 	tst	r0, #8
4001a43c:	0a000004 	beq	4001a454 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a440:	e28d2018 	add	r2, sp, #24
4001a444:	e3a01008 	mov	r1, #8
4001a448:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a44c:	e1a00005 	mov	r0, r5
4001a450:	e12fff33 	blx	r3
4001a454:	e285003e 	add	r0, r5, #62	; 0x3e
4001a458:	e0800088 	add	r0, r0, r8, lsl #1
4001a45c:	e1d000b0 	ldrh	r0, [r0]
4001a460:	e1500007 	cmp	r0, r7
4001a464:	1affffc9 	bne	4001a390 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a468:	ea000036 	b	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a46c:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a470:	e28d1024 	add	r1, sp, #36	; 0x24
4001a474:	eb002113 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a478:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a47c:	e58d0018 	str	r0, [sp, #24]
4001a480:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a484:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a554 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a488:	e0010820 	and	r0, r1, r0, lsr #16
4001a48c:	e1cd01bc 	strh	r0, [sp, #28]
4001a490:	e241100f 	sub	r1, r1, #15
4001a494:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a498:	e0000001 	and	r0, r0, r1
4001a49c:	e1cd01be 	strh	r0, [sp, #30]
4001a4a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a4a4:	e200000f 	and	r0, r0, #15
4001a4a8:	e1cd02b0 	strh	r0, [sp, #32]
4001a4ac:	e3a00001 	mov	r0, #1
4001a4b0:	e5850000 	str	r0, [r5]
4001a4b4:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a4b8:	e3500000 	cmp	r0, #0
4001a4bc:	0a000002 	beq	4001a4cc <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a4c0:	e1dd11be 	ldrh	r1, [sp, #30]
4001a4c4:	e59d0018 	ldr	r0, [sp, #24]
4001a4c8:	ebffdfd1 	bl	40012414 <CyU3PSysFlushDRegion>
4001a4cc:	e1d500b4 	ldrh	r0, [r5, #4]
4001a4d0:	e3500005 	cmp	r0, #5
4001a4d4:	1a00000a 	bne	4001a504 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a4d8:	e1a0100d 	mov	r1, sp
4001a4dc:	e1a00009 	mov	r0, r9
4001a4e0:	ebffea9a 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001a4e4:	e3a00000 	mov	r0, #0
4001a4e8:	e58d0010 	str	r0, [sp, #16]
4001a4ec:	e59d0014 	ldr	r0, [sp, #20]
4001a4f0:	e3c00001 	bic	r0, r0, #1
4001a4f4:	e58d0014 	str	r0, [sp, #20]
4001a4f8:	e1a0100d 	mov	r1, sp
4001a4fc:	e1a00009 	mov	r0, r9
4001a500:	ebffeb3c 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001a504:	e3a02000 	mov	r2, #0
4001a508:	e3a01004 	mov	r1, #4
4001a50c:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a510:	ebffbed3 	bl	4000a064 <_txe_event_flags_set>
4001a514:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a518:	ebffe216 	bl	40012d78 <CyU3PSysBarrierSync>
4001a51c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a520:	e3500000 	cmp	r0, #0
4001a524:	0a000007 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a528:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a52c:	e3100004 	tst	r0, #4
4001a530:	0a000004 	beq	4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a534:	e28d2018 	add	r2, sp, #24
4001a538:	e3a01004 	mov	r1, #4
4001a53c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a540:	e1a00005 	mov	r0, r5
4001a544:	e12fff33 	blx	r3
4001a548:	e2850078 	add	r0, r5, #120	; 0x78
4001a54c:	ebffbf91 	bl	4000a398 <_txe_mutex_put>
4001a550:	eafffe93 	b	40019fa4 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a554:	0000ffff 	.word	0x0000ffff
4001a558:	0000fff0 	.word	0x0000fff0
4001a55c:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a560 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a560:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a564:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a568:	e1a04000 	mov	r4, r0
4001a56c:	e594a004 	ldr	sl, [r4, #4]
4001a570:	e5940000 	ldr	r0, [r4]
4001a574:	e59f1664 	ldr	r1, [pc, #1636]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a578:	e0016820 	and	r6, r1, r0, lsr #16
4001a57c:	e5945008 	ldr	r5, [r4, #8]
4001a580:	e3150040 	tst	r5, #64	; 0x40
4001a584:	0a000003 	beq	4001a598 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a588:	e1a0000a 	mov	r0, sl
4001a58c:	eb0001c2 	bl	4001ac9c <CyU3PDmaMultiChannelHandleError>
4001a590:	e28dd038 	add	sp, sp, #56	; 0x38
4001a594:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a598:	e3e01000 	mvn	r1, #0
4001a59c:	e28a0078 	add	r0, sl, #120	; 0x78
4001a5a0:	ebffbf47 	bl	4000a2c4 <_txe_mutex_get>
4001a5a4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a5a8:	e1500006 	cmp	r0, r6
4001a5ac:	0a0000fc 	beq	4001a9a4 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a5b0:	e594000c 	ldr	r0, [r4, #12]
4001a5b4:	e1a09800 	lsl	r9, r0, #16
4001a5b8:	e1a09829 	lsr	r9, r9, #16
4001a5bc:	e3a08000 	mov	r8, #0
4001a5c0:	ea000007 	b	4001a5e4 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a5c4:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a5c8:	e0800088 	add	r0, r0, r8, lsl #1
4001a5cc:	e1d000b0 	ldrh	r0, [r0]
4001a5d0:	e1500006 	cmp	r0, r6
4001a5d4:	1a000000 	bne	4001a5dc <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a5d8:	ea000004 	b	4001a5f0 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a5dc:	e2880001 	add	r0, r8, #1
4001a5e0:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a5e4:	e1da00ba 	ldrh	r0, [sl, #10]
4001a5e8:	e1500008 	cmp	r0, r8
4001a5ec:	cafffff4 	bgt	4001a5c4 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a5f0:	e1a00000 	nop			; (mov r0, r0)
4001a5f4:	e3150002 	tst	r5, #2
4001a5f8:	0a00007e 	beq	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a5fc:	e59a0000 	ldr	r0, [sl]
4001a600:	e3500003 	cmp	r0, #3
4001a604:	0a00005a 	beq	4001a774 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a608:	e1a00000 	nop			; (mov r0, r0)
4001a60c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a610:	e0811088 	add	r1, r1, r8, lsl #1
4001a614:	e1d100b0 	ldrh	r0, [r1]
4001a618:	e28d1028 	add	r1, sp, #40	; 0x28
4001a61c:	eb0020a9 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a620:	e28a1046 	add	r1, sl, #70	; 0x46
4001a624:	e0811088 	add	r1, r1, r8, lsl #1
4001a628:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a62c:	e1c100b0 	strh	r0, [r1]
4001a630:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a634:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a638:	e0017820 	and	r7, r1, r0, lsr #16
4001a63c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a640:	e1a00007 	mov	r0, r7
4001a644:	eb00209f 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a648:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a64c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001abe4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a650:	e0000001 	and	r0, r0, r1
4001a654:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a658:	e28d1028 	add	r1, sp, #40	; 0x28
4001a65c:	e1a00007 	mov	r0, r7
4001a660:	eb0020b3 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a664:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a668:	e3a02000 	mov	r2, #0
4001a66c:	e1a01007 	mov	r1, r7
4001a670:	ebffeace 	bl	400151b0 <CyU3PDmaSocketSendEvent>
4001a674:	ebffe1bf 	bl	40012d78 <CyU3PSysBarrierSync>
4001a678:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a67c:	e3500000 	cmp	r0, #0
4001a680:	0a000007 	beq	4001a6a4 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a684:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a688:	e3100010 	tst	r0, #16
4001a68c:	0a000004 	beq	4001a6a4 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a690:	e3a02000 	mov	r2, #0
4001a694:	e3a01010 	mov	r1, #16
4001a698:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a69c:	e1a0000a 	mov	r0, sl
4001a6a0:	e12fff33 	blx	r3
4001a6a4:	e28a0046 	add	r0, sl, #70	; 0x46
4001a6a8:	e0800088 	add	r0, r0, r8, lsl #1
4001a6ac:	e1d000b0 	ldrh	r0, [r0]
4001a6b0:	e1500009 	cmp	r0, r9
4001a6b4:	1affffd4 	bne	4001a60c <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a6b8:	e59a0000 	ldr	r0, [sl]
4001a6bc:	e3500006 	cmp	r0, #6
4001a6c0:	1a00004c 	bne	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a6c4:	e1da00b8 	ldrh	r0, [sl, #8]
4001a6c8:	e1da10ba 	ldrh	r1, [sl, #10]
4001a6cc:	e0000091 	mul	r0, r1, r0
4001a6d0:	e1a08800 	lsl	r8, r0, #16
4001a6d4:	e1a08828 	lsr	r8, r8, #16
4001a6d8:	e1da71b4 	ldrh	r7, [sl, #20]
4001a6dc:	ea00000c 	b	4001a714 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a6e0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6e4:	e1a00007 	mov	r0, r7
4001a6e8:	eb002076 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a6ec:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6f0:	e3100008 	tst	r0, #8
4001a6f4:	0a000000 	beq	4001a6fc <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a6f8:	ea000007 	b	4001a71c <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a6fc:	e2480001 	sub	r0, r8, #1
4001a700:	e1a08800 	lsl	r8, r0, #16
4001a704:	e1a08828 	lsr	r8, r8, #16
4001a708:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a70c:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a710:	e0017820 	and	r7, r1, r0, lsr #16
4001a714:	e3580000 	cmp	r8, #0
4001a718:	1afffff0 	bne	4001a6e0 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a71c:	e1a00000 	nop			; (mov r0, r0)
4001a720:	e3580000 	cmp	r8, #0
4001a724:	1a000033 	bne	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a728:	e3a00001 	mov	r0, #1
4001a72c:	e58a0000 	str	r0, [sl]
4001a730:	e3a02000 	mov	r2, #0
4001a734:	e3a01001 	mov	r1, #1
4001a738:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a73c:	ebffbe48 	bl	4000a064 <_txe_event_flags_set>
4001a740:	ebffe18c 	bl	40012d78 <CyU3PSysBarrierSync>
4001a744:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a748:	e3500000 	cmp	r0, #0
4001a74c:	0a000029 	beq	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a750:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a754:	e3100001 	tst	r0, #1
4001a758:	0a000026 	beq	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a75c:	e3a02000 	mov	r2, #0
4001a760:	e3a01001 	mov	r1, #1
4001a764:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a768:	e1a0000a 	mov	r0, sl
4001a76c:	e12fff33 	blx	r3
4001a770:	ea000020 	b	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a774:	e3a00001 	mov	r0, #1
4001a778:	e58a0000 	str	r0, [sl]
4001a77c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a780:	e3500006 	cmp	r0, #6
4001a784:	1a00000a 	bne	4001a7b4 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a788:	e28d1004 	add	r1, sp, #4
4001a78c:	e1a00006 	mov	r0, r6
4001a790:	ebffe9ee 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001a794:	e3a00000 	mov	r0, #0
4001a798:	e58d0014 	str	r0, [sp, #20]
4001a79c:	e59d0018 	ldr	r0, [sp, #24]
4001a7a0:	e3c00002 	bic	r0, r0, #2
4001a7a4:	e58d0018 	str	r0, [sp, #24]
4001a7a8:	e28d1004 	add	r1, sp, #4
4001a7ac:	e1a00006 	mov	r0, r6
4001a7b0:	ebffea90 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001a7b4:	e3a02000 	mov	r2, #0
4001a7b8:	e3a01002 	mov	r1, #2
4001a7bc:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a7c0:	ebffbe27 	bl	4000a064 <_txe_event_flags_set>
4001a7c4:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a7c8:	ebffe16a 	bl	40012d78 <CyU3PSysBarrierSync>
4001a7cc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a7d0:	e3500000 	cmp	r0, #0
4001a7d4:	0a000007 	beq	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7d8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a7dc:	e3100002 	tst	r0, #2
4001a7e0:	0a000004 	beq	4001a7f8 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7e4:	e3a02000 	mov	r2, #0
4001a7e8:	e3a01002 	mov	r1, #2
4001a7ec:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a7f0:	e1a0000a 	mov	r0, sl
4001a7f4:	e12fff33 	blx	r3
4001a7f8:	e3150010 	tst	r5, #16
4001a7fc:	0a000059 	beq	4001a968 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a800:	e28a1046 	add	r1, sl, #70	; 0x46
4001a804:	e0811088 	add	r1, r1, r8, lsl #1
4001a808:	e1d100b0 	ldrh	r0, [r1]
4001a80c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a810:	eb00202c 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a814:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a818:	e3100001 	tst	r0, #1
4001a81c:	0a000051 	beq	4001a968 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a820:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a824:	e0811088 	add	r1, r1, r8, lsl #1
4001a828:	e1d100b0 	ldrh	r0, [r1]
4001a82c:	ebffe9af 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001a830:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a834:	e59f13a8 	ldr	r1, [pc, #936]	; 4001abe4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a838:	e0000001 	and	r0, r0, r1
4001a83c:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a840:	e28a1046 	add	r1, sl, #70	; 0x46
4001a844:	e0811088 	add	r1, r1, r8, lsl #1
4001a848:	e1d100b0 	ldrh	r0, [r1]
4001a84c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a850:	eb002037 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a854:	e28a1046 	add	r1, sl, #70	; 0x46
4001a858:	e0811088 	add	r1, r1, r8, lsl #1
4001a85c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a860:	e1c100b0 	strh	r0, [r1]
4001a864:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a868:	e0811088 	add	r1, r1, r8, lsl #1
4001a86c:	e1d100b0 	ldrh	r0, [r1]
4001a870:	e28d1004 	add	r1, sp, #4
4001a874:	ebffe9b5 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001a878:	e59d0010 	ldr	r0, [sp, #16]
4001a87c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a880:	e58d0010 	str	r0, [sp, #16]
4001a884:	e59d0010 	ldr	r0, [sp, #16]
4001a888:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a88c:	e58d0010 	str	r0, [sp, #16]
4001a890:	e3a00000 	mov	r0, #0
4001a894:	e58d0014 	str	r0, [sp, #20]
4001a898:	e28a0064 	add	r0, sl, #100	; 0x64
4001a89c:	e0800088 	add	r0, r0, r8, lsl #1
4001a8a0:	e1d000b0 	ldrh	r0, [r0]
4001a8a4:	e2400001 	sub	r0, r0, #1
4001a8a8:	e28a1064 	add	r1, sl, #100	; 0x64
4001a8ac:	e0811088 	add	r1, r1, r8, lsl #1
4001a8b0:	e1c100b0 	strh	r0, [r1]
4001a8b4:	e28a0064 	add	r0, sl, #100	; 0x64
4001a8b8:	e0800088 	add	r0, r0, r8, lsl #1
4001a8bc:	e1d000b0 	ldrh	r0, [r0]
4001a8c0:	e3500000 	cmp	r0, #0
4001a8c4:	1a000004 	bne	4001a8dc <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a8c8:	e3a00010 	mov	r0, #16
4001a8cc:	e58d0014 	str	r0, [sp, #20]
4001a8d0:	e59d0018 	ldr	r0, [sp, #24]
4001a8d4:	e3c00010 	bic	r0, r0, #16
4001a8d8:	e58d0018 	str	r0, [sp, #24]
4001a8dc:	e28a0046 	add	r0, sl, #70	; 0x46
4001a8e0:	e0800088 	add	r0, r0, r8, lsl #1
4001a8e4:	e1d000b0 	ldrh	r0, [r0]
4001a8e8:	e58d0004 	str	r0, [sp, #4]
4001a8ec:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a8f0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8f4:	e1d100b0 	ldrh	r0, [r1]
4001a8f8:	e28d1004 	add	r1, sp, #4
4001a8fc:	ebffea3d 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001a900:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a904:	e59f12d4 	ldr	r1, [pc, #724]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a908:	e0017820 	and	r7, r1, r0, lsr #16
4001a90c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a910:	e1a00007 	mov	r0, r7
4001a914:	eb001feb 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a918:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a91c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001abe4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a920:	e0000001 	and	r0, r0, r1
4001a924:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a928:	e28d1028 	add	r1, sp, #40	; 0x28
4001a92c:	e1a00007 	mov	r0, r7
4001a930:	eb001fff 	bl	40022934 <CyU3PDmaDscrSetConfig>
4001a934:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a938:	e3500000 	cmp	r0, #0
4001a93c:	0a000004 	beq	4001a954 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a940:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a944:	e59f3298 	ldr	r3, [pc, #664]	; 4001abe4 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a948:	e0021003 	and	r1, r2, r3
4001a94c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a950:	ebffdeaf 	bl	40012414 <CyU3PSysFlushDRegion>
4001a954:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a958:	e3a02000 	mov	r2, #0
4001a95c:	e1a01007 	mov	r1, r7
4001a960:	ebffea12 	bl	400151b0 <CyU3PDmaSocketSendEvent>
4001a964:	ebffe103 	bl	40012d78 <CyU3PSysBarrierSync>
4001a968:	e3150020 	tst	r5, #32
4001a96c:	0a000098 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a970:	ebffe100 	bl	40012d78 <CyU3PSysBarrierSync>
4001a974:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a978:	e3500000 	cmp	r0, #0
4001a97c:	0a000094 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a980:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a984:	e3100080 	tst	r0, #128	; 0x80
4001a988:	0a000091 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a98c:	e3a02000 	mov	r2, #0
4001a990:	e3a01080 	mov	r1, #128	; 0x80
4001a994:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a998:	e1a0000a 	mov	r0, sl
4001a99c:	e12fff33 	blx	r3
4001a9a0:	ea00008b 	b	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a9a4:	e594000c 	ldr	r0, [r4, #12]
4001a9a8:	e1a09800 	lsl	r9, r0, #16
4001a9ac:	e1a09829 	lsr	r9, r9, #16
4001a9b0:	e3150001 	tst	r5, #1
4001a9b4:	0a00006b 	beq	4001ab68 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a9b8:	e59a0000 	ldr	r0, [sl]
4001a9bc:	e3500004 	cmp	r0, #4
4001a9c0:	0a000031 	beq	4001aa8c <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a9c4:	e1a00000 	nop			; (mov r0, r0)
4001a9c8:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a9cc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a9d0:	eb001fbc 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001a9d4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a9d8:	e58d001c 	str	r0, [sp, #28]
4001a9dc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9e0:	e59f11f8 	ldr	r1, [pc, #504]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a9e4:	e0010820 	and	r0, r1, r0, lsr #16
4001a9e8:	e1cd02b0 	strh	r0, [sp, #32]
4001a9ec:	e241100f 	sub	r1, r1, #15
4001a9f0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9f4:	e0000001 	and	r0, r0, r1
4001a9f8:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a9fc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa00:	e200000f 	and	r0, r0, #15
4001aa04:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001aa08:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aa0c:	e3500000 	cmp	r0, #0
4001aa10:	0a000002 	beq	4001aa20 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001aa14:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aa18:	e59d001c 	ldr	r0, [sp, #28]
4001aa1c:	ebffde7c 	bl	40012414 <CyU3PSysFlushDRegion>
4001aa20:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa24:	e3100008 	tst	r0, #8
4001aa28:	0a000003 	beq	4001aa3c <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001aa2c:	e3a02000 	mov	r2, #0
4001aa30:	e3a01008 	mov	r1, #8
4001aa34:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001aa38:	ebffbd89 	bl	4000a064 <_txe_event_flags_set>
4001aa3c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001aa40:	e59f1198 	ldr	r1, [pc, #408]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa44:	e0010820 	and	r0, r1, r0, lsr #16
4001aa48:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001aa4c:	ebffe0c9 	bl	40012d78 <CyU3PSysBarrierSync>
4001aa50:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001aa54:	e3500000 	cmp	r0, #0
4001aa58:	0a000007 	beq	4001aa7c <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa5c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001aa60:	e3100008 	tst	r0, #8
4001aa64:	0a000004 	beq	4001aa7c <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa68:	e28d201c 	add	r2, sp, #28
4001aa6c:	e3a01008 	mov	r1, #8
4001aa70:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001aa74:	e1a0000a 	mov	r0, sl
4001aa78:	e12fff33 	blx	r3
4001aa7c:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001aa80:	e1500009 	cmp	r0, r9
4001aa84:	1affffcf 	bne	4001a9c8 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001aa88:	ea000036 	b	4001ab68 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001aa8c:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001aa90:	e28d1028 	add	r1, sp, #40	; 0x28
4001aa94:	eb001f8b 	bl	400228c8 <CyU3PDmaDscrGetConfig>
4001aa98:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001aa9c:	e58d001c 	str	r0, [sp, #28]
4001aaa0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aaa4:	e59f1134 	ldr	r1, [pc, #308]	; 4001abe0 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aaa8:	e0010820 	and	r0, r1, r0, lsr #16
4001aaac:	e1cd02b0 	strh	r0, [sp, #32]
4001aab0:	e241100f 	sub	r1, r1, #15
4001aab4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aab8:	e0000001 	and	r0, r0, r1
4001aabc:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001aac0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aac4:	e200000f 	and	r0, r0, #15
4001aac8:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001aacc:	e3a00001 	mov	r0, #1
4001aad0:	e58a0000 	str	r0, [sl]
4001aad4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aad8:	e3500000 	cmp	r0, #0
4001aadc:	0a000002 	beq	4001aaec <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001aae0:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aae4:	e59d001c 	ldr	r0, [sp, #28]
4001aae8:	ebffde49 	bl	40012414 <CyU3PSysFlushDRegion>
4001aaec:	e1da00b4 	ldrh	r0, [sl, #4]
4001aaf0:	e3500006 	cmp	r0, #6
4001aaf4:	1a00000a 	bne	4001ab24 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001aaf8:	e28d1004 	add	r1, sp, #4
4001aafc:	e1a00006 	mov	r0, r6
4001ab00:	ebffe912 	bl	40014f50 <CyU3PDmaSocketGetConfig>
4001ab04:	e3a00000 	mov	r0, #0
4001ab08:	e58d0014 	str	r0, [sp, #20]
4001ab0c:	e59d0018 	ldr	r0, [sp, #24]
4001ab10:	e3c00001 	bic	r0, r0, #1
4001ab14:	e58d0018 	str	r0, [sp, #24]
4001ab18:	e28d1004 	add	r1, sp, #4
4001ab1c:	e1a00006 	mov	r0, r6
4001ab20:	ebffe9b4 	bl	400151f8 <CyU3PDmaSocketSetConfig>
4001ab24:	e3a02000 	mov	r2, #0
4001ab28:	e3a01004 	mov	r1, #4
4001ab2c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ab30:	ebffbd4b 	bl	4000a064 <_txe_event_flags_set>
4001ab34:	e3c55080 	bic	r5, r5, #128	; 0x80
4001ab38:	ebffe08e 	bl	40012d78 <CyU3PSysBarrierSync>
4001ab3c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab40:	e3500000 	cmp	r0, #0
4001ab44:	0a000007 	beq	4001ab68 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab48:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab4c:	e3100004 	tst	r0, #4
4001ab50:	0a000004 	beq	4001ab68 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab54:	e28d201c 	add	r2, sp, #28
4001ab58:	e3a01004 	mov	r1, #4
4001ab5c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ab60:	e1a0000a 	mov	r0, sl
4001ab64:	e12fff33 	blx	r3
4001ab68:	e3150080 	tst	r5, #128	; 0x80
4001ab6c:	0a000018 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab70:	e1da00b4 	ldrh	r0, [sl, #4]
4001ab74:	e3500006 	cmp	r0, #6
4001ab78:	1a000012 	bne	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001ab7c:	e3a00001 	mov	r0, #1
4001ab80:	e58a0000 	str	r0, [sl]
4001ab84:	e3a02000 	mov	r2, #0
4001ab88:	e3a01001 	mov	r1, #1
4001ab8c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ab90:	ebffbd33 	bl	4000a064 <_txe_event_flags_set>
4001ab94:	ebffe077 	bl	40012d78 <CyU3PSysBarrierSync>
4001ab98:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab9c:	e3500000 	cmp	r0, #0
4001aba0:	0a00000b 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aba4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001aba8:	e3100001 	tst	r0, #1
4001abac:	0a000008 	beq	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001abb0:	e3a02000 	mov	r2, #0
4001abb4:	e3a01001 	mov	r1, #1
4001abb8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001abbc:	e1a0000a 	mov	r0, sl
4001abc0:	e12fff33 	blx	r3
4001abc4:	ea000002 	b	4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001abc8:	e3a00006 	mov	r0, #6
4001abcc:	e58a0000 	str	r0, [sl]
4001abd0:	ebffe068 	bl	40012d78 <CyU3PSysBarrierSync>
4001abd4:	e28a0078 	add	r0, sl, #120	; 0x78
4001abd8:	ebffbdee 	bl	4000a398 <_txe_mutex_put>
4001abdc:	eafffe6b 	b	4001a590 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001abe0:	0000ffff 	.word	0x0000ffff
4001abe4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001abe8 <CyU3PDmaIsSockAvlEnReqd>:
4001abe8:	e1a01000 	mov	r1, r0
4001abec:	e3a0003f 	mov	r0, #63	; 0x3f
4001abf0:	e0000441 	and	r0, r0, r1, asr #8
4001abf4:	e3500003 	cmp	r0, #3
4001abf8:	1a000004 	bne	4001ac10 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001abfc:	e3a00001 	mov	r0, #1
4001ac00:	e59f203c 	ldr	r2, [pc, #60]	; 4001ac44 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001ac04:	e1d220b0 	ldrh	r2, [r2]
4001ac08:	e1120110 	tst	r2, r0, lsl r1
4001ac0c:	1a000008 	bne	4001ac34 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001ac10:	e3a0003f 	mov	r0, #63	; 0x3f
4001ac14:	e0000441 	and	r0, r0, r1, asr #8
4001ac18:	e3500004 	cmp	r0, #4
4001ac1c:	1a000006 	bne	4001ac3c <CyU3PDmaIsSockAvlEnReqd+0x54>
4001ac20:	e3a00001 	mov	r0, #1
4001ac24:	e59f201c 	ldr	r2, [pc, #28]	; 4001ac48 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001ac28:	e1d220b0 	ldrh	r2, [r2]
4001ac2c:	e1120110 	tst	r2, r0, lsl r1
4001ac30:	0a000001 	beq	4001ac3c <CyU3PDmaIsSockAvlEnReqd+0x54>
4001ac34:	e3a00001 	mov	r0, #1
4001ac38:	e12fff1e 	bx	lr
4001ac3c:	e3a00000 	mov	r0, #0
4001ac40:	eafffffc 	b	4001ac38 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001ac44:	40030cfc 	.word	0x40030cfc
4001ac48:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaMsgSend:

4001ac4c <CyU3PDmaMsgSend>:
4001ac4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ac50:	e1a04000 	mov	r4, r0
4001ac54:	e1a05001 	mov	r5, r1
4001ac58:	e1a07002 	mov	r7, r2
4001ac5c:	e3570001 	cmp	r7, #1
4001ac60:	1a000005 	bne	4001ac7c <CyU3PDmaMsgSend+0x30>
4001ac64:	e1a02005 	mov	r2, r5
4001ac68:	e1a01004 	mov	r1, r4
4001ac6c:	e59f0024 	ldr	r0, [pc, #36]	; 4001ac98 <CyU3PDmaMsgSend+0x4c>
4001ac70:	ebffbe5e 	bl	4000a5f0 <_txe_queue_front_send>
4001ac74:	e1a06000 	mov	r6, r0
4001ac78:	ea000004 	b	4001ac90 <CyU3PDmaMsgSend+0x44>
4001ac7c:	e1a02005 	mov	r2, r5
4001ac80:	e1a01004 	mov	r1, r4
4001ac84:	e59f000c 	ldr	r0, [pc, #12]	; 4001ac98 <CyU3PDmaMsgSend+0x4c>
4001ac88:	ebffbea8 	bl	4000a730 <_txe_queue_send>
4001ac8c:	e1a06000 	mov	r6, r0
4001ac90:	e1a00006 	mov	r0, r6
4001ac94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ac98:	40031934 	.word	0x40031934

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001ac9c <CyU3PDmaMultiChannelHandleError>:
4001ac9c:	e92d4070 	push	{r4, r5, r6, lr}
4001aca0:	e1a04000 	mov	r4, r0
4001aca4:	e3e01000 	mvn	r1, #0
4001aca8:	e2840078 	add	r0, r4, #120	; 0x78
4001acac:	ebffbd84 	bl	4000a2c4 <_txe_mutex_get>
4001acb0:	e1d400b4 	ldrh	r0, [r4, #4]
4001acb4:	e3500005 	cmp	r0, #5
4001acb8:	0a000002 	beq	4001acc8 <CyU3PDmaMultiChannelHandleError+0x2c>
4001acbc:	e1d400b4 	ldrh	r0, [r4, #4]
4001acc0:	e3500007 	cmp	r0, #7
4001acc4:	1a00000d 	bne	4001ad00 <CyU3PDmaMultiChannelHandleError+0x64>
4001acc8:	e3a05000 	mov	r5, #0
4001accc:	ea000005 	b	4001ace8 <CyU3PDmaMultiChannelHandleError+0x4c>
4001acd0:	e2841024 	add	r1, r4, #36	; 0x24
4001acd4:	e0811085 	add	r1, r1, r5, lsl #1
4001acd8:	e1d100b0 	ldrh	r0, [r1]
4001acdc:	ebffe883 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001ace0:	e2850001 	add	r0, r5, #1
4001ace4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ace8:	e1d400ba 	ldrh	r0, [r4, #10]
4001acec:	e1500005 	cmp	r0, r5
4001acf0:	cafffff6 	bgt	4001acd0 <CyU3PDmaMultiChannelHandleError+0x34>
4001acf4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001acf8:	ebffe87c 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001acfc:	ea00000c 	b	4001ad34 <CyU3PDmaMultiChannelHandleError+0x98>
4001ad00:	e3a05000 	mov	r5, #0
4001ad04:	ea000005 	b	4001ad20 <CyU3PDmaMultiChannelHandleError+0x84>
4001ad08:	e284102c 	add	r1, r4, #44	; 0x2c
4001ad0c:	e0811085 	add	r1, r1, r5, lsl #1
4001ad10:	e1d100b0 	ldrh	r0, [r1]
4001ad14:	ebffe875 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001ad18:	e2850001 	add	r0, r5, #1
4001ad1c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ad20:	e1d400ba 	ldrh	r0, [r4, #10]
4001ad24:	e1500005 	cmp	r0, r5
4001ad28:	cafffff6 	bgt	4001ad08 <CyU3PDmaMultiChannelHandleError+0x6c>
4001ad2c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001ad30:	ebffe86e 	bl	40014ef0 <CyU3PDmaSocketDisable>
4001ad34:	e3a02002 	mov	r2, #2
4001ad38:	e3e01007 	mvn	r1, #7
4001ad3c:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad40:	ebffbcc7 	bl	4000a064 <_txe_event_flags_set>
4001ad44:	e3a02000 	mov	r2, #0
4001ad48:	e3a01040 	mov	r1, #64	; 0x40
4001ad4c:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad50:	ebffbcc3 	bl	4000a064 <_txe_event_flags_set>
4001ad54:	e3a00005 	mov	r0, #5
4001ad58:	e5840000 	str	r0, [r4]
4001ad5c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001ad60:	e3500000 	cmp	r0, #0
4001ad64:	0a000007 	beq	4001ad88 <CyU3PDmaMultiChannelHandleError+0xec>
4001ad68:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001ad6c:	e3100040 	tst	r0, #64	; 0x40
4001ad70:	0a000004 	beq	4001ad88 <CyU3PDmaMultiChannelHandleError+0xec>
4001ad74:	e3a02000 	mov	r2, #0
4001ad78:	e3a01040 	mov	r1, #64	; 0x40
4001ad7c:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001ad80:	e1a00004 	mov	r0, r4
4001ad84:	e12fff33 	blx	r3
4001ad88:	e2840078 	add	r0, r4, #120	; 0x78
4001ad8c:	ebffbd81 	bl	4000a398 <_txe_mutex_put>
4001ad90:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001ad94 <CyU3PDmaThreadEntry>:
4001ad94:	e92d4070 	push	{r4, r5, r6, lr}
4001ad98:	e24dd040 	sub	sp, sp, #64	; 0x40
4001ad9c:	ea00003f 	b	4001aea0 <CyU3PDmaThreadEntry+0x10c>
4001ada0:	e3e02000 	mvn	r2, #0
4001ada4:	e1a0100d 	mov	r1, sp
4001ada8:	e59f00f4 	ldr	r0, [pc, #244]	; 4001aea4 <CyU3PDmaThreadEntry+0x110>
4001adac:	ebffbe37 	bl	4000a690 <_txe_queue_receive>
4001adb0:	e1a05000 	mov	r5, r0
4001adb4:	e3550000 	cmp	r5, #0
4001adb8:	0a000000 	beq	4001adc0 <CyU3PDmaThreadEntry+0x2c>
4001adbc:	ea000037 	b	4001aea0 <CyU3PDmaThreadEntry+0x10c>
4001adc0:	e59d0000 	ldr	r0, [sp]
4001adc4:	e20040ff 	and	r4, r0, #255	; 0xff
4001adc8:	e3540000 	cmp	r4, #0
4001adcc:	0a000000 	beq	4001add4 <CyU3PDmaThreadEntry+0x40>
4001add0:	ea000032 	b	4001aea0 <CyU3PDmaThreadEntry+0x10c>
4001add4:	e59d6004 	ldr	r6, [sp, #4]
4001add8:	e1d600b4 	ldrh	r0, [r6, #4]
4001addc:	e350000a 	cmp	r0, #10
4001ade0:	308ff100 	addcc	pc, pc, r0, lsl #2
4001ade4:	ea000028 	b	4001ae8c <CyU3PDmaThreadEntry+0xf8>
4001ade8:	ea000008 	b	4001ae10 <CyU3PDmaThreadEntry+0x7c>
4001adec:	ea000009 	b	4001ae18 <CyU3PDmaThreadEntry+0x84>
4001adf0:	ea00000e 	b	4001ae30 <CyU3PDmaThreadEntry+0x9c>
4001adf4:	ea00000a 	b	4001ae24 <CyU3PDmaThreadEntry+0x90>
4001adf8:	ea00000b 	b	4001ae2c <CyU3PDmaThreadEntry+0x98>
4001adfc:	ea00000e 	b	4001ae3c <CyU3PDmaThreadEntry+0xa8>
4001ae00:	ea000012 	b	4001ae50 <CyU3PDmaThreadEntry+0xbc>
4001ae04:	ea00000e 	b	4001ae44 <CyU3PDmaThreadEntry+0xb0>
4001ae08:	ea000012 	b	4001ae58 <CyU3PDmaThreadEntry+0xc4>
4001ae0c:	ea000014 	b	4001ae64 <CyU3PDmaThreadEntry+0xd0>
4001ae10:	e1a00000 	nop			; (mov r0, r0)
4001ae14:	e1a00000 	nop			; (mov r0, r0)
4001ae18:	e1a0000d 	mov	r0, sp
4001ae1c:	ebfffa18 	bl	40019684 <CyU3PDmaIntHandler_TypeAuto>
4001ae20:	ea00001b 	b	4001ae94 <CyU3PDmaThreadEntry+0x100>
4001ae24:	e1a00000 	nop			; (mov r0, r0)
4001ae28:	e1a00000 	nop			; (mov r0, r0)
4001ae2c:	e1a00000 	nop			; (mov r0, r0)
4001ae30:	e1a0000d 	mov	r0, sp
4001ae34:	ebfffaed 	bl	400199f0 <CyU3PDmaIntHandler_TypeManual>
4001ae38:	ea000015 	b	4001ae94 <CyU3PDmaThreadEntry+0x100>
4001ae3c:	e1a00000 	nop			; (mov r0, r0)
4001ae40:	e1a00000 	nop			; (mov r0, r0)
4001ae44:	e1a0000d 	mov	r0, sp
4001ae48:	ebfffc4c 	bl	40019f80 <CyU3PDmaIntHandler_TypeManyToOne>
4001ae4c:	ea000010 	b	4001ae94 <CyU3PDmaThreadEntry+0x100>
4001ae50:	e1a00000 	nop			; (mov r0, r0)
4001ae54:	e1a00000 	nop			; (mov r0, r0)
4001ae58:	e1a0000d 	mov	r0, sp
4001ae5c:	ebfffdbf 	bl	4001a560 <CyU3PDmaIntHandler_TypeOneToMany>
4001ae60:	ea00000b 	b	4001ae94 <CyU3PDmaThreadEntry+0x100>
4001ae64:	e1a00000 	nop			; (mov r0, r0)
4001ae68:	e59f0038 	ldr	r0, [pc, #56]	; 4001aea8 <CyU3PDmaThreadEntry+0x114>
4001ae6c:	e5900000 	ldr	r0, [r0]
4001ae70:	e3500000 	cmp	r0, #0
4001ae74:	0a000003 	beq	4001ae88 <CyU3PDmaThreadEntry+0xf4>
4001ae78:	e1a0000d 	mov	r0, sp
4001ae7c:	e59f1024 	ldr	r1, [pc, #36]	; 4001aea8 <CyU3PDmaThreadEntry+0x114>
4001ae80:	e5911000 	ldr	r1, [r1]
4001ae84:	e12fff31 	blx	r1
4001ae88:	ea000001 	b	4001ae94 <CyU3PDmaThreadEntry+0x100>
4001ae8c:	e1a00000 	nop			; (mov r0, r0)
4001ae90:	e1a00000 	nop			; (mov r0, r0)
4001ae94:	e1a00000 	nop			; (mov r0, r0)
4001ae98:	ebffbf2a 	bl	4000ab48 <_txe_thread_relinquish>
4001ae9c:	e1a00000 	nop			; (mov r0, r0)
4001aea0:	eaffffbe 	b	4001ada0 <CyU3PDmaThreadEntry+0xc>
4001aea4:	40031934 	.word	0x40031934
4001aea8:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PGpifInit:

4001aeac <CyU3PGpifInit>:
4001aeac:	e92d4010 	push	{r4, lr}
4001aeb0:	e1a04000 	mov	r4, r0
4001aeb4:	e3540000 	cmp	r4, #0
4001aeb8:	0a000006 	beq	4001aed8 <CyU3PGpifInit+0x2c>
4001aebc:	e59f005c 	ldr	r0, [pc, #92]	; 4001af20 <CyU3PGpifInit+0x74>
4001aec0:	e5900000 	ldr	r0, [r0]
4001aec4:	e1a00800 	lsl	r0, r0, #16
4001aec8:	e1a00820 	lsr	r0, r0, #16
4001aecc:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aed0:	e59f1048 	ldr	r1, [pc, #72]	; 4001af20 <CyU3PGpifInit+0x74>
4001aed4:	e5810000 	str	r0, [r1]
4001aed8:	e3e00000 	mvn	r0, #0
4001aedc:	e59f1040 	ldr	r1, [pc, #64]	; 4001af24 <CyU3PGpifInit+0x78>
4001aee0:	e5810014 	str	r0, [r1, #20]
4001aee4:	e3a00000 	mov	r0, #0
4001aee8:	e5810018 	str	r0, [r1, #24]
4001aeec:	e3a00e11 	mov	r0, #272	; 0x110
4001aef0:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aef4:	e5810008 	str	r0, [r1, #8]
4001aef8:	ebffdf9e 	bl	40012d78 <CyU3PSysBarrierSync>
4001aefc:	e59f001c 	ldr	r0, [pc, #28]	; 4001af20 <CyU3PGpifInit+0x74>
4001af00:	e5900000 	ldr	r0, [r0]
4001af04:	e1a00800 	lsl	r0, r0, #16
4001af08:	e1a00820 	lsr	r0, r0, #16
4001af0c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001af10:	e59f1008 	ldr	r1, [pc, #8]	; 4001af20 <CyU3PGpifInit+0x74>
4001af14:	e5810000 	str	r0, [r1]
4001af18:	e3a00000 	mov	r0, #0
4001af1c:	e8bd8010 	pop	{r4, pc}
4001af20:	e0010000 	.word	0xe0010000
4001af24:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001af28 <CyU3PPibApplicationDefine>:
4001af28:	e92d4010 	push	{r4, lr}
4001af2c:	e24dd020 	sub	sp, sp, #32
4001af30:	e3a00000 	mov	r0, #0
4001af34:	e59f10dc 	ldr	r1, [pc, #220]	; 4001b018 <CyU3PPibApplicationDefine+0xf0>
4001af38:	e5810000 	str	r0, [r1]
4001af3c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001b01c <CyU3PPibApplicationDefine+0xf4>
4001af40:	e5810000 	str	r0, [r1]
4001af44:	e59f10d4 	ldr	r1, [pc, #212]	; 4001b020 <CyU3PPibApplicationDefine+0xf8>
4001af48:	e5810000 	str	r0, [r1]
4001af4c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001b024 <CyU3PPibApplicationDefine+0xfc>
4001af50:	e5810000 	str	r0, [r1]
4001af54:	e59f10cc 	ldr	r1, [pc, #204]	; 4001b028 <CyU3PPibApplicationDefine+0x100>
4001af58:	e5810000 	str	r0, [r1]
4001af5c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b02c <CyU3PPibApplicationDefine+0x104>
4001af60:	e5810000 	str	r0, [r1]
4001af64:	e59f10c4 	ldr	r1, [pc, #196]	; 4001b030 <CyU3PPibApplicationDefine+0x108>
4001af68:	e5810000 	str	r0, [r1]
4001af6c:	e59f10c0 	ldr	r1, [pc, #192]	; 4001b034 <CyU3PPibApplicationDefine+0x10c>
4001af70:	e5810000 	str	r0, [r1]
4001af74:	e59f10bc 	ldr	r1, [pc, #188]	; 4001b038 <CyU3PPibApplicationDefine+0x110>
4001af78:	e5810000 	str	r0, [r1]
4001af7c:	e3a00b01 	mov	r0, #1024	; 0x400
4001af80:	ebffa1bb 	bl	40003674 <CyU3PMemAlloc>
4001af84:	e1a04000 	mov	r4, r0
4001af88:	e3a030a8 	mov	r3, #168	; 0xa8
4001af8c:	e3a02001 	mov	r2, #1
4001af90:	e3a01000 	mov	r1, #0
4001af94:	e3a00004 	mov	r0, #4
4001af98:	e28dc00c 	add	ip, sp, #12
4001af9c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001afa0:	e3a02b01 	mov	r2, #1024	; 0x400
4001afa4:	e1a03001 	mov	r3, r1
4001afa8:	e58d2004 	str	r2, [sp, #4]
4001afac:	e59f2088 	ldr	r2, [pc, #136]	; 4001b03c <CyU3PPibApplicationDefine+0x114>
4001afb0:	e28f1088 	add	r1, pc, #136	; 0x88
4001afb4:	e58d0008 	str	r0, [sp, #8]
4001afb8:	e59f0090 	ldr	r0, [pc, #144]	; 4001b050 <CyU3PPibApplicationDefine+0x128>
4001afbc:	e58d4000 	str	r4, [sp]
4001afc0:	ebffbe02 	bl	4000a7d0 <_txe_thread_create>
4001afc4:	e3a02028 	mov	r2, #40	; 0x28
4001afc8:	e3a01000 	mov	r1, #0
4001afcc:	e59f0080 	ldr	r0, [pc, #128]	; 4001b054 <CyU3PPibApplicationDefine+0x12c>
4001afd0:	ebffbb83 	bl	40009de4 <_txe_event_flags_create>
4001afd4:	e3a02000 	mov	r2, #0
4001afd8:	e3a01010 	mov	r1, #16
4001afdc:	e59f0070 	ldr	r0, [pc, #112]	; 4001b054 <CyU3PPibApplicationDefine+0x12c>
4001afe0:	ebffbc1f 	bl	4000a064 <_txe_event_flags_set>
4001afe4:	e3a00040 	mov	r0, #64	; 0x40
4001afe8:	ebffa1a1 	bl	40003674 <CyU3PMemAlloc>
4001afec:	e1a04000 	mov	r4, r0
4001aff0:	e3a0303c 	mov	r3, #60	; 0x3c
4001aff4:	e3a02040 	mov	r2, #64	; 0x40
4001aff8:	e1cd20f0 	strd	r2, [sp]
4001affc:	e1a03004 	mov	r3, r4
4001b000:	e3a02001 	mov	r2, #1
4001b004:	e3a01000 	mov	r1, #0
4001b008:	e59f0048 	ldr	r0, [pc, #72]	; 4001b058 <CyU3PPibApplicationDefine+0x130>
4001b00c:	ebffbd09 	bl	4000a438 <_txe_queue_create>
4001b010:	e28dd020 	add	sp, sp, #32
4001b014:	e8bd8010 	pop	{r4, pc}
4001b018:	40030d18 	.word	0x40030d18
4001b01c:	40030d1c 	.word	0x40030d1c
4001b020:	40030d24 	.word	0x40030d24
4001b024:	40030d3c 	.word	0x40030d3c
4001b028:	40030d30 	.word	0x40030d30
4001b02c:	40030d34 	.word	0x40030d34
4001b030:	40030d28 	.word	0x40030d28
4001b034:	40030d2c 	.word	0x40030d2c
4001b038:	40030d20 	.word	0x40030d20
4001b03c:	4001b210 	.word	0x4001b210
4001b040:	505f3330 	.word	0x505f3330
4001b044:	545f4249 	.word	0x545f4249
4001b048:	41455248 	.word	0x41455248
4001b04c:	00000044 	.word	0x00000044
4001b050:	40031998 	.word	0x40031998
4001b054:	40031970 	.word	0x40031970
4001b058:	40031a40 	.word	0x40031a40

Disassembly of section i.CyU3PPibInit:

4001b05c <CyU3PPibInit>:
4001b05c:	e92d4070 	push	{r4, r5, r6, lr}
4001b060:	e1a04000 	mov	r4, r0
4001b064:	e1a05001 	mov	r5, r1
4001b068:	e3a06000 	mov	r6, #0
4001b06c:	ebffe724 	bl	40014d04 <CyFx3DevIsGpifSupported>
4001b070:	e3500000 	cmp	r0, #0
4001b074:	1a000001 	bne	4001b080 <CyU3PPibInit+0x24>
4001b078:	e3a00046 	mov	r0, #70	; 0x46
4001b07c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b080:	e59f0128 	ldr	r0, [pc, #296]	; 4001b1b0 <CyU3PPibInit+0x154>
4001b084:	e5900000 	ldr	r0, [r0]
4001b088:	e3500000 	cmp	r0, #0
4001b08c:	0a000001 	beq	4001b098 <CyU3PPibInit+0x3c>
4001b090:	e3a00043 	mov	r0, #67	; 0x43
4001b094:	eafffff8 	b	4001b07c <CyU3PPibInit+0x20>
4001b098:	e3550000 	cmp	r5, #0
4001b09c:	1a000001 	bne	4001b0a8 <CyU3PPibInit+0x4c>
4001b0a0:	e3a00041 	mov	r0, #65	; 0x41
4001b0a4:	eafffff4 	b	4001b07c <CyU3PPibInit+0x20>
4001b0a8:	e5d5000c 	ldrb	r0, [r5, #12]
4001b0ac:	e3500004 	cmp	r0, #4
4001b0b0:	ba000001 	blt	4001b0bc <CyU3PPibInit+0x60>
4001b0b4:	e3a00040 	mov	r0, #64	; 0x40
4001b0b8:	eaffffef 	b	4001b07c <CyU3PPibInit+0x20>
4001b0bc:	e1d500b0 	ldrh	r0, [r5]
4001b0c0:	e3500002 	cmp	r0, #2
4001b0c4:	ba000002 	blt	4001b0d4 <CyU3PPibInit+0x78>
4001b0c8:	e1d500b0 	ldrh	r0, [r5]
4001b0cc:	e3500b01 	cmp	r0, #1024	; 0x400
4001b0d0:	da000001 	ble	4001b0dc <CyU3PPibInit+0x80>
4001b0d4:	e3a00040 	mov	r0, #64	; 0x40
4001b0d8:	eaffffe7 	b	4001b07c <CyU3PPibInit+0x20>
4001b0dc:	e3a00001 	mov	r0, #1
4001b0e0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b1b0 <CyU3PPibInit+0x154>
4001b0e4:	e5810000 	str	r0, [r1]
4001b0e8:	e5d5000c 	ldrb	r0, [r5, #12]
4001b0ec:	e3a01b06 	mov	r1, #6144	; 0x1800
4001b0f0:	e0010580 	and	r0, r1, r0, lsl #11
4001b0f4:	e1d510b0 	ldrh	r1, [r5]
4001b0f8:	e2411001 	sub	r1, r1, #1
4001b0fc:	e1a01b01 	lsl	r1, r1, #22
4001b100:	e1a01b21 	lsr	r1, r1, #22
4001b104:	e1800001 	orr	r0, r0, r1
4001b108:	e59f10a4 	ldr	r1, [pc, #164]	; 4001b1b4 <CyU3PPibInit+0x158>
4001b10c:	e581000c 	str	r0, [r1, #12]
4001b110:	e5950004 	ldr	r0, [r5, #4]
4001b114:	e3500000 	cmp	r0, #0
4001b118:	0a000003 	beq	4001b12c <CyU3PPibInit+0xd0>
4001b11c:	e1a00001 	mov	r0, r1
4001b120:	e590000c 	ldr	r0, [r0, #12]
4001b124:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001b128:	e581000c 	str	r0, [r1, #12]
4001b12c:	e59f0080 	ldr	r0, [pc, #128]	; 4001b1b4 <CyU3PPibInit+0x158>
4001b130:	e590000c 	ldr	r0, [r0, #12]
4001b134:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b138:	e59f1074 	ldr	r1, [pc, #116]	; 4001b1b4 <CyU3PPibInit+0x158>
4001b13c:	e581000c 	str	r0, [r1, #12]
4001b140:	ebffe755 	bl	40014e9c <CyFx3PibPowerOn>
4001b144:	e5950008 	ldr	r0, [r5, #8]
4001b148:	e3500000 	cmp	r0, #0
4001b14c:	0a000000 	beq	4001b154 <CyU3PPibInit+0xf8>
4001b150:	ebffe732 	bl	40014e20 <CyFx3PibDllEnable>
4001b154:	e59f005c 	ldr	r0, [pc, #92]	; 4001b1b8 <CyU3PPibInit+0x15c>
4001b158:	e5900000 	ldr	r0, [r0]
4001b15c:	e3500000 	cmp	r0, #0
4001b160:	0a000003 	beq	4001b174 <CyU3PPibInit+0x118>
4001b164:	e1a00004 	mov	r0, r4
4001b168:	eb0000d4 	bl	4001b4c0 <CyU3PPmmcInit>
4001b16c:	e1a06000 	mov	r6, r0
4001b170:	ea000002 	b	4001b180 <CyU3PPibInit+0x124>
4001b174:	e1a00004 	mov	r0, r4
4001b178:	ebffff4b 	bl	4001aeac <CyU3PGpifInit>
4001b17c:	e1a06000 	mov	r6, r0
4001b180:	e3e00000 	mvn	r0, #0
4001b184:	e59f1030 	ldr	r1, [pc, #48]	; 4001b1bc <CyU3PPibInit+0x160>
4001b188:	e5810024 	str	r0, [r1, #36]	; 0x24
4001b18c:	e3560000 	cmp	r6, #0
4001b190:	1a000004 	bne	4001b1a8 <CyU3PPibInit+0x14c>
4001b194:	eb000009 	bl	4001b1c0 <CyU3PPibSocketInit>
4001b198:	e3a00007 	mov	r0, #7
4001b19c:	eb001c4a 	bl	400222cc <CyU3PVicEnableInt>
4001b1a0:	e3a00006 	mov	r0, #6
4001b1a4:	eb001c48 	bl	400222cc <CyU3PVicEnableInt>
4001b1a8:	e1a00006 	mov	r0, r6
4001b1ac:	eaffffb2 	b	4001b07c <CyU3PPibInit+0x20>
4001b1b0:	40030d18 	.word	0x40030d18
4001b1b4:	e0052000 	.word	0xe0052000
4001b1b8:	40030d1c 	.word	0x40030d1c
4001b1bc:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001b1c0 <CyU3PPibSocketInit>:
4001b1c0:	e3a00000 	mov	r0, #0
4001b1c4:	ea00000d 	b	4001b200 <CyU3PPibSocketInit+0x40>
4001b1c8:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001b1cc:	e59f2038 	ldr	r2, [pc, #56]	; 4001b20c <CyU3PPibSocketInit+0x4c>
4001b1d0:	e0822380 	add	r2, r2, r0, lsl #7
4001b1d4:	e582100c 	str	r1, [r2, #12]
4001b1d8:	e3e01000 	mvn	r1, #0
4001b1dc:	e59f2028 	ldr	r2, [pc, #40]	; 4001b20c <CyU3PPibSocketInit+0x4c>
4001b1e0:	e0822380 	add	r2, r2, r0, lsl #7
4001b1e4:	e5821010 	str	r1, [r2, #16]
4001b1e8:	e3a01000 	mov	r1, #0
4001b1ec:	e59f2018 	ldr	r2, [pc, #24]	; 4001b20c <CyU3PPibSocketInit+0x4c>
4001b1f0:	e0822380 	add	r2, r2, r0, lsl #7
4001b1f4:	e5821014 	str	r1, [r2, #20]
4001b1f8:	e2801001 	add	r1, r0, #1
4001b1fc:	e20100ff 	and	r0, r1, #255	; 0xff
4001b200:	e3500020 	cmp	r0, #32
4001b204:	baffffef 	blt	4001b1c8 <CyU3PPibSocketInit+0x8>
4001b208:	e12fff1e 	bx	lr
4001b20c:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001b210 <CyU3PPibThreadEntry>:
4001b210:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001b214:	e3a00005 	mov	r0, #5
4001b218:	ebffe25e 	bl	40013b98 <CyU3PSysModuleInitCompleteEvt>
4001b21c:	e59f0278 	ldr	r0, [pc, #632]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b220:	e5900000 	ldr	r0, [r0]
4001b224:	e1a00800 	lsl	r0, r0, #16
4001b228:	e1a00820 	lsr	r0, r0, #16
4001b22c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001b230:	e59f1264 	ldr	r1, [pc, #612]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b234:	e5810000 	str	r0, [r1]
4001b238:	e3a000e1 	mov	r0, #225	; 0xe1
4001b23c:	e59f125c 	ldr	r1, [pc, #604]	; 4001b4a0 <CyU3PPibThreadEntry+0x290>
4001b240:	e5810000 	str	r0, [r1]
4001b244:	ea000093 	b	4001b498 <CyU3PPibThreadEntry+0x288>
4001b248:	e3e03000 	mvn	r3, #0
4001b24c:	e58d3000 	str	r3, [sp]
4001b250:	e28d3008 	add	r3, sp, #8
4001b254:	e3a02001 	mov	r2, #1
4001b258:	e59f0240 	ldr	r0, [pc, #576]	; 4001b4a0 <CyU3PPibThreadEntry+0x290>
4001b25c:	e5901000 	ldr	r1, [r0]
4001b260:	e59f023c 	ldr	r0, [pc, #572]	; 4001b4a4 <CyU3PPibThreadEntry+0x294>
4001b264:	ebffbb4e 	bl	40009fa4 <_txe_event_flags_get>
4001b268:	e1a04000 	mov	r4, r0
4001b26c:	e59f122c 	ldr	r1, [pc, #556]	; 4001b4a0 <CyU3PPibThreadEntry+0x290>
4001b270:	e59d0008 	ldr	r0, [sp, #8]
4001b274:	e5911000 	ldr	r1, [r1]
4001b278:	e0000001 	and	r0, r0, r1
4001b27c:	e58d0008 	str	r0, [sp, #8]
4001b280:	e3540000 	cmp	r4, #0
4001b284:	0a000000 	beq	4001b28c <CyU3PPibThreadEntry+0x7c>
4001b288:	ea000082 	b	4001b498 <CyU3PPibThreadEntry+0x288>
4001b28c:	ea00007d 	b	4001b488 <CyU3PPibThreadEntry+0x278>
4001b290:	e59d0008 	ldr	r0, [sp, #8]
4001b294:	e3100020 	tst	r0, #32
4001b298:	0a000017 	beq	4001b2fc <CyU3PPibThreadEntry+0xec>
4001b29c:	e59f0204 	ldr	r0, [pc, #516]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b2a0:	e5900000 	ldr	r0, [r0]
4001b2a4:	e3500000 	cmp	r0, #0
4001b2a8:	0a00000b 	beq	4001b2dc <CyU3PPibThreadEntry+0xcc>
4001b2ac:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b4ac <CyU3PPibThreadEntry+0x29c>
4001b2b0:	e5900000 	ldr	r0, [r0]
4001b2b4:	e3100002 	tst	r0, #2
4001b2b8:	0a000007 	beq	4001b2dc <CyU3PPibThreadEntry+0xcc>
4001b2bc:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b4b0 <CyU3PPibThreadEntry+0x2a0>
4001b2c0:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001b2c4:	e1a01800 	lsl	r1, r0, #16
4001b2c8:	e1a01821 	lsr	r1, r1, #16
4001b2cc:	e3a00002 	mov	r0, #2
4001b2d0:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b2d4:	e5922000 	ldr	r2, [r2]
4001b2d8:	e12fff32 	blx	r2
4001b2dc:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b2e0:	e5900000 	ldr	r0, [r0]
4001b2e4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001b2e8:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b2ec:	e5810000 	str	r0, [r1]
4001b2f0:	e59d0008 	ldr	r0, [sp, #8]
4001b2f4:	e3c00020 	bic	r0, r0, #32
4001b2f8:	e58d0008 	str	r0, [sp, #8]
4001b2fc:	e59d0008 	ldr	r0, [sp, #8]
4001b300:	e3100040 	tst	r0, #64	; 0x40
4001b304:	0a000027 	beq	4001b3a8 <CyU3PPibThreadEntry+0x198>
4001b308:	e59f0198 	ldr	r0, [pc, #408]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b30c:	e5900000 	ldr	r0, [r0]
4001b310:	e3500000 	cmp	r0, #0
4001b314:	0a000017 	beq	4001b378 <CyU3PPibThreadEntry+0x168>
4001b318:	e59f018c 	ldr	r0, [pc, #396]	; 4001b4ac <CyU3PPibThreadEntry+0x29c>
4001b31c:	e5900000 	ldr	r0, [r0]
4001b320:	e3100004 	tst	r0, #4
4001b324:	0a000013 	beq	4001b378 <CyU3PPibThreadEntry+0x168>
4001b328:	e59f016c 	ldr	r0, [pc, #364]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b32c:	e5900020 	ldr	r0, [r0, #32]
4001b330:	e1a05800 	lsl	r5, r0, #16
4001b334:	e1a05825 	lsr	r5, r5, #16
4001b338:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b33c:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b340:	1a000000 	bne	4001b348 <CyU3PPibThreadEntry+0x138>
4001b344:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b348:	e59f0164 	ldr	r0, [pc, #356]	; 4001b4b4 <CyU3PPibThreadEntry+0x2a4>
4001b34c:	e5900000 	ldr	r0, [r0]
4001b350:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b354:	1a000001 	bne	4001b360 <CyU3PPibThreadEntry+0x150>
4001b358:	e3550004 	cmp	r5, #4
4001b35c:	da000004 	ble	4001b374 <CyU3PPibThreadEntry+0x164>
4001b360:	e1a01005 	mov	r1, r5
4001b364:	e3a00004 	mov	r0, #4
4001b368:	e59f2138 	ldr	r2, [pc, #312]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b36c:	e5922000 	ldr	r2, [r2]
4001b370:	e12fff32 	blx	r2
4001b374:	e1a00000 	nop			; (mov r0, r0)
4001b378:	e59f012c 	ldr	r0, [pc, #300]	; 4001b4ac <CyU3PPibThreadEntry+0x29c>
4001b37c:	e5900000 	ldr	r0, [r0]
4001b380:	e3100004 	tst	r0, #4
4001b384:	0a000004 	beq	4001b39c <CyU3PPibThreadEntry+0x18c>
4001b388:	e59f010c 	ldr	r0, [pc, #268]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b38c:	e5900008 	ldr	r0, [r0, #8]
4001b390:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b394:	e59f1100 	ldr	r1, [pc, #256]	; 4001b49c <CyU3PPibThreadEntry+0x28c>
4001b398:	e5810008 	str	r0, [r1, #8]
4001b39c:	e59d0008 	ldr	r0, [sp, #8]
4001b3a0:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b3a4:	e58d0008 	str	r0, [sp, #8]
4001b3a8:	e59d0008 	ldr	r0, [sp, #8]
4001b3ac:	e3100080 	tst	r0, #128	; 0x80
4001b3b0:	0a000011 	beq	4001b3fc <CyU3PPibThreadEntry+0x1ec>
4001b3b4:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b3b8:	e5900000 	ldr	r0, [r0]
4001b3bc:	e3500000 	cmp	r0, #0
4001b3c0:	0a00000a 	beq	4001b3f0 <CyU3PPibThreadEntry+0x1e0>
4001b3c4:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b4ac <CyU3PPibThreadEntry+0x29c>
4001b3c8:	e5900000 	ldr	r0, [r0]
4001b3cc:	e3100001 	tst	r0, #1
4001b3d0:	0a000006 	beq	4001b3f0 <CyU3PPibThreadEntry+0x1e0>
4001b3d4:	ebffe6ab 	bl	40014e88 <CyFx3PibGetDllStatus>
4001b3d8:	e1a05000 	mov	r5, r0
4001b3dc:	e1a01000 	mov	r1, r0
4001b3e0:	e3a00001 	mov	r0, #1
4001b3e4:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b4a8 <CyU3PPibThreadEntry+0x298>
4001b3e8:	e5922000 	ldr	r2, [r2]
4001b3ec:	e12fff32 	blx	r2
4001b3f0:	e59d0008 	ldr	r0, [sp, #8]
4001b3f4:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b3f8:	e58d0008 	str	r0, [sp, #8]
4001b3fc:	e59d0008 	ldr	r0, [sp, #8]
4001b400:	e3100001 	tst	r0, #1
4001b404:	0a00001f 	beq	4001b488 <CyU3PPibThreadEntry+0x278>
4001b408:	e3a02000 	mov	r2, #0
4001b40c:	e28d1004 	add	r1, sp, #4
4001b410:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b4b8 <CyU3PPibThreadEntry+0x2a8>
4001b414:	ebffbc9d 	bl	4000a690 <_txe_queue_receive>
4001b418:	e1a04000 	mov	r4, r0
4001b41c:	e3540000 	cmp	r4, #0
4001b420:	1a000015 	bne	4001b47c <CyU3PPibThreadEntry+0x26c>
4001b424:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b428:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b42c:	e1b00720 	lsrs	r0, r0, #14
4001b430:	0a000014 	beq	4001b488 <CyU3PPibThreadEntry+0x278>
4001b434:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b438:	e20000ff 	and	r0, r0, #255	; 0xff
4001b43c:	e3500004 	cmp	r0, #4
4001b440:	1a00000a 	bne	4001b470 <CyU3PPibThreadEntry+0x260>
4001b444:	e59f0070 	ldr	r0, [pc, #112]	; 4001b4bc <CyU3PPibThreadEntry+0x2ac>
4001b448:	e5900000 	ldr	r0, [r0]
4001b44c:	e3500000 	cmp	r0, #0
4001b450:	0a000005 	beq	4001b46c <CyU3PPibThreadEntry+0x25c>
4001b454:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b458:	e1a01442 	asr	r1, r2, #8
4001b45c:	e20200ff 	and	r0, r2, #255	; 0xff
4001b460:	e59f2054 	ldr	r2, [pc, #84]	; 4001b4bc <CyU3PPibThreadEntry+0x2ac>
4001b464:	e5922000 	ldr	r2, [r2]
4001b468:	e12fff32 	blx	r2
4001b46c:	ea000001 	b	4001b478 <CyU3PPibThreadEntry+0x268>
4001b470:	e1a00000 	nop			; (mov r0, r0)
4001b474:	e1a00000 	nop			; (mov r0, r0)
4001b478:	ea000002 	b	4001b488 <CyU3PPibThreadEntry+0x278>
4001b47c:	e59d0008 	ldr	r0, [sp, #8]
4001b480:	e3c00001 	bic	r0, r0, #1
4001b484:	e58d0008 	str	r0, [sp, #8]
4001b488:	e59d0008 	ldr	r0, [sp, #8]
4001b48c:	e3500000 	cmp	r0, #0
4001b490:	1affff7e 	bne	4001b290 <CyU3PPibThreadEntry+0x80>
4001b494:	e1a00000 	nop			; (mov r0, r0)
4001b498:	eaffff6a 	b	4001b248 <CyU3PPibThreadEntry+0x38>
4001b49c:	e0010000 	.word	0xe0010000
4001b4a0:	40030d24 	.word	0x40030d24
4001b4a4:	40031970 	.word	0x40031970
4001b4a8:	40030d28 	.word	0x40030d28
4001b4ac:	40030d2c 	.word	0x40030d2c
4001b4b0:	e0017000 	.word	0xe0017000
4001b4b4:	e0014000 	.word	0xe0014000
4001b4b8:	40031a40 	.word	0x40031a40
4001b4bc:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PPmmcInit:

4001b4c0 <CyU3PPmmcInit>:
4001b4c0:	e92d4010 	push	{r4, lr}
4001b4c4:	e1a04000 	mov	r4, r0
4001b4c8:	e3540000 	cmp	r4, #0
4001b4cc:	0a000042 	beq	4001b5dc <CyU3PPmmcInit+0x11c>
4001b4d0:	e3e00000 	mvn	r0, #0
4001b4d4:	e59f1148 	ldr	r1, [pc, #328]	; 4001b624 <CyU3PPmmcInit+0x164>
4001b4d8:	e581000c 	str	r0, [r1, #12]
4001b4dc:	e3a00000 	mov	r0, #0
4001b4e0:	e5810010 	str	r0, [r1, #16]
4001b4e4:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b4e8:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b4ec:	e3a00000 	mov	r0, #0
4001b4f0:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b4f4:	e5810008 	str	r0, [r1, #8]
4001b4f8:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b4fc:	e5900000 	ldr	r0, [r0]
4001b500:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b504:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b508:	e5810000 	str	r0, [r1]
4001b50c:	e59f0114 	ldr	r0, [pc, #276]	; 4001b628 <CyU3PPmmcInit+0x168>
4001b510:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b514:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b518:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b51c:	e3a00001 	mov	r0, #1
4001b520:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b524:	e59f0100 	ldr	r0, [pc, #256]	; 4001b62c <CyU3PPmmcInit+0x16c>
4001b528:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b52c:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b630 <CyU3PPmmcInit+0x170>
4001b530:	e5900000 	ldr	r0, [r0]
4001b534:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b538:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b630 <CyU3PPmmcInit+0x170>
4001b53c:	e5900004 	ldr	r0, [r0, #4]
4001b540:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b544:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b630 <CyU3PPmmcInit+0x170>
4001b548:	e5900008 	ldr	r0, [r0, #8]
4001b54c:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b550:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b630 <CyU3PPmmcInit+0x170>
4001b554:	e590000c 	ldr	r0, [r0, #12]
4001b558:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b55c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b560:	e5900000 	ldr	r0, [r0]
4001b564:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b568:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b56c:	e5900004 	ldr	r0, [r0, #4]
4001b570:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b574:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b578:	e5900008 	ldr	r0, [r0, #8]
4001b57c:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b580:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b584:	e590000c 	ldr	r0, [r0, #12]
4001b588:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b58c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b590:	e5900010 	ldr	r0, [r0, #16]
4001b594:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b598:	e59f0094 	ldr	r0, [pc, #148]	; 4001b634 <CyU3PPmmcInit+0x174>
4001b59c:	e5900014 	ldr	r0, [r0, #20]
4001b5a0:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b5a4:	e59f008c 	ldr	r0, [pc, #140]	; 4001b638 <CyU3PPmmcInit+0x178>
4001b5a8:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b5ac:	e3a00000 	mov	r0, #0
4001b5b0:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b5b4:	e3a00c02 	mov	r0, #512	; 0x200
4001b5b8:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b5bc:	e3a00000 	mov	r0, #0
4001b5c0:	e5810004 	str	r0, [r1, #4]
4001b5c4:	e59f0070 	ldr	r0, [pc, #112]	; 4001b63c <CyU3PPmmcInit+0x17c>
4001b5c8:	e5810010 	str	r0, [r1, #16]
4001b5cc:	e3a00008 	mov	r0, #8
4001b5d0:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b5d4:	e5810008 	str	r0, [r1, #8]
4001b5d8:	ea000002 	b	4001b5e8 <CyU3PPmmcInit+0x128>
4001b5dc:	e3a00000 	mov	r0, #0
4001b5e0:	e59f103c 	ldr	r1, [pc, #60]	; 4001b624 <CyU3PPmmcInit+0x164>
4001b5e4:	e5810010 	str	r0, [r1, #16]
4001b5e8:	e59f0034 	ldr	r0, [pc, #52]	; 4001b624 <CyU3PPmmcInit+0x164>
4001b5ec:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b5f0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b5f4:	e59f1028 	ldr	r1, [pc, #40]	; 4001b624 <CyU3PPmmcInit+0x164>
4001b5f8:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b5fc:	ebffdddd 	bl	40012d78 <CyU3PSysBarrierSync>
4001b600:	e59f0038 	ldr	r0, [pc, #56]	; 4001b640 <CyU3PPmmcInit+0x180>
4001b604:	e5900000 	ldr	r0, [r0]
4001b608:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b60c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b610:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b614:	e59f1024 	ldr	r1, [pc, #36]	; 4001b640 <CyU3PPmmcInit+0x180>
4001b618:	e5810000 	str	r0, [r1]
4001b61c:	e3a00000 	mov	r0, #0
4001b620:	e8bd8010 	pop	{r4, pc}
4001b624:	e0011000 	.word	0xe0011000
4001b628:	00019201 	.word	0x00019201
4001b62c:	04010302 	.word	0x04010302
4001b630:	400120a8 	.word	0x400120a8
4001b634:	400120b8 	.word	0x400120b8
4001b638:	00ff8080 	.word	0x00ff8080
4001b63c:	400a00fb 	.word	0x400a00fb
4001b640:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b644 <CyU3PMboxReset>:
4001b644:	e92d4010 	push	{r4, lr}
4001b648:	e3a00002 	mov	r0, #2
4001b64c:	e59f1028 	ldr	r1, [pc, #40]	; 4001b67c <CyU3PMboxReset+0x38>
4001b650:	e5810004 	str	r0, [r1, #4]
4001b654:	e3a02002 	mov	r2, #2
4001b658:	e3a01010 	mov	r1, #16
4001b65c:	e59f001c 	ldr	r0, [pc, #28]	; 4001b680 <CyU3PMboxReset+0x3c>
4001b660:	ebffba7f 	bl	4000a064 <_txe_event_flags_set>
4001b664:	e59f0010 	ldr	r0, [pc, #16]	; 4001b67c <CyU3PMboxReset+0x38>
4001b668:	e5900008 	ldr	r0, [r0, #8]
4001b66c:	e3800003 	orr	r0, r0, #3
4001b670:	e59f1004 	ldr	r1, [pc, #4]	; 4001b67c <CyU3PMboxReset+0x38>
4001b674:	e5810008 	str	r0, [r1, #8]
4001b678:	e8bd8010 	pop	{r4, pc}
4001b67c:	e0010000 	.word	0xe0010000
4001b680:	40031970 	.word	0x40031970

Disassembly of section i.CyU3PGpifConfigure:

4001b684 <CyU3PGpifConfigure>:
4001b684:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b688:	e1a04000 	mov	r4, r0
4001b68c:	e1a05001 	mov	r5, r1
4001b690:	e59f609c 	ldr	r6, [pc, #156]	; 4001b734 <CyU3PGpifConfigure+0xb0>
4001b694:	e3540000 	cmp	r4, #0
4001b698:	0a000001 	beq	4001b6a4 <CyU3PGpifConfigure+0x20>
4001b69c:	e3550000 	cmp	r5, #0
4001b6a0:	1a000001 	bne	4001b6ac <CyU3PGpifConfigure+0x28>
4001b6a4:	e3a00040 	mov	r0, #64	; 0x40
4001b6a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b6ac:	ebffe585 	bl	40014cc8 <CyFx3DevIsGpifConfigurable>
4001b6b0:	e3500000 	cmp	r0, #0
4001b6b4:	1a000001 	bne	4001b6c0 <CyU3PGpifConfigure+0x3c>
4001b6b8:	e3a00046 	mov	r0, #70	; 0x46
4001b6bc:	eafffff9 	b	4001b6a8 <CyU3PGpifConfigure+0x24>
4001b6c0:	ebffe576 	bl	40014ca0 <CyFx3DevIsGpif32Supported>
4001b6c4:	e3500000 	cmp	r0, #0
4001b6c8:	1a000007 	bne	4001b6ec <CyU3PGpifConfigure+0x68>
4001b6cc:	e3540001 	cmp	r4, #1
4001b6d0:	da000005 	ble	4001b6ec <CyU3PGpifConfigure+0x68>
4001b6d4:	e5950004 	ldr	r0, [r5, #4]
4001b6d8:	e200000c 	and	r0, r0, #12
4001b6dc:	e3500004 	cmp	r0, #4
4001b6e0:	9a000001 	bls	4001b6ec <CyU3PGpifConfigure+0x68>
4001b6e4:	e3a00046 	mov	r0, #70	; 0x46
4001b6e8:	eaffffee 	b	4001b6a8 <CyU3PGpifConfigure+0x24>
4001b6ec:	e59f0044 	ldr	r0, [pc, #68]	; 4001b738 <CyU3PGpifConfigure+0xb4>
4001b6f0:	e5900000 	ldr	r0, [r0]
4001b6f4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b6f8:	0a000001 	beq	4001b704 <CyU3PGpifConfigure+0x80>
4001b6fc:	e3a00043 	mov	r0, #67	; 0x43
4001b700:	eaffffe8 	b	4001b6a8 <CyU3PGpifConfigure+0x24>
4001b704:	e3a07001 	mov	r7, #1
4001b708:	ea000002 	b	4001b718 <CyU3PGpifConfigure+0x94>
4001b70c:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b710:	e4860004 	str	r0, [r6], #4
4001b714:	e2877001 	add	r7, r7, #1
4001b718:	e1570004 	cmp	r7, r4
4001b71c:	bafffffa 	blt	4001b70c <CyU3PGpifConfigure+0x88>
4001b720:	e5950000 	ldr	r0, [r5]
4001b724:	e59f100c 	ldr	r1, [pc, #12]	; 4001b738 <CyU3PGpifConfigure+0xb4>
4001b728:	e5810000 	str	r0, [r1]
4001b72c:	e3a00000 	mov	r0, #0
4001b730:	eaffffdc 	b	4001b6a8 <CyU3PGpifConfigure+0x24>
4001b734:	e0014004 	.word	0xe0014004
4001b738:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b73c <CyU3PGpifDisable>:
4001b73c:	e92d4070 	push	{r4, r5, r6, lr}
4001b740:	e1a04000 	mov	r4, r0
4001b744:	e59f0070 	ldr	r0, [pc, #112]	; 4001b7bc <CyU3PGpifDisable+0x80>
4001b748:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b74c:	e3800002 	orr	r0, r0, #2
4001b750:	e59f1064 	ldr	r1, [pc, #100]	; 4001b7bc <CyU3PGpifDisable+0x80>
4001b754:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b758:	e3a0000a 	mov	r0, #10
4001b75c:	ebffe057 	bl	400138c0 <CyU3PBusyWait>
4001b760:	e3a00000 	mov	r0, #0
4001b764:	e59f1050 	ldr	r1, [pc, #80]	; 4001b7bc <CyU3PGpifDisable+0x80>
4001b768:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b76c:	e3540000 	cmp	r4, #0
4001b770:	0a000010 	beq	4001b7b8 <CyU3PGpifDisable+0x7c>
4001b774:	e3a00e22 	mov	r0, #544	; 0x220
4001b778:	e5810000 	str	r0, [r1]
4001b77c:	e3a05000 	mov	r5, #0
4001b780:	ea000007 	b	4001b7a4 <CyU3PGpifDisable+0x68>
4001b784:	e3a00000 	mov	r0, #0
4001b788:	e59f1030 	ldr	r1, [pc, #48]	; 4001b7c0 <CyU3PGpifDisable+0x84>
4001b78c:	e0811205 	add	r1, r1, r5, lsl #4
4001b790:	e5810008 	str	r0, [r1, #8]
4001b794:	e59f1028 	ldr	r1, [pc, #40]	; 4001b7c4 <CyU3PGpifDisable+0x88>
4001b798:	e0811205 	add	r1, r1, r5, lsl #4
4001b79c:	e5810008 	str	r0, [r1, #8]
4001b7a0:	e2855001 	add	r5, r5, #1
4001b7a4:	e3550c01 	cmp	r5, #256	; 0x100
4001b7a8:	3afffff5 	bcc	4001b784 <CyU3PGpifDisable+0x48>
4001b7ac:	e59f1014 	ldr	r1, [pc, #20]	; 4001b7c8 <CyU3PGpifDisable+0x8c>
4001b7b0:	e3a0004c 	mov	r0, #76	; 0x4c
4001b7b4:	ebffffb2 	bl	4001b684 <CyU3PGpifConfigure>
4001b7b8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b7bc:	e0014000 	.word	0xe0014000
4001b7c0:	e0015000 	.word	0xe0015000
4001b7c4:	e0016000 	.word	0xe0016000
4001b7c8:	400120d0 	.word	0x400120d0

Disassembly of section i.CyU3PGpifLoad:

4001b7cc <CyU3PGpifLoad>:
4001b7cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b7d0:	e1a04000 	mov	r4, r0
4001b7d4:	e59f7264 	ldr	r7, [pc, #612]	; 4001ba40 <CyU3PGpifLoad+0x274>
4001b7d8:	e3540000 	cmp	r4, #0
4001b7dc:	0a000008 	beq	4001b804 <CyU3PGpifLoad+0x38>
4001b7e0:	e1d400b0 	ldrh	r0, [r4]
4001b7e4:	e3500000 	cmp	r0, #0
4001b7e8:	1a000007 	bne	4001b80c <CyU3PGpifLoad+0x40>
4001b7ec:	e1d400bc 	ldrh	r0, [r4, #12]
4001b7f0:	e3500000 	cmp	r0, #0
4001b7f4:	1a000004 	bne	4001b80c <CyU3PGpifLoad+0x40>
4001b7f8:	e1d401b4 	ldrh	r0, [r4, #20]
4001b7fc:	e3500000 	cmp	r0, #0
4001b800:	1a000001 	bne	4001b80c <CyU3PGpifLoad+0x40>
4001b804:	e3a00040 	mov	r0, #64	; 0x40
4001b808:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b80c:	e59f0230 	ldr	r0, [pc, #560]	; 4001ba44 <CyU3PGpifLoad+0x278>
4001b810:	e5900000 	ldr	r0, [r0]
4001b814:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b818:	1a000003 	bne	4001b82c <CyU3PGpifLoad+0x60>
4001b81c:	e59f0220 	ldr	r0, [pc, #544]	; 4001ba44 <CyU3PGpifLoad+0x278>
4001b820:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b824:	e3100001 	tst	r0, #1
4001b828:	0a000001 	beq	4001b834 <CyU3PGpifLoad+0x68>
4001b82c:	e3a00043 	mov	r0, #67	; 0x43
4001b830:	eafffff4 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001b834:	ebffe523 	bl	40014cc8 <CyFx3DevIsGpifConfigurable>
4001b838:	e3500000 	cmp	r0, #0
4001b83c:	1a000001 	bne	4001b848 <CyU3PGpifLoad+0x7c>
4001b840:	e3a00046 	mov	r0, #70	; 0x46
4001b844:	eaffffef 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001b848:	ebffe514 	bl	40014ca0 <CyFx3DevIsGpif32Supported>
4001b84c:	e3500000 	cmp	r0, #0
4001b850:	1a00000c 	bne	4001b888 <CyU3PGpifLoad+0xbc>
4001b854:	e1d401b4 	ldrh	r0, [r4, #20]
4001b858:	e3500002 	cmp	r0, #2
4001b85c:	ba000009 	blt	4001b888 <CyU3PGpifLoad+0xbc>
4001b860:	e5940018 	ldr	r0, [r4, #24]
4001b864:	e3500000 	cmp	r0, #0
4001b868:	0a000006 	beq	4001b888 <CyU3PGpifLoad+0xbc>
4001b86c:	e5940018 	ldr	r0, [r4, #24]
4001b870:	e5900004 	ldr	r0, [r0, #4]
4001b874:	e200000c 	and	r0, r0, #12
4001b878:	e3500004 	cmp	r0, #4
4001b87c:	9a000001 	bls	4001b888 <CyU3PGpifLoad+0xbc>
4001b880:	e3a00046 	mov	r0, #70	; 0x46
4001b884:	eaffffdf 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001b888:	e1d400b0 	ldrh	r0, [r4]
4001b88c:	e3500000 	cmp	r0, #0
4001b890:	0a00003b 	beq	4001b984 <CyU3PGpifLoad+0x1b8>
4001b894:	e5940004 	ldr	r0, [r4, #4]
4001b898:	e3500000 	cmp	r0, #0
4001b89c:	1a000001 	bne	4001b8a8 <CyU3PGpifLoad+0xdc>
4001b8a0:	e3a00040 	mov	r0, #64	; 0x40
4001b8a4:	eaffffd7 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001b8a8:	e3a05000 	mov	r5, #0
4001b8ac:	ea000031 	b	4001b978 <CyU3PGpifLoad+0x1ac>
4001b8b0:	e5940008 	ldr	r0, [r4, #8]
4001b8b4:	e3500000 	cmp	r0, #0
4001b8b8:	0a000002 	beq	4001b8c8 <CyU3PGpifLoad+0xfc>
4001b8bc:	e5940008 	ldr	r0, [r4, #8]
4001b8c0:	e7d00005 	ldrb	r0, [r0, r5]
4001b8c4:	ea000000 	b	4001b8cc <CyU3PGpifLoad+0x100>
4001b8c8:	e1a00005 	mov	r0, r5
4001b8cc:	e1a06800 	lsl	r6, r0, #16
4001b8d0:	e1a06826 	lsr	r6, r6, #16
4001b8d4:	e0861086 	add	r1, r6, r6, lsl #1
4001b8d8:	e5940004 	ldr	r0, [r4, #4]
4001b8dc:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b8e0:	e59f1160 	ldr	r1, [pc, #352]	; 4001ba48 <CyU3PGpifLoad+0x27c>
4001b8e4:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b8e8:	e0861086 	add	r1, r6, r6, lsl #1
4001b8ec:	e5940004 	ldr	r0, [r4, #4]
4001b8f0:	e0800181 	add	r0, r0, r1, lsl #3
4001b8f4:	e5900004 	ldr	r0, [r0, #4]
4001b8f8:	e59f1148 	ldr	r1, [pc, #328]	; 4001ba48 <CyU3PGpifLoad+0x27c>
4001b8fc:	e0811205 	add	r1, r1, r5, lsl #4
4001b900:	e5810004 	str	r0, [r1, #4]
4001b904:	e0861086 	add	r1, r6, r6, lsl #1
4001b908:	e5940004 	ldr	r0, [r4, #4]
4001b90c:	e0800181 	add	r0, r0, r1, lsl #3
4001b910:	e5900008 	ldr	r0, [r0, #8]
4001b914:	e59f112c 	ldr	r1, [pc, #300]	; 4001ba48 <CyU3PGpifLoad+0x27c>
4001b918:	e0811205 	add	r1, r1, r5, lsl #4
4001b91c:	e5810008 	str	r0, [r1, #8]
4001b920:	e0861086 	add	r1, r6, r6, lsl #1
4001b924:	e5940004 	ldr	r0, [r4, #4]
4001b928:	e0800181 	add	r0, r0, r1, lsl #3
4001b92c:	e590000c 	ldr	r0, [r0, #12]
4001b930:	e59f1114 	ldr	r1, [pc, #276]	; 4001ba4c <CyU3PGpifLoad+0x280>
4001b934:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b938:	e0861086 	add	r1, r6, r6, lsl #1
4001b93c:	e5940004 	ldr	r0, [r4, #4]
4001b940:	e0800181 	add	r0, r0, r1, lsl #3
4001b944:	e5900010 	ldr	r0, [r0, #16]
4001b948:	e59f10fc 	ldr	r1, [pc, #252]	; 4001ba4c <CyU3PGpifLoad+0x280>
4001b94c:	e0811205 	add	r1, r1, r5, lsl #4
4001b950:	e5810004 	str	r0, [r1, #4]
4001b954:	e0861086 	add	r1, r6, r6, lsl #1
4001b958:	e5940004 	ldr	r0, [r4, #4]
4001b95c:	e0800181 	add	r0, r0, r1, lsl #3
4001b960:	e5900014 	ldr	r0, [r0, #20]
4001b964:	e59f10e0 	ldr	r1, [pc, #224]	; 4001ba4c <CyU3PGpifLoad+0x280>
4001b968:	e0811205 	add	r1, r1, r5, lsl #4
4001b96c:	e5810008 	str	r0, [r1, #8]
4001b970:	e2850001 	add	r0, r5, #1
4001b974:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b978:	e1d400b0 	ldrh	r0, [r4]
4001b97c:	e1500005 	cmp	r0, r5
4001b980:	caffffca 	bgt	4001b8b0 <CyU3PGpifLoad+0xe4>
4001b984:	e1d400bc 	ldrh	r0, [r4, #12]
4001b988:	e3500000 	cmp	r0, #0
4001b98c:	0a000013 	beq	4001b9e0 <CyU3PGpifLoad+0x214>
4001b990:	e5940010 	ldr	r0, [r4, #16]
4001b994:	e3500000 	cmp	r0, #0
4001b998:	0a000002 	beq	4001b9a8 <CyU3PGpifLoad+0x1dc>
4001b99c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b9a0:	e3500020 	cmp	r0, #32
4001b9a4:	da000001 	ble	4001b9b0 <CyU3PGpifLoad+0x1e4>
4001b9a8:	e3a00040 	mov	r0, #64	; 0x40
4001b9ac:	eaffff95 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001b9b0:	e3a05000 	mov	r5, #0
4001b9b4:	ea000006 	b	4001b9d4 <CyU3PGpifLoad+0x208>
4001b9b8:	e5940010 	ldr	r0, [r4, #16]
4001b9bc:	e0800085 	add	r0, r0, r5, lsl #1
4001b9c0:	e1d000b0 	ldrh	r0, [r0]
4001b9c4:	e59f1084 	ldr	r1, [pc, #132]	; 4001ba50 <CyU3PGpifLoad+0x284>
4001b9c8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b9cc:	e2850001 	add	r0, r5, #1
4001b9d0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b9d4:	e1d400bc 	ldrh	r0, [r4, #12]
4001b9d8:	e1500005 	cmp	r0, r5
4001b9dc:	cafffff5 	bgt	4001b9b8 <CyU3PGpifLoad+0x1ec>
4001b9e0:	e1d401b4 	ldrh	r0, [r4, #20]
4001b9e4:	e3500000 	cmp	r0, #0
4001b9e8:	0a000012 	beq	4001ba38 <CyU3PGpifLoad+0x26c>
4001b9ec:	e5940018 	ldr	r0, [r4, #24]
4001b9f0:	e3500000 	cmp	r0, #0
4001b9f4:	1a000001 	bne	4001ba00 <CyU3PGpifLoad+0x234>
4001b9f8:	e3a00040 	mov	r0, #64	; 0x40
4001b9fc:	eaffff81 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001ba00:	e3a05001 	mov	r5, #1
4001ba04:	ea000004 	b	4001ba1c <CyU3PGpifLoad+0x250>
4001ba08:	e5940018 	ldr	r0, [r4, #24]
4001ba0c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ba10:	e4870004 	str	r0, [r7], #4
4001ba14:	e2850001 	add	r0, r5, #1
4001ba18:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ba1c:	e1d401b4 	ldrh	r0, [r4, #20]
4001ba20:	e1500005 	cmp	r0, r5
4001ba24:	cafffff7 	bgt	4001ba08 <CyU3PGpifLoad+0x23c>
4001ba28:	e5940018 	ldr	r0, [r4, #24]
4001ba2c:	e5900000 	ldr	r0, [r0]
4001ba30:	e59f100c 	ldr	r1, [pc, #12]	; 4001ba44 <CyU3PGpifLoad+0x278>
4001ba34:	e5810000 	str	r0, [r1]
4001ba38:	e3a00000 	mov	r0, #0
4001ba3c:	eaffff71 	b	4001b808 <CyU3PGpifLoad+0x3c>
4001ba40:	e0014004 	.word	0xe0014004
4001ba44:	e0014000 	.word	0xe0014000
4001ba48:	e0015000 	.word	0xe0015000
4001ba4c:	e0016000 	.word	0xe0016000
4001ba50:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001ba54 <CyU3PGpifRegisterCallback>:
4001ba54:	e59f1004 	ldr	r1, [pc, #4]	; 4001ba60 <CyU3PGpifRegisterCallback+0xc>
4001ba58:	e5810000 	str	r0, [r1]
4001ba5c:	e12fff1e 	bx	lr
4001ba60:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifSMStart:

4001ba64 <CyU3PGpifSMStart>:
4001ba64:	e92d4010 	push	{r4, lr}
4001ba68:	e1a02000 	mov	r2, r0
4001ba6c:	e59f012c 	ldr	r0, [pc, #300]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001ba70:	e5900000 	ldr	r0, [r0]
4001ba74:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba78:	0a000004 	beq	4001ba90 <CyU3PGpifSMStart+0x2c>
4001ba7c:	e59f0120 	ldr	r0, [pc, #288]	; 4001bba4 <CyU3PGpifSMStart+0x140>
4001ba80:	e0800202 	add	r0, r0, r2, lsl #4
4001ba84:	e5900008 	ldr	r0, [r0, #8]
4001ba88:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba8c:	1a000001 	bne	4001ba98 <CyU3PGpifSMStart+0x34>
4001ba90:	e3a00044 	mov	r0, #68	; 0x44
4001ba94:	e8bd8010 	pop	{r4, pc}
4001ba98:	e59f0100 	ldr	r0, [pc, #256]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001ba9c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001baa0:	e3100001 	tst	r0, #1
4001baa4:	0a000001 	beq	4001bab0 <CyU3PGpifSMStart+0x4c>
4001baa8:	e3a00043 	mov	r0, #67	; 0x43
4001baac:	eafffff8 	b	4001ba94 <CyU3PGpifSMStart+0x30>
4001bab0:	e59f00e8 	ldr	r0, [pc, #232]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001bab4:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bab8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001babc:	e1800801 	orr	r0, r0, r1, lsl #16
4001bac0:	e3800001 	orr	r0, r0, #1
4001bac4:	e59f40d4 	ldr	r4, [pc, #212]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001bac8:	e5840118 	str	r0, [r4, #280]	; 0x118
4001bacc:	e1a00004 	mov	r0, r4
4001bad0:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001bad4:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bba8 <CyU3PGpifSMStart+0x144>
4001bad8:	e000000e 	and	r0, r0, lr
4001badc:	e180e802 	orr	lr, r0, r2, lsl #16
4001bae0:	e1a00004 	mov	r0, r4
4001bae4:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001bae8:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001baec:	e3800005 	orr	r0, r0, #5
4001baf0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001baf4:	e1a00004 	mov	r0, r4
4001baf8:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001bafc:	e5900008 	ldr	r0, [r0, #8]
4001bb00:	e2003007 	and	r3, r0, #7
4001bb04:	e3530001 	cmp	r3, #1
4001bb08:	0a000004 	beq	4001bb20 <CyU3PGpifSMStart+0xbc>
4001bb0c:	e3530002 	cmp	r3, #2
4001bb10:	0a00000b 	beq	4001bb44 <CyU3PGpifSMStart+0xe0>
4001bb14:	e3530003 	cmp	r3, #3
4001bb18:	1a00001b 	bne	4001bb8c <CyU3PGpifSMStart+0x128>
4001bb1c:	ea000011 	b	4001bb68 <CyU3PGpifSMStart+0x104>
4001bb20:	e1a00000 	nop			; (mov r0, r0)
4001bb24:	e59f0080 	ldr	r0, [pc, #128]	; 4001bbac <CyU3PGpifSMStart+0x148>
4001bb28:	e1ce0000 	bic	r0, lr, r0
4001bb2c:	e3800005 	orr	r0, r0, #5
4001bb30:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001bb34:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb38:	e59f4060 	ldr	r4, [pc, #96]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001bb3c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb40:	ea000013 	b	4001bb94 <CyU3PGpifSMStart+0x130>
4001bb44:	e1a00000 	nop			; (mov r0, r0)
4001bb48:	e59f0060 	ldr	r0, [pc, #96]	; 4001bbb0 <CyU3PGpifSMStart+0x14c>
4001bb4c:	e1ce0000 	bic	r0, lr, r0
4001bb50:	e3800005 	orr	r0, r0, #5
4001bb54:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001bb58:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb5c:	e59f403c 	ldr	r4, [pc, #60]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001bb60:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb64:	ea00000a 	b	4001bb94 <CyU3PGpifSMStart+0x130>
4001bb68:	e1a00000 	nop			; (mov r0, r0)
4001bb6c:	e59f0040 	ldr	r0, [pc, #64]	; 4001bbb4 <CyU3PGpifSMStart+0x150>
4001bb70:	e1ce0000 	bic	r0, lr, r0
4001bb74:	e3800005 	orr	r0, r0, #5
4001bb78:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001bb7c:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb80:	e59f4018 	ldr	r4, [pc, #24]	; 4001bba0 <CyU3PGpifSMStart+0x13c>
4001bb84:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb88:	ea000001 	b	4001bb94 <CyU3PGpifSMStart+0x130>
4001bb8c:	e1a00000 	nop			; (mov r0, r0)
4001bb90:	e1a00000 	nop			; (mov r0, r0)
4001bb94:	e1a00000 	nop			; (mov r0, r0)
4001bb98:	e3a00000 	mov	r0, #0
4001bb9c:	eaffffbc 	b	4001ba94 <CyU3PGpifSMStart+0x30>
4001bba0:	e0014000 	.word	0xe0014000
4001bba4:	e0015000 	.word	0xe0015000
4001bba8:	ff00003a 	.word	0xff00003a
4001bbac:	0080ffc5 	.word	0x0080ffc5
4001bbb0:	00c0ffc5 	.word	0x00c0ffc5
4001bbb4:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001bbb8 <CyU3PGpifSMSwitch>:
4001bbb8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001bbbc:	e1a0c000 	mov	ip, r0
4001bbc0:	e59de018 	ldr	lr, [sp, #24]
4001bbc4:	e3a04000 	mov	r4, #0
4001bbc8:	e3510c01 	cmp	r1, #256	; 0x100
4001bbcc:	ba000001 	blt	4001bbd8 <CyU3PGpifSMSwitch+0x20>
4001bbd0:	e3a00040 	mov	r0, #64	; 0x40
4001bbd4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001bbd8:	e59f0150 	ldr	r0, [pc, #336]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bbdc:	e5900000 	ldr	r0, [r0]
4001bbe0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bbe4:	1a000001 	bne	4001bbf0 <CyU3PGpifSMSwitch+0x38>
4001bbe8:	e3a00044 	mov	r0, #68	; 0x44
4001bbec:	eafffff8 	b	4001bbd4 <CyU3PGpifSMSwitch+0x1c>
4001bbf0:	e59f0138 	ldr	r0, [pc, #312]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bbf4:	e5900008 	ldr	r0, [r0, #8]
4001bbf8:	e2006007 	and	r6, r0, #7
4001bbfc:	e59f012c 	ldr	r0, [pc, #300]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bc00:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bc04:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bc08:	e1800803 	orr	r0, r0, r3, lsl #16
4001bc0c:	e3800001 	orr	r0, r0, #1
4001bc10:	e59f8118 	ldr	r8, [pc, #280]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bc14:	e5880118 	str	r0, [r8, #280]	; 0x118
4001bc18:	e3a00001 	mov	r0, #1
4001bc1c:	e1804801 	orr	r4, r0, r1, lsl #16
4001bc20:	e35c0c01 	cmp	ip, #256	; 0x100
4001bc24:	aa000012 	bge	4001bc74 <CyU3PGpifSMSwitch+0xbc>
4001bc28:	e1c80000 	bic	r0, r8, r0
4001bc2c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bc30:	e1a05c20 	lsr	r5, r0, #24
4001bc34:	e59f00f8 	ldr	r0, [pc, #248]	; 4001bd34 <CyU3PGpifSMSwitch+0x17c>
4001bc38:	e7d00006 	ldrb	r0, [r0, r6]
4001bc3c:	e0000005 	and	r0, r0, r5
4001bc40:	e59f80ec 	ldr	r8, [pc, #236]	; 4001bd34 <CyU3PGpifSMSwitch+0x17c>
4001bc44:	e7d88006 	ldrb	r8, [r8, r6]
4001bc48:	e008800c 	and	r8, r8, ip
4001bc4c:	e1500008 	cmp	r0, r8
4001bc50:	1a000001 	bne	4001bc5c <CyU3PGpifSMSwitch+0xa4>
4001bc54:	e3844004 	orr	r4, r4, #4
4001bc58:	ea000006 	b	4001bc78 <CyU3PGpifSMSwitch+0xc0>
4001bc5c:	e3a00008 	mov	r0, #8
4001bc60:	e180040c 	orr	r0, r0, ip, lsl #8
4001bc64:	e1844000 	orr	r4, r4, r0
4001bc68:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bc6c:	e580e120 	str	lr, [r0, #288]	; 0x120
4001bc70:	ea000000 	b	4001bc78 <CyU3PGpifSMSwitch+0xc0>
4001bc74:	e3844004 	orr	r4, r4, #4
4001bc78:	e3520c01 	cmp	r2, #256	; 0x100
4001bc7c:	aa000007 	bge	4001bca0 <CyU3PGpifSMSwitch+0xe8>
4001bc80:	e3a00002 	mov	r0, #2
4001bc84:	e1800c02 	orr	r0, r0, r2, lsl #24
4001bc88:	e1844000 	orr	r4, r4, r0
4001bc8c:	e59f009c 	ldr	r0, [pc, #156]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bc90:	e5900018 	ldr	r0, [r0, #24]
4001bc94:	e3800001 	orr	r0, r0, #1
4001bc98:	e59f8090 	ldr	r8, [pc, #144]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bc9c:	e5880018 	str	r0, [r8, #24]
4001bca0:	e59f0088 	ldr	r0, [pc, #136]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bca4:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001bca8:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001bcac:	e3560001 	cmp	r6, #1
4001bcb0:	0a000004 	beq	4001bcc8 <CyU3PGpifSMSwitch+0x110>
4001bcb4:	e3560002 	cmp	r6, #2
4001bcb8:	0a000009 	beq	4001bce4 <CyU3PGpifSMSwitch+0x12c>
4001bcbc:	e3560003 	cmp	r6, #3
4001bcc0:	1a000015 	bne	4001bd1c <CyU3PGpifSMSwitch+0x164>
4001bcc4:	ea00000d 	b	4001bd00 <CyU3PGpifSMSwitch+0x148>
4001bcc8:	e1a00000 	nop			; (mov r0, r0)
4001bccc:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001bcd0:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001bcd4:	e1800428 	orr	r0, r0, r8, lsr #8
4001bcd8:	e59f8050 	ldr	r8, [pc, #80]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bcdc:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bce0:	ea00000f 	b	4001bd24 <CyU3PGpifSMSwitch+0x16c>
4001bce4:	e1a00000 	nop			; (mov r0, r0)
4001bce8:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001bcec:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001bcf0:	e1800428 	orr	r0, r0, r8, lsr #8
4001bcf4:	e59f8034 	ldr	r8, [pc, #52]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bcf8:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bcfc:	ea000008 	b	4001bd24 <CyU3PGpifSMSwitch+0x16c>
4001bd00:	e1a00000 	nop			; (mov r0, r0)
4001bd04:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001bd08:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001bd0c:	e1800428 	orr	r0, r0, r8, lsr #8
4001bd10:	e59f8018 	ldr	r8, [pc, #24]	; 4001bd30 <CyU3PGpifSMSwitch+0x178>
4001bd14:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bd18:	ea000001 	b	4001bd24 <CyU3PGpifSMSwitch+0x16c>
4001bd1c:	e1a00000 	nop			; (mov r0, r0)
4001bd20:	e1a00000 	nop			; (mov r0, r0)
4001bd24:	e1a00000 	nop			; (mov r0, r0)
4001bd28:	e3a00000 	mov	r0, #0
4001bd2c:	eaffffa8 	b	4001bbd4 <CyU3PGpifSMSwitch+0x1c>
4001bd30:	e0014000 	.word	0xe0014000
4001bd34:	40012200 	.word	0x40012200

Disassembly of section i.CyU3PConnectState:

4001bd38 <CyU3PConnectState>:
4001bd38:	e92d4070 	push	{r4, r5, r6, lr}
4001bd3c:	e1a04000 	mov	r4, r0
4001bd40:	e1a06001 	mov	r6, r1
4001bd44:	e59f0234 	ldr	r0, [pc, #564]	; 4001bf80 <CyU3PConnectState+0x248>
4001bd48:	e5d00008 	ldrb	r0, [r0, #8]
4001bd4c:	e3500000 	cmp	r0, #0
4001bd50:	1a000001 	bne	4001bd5c <CyU3PConnectState+0x24>
4001bd54:	e3a00042 	mov	r0, #66	; 0x42
4001bd58:	e8bd8070 	pop	{r4, r5, r6, pc}
4001bd5c:	ebffe41a 	bl	40014dcc <CyFx3DevIsUsb3Supported>
4001bd60:	e3500000 	cmp	r0, #0
4001bd64:	1a000000 	bne	4001bd6c <CyU3PConnectState+0x34>
4001bd68:	e3a06000 	mov	r6, #0
4001bd6c:	e3a05000 	mov	r5, #0
4001bd70:	e3e01000 	mvn	r1, #0
4001bd74:	e59f0208 	ldr	r0, [pc, #520]	; 4001bf84 <CyU3PConnectState+0x24c>
4001bd78:	ebffb951 	bl	4000a2c4 <_txe_mutex_get>
4001bd7c:	e3540000 	cmp	r4, #0
4001bd80:	1a00001a 	bne	4001bdf0 <CyU3PConnectState+0xb8>
4001bd84:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bf80 <CyU3PConnectState+0x248>
4001bd88:	e5d00008 	ldrb	r0, [r0, #8]
4001bd8c:	e3500004 	cmp	r0, #4
4001bd90:	ba000012 	blt	4001bde0 <CyU3PConnectState+0xa8>
4001bd94:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bf80 <CyU3PConnectState+0x248>
4001bd98:	e5d00008 	ldrb	r0, [r0, #8]
4001bd9c:	e3500005 	cmp	r0, #5
4001bda0:	ba000008 	blt	4001bdc8 <CyU3PConnectState+0x90>
4001bda4:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bf80 <CyU3PConnectState+0x248>
4001bda8:	e5d11009 	ldrb	r1, [r1, #9]
4001bdac:	e3510003 	cmp	r1, #3
4001bdb0:	1a000001 	bne	4001bdbc <CyU3PConnectState+0x84>
4001bdb4:	e3a01001 	mov	r1, #1
4001bdb8:	ea000000 	b	4001bdc0 <CyU3PConnectState+0x88>
4001bdbc:	e3a01000 	mov	r1, #0
4001bdc0:	e1a00001 	mov	r0, r1
4001bdc4:	eb00050f 	bl	4001d208 <CyU3PUsbPhyDisable>
4001bdc8:	e3a00003 	mov	r0, #3
4001bdcc:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bf80 <CyU3PConnectState+0x248>
4001bdd0:	e5c10008 	strb	r0, [r1, #8]
4001bdd4:	e3a00000 	mov	r0, #0
4001bdd8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001bddc:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bde0:	e3a00000 	mov	r0, #0
4001bde4:	e59f1194 	ldr	r1, [pc, #404]	; 4001bf80 <CyU3PConnectState+0x248>
4001bde8:	e5810044 	str	r0, [r1, #68]	; 0x44
4001bdec:	ea00005f 	b	4001bf70 <CyU3PConnectState+0x238>
4001bdf0:	e59f0188 	ldr	r0, [pc, #392]	; 4001bf80 <CyU3PConnectState+0x248>
4001bdf4:	e5d00008 	ldrb	r0, [r0, #8]
4001bdf8:	e3500003 	cmp	r0, #3
4001bdfc:	0a00000b 	beq	4001be30 <CyU3PConnectState+0xf8>
4001be00:	e3500004 	cmp	r0, #4
4001be04:	0a000004 	beq	4001be1c <CyU3PConnectState+0xe4>
4001be08:	e3500005 	cmp	r0, #5
4001be0c:	0a000004 	beq	4001be24 <CyU3PConnectState+0xec>
4001be10:	e3500006 	cmp	r0, #6
4001be14:	1a000051 	bne	4001bf60 <CyU3PConnectState+0x228>
4001be18:	ea000002 	b	4001be28 <CyU3PConnectState+0xf0>
4001be1c:	e1a00000 	nop			; (mov r0, r0)
4001be20:	e1a00000 	nop			; (mov r0, r0)
4001be24:	e1a00000 	nop			; (mov r0, r0)
4001be28:	e3a05043 	mov	r5, #67	; 0x43
4001be2c:	ea00004e 	b	4001bf6c <CyU3PConnectState+0x234>
4001be30:	e1a00000 	nop			; (mov r0, r0)
4001be34:	e59f0144 	ldr	r0, [pc, #324]	; 4001bf80 <CyU3PConnectState+0x248>
4001be38:	e5d00007 	ldrb	r0, [r0, #7]
4001be3c:	e3500001 	cmp	r0, #1
4001be40:	0a00000f 	beq	4001be84 <CyU3PConnectState+0x14c>
4001be44:	e59f013c 	ldr	r0, [pc, #316]	; 4001bf88 <CyU3PConnectState+0x250>
4001be48:	e590001c 	ldr	r0, [r0, #28]
4001be4c:	e3500000 	cmp	r0, #0
4001be50:	0a000007 	beq	4001be74 <CyU3PConnectState+0x13c>
4001be54:	e59f012c 	ldr	r0, [pc, #300]	; 4001bf88 <CyU3PConnectState+0x250>
4001be58:	e5900014 	ldr	r0, [r0, #20]
4001be5c:	e3500000 	cmp	r0, #0
4001be60:	0a000003 	beq	4001be74 <CyU3PConnectState+0x13c>
4001be64:	e59f011c 	ldr	r0, [pc, #284]	; 4001bf88 <CyU3PConnectState+0x250>
4001be68:	e5900018 	ldr	r0, [r0, #24]
4001be6c:	e3500000 	cmp	r0, #0
4001be70:	1a000003 	bne	4001be84 <CyU3PConnectState+0x14c>
4001be74:	e59f0108 	ldr	r0, [pc, #264]	; 4001bf84 <CyU3PConnectState+0x24c>
4001be78:	ebffb946 	bl	4000a398 <_txe_mutex_put>
4001be7c:	e3a00044 	mov	r0, #68	; 0x44
4001be80:	eaffffb4 	b	4001bd58 <CyU3PConnectState+0x20>
4001be84:	e3560000 	cmp	r6, #0
4001be88:	0a000007 	beq	4001beac <CyU3PConnectState+0x174>
4001be8c:	e3a00000 	mov	r0, #0
4001be90:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bf8c <CyU3PConnectState+0x254>
4001be94:	e5810014 	str	r0, [r1, #20]
4001be98:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bf90 <CyU3PConnectState+0x258>
4001be9c:	e5810000 	str	r0, [r1]
4001bea0:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bf94 <CyU3PConnectState+0x25c>
4001bea4:	e5810000 	str	r0, [r1]
4001bea8:	ea000007 	b	4001becc <CyU3PConnectState+0x194>
4001beac:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bf80 <CyU3PConnectState+0x248>
4001beb0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001beb4:	e3500000 	cmp	r0, #0
4001beb8:	0a000003 	beq	4001becc <CyU3PConnectState+0x194>
4001bebc:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bf84 <CyU3PConnectState+0x24c>
4001bec0:	ebffb934 	bl	4000a398 <_txe_mutex_put>
4001bec4:	e3a000ff 	mov	r0, #255	; 0xff
4001bec8:	eaffffa2 	b	4001bd58 <CyU3PConnectState+0x20>
4001becc:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bf80 <CyU3PConnectState+0x248>
4001bed0:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bed4:	e3a00000 	mov	r0, #0
4001bed8:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bf80 <CyU3PConnectState+0x248>
4001bedc:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bee0:	e2810000 	add	r0, r1, #0
4001bee4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bee8:	e3500000 	cmp	r0, #0
4001beec:	0a000004 	beq	4001bf04 <CyU3PConnectState+0x1cc>
4001bef0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bf98 <CyU3PConnectState+0x260>
4001bef4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bef8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001befc:	e1100001 	tst	r0, r1
4001bf00:	0a000012 	beq	4001bf50 <CyU3PConnectState+0x218>
4001bf04:	e3560000 	cmp	r6, #0
4001bf08:	0a000007 	beq	4001bf2c <CyU3PConnectState+0x1f4>
4001bf0c:	e3a00000 	mov	r0, #0
4001bf10:	e59f1068 	ldr	r1, [pc, #104]	; 4001bf80 <CyU3PConnectState+0x248>
4001bf14:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bf18:	e3a00001 	mov	r0, #1
4001bf1c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bf20:	e3a00000 	mov	r0, #0
4001bf24:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bf28:	ea000002 	b	4001bf38 <CyU3PConnectState+0x200>
4001bf2c:	e3a00000 	mov	r0, #0
4001bf30:	e59f1048 	ldr	r1, [pc, #72]	; 4001bf80 <CyU3PConnectState+0x248>
4001bf34:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bf38:	e1a00006 	mov	r0, r6
4001bf3c:	eb000527 	bl	4001d3e0 <CyU3PUsbPhyEnable>
4001bf40:	e3a00005 	mov	r0, #5
4001bf44:	e59f1034 	ldr	r1, [pc, #52]	; 4001bf80 <CyU3PConnectState+0x248>
4001bf48:	e5c10008 	strb	r0, [r1, #8]
4001bf4c:	ea000002 	b	4001bf5c <CyU3PConnectState+0x224>
4001bf50:	e3a00004 	mov	r0, #4
4001bf54:	e59f1024 	ldr	r1, [pc, #36]	; 4001bf80 <CyU3PConnectState+0x248>
4001bf58:	e5c10008 	strb	r0, [r1, #8]
4001bf5c:	ea000002 	b	4001bf6c <CyU3PConnectState+0x234>
4001bf60:	e1a00000 	nop			; (mov r0, r0)
4001bf64:	e3a05044 	mov	r5, #68	; 0x44
4001bf68:	e1a00000 	nop			; (mov r0, r0)
4001bf6c:	e1a00000 	nop			; (mov r0, r0)
4001bf70:	e59f000c 	ldr	r0, [pc, #12]	; 4001bf84 <CyU3PConnectState+0x24c>
4001bf74:	ebffb907 	bl	4000a398 <_txe_mutex_put>
4001bf78:	e1a00005 	mov	r0, r5
4001bf7c:	eaffff75 	b	4001bd58 <CyU3PConnectState+0x20>
4001bf80:	40031d40 	.word	0x40031d40
4001bf84:	40031ee0 	.word	0x40031ee0
4001bf88:	40031f98 	.word	0x40031f98
4001bf8c:	e0033000 	.word	0xe0033000
4001bf90:	40030d84 	.word	0x40030d84
4001bf94:	40030d88 	.word	0x40030d88
4001bf98:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bf9c <CyU3POtgGetMode>:
4001bf9c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bfa8 <CyU3POtgGetMode+0xc>
4001bfa0:	e5d00000 	ldrb	r0, [r0]
4001bfa4:	e12fff1e 	bx	lr
4001bfa8:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bfac <CyU3POtgIsDeviceMode>:
4001bfac:	e3a01000 	mov	r1, #0
4001bfb0:	e59f00b4 	ldr	r0, [pc, #180]	; 4001c06c <CyU3POtgIsDeviceMode+0xc0>
4001bfb4:	e5d00000 	ldrb	r0, [r0]
4001bfb8:	e3500000 	cmp	r0, #0
4001bfbc:	0a000003 	beq	4001bfd0 <CyU3POtgIsDeviceMode+0x24>
4001bfc0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001c06c <CyU3POtgIsDeviceMode+0xc0>
4001bfc4:	e5d00000 	ldrb	r0, [r0]
4001bfc8:	e3500002 	cmp	r0, #2
4001bfcc:	1a000024 	bne	4001c064 <CyU3POtgIsDeviceMode+0xb8>
4001bfd0:	e59f0098 	ldr	r0, [pc, #152]	; 4001c070 <CyU3POtgIsDeviceMode+0xc4>
4001bfd4:	e5d00000 	ldrb	r0, [r0]
4001bfd8:	e3500000 	cmp	r0, #0
4001bfdc:	0a000006 	beq	4001bffc <CyU3POtgIsDeviceMode+0x50>
4001bfe0:	e3500002 	cmp	r0, #2
4001bfe4:	0a00000c 	beq	4001c01c <CyU3POtgIsDeviceMode+0x70>
4001bfe8:	e3500004 	cmp	r0, #4
4001bfec:	0a00000b 	beq	4001c020 <CyU3POtgIsDeviceMode+0x74>
4001bff0:	e3500005 	cmp	r0, #5
4001bff4:	1a00000c 	bne	4001c02c <CyU3POtgIsDeviceMode+0x80>
4001bff8:	ea000009 	b	4001c024 <CyU3POtgIsDeviceMode+0x78>
4001bffc:	e1a00000 	nop			; (mov r0, r0)
4001c000:	e59f0064 	ldr	r0, [pc, #100]	; 4001c06c <CyU3POtgIsDeviceMode+0xc0>
4001c004:	e5d00000 	ldrb	r0, [r0]
4001c008:	e3500002 	cmp	r0, #2
4001c00c:	1a000001 	bne	4001c018 <CyU3POtgIsDeviceMode+0x6c>
4001c010:	e3a00000 	mov	r0, #0
4001c014:	e12fff1e 	bx	lr
4001c018:	e1a00000 	nop			; (mov r0, r0)
4001c01c:	e1a00000 	nop			; (mov r0, r0)
4001c020:	e1a00000 	nop			; (mov r0, r0)
4001c024:	e3a01001 	mov	r1, #1
4001c028:	ea000002 	b	4001c038 <CyU3POtgIsDeviceMode+0x8c>
4001c02c:	e1a00000 	nop			; (mov r0, r0)
4001c030:	e3a01000 	mov	r1, #0
4001c034:	e1a00000 	nop			; (mov r0, r0)
4001c038:	e1a00000 	nop			; (mov r0, r0)
4001c03c:	e59f0030 	ldr	r0, [pc, #48]	; 4001c074 <CyU3POtgIsDeviceMode+0xc8>
4001c040:	e5900000 	ldr	r0, [r0]
4001c044:	e3500000 	cmp	r0, #0
4001c048:	0a000005 	beq	4001c064 <CyU3POtgIsDeviceMode+0xb8>
4001c04c:	e3510000 	cmp	r1, #0
4001c050:	1a000001 	bne	4001c05c <CyU3POtgIsDeviceMode+0xb0>
4001c054:	e3a00001 	mov	r0, #1
4001c058:	ea000000 	b	4001c060 <CyU3POtgIsDeviceMode+0xb4>
4001c05c:	e3a00000 	mov	r0, #0
4001c060:	e1a01000 	mov	r1, r0
4001c064:	e1a00001 	mov	r0, r1
4001c068:	eaffffe9 	b	4001c014 <CyU3POtgIsDeviceMode+0x68>
4001c06c:	40030d54 	.word	0x40030d54
4001c070:	40030d50 	.word	0x40030d50
4001c074:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsHostMode:

4001c078 <CyU3POtgIsHostMode>:
4001c078:	e3a01000 	mov	r1, #0
4001c07c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c12c <CyU3POtgIsHostMode+0xb4>
4001c080:	e5d00000 	ldrb	r0, [r0]
4001c084:	e3500001 	cmp	r0, #1
4001c088:	0a000003 	beq	4001c09c <CyU3POtgIsHostMode+0x24>
4001c08c:	e59f0098 	ldr	r0, [pc, #152]	; 4001c12c <CyU3POtgIsHostMode+0xb4>
4001c090:	e5d00000 	ldrb	r0, [r0]
4001c094:	e3500002 	cmp	r0, #2
4001c098:	1a000021 	bne	4001c124 <CyU3POtgIsHostMode+0xac>
4001c09c:	e59f008c 	ldr	r0, [pc, #140]	; 4001c130 <CyU3POtgIsHostMode+0xb8>
4001c0a0:	e5d00000 	ldrb	r0, [r0]
4001c0a4:	e3500000 	cmp	r0, #0
4001c0a8:	0a000004 	beq	4001c0c0 <CyU3POtgIsHostMode+0x48>
4001c0ac:	e3500001 	cmp	r0, #1
4001c0b0:	0a00000a 	beq	4001c0e0 <CyU3POtgIsHostMode+0x68>
4001c0b4:	e3500003 	cmp	r0, #3
4001c0b8:	1a00000b 	bne	4001c0ec <CyU3POtgIsHostMode+0x74>
4001c0bc:	ea000008 	b	4001c0e4 <CyU3POtgIsHostMode+0x6c>
4001c0c0:	e1a00000 	nop			; (mov r0, r0)
4001c0c4:	e59f0060 	ldr	r0, [pc, #96]	; 4001c12c <CyU3POtgIsHostMode+0xb4>
4001c0c8:	e5d00000 	ldrb	r0, [r0]
4001c0cc:	e3500002 	cmp	r0, #2
4001c0d0:	1a000001 	bne	4001c0dc <CyU3POtgIsHostMode+0x64>
4001c0d4:	e3a00000 	mov	r0, #0
4001c0d8:	e12fff1e 	bx	lr
4001c0dc:	e1a00000 	nop			; (mov r0, r0)
4001c0e0:	e1a00000 	nop			; (mov r0, r0)
4001c0e4:	e3a01001 	mov	r1, #1
4001c0e8:	ea000002 	b	4001c0f8 <CyU3POtgIsHostMode+0x80>
4001c0ec:	e1a00000 	nop			; (mov r0, r0)
4001c0f0:	e3a01000 	mov	r1, #0
4001c0f4:	e1a00000 	nop			; (mov r0, r0)
4001c0f8:	e1a00000 	nop			; (mov r0, r0)
4001c0fc:	e59f0030 	ldr	r0, [pc, #48]	; 4001c134 <CyU3POtgIsHostMode+0xbc>
4001c100:	e5900000 	ldr	r0, [r0]
4001c104:	e3500000 	cmp	r0, #0
4001c108:	0a000005 	beq	4001c124 <CyU3POtgIsHostMode+0xac>
4001c10c:	e3510000 	cmp	r1, #0
4001c110:	1a000001 	bne	4001c11c <CyU3POtgIsHostMode+0xa4>
4001c114:	e3a00001 	mov	r0, #1
4001c118:	ea000000 	b	4001c120 <CyU3POtgIsHostMode+0xa8>
4001c11c:	e3a00000 	mov	r0, #0
4001c120:	e1a01000 	mov	r1, r0
4001c124:	e1a00001 	mov	r0, r1
4001c128:	eaffffea 	b	4001c0d8 <CyU3POtgIsHostMode+0x60>
4001c12c:	40030d54 	.word	0x40030d54
4001c130:	40030d50 	.word	0x40030d50
4001c134:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsStarted:

4001c138 <CyU3POtgIsStarted>:
4001c138:	e59f0004 	ldr	r0, [pc, #4]	; 4001c144 <CyU3POtgIsStarted+0xc>
4001c13c:	e5900000 	ldr	r0, [r0]
4001c140:	e12fff1e 	bx	lr
4001c144:	40030d48 	.word	0x40030d48

Disassembly of section i.CyU3PSetEpConfig:

4001c148 <CyU3PSetEpConfig>:
4001c148:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001c14c:	e1a04000 	mov	r4, r0
4001c150:	e1a05001 	mov	r5, r1
4001c154:	e204607f 	and	r6, r4, #127	; 0x7f
4001c158:	e3a07000 	mov	r7, #0
4001c15c:	e3a08000 	mov	r8, #0
4001c160:	e3a09000 	mov	r9, #0
4001c164:	e3a0a000 	mov	sl, #0
4001c168:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c6f8 <CyU3PSetEpConfig+0x5b0>
4001c16c:	e5d00008 	ldrb	r0, [r0, #8]
4001c170:	e3500000 	cmp	r0, #0
4001c174:	1a000001 	bne	4001c180 <CyU3PSetEpConfig+0x38>
4001c178:	e3a00042 	mov	r0, #66	; 0x42
4001c17c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001c180:	e3550000 	cmp	r5, #0
4001c184:	1a000001 	bne	4001c190 <CyU3PSetEpConfig+0x48>
4001c188:	e3a00041 	mov	r0, #65	; 0x41
4001c18c:	eafffffa 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c190:	e5950000 	ldr	r0, [r5]
4001c194:	e3500000 	cmp	r0, #0
4001c198:	0a000074 	beq	4001c370 <CyU3PSetEpConfig+0x228>
4001c19c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1a0:	e3500b01 	cmp	r0, #1024	; 0x400
4001c1a4:	ca000001 	bgt	4001c1b0 <CyU3PSetEpConfig+0x68>
4001c1a8:	e356000f 	cmp	r6, #15
4001c1ac:	da000001 	ble	4001c1b8 <CyU3PSetEpConfig+0x70>
4001c1b0:	e3a00040 	mov	r0, #64	; 0x40
4001c1b4:	eafffff0 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c1b8:	e5d50004 	ldrb	r0, [r5, #4]
4001c1bc:	e3500000 	cmp	r0, #0
4001c1c0:	0a000002 	beq	4001c1d0 <CyU3PSetEpConfig+0x88>
4001c1c4:	e5d50004 	ldrb	r0, [r5, #4]
4001c1c8:	e3500003 	cmp	r0, #3
4001c1cc:	da000001 	ble	4001c1d8 <CyU3PSetEpConfig+0x90>
4001c1d0:	e3a00040 	mov	r0, #64	; 0x40
4001c1d4:	eaffffe8 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c1d8:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1dc:	e3500010 	cmp	r0, #16
4001c1e0:	ca000008 	bgt	4001c208 <CyU3PSetEpConfig+0xc0>
4001c1e4:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1e8:	e3500001 	cmp	r0, #1
4001c1ec:	da000007 	ble	4001c210 <CyU3PSetEpConfig+0xc8>
4001c1f0:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1f4:	e3500b01 	cmp	r0, #1024	; 0x400
4001c1f8:	aa000004 	bge	4001c210 <CyU3PSetEpConfig+0xc8>
4001c1fc:	e1d500b8 	ldrh	r0, [r5, #8]
4001c200:	e3500000 	cmp	r0, #0
4001c204:	0a000001 	beq	4001c210 <CyU3PSetEpConfig+0xc8>
4001c208:	e3a00040 	mov	r0, #64	; 0x40
4001c20c:	eaffffda 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c210:	e5d50004 	ldrb	r0, [r5, #4]
4001c214:	e1a00f00 	lsl	r0, r0, #30
4001c218:	e1a08a20 	lsr	r8, r0, #20
4001c21c:	e5d50004 	ldrb	r0, [r5, #4]
4001c220:	e2000003 	and	r0, r0, #3
4001c224:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c6fc <CyU3PSetEpConfig+0x5b4>
4001c228:	e7d1a000 	ldrb	sl, [r1, r0]
4001c22c:	e5d5000a 	ldrb	r0, [r5, #10]
4001c230:	e3500000 	cmp	r0, #0
4001c234:	0a000004 	beq	4001c24c <CyU3PSetEpConfig+0x104>
4001c238:	e5d5000a 	ldrb	r0, [r5, #10]
4001c23c:	e2400001 	sub	r0, r0, #1
4001c240:	e200000f 	and	r0, r0, #15
4001c244:	e18aa400 	orr	sl, sl, r0, lsl #8
4001c248:	ea000001 	b	4001c254 <CyU3PSetEpConfig+0x10c>
4001c24c:	e3a00001 	mov	r0, #1
4001c250:	e5c5000a 	strb	r0, [r5, #10]
4001c254:	e5d50004 	ldrb	r0, [r5, #4]
4001c258:	e3500001 	cmp	r0, #1
4001c25c:	1a000013 	bne	4001c2b0 <CyU3PSetEpConfig+0x168>
4001c260:	e5950000 	ldr	r0, [r5]
4001c264:	e3500000 	cmp	r0, #0
4001c268:	0a000010 	beq	4001c2b0 <CyU3PSetEpConfig+0x168>
4001c26c:	e5d5000b 	ldrb	r0, [r5, #11]
4001c270:	e2000003 	and	r0, r0, #3
4001c274:	e1888600 	orr	r8, r8, r0, lsl #12
4001c278:	e5d5000a 	ldrb	r0, [r5, #10]
4001c27c:	e5d5100b 	ldrb	r1, [r5, #11]
4001c280:	e1600180 	smulbb	r0, r0, r1
4001c284:	e200003f 	and	r0, r0, #63	; 0x3f
4001c288:	e18aa100 	orr	sl, sl, r0, lsl #2
4001c28c:	e5d5000b 	ldrb	r0, [r5, #11]
4001c290:	e3500001 	cmp	r0, #1
4001c294:	da000005 	ble	4001c2b0 <CyU3PSetEpConfig+0x168>
4001c298:	e3560003 	cmp	r6, #3
4001c29c:	0a000003 	beq	4001c2b0 <CyU3PSetEpConfig+0x168>
4001c2a0:	e3560007 	cmp	r6, #7
4001c2a4:	0a000001 	beq	4001c2b0 <CyU3PSetEpConfig+0x168>
4001c2a8:	e3a0004d 	mov	r0, #77	; 0x4d
4001c2ac:	eaffffb2 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c2b0:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2b4:	e3500000 	cmp	r0, #0
4001c2b8:	0a000004 	beq	4001c2d0 <CyU3PSetEpConfig+0x188>
4001c2bc:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2c0:	e3500b01 	cmp	r0, #1024	; 0x400
4001c2c4:	ca000001 	bgt	4001c2d0 <CyU3PSetEpConfig+0x188>
4001c2c8:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2cc:	ea000000 	b	4001c2d4 <CyU3PSetEpConfig+0x18c>
4001c2d0:	e3a00b01 	mov	r0, #1024	; 0x400
4001c2d4:	e1a07800 	lsl	r7, r0, #16
4001c2d8:	e1a07827 	lsr	r7, r7, #16
4001c2dc:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c6f8 <CyU3PSetEpConfig+0x5b0>
4001c2e0:	e5d00008 	ldrb	r0, [r0, #8]
4001c2e4:	e3500005 	cmp	r0, #5
4001c2e8:	da00001e 	ble	4001c368 <CyU3PSetEpConfig+0x220>
4001c2ec:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c6f8 <CyU3PSetEpConfig+0x5b0>
4001c2f0:	e5d00009 	ldrb	r0, [r0, #9]
4001c2f4:	e3500001 	cmp	r0, #1
4001c2f8:	0a000008 	beq	4001c320 <CyU3PSetEpConfig+0x1d8>
4001c2fc:	e3500002 	cmp	r0, #2
4001c300:	1a000015 	bne	4001c35c <CyU3PSetEpConfig+0x214>
4001c304:	e5d50004 	ldrb	r0, [r5, #4]
4001c308:	e3500002 	cmp	r0, #2
4001c30c:	1a000002 	bne	4001c31c <CyU3PSetEpConfig+0x1d4>
4001c310:	e3570c02 	cmp	r7, #512	; 0x200
4001c314:	da000000 	ble	4001c31c <CyU3PSetEpConfig+0x1d4>
4001c318:	e3a07c02 	mov	r7, #512	; 0x200
4001c31c:	ea000010 	b	4001c364 <CyU3PSetEpConfig+0x21c>
4001c320:	e1a00000 	nop			; (mov r0, r0)
4001c324:	e5d50004 	ldrb	r0, [r5, #4]
4001c328:	e3500001 	cmp	r0, #1
4001c32c:	1a000003 	bne	4001c340 <CyU3PSetEpConfig+0x1f8>
4001c330:	e3570b01 	cmp	r7, #1024	; 0x400
4001c334:	ba000001 	blt	4001c340 <CyU3PSetEpConfig+0x1f8>
4001c338:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c700 <CyU3PSetEpConfig+0x5b8>
4001c33c:	ea000005 	b	4001c358 <CyU3PSetEpConfig+0x210>
4001c340:	e5d50004 	ldrb	r0, [r5, #4]
4001c344:	e3500001 	cmp	r0, #1
4001c348:	0a000002 	beq	4001c358 <CyU3PSetEpConfig+0x210>
4001c34c:	e3570040 	cmp	r7, #64	; 0x40
4001c350:	da000000 	ble	4001c358 <CyU3PSetEpConfig+0x210>
4001c354:	e3a07040 	mov	r7, #64	; 0x40
4001c358:	ea000001 	b	4001c364 <CyU3PSetEpConfig+0x21c>
4001c35c:	e1a00000 	nop			; (mov r0, r0)
4001c360:	e1a00000 	nop			; (mov r0, r0)
4001c364:	e1a00000 	nop			; (mov r0, r0)
4001c368:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c36c:	e1888000 	orr	r8, r8, r0
4001c370:	e3e01000 	mvn	r1, #0
4001c374:	e59f0388 	ldr	r0, [pc, #904]	; 4001c704 <CyU3PSetEpConfig+0x5bc>
4001c378:	ebffb7d1 	bl	4000a2c4 <_txe_mutex_get>
4001c37c:	e3140080 	tst	r4, #128	; 0x80
4001c380:	0a000062 	beq	4001c510 <CyU3PSetEpConfig+0x3c8>
4001c384:	e5950000 	ldr	r0, [r5]
4001c388:	e3500000 	cmp	r0, #0
4001c38c:	1a00001d 	bne	4001c408 <CyU3PSetEpConfig+0x2c0>
4001c390:	e59f0370 	ldr	r0, [pc, #880]	; 4001c708 <CyU3PSetEpConfig+0x5c0>
4001c394:	e59f1370 	ldr	r1, [pc, #880]	; 4001c70c <CyU3PSetEpConfig+0x5c4>
4001c398:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c39c:	e3a00020 	mov	r0, #32
4001c3a0:	e59f1368 	ldr	r1, [pc, #872]	; 4001c710 <CyU3PSetEpConfig+0x5c8>
4001c3a4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c3a8:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c3ac:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c3b0:	e3a01001 	mov	r1, #1
4001c3b4:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c3b8:	e59f1354 	ldr	r1, [pc, #852]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c3bc:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c3c0:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c3c4:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c3c8:	e3a01001 	mov	r1, #1
4001c3cc:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c3d0:	e59f1340 	ldr	r1, [pc, #832]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c3d4:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c3d8:	e3a00000 	mov	r0, #0
4001c3dc:	e0861086 	add	r1, r6, r6, lsl #1
4001c3e0:	e59f2334 	ldr	r2, [pc, #820]	; 4001c71c <CyU3PSetEpConfig+0x5d4>
4001c3e4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3e8:	e5810004 	str	r0, [r1, #4]
4001c3ec:	e0861086 	add	r1, r6, r6, lsl #1
4001c3f0:	e0821101 	add	r1, r2, r1, lsl #2
4001c3f4:	e5810008 	str	r0, [r1, #8]
4001c3f8:	e59f0304 	ldr	r0, [pc, #772]	; 4001c704 <CyU3PSetEpConfig+0x5bc>
4001c3fc:	ebffb7e5 	bl	4000a398 <_txe_mutex_put>
4001c400:	e3a00000 	mov	r0, #0
4001c404:	eaffff5c 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c408:	e3a00001 	mov	r0, #1
4001c40c:	e0861086 	add	r1, r6, r6, lsl #1
4001c410:	e59f2304 	ldr	r2, [pc, #772]	; 4001c71c <CyU3PSetEpConfig+0x5d4>
4001c414:	e0821101 	add	r1, r2, r1, lsl #2
4001c418:	e5810004 	str	r0, [r1, #4]
4001c41c:	e0861086 	add	r1, r6, r6, lsl #1
4001c420:	e0821101 	add	r1, r2, r1, lsl #2
4001c424:	e5810008 	str	r0, [r1, #8]
4001c428:	e1d500b8 	ldrh	r0, [r5, #8]
4001c42c:	e0861086 	add	r1, r6, r6, lsl #1
4001c430:	e0821101 	add	r1, r2, r1, lsl #2
4001c434:	e1c100b0 	strh	r0, [r1]
4001c438:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c720 <CyU3PSetEpConfig+0x5d8>
4001c43c:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c440:	e5d50004 	ldrb	r0, [r5, #4]
4001c444:	e3500002 	cmp	r0, #2
4001c448:	1a000007 	bne	4001c46c <CyU3PSetEpConfig+0x324>
4001c44c:	e1d500b6 	ldrh	r0, [r5, #6]
4001c450:	e3500000 	cmp	r0, #0
4001c454:	da000004 	ble	4001c46c <CyU3PSetEpConfig+0x324>
4001c458:	e3a02001 	mov	r2, #1
4001c45c:	e1a01006 	mov	r1, r6
4001c460:	e1a00004 	mov	r0, r4
4001c464:	eb00031b 	bl	4001d0d8 <CyU3PUsbMapStream>
4001c468:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c724 <CyU3PSetEpConfig+0x5dc>
4001c46c:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c470:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c474:	e3a01001 	mov	r1, #1
4001c478:	e1800611 	orr	r0, r0, r1, lsl r6
4001c47c:	e59f1290 	ldr	r1, [pc, #656]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c480:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c484:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c488:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c48c:	e59f1278 	ldr	r1, [pc, #632]	; 4001c70c <CyU3PSetEpConfig+0x5c4>
4001c490:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c494:	e3890001 	orr	r0, r9, #1
4001c498:	e59f1270 	ldr	r1, [pc, #624]	; 4001c710 <CyU3PSetEpConfig+0x5c8>
4001c49c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c4a0:	e2810040 	add	r0, r1, #64	; 0x40
4001c4a4:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c4a8:	e59f0278 	ldr	r0, [pc, #632]	; 4001c728 <CyU3PSetEpConfig+0x5e0>
4001c4ac:	e5900000 	ldr	r0, [r0]
4001c4b0:	e3500000 	cmp	r0, #0
4001c4b4:	0a00007f 	beq	4001c6b8 <CyU3PSetEpConfig+0x570>
4001c4b8:	e3a00001 	mov	r0, #1
4001c4bc:	e59f1268 	ldr	r1, [pc, #616]	; 4001c72c <CyU3PSetEpConfig+0x5e4>
4001c4c0:	e5911000 	ldr	r1, [r1]
4001c4c4:	e1110610 	tst	r1, r0, lsl r6
4001c4c8:	0a00007a 	beq	4001c6b8 <CyU3PSetEpConfig+0x570>
4001c4cc:	e59f0244 	ldr	r0, [pc, #580]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c4d0:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c4d4:	e3a01001 	mov	r1, #1
4001c4d8:	e1800611 	orr	r0, r0, r1, lsl r6
4001c4dc:	e59f1234 	ldr	r1, [pc, #564]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c4e0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c4e4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c4e8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c4ec:	e3a01001 	mov	r1, #1
4001c4f0:	e1800611 	orr	r0, r0, r1, lsl r6
4001c4f4:	e59f1218 	ldr	r1, [pc, #536]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c4f8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c4fc:	e59f0224 	ldr	r0, [pc, #548]	; 4001c728 <CyU3PSetEpConfig+0x5e0>
4001c500:	e5901000 	ldr	r1, [r0]
4001c504:	e1a00004 	mov	r0, r4
4001c508:	eb0001ba 	bl	4001cbf8 <CyU3PUsbEnableEpInterrupts>
4001c50c:	ea000069 	b	4001c6b8 <CyU3PSetEpConfig+0x570>
4001c510:	e5950000 	ldr	r0, [r5]
4001c514:	e3500000 	cmp	r0, #0
4001c518:	1a00001e 	bne	4001c598 <CyU3PSetEpConfig+0x450>
4001c51c:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c708 <CyU3PSetEpConfig+0x5c0>
4001c520:	e59f1208 	ldr	r1, [pc, #520]	; 4001c730 <CyU3PSetEpConfig+0x5e8>
4001c524:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c528:	e3a00020 	mov	r0, #32
4001c52c:	e59f1200 	ldr	r1, [pc, #512]	; 4001c734 <CyU3PSetEpConfig+0x5ec>
4001c530:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c534:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c538:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c53c:	e2861010 	add	r1, r6, #16
4001c540:	e3a02001 	mov	r2, #1
4001c544:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c548:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c54c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c550:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c554:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c558:	e2861010 	add	r1, r6, #16
4001c55c:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c560:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c564:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c568:	e3a00000 	mov	r0, #0
4001c56c:	e0861086 	add	r1, r6, r6, lsl #1
4001c570:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c738 <CyU3PSetEpConfig+0x5f0>
4001c574:	e0821101 	add	r1, r2, r1, lsl #2
4001c578:	e5810004 	str	r0, [r1, #4]
4001c57c:	e0861086 	add	r1, r6, r6, lsl #1
4001c580:	e0821101 	add	r1, r2, r1, lsl #2
4001c584:	e5810008 	str	r0, [r1, #8]
4001c588:	e59f0174 	ldr	r0, [pc, #372]	; 4001c704 <CyU3PSetEpConfig+0x5bc>
4001c58c:	ebffb781 	bl	4000a398 <_txe_mutex_put>
4001c590:	e3a00000 	mov	r0, #0
4001c594:	eafffef8 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c598:	e3a00001 	mov	r0, #1
4001c59c:	e0861086 	add	r1, r6, r6, lsl #1
4001c5a0:	e59f2190 	ldr	r2, [pc, #400]	; 4001c738 <CyU3PSetEpConfig+0x5f0>
4001c5a4:	e0821101 	add	r1, r2, r1, lsl #2
4001c5a8:	e5810004 	str	r0, [r1, #4]
4001c5ac:	e0861086 	add	r1, r6, r6, lsl #1
4001c5b0:	e0821101 	add	r1, r2, r1, lsl #2
4001c5b4:	e5810008 	str	r0, [r1, #8]
4001c5b8:	e1d500b8 	ldrh	r0, [r5, #8]
4001c5bc:	e0861086 	add	r1, r6, r6, lsl #1
4001c5c0:	e0821101 	add	r1, r2, r1, lsl #2
4001c5c4:	e1c100b0 	strh	r0, [r1]
4001c5c8:	e59f016c 	ldr	r0, [pc, #364]	; 4001c73c <CyU3PSetEpConfig+0x5f4>
4001c5cc:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c5d0:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c5d4:	e1800007 	orr	r0, r0, r7
4001c5d8:	e59f115c 	ldr	r1, [pc, #348]	; 4001c73c <CyU3PSetEpConfig+0x5f4>
4001c5dc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5e0:	e5d50004 	ldrb	r0, [r5, #4]
4001c5e4:	e3500002 	cmp	r0, #2
4001c5e8:	1a00000e 	bne	4001c628 <CyU3PSetEpConfig+0x4e0>
4001c5ec:	e1d500b6 	ldrh	r0, [r5, #6]
4001c5f0:	e3500000 	cmp	r0, #0
4001c5f4:	da00000b 	ble	4001c628 <CyU3PSetEpConfig+0x4e0>
4001c5f8:	e3a02001 	mov	r2, #1
4001c5fc:	e1a01006 	mov	r1, r6
4001c600:	e1a00004 	mov	r0, r4
4001c604:	eb0002b3 	bl	4001d0d8 <CyU3PUsbMapStream>
4001c608:	e59f0104 	ldr	r0, [pc, #260]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c60c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c610:	e2861010 	add	r1, r6, #16
4001c614:	e3a02001 	mov	r2, #1
4001c618:	e1800112 	orr	r0, r0, r2, lsl r1
4001c61c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c620:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c624:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c724 <CyU3PSetEpConfig+0x5dc>
4001c628:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c62c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c730 <CyU3PSetEpConfig+0x5e8>
4001c630:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c634:	e3890001 	orr	r0, r9, #1
4001c638:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c734 <CyU3PSetEpConfig+0x5ec>
4001c63c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c640:	e2810040 	add	r0, r1, #64	; 0x40
4001c644:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c648:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c728 <CyU3PSetEpConfig+0x5e0>
4001c64c:	e5900000 	ldr	r0, [r0]
4001c650:	e3500000 	cmp	r0, #0
4001c654:	0a000017 	beq	4001c6b8 <CyU3PSetEpConfig+0x570>
4001c658:	e2860010 	add	r0, r6, #16
4001c65c:	e3a01001 	mov	r1, #1
4001c660:	e1a00011 	lsl	r0, r1, r0
4001c664:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c72c <CyU3PSetEpConfig+0x5e4>
4001c668:	e5911000 	ldr	r1, [r1]
4001c66c:	e1100001 	tst	r0, r1
4001c670:	0a000010 	beq	4001c6b8 <CyU3PSetEpConfig+0x570>
4001c674:	e59f009c 	ldr	r0, [pc, #156]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c678:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c67c:	e2861010 	add	r1, r6, #16
4001c680:	e3a02001 	mov	r2, #1
4001c684:	e1800112 	orr	r0, r0, r2, lsl r1
4001c688:	e59f1088 	ldr	r1, [pc, #136]	; 4001c718 <CyU3PSetEpConfig+0x5d0>
4001c68c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c690:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c694:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c698:	e2861010 	add	r1, r6, #16
4001c69c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c6a0:	e59f106c 	ldr	r1, [pc, #108]	; 4001c714 <CyU3PSetEpConfig+0x5cc>
4001c6a4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c6a8:	e59f0078 	ldr	r0, [pc, #120]	; 4001c728 <CyU3PSetEpConfig+0x5e0>
4001c6ac:	e5901000 	ldr	r1, [r0]
4001c6b0:	e1a00004 	mov	r0, r4
4001c6b4:	eb00014f 	bl	4001cbf8 <CyU3PUsbEnableEpInterrupts>
4001c6b8:	e59f0038 	ldr	r0, [pc, #56]	; 4001c6f8 <CyU3PSetEpConfig+0x5b0>
4001c6bc:	e5d00008 	ldrb	r0, [r0, #8]
4001c6c0:	e3500005 	cmp	r0, #5
4001c6c4:	ba000007 	blt	4001c6e8 <CyU3PSetEpConfig+0x5a0>
4001c6c8:	e1a00004 	mov	r0, r4
4001c6cc:	eb00040e 	bl	4001d70c <CyU3PUsbResetEp>
4001c6d0:	e1a00004 	mov	r0, r4
4001c6d4:	eb0001a4 	bl	4001cd6c <CyU3PUsbFlushEp>
4001c6d8:	e3a02001 	mov	r2, #1
4001c6dc:	e3a01000 	mov	r1, #0
4001c6e0:	e1a00004 	mov	r0, r4
4001c6e4:	eb00066c 	bl	4001e09c <CyU3PUsbStall>
4001c6e8:	e59f0014 	ldr	r0, [pc, #20]	; 4001c704 <CyU3PSetEpConfig+0x5bc>
4001c6ec:	ebffb729 	bl	4000a398 <_txe_mutex_put>
4001c6f0:	e3a00000 	mov	r0, #0
4001c6f4:	eafffea0 	b	4001c17c <CyU3PSetEpConfig+0x34>
4001c6f8:	40031d40 	.word	0x40031d40
4001c6fc:	40012204 	.word	0x40012204
4001c700:	000003ff 	.word	0x000003ff
4001c704:	40031ee0 	.word	0x40031ee0
4001c708:	00004040 	.word	0x00004040
4001c70c:	e0031418 	.word	0xe0031418
4001c710:	e0033500 	.word	0xe0033500
4001c714:	e0033000 	.word	0xe0033000
4001c718:	e0031000 	.word	0xe0031000
4001c71c:	40031bbc 	.word	0x40031bbc
4001c720:	e0031c40 	.word	0xe0031c40
4001c724:	00400028 	.word	0x00400028
4001c728:	40030d7c 	.word	0x40030d7c
4001c72c:	40030d80 	.word	0x40030d80
4001c730:	e0031498 	.word	0xe0031498
4001c734:	e0033600 	.word	0xe0033600
4001c738:	40031c7c 	.word	0x40031c7c
4001c73c:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c740 <CyU3PSetUsbCoreClock>:
4001c740:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c744:	e1a04000 	mov	r4, r0
4001c748:	e1a05001 	mov	r5, r1
4001c74c:	eb0016d5 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
4001c750:	e1a06000 	mov	r6, r0
4001c754:	e59f0064 	ldr	r0, [pc, #100]	; 4001c7c0 <CyU3PSetUsbCoreClock+0x80>
4001c758:	e5900008 	ldr	r0, [r0, #8]
4001c75c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c760:	e59f1058 	ldr	r1, [pc, #88]	; 4001c7c0 <CyU3PSetUsbCoreClock+0x80>
4001c764:	e5810008 	str	r0, [r1, #8]
4001c768:	e3a07014 	mov	r7, #20
4001c76c:	ea000001 	b	4001c778 <CyU3PSetUsbCoreClock+0x38>
4001c770:	e1a00000 	nop			; (mov r0, r0)
4001c774:	e2477001 	sub	r7, r7, #1
4001c778:	e3570000 	cmp	r7, #0
4001c77c:	1afffffb 	bne	4001c770 <CyU3PSetUsbCoreClock+0x30>
4001c780:	e1850104 	orr	r0, r5, r4, lsl #2
4001c784:	e59f1034 	ldr	r1, [pc, #52]	; 4001c7c0 <CyU3PSetUsbCoreClock+0x80>
4001c788:	e5810008 	str	r0, [r1, #8]
4001c78c:	e1a00001 	mov	r0, r1
4001c790:	e5900008 	ldr	r0, [r0, #8]
4001c794:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c798:	e5810008 	str	r0, [r1, #8]
4001c79c:	e3a07050 	mov	r7, #80	; 0x50
4001c7a0:	ea000001 	b	4001c7ac <CyU3PSetUsbCoreClock+0x6c>
4001c7a4:	e1a00000 	nop			; (mov r0, r0)
4001c7a8:	e2477001 	sub	r7, r7, #1
4001c7ac:	e3570000 	cmp	r7, #0
4001c7b0:	1afffffb 	bne	4001c7a4 <CyU3PSetUsbCoreClock+0x64>
4001c7b4:	e1a00006 	mov	r0, r6
4001c7b8:	eb0016c8 	bl	400222e0 <CyU3PVicEnableInterrupts>
4001c7bc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c7c0:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c7c4 <CyU3PUibInit>:
4001c7c4:	e92d4010 	push	{r4, lr}
4001c7c8:	e3a04000 	mov	r4, #0
4001c7cc:	e3a00000 	mov	r0, #0
4001c7d0:	e59f117c 	ldr	r1, [pc, #380]	; 4001c954 <CyU3PUibInit+0x190>
4001c7d4:	e5810004 	str	r0, [r1, #4]
4001c7d8:	e5810008 	str	r0, [r1, #8]
4001c7dc:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c7e0:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c7e4:	e581001c 	str	r0, [r1, #28]
4001c7e8:	e3e00000 	mvn	r0, #0
4001c7ec:	e581000c 	str	r0, [r1, #12]
4001c7f0:	e5810004 	str	r0, [r1, #4]
4001c7f4:	e59f015c 	ldr	r0, [pc, #348]	; 4001c958 <CyU3PUibInit+0x194>
4001c7f8:	e5810008 	str	r0, [r1, #8]
4001c7fc:	e3a00000 	mov	r0, #0
4001c800:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c804:	e3e00000 	mvn	r0, #0
4001c808:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c80c:	e59f0148 	ldr	r0, [pc, #328]	; 4001c95c <CyU3PUibInit+0x198>
4001c810:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c814:	eb0016c5 	bl	40022330 <CyFx3Usb2PhySetup>
4001c818:	e3e00000 	mvn	r0, #0
4001c81c:	e59f113c 	ldr	r1, [pc, #316]	; 4001c960 <CyU3PUibInit+0x19c>
4001c820:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c824:	e59f0138 	ldr	r0, [pc, #312]	; 4001c964 <CyU3PUibInit+0x1a0>
4001c828:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c82c:	e3e00000 	mvn	r0, #0
4001c830:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c834:	e3a00000 	mov	r0, #0
4001c838:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c83c:	e3a00001 	mov	r0, #1
4001c840:	e1811680 	orr	r1, r1, r0, lsl #13
4001c844:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c848:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c84c:	e3a00043 	mov	r0, #67	; 0x43
4001c850:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c854:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c858:	e59f0108 	ldr	r0, [pc, #264]	; 4001c968 <CyU3PUibInit+0x1a4>
4001c85c:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c860:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c864:	e3a00040 	mov	r0, #64	; 0x40
4001c868:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c86c:	e1800400 	orr	r0, r0, r0, lsl #8
4001c870:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c874:	e3a00040 	mov	r0, #64	; 0x40
4001c878:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c87c:	e3a04001 	mov	r4, #1
4001c880:	ea000015 	b	4001c8dc <CyU3PUibInit+0x118>
4001c884:	e1a00004 	mov	r0, r4
4001c888:	eb000137 	bl	4001cd6c <CyU3PUsbFlushEp>
4001c88c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c96c <CyU3PUibInit+0x1a8>
4001c890:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c894:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c898:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c96c <CyU3PUibInit+0x1a8>
4001c89c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8a0:	e3a00000 	mov	r0, #0
4001c8a4:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c970 <CyU3PUibInit+0x1ac>
4001c8a8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8ac:	e3840080 	orr	r0, r4, #128	; 0x80
4001c8b0:	eb00012d 	bl	4001cd6c <CyU3PUsbFlushEp>
4001c8b4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c974 <CyU3PUibInit+0x1b0>
4001c8b8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c8bc:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c8c0:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c974 <CyU3PUibInit+0x1b0>
4001c8c4:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8c8:	e3a00000 	mov	r0, #0
4001c8cc:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c978 <CyU3PUibInit+0x1b4>
4001c8d0:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8d4:	e2840001 	add	r0, r4, #1
4001c8d8:	e20040ff 	and	r4, r0, #255	; 0xff
4001c8dc:	e3540010 	cmp	r4, #16
4001c8e0:	baffffe7 	blt	4001c884 <CyU3PUibInit+0xc0>
4001c8e4:	e59f0090 	ldr	r0, [pc, #144]	; 4001c97c <CyU3PUibInit+0x1b8>
4001c8e8:	e5900004 	ldr	r0, [r0, #4]
4001c8ec:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c8f0:	e59f1084 	ldr	r1, [pc, #132]	; 4001c97c <CyU3PUibInit+0x1b8>
4001c8f4:	e5810004 	str	r0, [r1, #4]
4001c8f8:	e3e00000 	mvn	r0, #0
4001c8fc:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c900:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c904:	e3a00b01 	mov	r0, #1024	; 0x400
4001c908:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c90c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c980 <CyU3PUibInit+0x1bc>
4001c910:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c914:	e3a00015 	mov	r0, #21
4001c918:	eb00166b 	bl	400222cc <CyU3PVicEnableInt>
4001c91c:	e59f0060 	ldr	r0, [pc, #96]	; 4001c984 <CyU3PUibInit+0x1c0>
4001c920:	e5900000 	ldr	r0, [r0]
4001c924:	e3500000 	cmp	r0, #0
4001c928:	0a000008 	beq	4001c950 <CyU3PUibInit+0x18c>
4001c92c:	e59f0054 	ldr	r0, [pc, #84]	; 4001c988 <CyU3PUibInit+0x1c4>
4001c930:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c934:	e3100b01 	tst	r0, #1024	; 0x400
4001c938:	0a000004 	beq	4001c950 <CyU3PUibInit+0x18c>
4001c93c:	e3a01000 	mov	r1, #0
4001c940:	e3a0000b 	mov	r0, #11
4001c944:	e59f2038 	ldr	r2, [pc, #56]	; 4001c984 <CyU3PUibInit+0x1c0>
4001c948:	e5922000 	ldr	r2, [r2]
4001c94c:	e12fff32 	blx	r2
4001c950:	e8bd8010 	pop	{r4, pc}
4001c954:	e0050000 	.word	0xe0050000
4001c958:	00038081 	.word	0x00038081
4001c95c:	00004a3d 	.word	0x00004a3d
4001c960:	e0031000 	.word	0xe0031000
4001c964:	0000095c 	.word	0x0000095c
4001c968:	00004040 	.word	0x00004040
4001c96c:	e0031498 	.word	0xe0031498
4001c970:	e0033600 	.word	0xe0033600
4001c974:	e0031418 	.word	0xe0031418
4001c978:	e0033500 	.word	0xe0033500
4001c97c:	e0030000 	.word	0xe0030000
4001c980:	40031d40 	.word	0x40031d40
4001c984:	40030d9c 	.word	0x40030d9c
4001c988:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c98c <CyU3PUsbAckSetup>:
4001c98c:	e92d4010 	push	{r4, lr}
4001c990:	e3e01000 	mvn	r1, #0
4001c994:	e59f00fc 	ldr	r0, [pc, #252]	; 4001ca98 <CyU3PUsbAckSetup+0x10c>
4001c998:	ebffb649 	bl	4000a2c4 <_txe_mutex_get>
4001c99c:	eb000780 	bl	4001e7a4 <GetUsbLinkActive>
4001c9a0:	eb00019e 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c9a4:	e3500000 	cmp	r0, #0
4001c9a8:	0a000002 	beq	4001c9b8 <CyU3PUsbAckSetup+0x2c>
4001c9ac:	e59f00e4 	ldr	r0, [pc, #228]	; 4001ca98 <CyU3PUsbAckSetup+0x10c>
4001c9b0:	ebffb678 	bl	4000a398 <_txe_mutex_put>
4001c9b4:	e8bd8010 	pop	{r4, pc}
4001c9b8:	e3a00000 	mov	r0, #0
4001c9bc:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ca9c <CyU3PUsbAckSetup+0x110>
4001c9c0:	e5810014 	str	r0, [r1, #20]
4001c9c4:	e2810000 	add	r0, r1, #0
4001c9c8:	e5d00009 	ldrb	r0, [r0, #9]
4001c9cc:	e3500003 	cmp	r0, #3
4001c9d0:	1a000026 	bne	4001ca70 <CyU3PUsbAckSetup+0xe4>
4001c9d4:	e59f00c4 	ldr	r0, [pc, #196]	; 4001caa0 <CyU3PUsbAckSetup+0x114>
4001c9d8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c9dc:	e3c00004 	bic	r0, r0, #4
4001c9e0:	e59f10b8 	ldr	r1, [pc, #184]	; 4001caa0 <CyU3PUsbAckSetup+0x114>
4001c9e4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c9e8:	e1a00001 	mov	r0, r1
4001c9ec:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c9f0:	e3c00004 	bic	r0, r0, #4
4001c9f4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c9f8:	eb00162a 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
4001c9fc:	e1a04000 	mov	r4, r0
4001ca00:	e3a00001 	mov	r0, #1
4001ca04:	ebffdbad 	bl	400138c0 <CyU3PBusyWait>
4001ca08:	e59f0090 	ldr	r0, [pc, #144]	; 4001caa0 <CyU3PUsbAckSetup+0x114>
4001ca0c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ca10:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ca14:	e59f1084 	ldr	r1, [pc, #132]	; 4001caa0 <CyU3PUsbAckSetup+0x114>
4001ca18:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ca1c:	e1a00004 	mov	r0, r4
4001ca20:	eb00162e 	bl	400222e0 <CyU3PVicEnableInterrupts>
4001ca24:	e3a00c02 	mov	r0, #512	; 0x200
4001ca28:	e59f1074 	ldr	r1, [pc, #116]	; 4001caa4 <CyU3PUsbAckSetup+0x118>
4001ca2c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001ca30:	e3a00016 	mov	r0, #22
4001ca34:	eb000ced 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
4001ca38:	e59f005c 	ldr	r0, [pc, #92]	; 4001ca9c <CyU3PUsbAckSetup+0x110>
4001ca3c:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001ca40:	e3500000 	cmp	r0, #0
4001ca44:	1a000010 	bne	4001ca8c <CyU3PUsbAckSetup+0x100>
4001ca48:	e3a00001 	mov	r0, #1
4001ca4c:	e59f1054 	ldr	r1, [pc, #84]	; 4001caa8 <CyU3PUsbAckSetup+0x11c>
4001ca50:	e5810000 	str	r0, [r1]
4001ca54:	e3a02000 	mov	r2, #0
4001ca58:	e3a01064 	mov	r1, #100	; 0x64
4001ca5c:	e59f0048 	ldr	r0, [pc, #72]	; 4001caac <CyU3PUsbAckSetup+0x120>
4001ca60:	ebffb865 	bl	4000abfc <_txe_timer_change>
4001ca64:	e59f0040 	ldr	r0, [pc, #64]	; 4001caac <CyU3PUsbAckSetup+0x120>
4001ca68:	ebffb853 	bl	4000abbc <_txe_timer_activate>
4001ca6c:	ea000006 	b	4001ca8c <CyU3PUsbAckSetup+0x100>
4001ca70:	e59f002c 	ldr	r0, [pc, #44]	; 4001caa4 <CyU3PUsbAckSetup+0x118>
4001ca74:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ca78:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001ca7c:	e59f1020 	ldr	r1, [pc, #32]	; 4001caa4 <CyU3PUsbAckSetup+0x118>
4001ca80:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ca84:	e3a00040 	mov	r0, #64	; 0x40
4001ca88:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001ca8c:	e59f0004 	ldr	r0, [pc, #4]	; 4001ca98 <CyU3PUsbAckSetup+0x10c>
4001ca90:	ebffb640 	bl	4000a398 <_txe_mutex_put>
4001ca94:	eaffffc6 	b	4001c9b4 <CyU3PUsbAckSetup+0x28>
4001ca98:	40031ee0 	.word	0x40031ee0
4001ca9c:	40031d40 	.word	0x40031d40
4001caa0:	e0033000 	.word	0xe0033000
4001caa4:	e0031000 	.word	0xe0031000
4001caa8:	40030db0 	.word	0x40030db0
4001caac:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001cab0 <CyU3PUsbCreateDmaChannels>:
4001cab0:	e92d4010 	push	{r4, lr}
4001cab4:	e24dd020 	sub	sp, sp, #32
4001cab8:	e3a00c02 	mov	r0, #512	; 0x200
4001cabc:	e1cd00b4 	strh	r0, [sp, #4]
4001cac0:	e3a00001 	mov	r0, #1
4001cac4:	e1cd00b6 	strh	r0, [sp, #6]
4001cac8:	e3a00000 	mov	r0, #0
4001cacc:	e1cd00bc 	strh	r0, [sp, #12]
4001cad0:	e3a00c03 	mov	r0, #768	; 0x300
4001cad4:	e1cd00ba 	strh	r0, [sp, #10]
4001cad8:	e3a00000 	mov	r0, #0
4001cadc:	e5cd0014 	strb	r0, [sp, #20]
4001cae0:	e1cd00be 	strh	r0, [sp, #14]
4001cae4:	e1cd01b0 	strh	r0, [sp, #16]
4001cae8:	e1cd01b2 	strh	r0, [sp, #18]
4001caec:	e58d0018 	str	r0, [sp, #24]
4001caf0:	e58d001c 	str	r0, [sp, #28]
4001caf4:	e59f00ec 	ldr	r0, [pc, #236]	; 4001cbe8 <CyU3PUsbCreateDmaChannels+0x138>
4001caf8:	e1cd00b8 	strh	r0, [sp, #8]
4001cafc:	e28d2004 	add	r2, sp, #4
4001cb00:	e3a01004 	mov	r1, #4
4001cb04:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cbec <CyU3PUsbCreateDmaChannels+0x13c>
4001cb08:	ebffe411 	bl	40015b54 <CyU3PDmaChannelCreate>
4001cb0c:	e1a04000 	mov	r4, r0
4001cb10:	e3540000 	cmp	r4, #0
4001cb14:	0a000002 	beq	4001cb24 <CyU3PUsbCreateDmaChannels+0x74>
4001cb18:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb1c:	e28dd020 	add	sp, sp, #32
4001cb20:	e8bd8010 	pop	{r4, pc}
4001cb24:	e59f00c4 	ldr	r0, [pc, #196]	; 4001cbf0 <CyU3PUsbCreateDmaChannels+0x140>
4001cb28:	e5900000 	ldr	r0, [r0]
4001cb2c:	e3500000 	cmp	r0, #0
4001cb30:	0a000009 	beq	4001cb5c <CyU3PUsbCreateDmaChannels+0xac>
4001cb34:	e3a01001 	mov	r1, #1
4001cb38:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cbec <CyU3PUsbCreateDmaChannels+0x13c>
4001cb3c:	ebffe274 	bl	40015514 <CyU3PDmaChannelCacheControl>
4001cb40:	e1a04000 	mov	r4, r0
4001cb44:	e3540000 	cmp	r4, #0
4001cb48:	0a000003 	beq	4001cb5c <CyU3PUsbCreateDmaChannels+0xac>
4001cb4c:	e59f0098 	ldr	r0, [pc, #152]	; 4001cbec <CyU3PUsbCreateDmaChannels+0x13c>
4001cb50:	ebffe4f9 	bl	40015f3c <CyU3PDmaChannelDestroy>
4001cb54:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb58:	eaffffef 	b	4001cb1c <CyU3PUsbCreateDmaChannels+0x6c>
4001cb5c:	e3a00b01 	mov	r0, #1024	; 0x400
4001cb60:	e1cd00b8 	strh	r0, [sp, #8]
4001cb64:	e3a00000 	mov	r0, #0
4001cb68:	e58d001c 	str	r0, [sp, #28]
4001cb6c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001cb70:	e1cd00ba 	strh	r0, [sp, #10]
4001cb74:	e28d2004 	add	r2, sp, #4
4001cb78:	e3a01003 	mov	r1, #3
4001cb7c:	e59f0070 	ldr	r0, [pc, #112]	; 4001cbf4 <CyU3PUsbCreateDmaChannels+0x144>
4001cb80:	ebffe3f3 	bl	40015b54 <CyU3PDmaChannelCreate>
4001cb84:	e1a04000 	mov	r4, r0
4001cb88:	e3540000 	cmp	r4, #0
4001cb8c:	0a000003 	beq	4001cba0 <CyU3PUsbCreateDmaChannels+0xf0>
4001cb90:	e59f0054 	ldr	r0, [pc, #84]	; 4001cbec <CyU3PUsbCreateDmaChannels+0x13c>
4001cb94:	ebffe4e8 	bl	40015f3c <CyU3PDmaChannelDestroy>
4001cb98:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb9c:	eaffffde 	b	4001cb1c <CyU3PUsbCreateDmaChannels+0x6c>
4001cba0:	e59f0048 	ldr	r0, [pc, #72]	; 4001cbf0 <CyU3PUsbCreateDmaChannels+0x140>
4001cba4:	e5900000 	ldr	r0, [r0]
4001cba8:	e3500000 	cmp	r0, #0
4001cbac:	0a00000b 	beq	4001cbe0 <CyU3PUsbCreateDmaChannels+0x130>
4001cbb0:	e3a01001 	mov	r1, #1
4001cbb4:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbf4 <CyU3PUsbCreateDmaChannels+0x144>
4001cbb8:	ebffe255 	bl	40015514 <CyU3PDmaChannelCacheControl>
4001cbbc:	e1a04000 	mov	r4, r0
4001cbc0:	e3540000 	cmp	r4, #0
4001cbc4:	0a000005 	beq	4001cbe0 <CyU3PUsbCreateDmaChannels+0x130>
4001cbc8:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbec <CyU3PUsbCreateDmaChannels+0x13c>
4001cbcc:	ebffe4da 	bl	40015f3c <CyU3PDmaChannelDestroy>
4001cbd0:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbf4 <CyU3PUsbCreateDmaChannels+0x144>
4001cbd4:	ebffe4d8 	bl	40015f3c <CyU3PDmaChannelDestroy>
4001cbd8:	e3a0004e 	mov	r0, #78	; 0x4e
4001cbdc:	eaffffce 	b	4001cb1c <CyU3PUsbCreateDmaChannels+0x6c>
4001cbe0:	e1a00004 	mov	r0, r4
4001cbe4:	eaffffcc 	b	4001cb1c <CyU3PUsbCreateDmaChannels+0x6c>
4001cbe8:	00003f01 	.word	0x00003f01
4001cbec:	40031a7c 	.word	0x40031a7c
4001cbf0:	40030c60 	.word	0x40030c60
4001cbf4:	40031b1c 	.word	0x40031b1c

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001cbf8 <CyU3PUsbEnableEpInterrupts>:
4001cbf8:	e200300f 	and	r3, r0, #15
4001cbfc:	e3100080 	tst	r0, #128	; 0x80
4001cc00:	0a00002a 	beq	4001ccb0 <CyU3PUsbEnableEpInterrupts+0xb8>
4001cc04:	e59fc150 	ldr	ip, [pc, #336]	; 4001cd5c <CyU3PUsbEnableEpInterrupts+0x164>
4001cc08:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc0c:	e3120901 	tst	r2, #16384	; 0x4000
4001cc10:	0a00000d 	beq	4001cc4c <CyU3PUsbEnableEpInterrupts+0x54>
4001cc14:	e3110001 	tst	r1, #1
4001cc18:	0a000000 	beq	4001cc20 <CyU3PUsbEnableEpInterrupts+0x28>
4001cc1c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cc20:	e3110002 	tst	r1, #2
4001cc24:	0a000000 	beq	4001cc2c <CyU3PUsbEnableEpInterrupts+0x34>
4001cc28:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cc2c:	e3110004 	tst	r1, #4
4001cc30:	0a000000 	beq	4001cc38 <CyU3PUsbEnableEpInterrupts+0x40>
4001cc34:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cc38:	e3110008 	tst	r1, #8
4001cc3c:	0a000000 	beq	4001cc44 <CyU3PUsbEnableEpInterrupts+0x4c>
4001cc40:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cc44:	e59fc110 	ldr	ip, [pc, #272]	; 4001cd5c <CyU3PUsbEnableEpInterrupts+0x164>
4001cc48:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cc4c:	e59fc10c 	ldr	ip, [pc, #268]	; 4001cd60 <CyU3PUsbEnableEpInterrupts+0x168>
4001cc50:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc54:	e3120001 	tst	r2, #1
4001cc58:	0a00003e 	beq	4001cd58 <CyU3PUsbEnableEpInterrupts+0x160>
4001cc5c:	e3110001 	tst	r1, #1
4001cc60:	0a000000 	beq	4001cc68 <CyU3PUsbEnableEpInterrupts+0x70>
4001cc64:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cc68:	e3110002 	tst	r1, #2
4001cc6c:	0a000000 	beq	4001cc74 <CyU3PUsbEnableEpInterrupts+0x7c>
4001cc70:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cc74:	e3110004 	tst	r1, #4
4001cc78:	0a000000 	beq	4001cc80 <CyU3PUsbEnableEpInterrupts+0x88>
4001cc7c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cc80:	e3110010 	tst	r1, #16
4001cc84:	0a000000 	beq	4001cc8c <CyU3PUsbEnableEpInterrupts+0x94>
4001cc88:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cc8c:	e3110020 	tst	r1, #32
4001cc90:	0a000000 	beq	4001cc98 <CyU3PUsbEnableEpInterrupts+0xa0>
4001cc94:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cc98:	e3110040 	tst	r1, #64	; 0x40
4001cc9c:	0a000000 	beq	4001cca4 <CyU3PUsbEnableEpInterrupts+0xac>
4001cca0:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cca4:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001cd60 <CyU3PUsbEnableEpInterrupts+0x168>
4001cca8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ccac:	ea000029 	b	4001cd58 <CyU3PUsbEnableEpInterrupts+0x160>
4001ccb0:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001cd64 <CyU3PUsbEnableEpInterrupts+0x16c>
4001ccb4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ccb8:	e3120901 	tst	r2, #16384	; 0x4000
4001ccbc:	0a00000d 	beq	4001ccf8 <CyU3PUsbEnableEpInterrupts+0x100>
4001ccc0:	e3110001 	tst	r1, #1
4001ccc4:	0a000000 	beq	4001cccc <CyU3PUsbEnableEpInterrupts+0xd4>
4001ccc8:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cccc:	e3110002 	tst	r1, #2
4001ccd0:	0a000000 	beq	4001ccd8 <CyU3PUsbEnableEpInterrupts+0xe0>
4001ccd4:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001ccd8:	e3110004 	tst	r1, #4
4001ccdc:	0a000000 	beq	4001cce4 <CyU3PUsbEnableEpInterrupts+0xec>
4001cce0:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cce4:	e3110008 	tst	r1, #8
4001cce8:	0a000000 	beq	4001ccf0 <CyU3PUsbEnableEpInterrupts+0xf8>
4001ccec:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001ccf0:	e59fc06c 	ldr	ip, [pc, #108]	; 4001cd64 <CyU3PUsbEnableEpInterrupts+0x16c>
4001ccf4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ccf8:	e59fc068 	ldr	ip, [pc, #104]	; 4001cd68 <CyU3PUsbEnableEpInterrupts+0x170>
4001ccfc:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cd00:	e3120001 	tst	r2, #1
4001cd04:	0a000013 	beq	4001cd58 <CyU3PUsbEnableEpInterrupts+0x160>
4001cd08:	e3110001 	tst	r1, #1
4001cd0c:	0a000000 	beq	4001cd14 <CyU3PUsbEnableEpInterrupts+0x11c>
4001cd10:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cd14:	e3110002 	tst	r1, #2
4001cd18:	0a000000 	beq	4001cd20 <CyU3PUsbEnableEpInterrupts+0x128>
4001cd1c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cd20:	e3110004 	tst	r1, #4
4001cd24:	0a000000 	beq	4001cd2c <CyU3PUsbEnableEpInterrupts+0x134>
4001cd28:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cd2c:	e3110010 	tst	r1, #16
4001cd30:	0a000000 	beq	4001cd38 <CyU3PUsbEnableEpInterrupts+0x140>
4001cd34:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cd38:	e3110020 	tst	r1, #32
4001cd3c:	0a000000 	beq	4001cd44 <CyU3PUsbEnableEpInterrupts+0x14c>
4001cd40:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cd44:	e3110040 	tst	r1, #64	; 0x40
4001cd48:	0a000000 	beq	4001cd50 <CyU3PUsbEnableEpInterrupts+0x158>
4001cd4c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cd50:	e59fc010 	ldr	ip, [pc, #16]	; 4001cd68 <CyU3PUsbEnableEpInterrupts+0x170>
4001cd54:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cd58:	e12fff1e 	bx	lr
4001cd5c:	e0031418 	.word	0xe0031418
4001cd60:	e0033500 	.word	0xe0033500
4001cd64:	e0031498 	.word	0xe0031498
4001cd68:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001cd6c <CyU3PUsbFlushEp>:
4001cd6c:	e92d4070 	push	{r4, r5, r6, lr}
4001cd70:	e1a04000 	mov	r4, r0
4001cd74:	e204507f 	and	r5, r4, #127	; 0x7f
4001cd78:	e59f00a8 	ldr	r0, [pc, #168]	; 4001ce28 <CyU3PUsbFlushEp+0xbc>
4001cd7c:	e5d00008 	ldrb	r0, [r0, #8]
4001cd80:	e3500000 	cmp	r0, #0
4001cd84:	1a000001 	bne	4001cd90 <CyU3PUsbFlushEp+0x24>
4001cd88:	e3a00042 	mov	r0, #66	; 0x42
4001cd8c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cd90:	e355000f 	cmp	r5, #15
4001cd94:	da000001 	ble	4001cda0 <CyU3PUsbFlushEp+0x34>
4001cd98:	e3a00040 	mov	r0, #64	; 0x40
4001cd9c:	eafffffa 	b	4001cd8c <CyU3PUsbFlushEp+0x20>
4001cda0:	e3e01000 	mvn	r1, #0
4001cda4:	e59f0080 	ldr	r0, [pc, #128]	; 4001ce2c <CyU3PUsbFlushEp+0xc0>
4001cda8:	ebffb545 	bl	4000a2c4 <_txe_mutex_get>
4001cdac:	e3140080 	tst	r4, #128	; 0x80
4001cdb0:	0a00000c 	beq	4001cde8 <CyU3PUsbFlushEp+0x7c>
4001cdb4:	e59f0074 	ldr	r0, [pc, #116]	; 4001ce30 <CyU3PUsbFlushEp+0xc4>
4001cdb8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdbc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cdc0:	e59f1068 	ldr	r1, [pc, #104]	; 4001ce30 <CyU3PUsbFlushEp+0xc4>
4001cdc4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdc8:	e3a0000a 	mov	r0, #10
4001cdcc:	ebffdabb 	bl	400138c0 <CyU3PBusyWait>
4001cdd0:	e59f0058 	ldr	r0, [pc, #88]	; 4001ce30 <CyU3PUsbFlushEp+0xc4>
4001cdd4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdd8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cddc:	e59f104c 	ldr	r1, [pc, #76]	; 4001ce30 <CyU3PUsbFlushEp+0xc4>
4001cde0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cde4:	ea00000b 	b	4001ce18 <CyU3PUsbFlushEp+0xac>
4001cde8:	e59f0044 	ldr	r0, [pc, #68]	; 4001ce34 <CyU3PUsbFlushEp+0xc8>
4001cdec:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdf0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cdf4:	e59f1038 	ldr	r1, [pc, #56]	; 4001ce34 <CyU3PUsbFlushEp+0xc8>
4001cdf8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdfc:	e3a0000a 	mov	r0, #10
4001ce00:	ebffdaae 	bl	400138c0 <CyU3PBusyWait>
4001ce04:	e59f0028 	ldr	r0, [pc, #40]	; 4001ce34 <CyU3PUsbFlushEp+0xc8>
4001ce08:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ce0c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001ce10:	e59f101c 	ldr	r1, [pc, #28]	; 4001ce34 <CyU3PUsbFlushEp+0xc8>
4001ce14:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ce18:	e59f000c 	ldr	r0, [pc, #12]	; 4001ce2c <CyU3PUsbFlushEp+0xc0>
4001ce1c:	ebffb55d 	bl	4000a398 <_txe_mutex_put>
4001ce20:	e3a00000 	mov	r0, #0
4001ce24:	eaffffd8 	b	4001cd8c <CyU3PUsbFlushEp+0x20>
4001ce28:	40031d40 	.word	0x40031d40
4001ce2c:	40031ee0 	.word	0x40031ee0
4001ce30:	e0031c40 	.word	0xe0031c40
4001ce34:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001ce38 <CyU3PUsbGetEP0Data>:
4001ce38:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001ce3c:	e1a04000 	mov	r4, r0
4001ce40:	e1a05001 	mov	r5, r1
4001ce44:	e1a06002 	mov	r6, r2
4001ce48:	e59f8198 	ldr	r8, [pc, #408]	; 4001cfe8 <CyU3PUsbGetEP0Data+0x1b0>
4001ce4c:	e59f0198 	ldr	r0, [pc, #408]	; 4001cfec <CyU3PUsbGetEP0Data+0x1b4>
4001ce50:	e5d00008 	ldrb	r0, [r0, #8]
4001ce54:	e3500000 	cmp	r0, #0
4001ce58:	1a000001 	bne	4001ce64 <CyU3PUsbGetEP0Data+0x2c>
4001ce5c:	e3a00042 	mov	r0, #66	; 0x42
4001ce60:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001ce64:	e3550000 	cmp	r5, #0
4001ce68:	1a000001 	bne	4001ce74 <CyU3PUsbGetEP0Data+0x3c>
4001ce6c:	e3a00040 	mov	r0, #64	; 0x40
4001ce70:	eafffffa 	b	4001ce60 <CyU3PUsbGetEP0Data+0x28>
4001ce74:	e3e01000 	mvn	r1, #0
4001ce78:	e59f0170 	ldr	r0, [pc, #368]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1b8>
4001ce7c:	ebffb510 	bl	4000a2c4 <_txe_mutex_get>
4001ce80:	e284000f 	add	r0, r4, #15
4001ce84:	e59f1168 	ldr	r1, [pc, #360]	; 4001cff4 <CyU3PUsbGetEP0Data+0x1bc>
4001ce88:	e0004001 	and	r4, r0, r1
4001ce8c:	e59f0164 	ldr	r0, [pc, #356]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce90:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ce94:	e3c00008 	bic	r0, r0, #8
4001ce98:	e59f1158 	ldr	r1, [pc, #344]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001ce9c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cea0:	e59f0144 	ldr	r0, [pc, #324]	; 4001cfec <CyU3PUsbGetEP0Data+0x1b4>
4001cea4:	e5900018 	ldr	r0, [r0, #24]
4001cea8:	e3500000 	cmp	r0, #0
4001ceac:	1a000002 	bne	4001cebc <CyU3PUsbGetEP0Data+0x84>
4001ceb0:	eb00005a 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ceb4:	e3500000 	cmp	r0, #0
4001ceb8:	0a000008 	beq	4001cee0 <CyU3PUsbGetEP0Data+0xa8>
4001cebc:	e59f0134 	ldr	r0, [pc, #308]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001cec0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cec4:	e3800008 	orr	r0, r0, #8
4001cec8:	e59f1128 	ldr	r1, [pc, #296]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001cecc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ced0:	e59f0118 	ldr	r0, [pc, #280]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1b8>
4001ced4:	ebffb52f 	bl	4000a398 <_txe_mutex_put>
4001ced8:	e3a00051 	mov	r0, #81	; 0x51
4001cedc:	eaffffdf 	b	4001ce60 <CyU3PUsbGetEP0Data+0x28>
4001cee0:	e59f0110 	ldr	r0, [pc, #272]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001cee4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cee8:	e3800008 	orr	r0, r0, #8
4001ceec:	e59f1104 	ldr	r1, [pc, #260]	; 4001cff8 <CyU3PUsbGetEP0Data+0x1c0>
4001cef0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cef4:	eb00062a 	bl	4001e7a4 <GetUsbLinkActive>
4001cef8:	e1cd40b6 	strh	r4, [sp, #6]
4001cefc:	e58d5000 	str	r5, [sp]
4001cf00:	e3a00000 	mov	r0, #0
4001cf04:	e1cd00b8 	strh	r0, [sp, #8]
4001cf08:	e1a0100d 	mov	r1, sp
4001cf0c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cffc <CyU3PUsbGetEP0Data+0x1c4>
4001cf10:	ebffe75f 	bl	40016c94 <CyU3PDmaChannelSetupRecvBuffer>
4001cf14:	e20070ff 	and	r7, r0, #255	; 0xff
4001cf18:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1b8>
4001cf1c:	ebffb51d 	bl	4000a398 <_txe_mutex_put>
4001cf20:	e3570000 	cmp	r7, #0
4001cf24:	1a00002d 	bne	4001cfe0 <CyU3PUsbGetEP0Data+0x1a8>
4001cf28:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cfec <CyU3PUsbGetEP0Data+0x1b4>
4001cf2c:	e5900014 	ldr	r0, [r0, #20]
4001cf30:	e3500000 	cmp	r0, #0
4001cf34:	0a000000 	beq	4001cf3c <CyU3PUsbGetEP0Data+0x104>
4001cf38:	ebfffe93 	bl	4001c98c <CyU3PUsbAckSetup>
4001cf3c:	ea00000e 	b	4001cf7c <CyU3PUsbGetEP0Data+0x144>
4001cf40:	e3a02064 	mov	r2, #100	; 0x64
4001cf44:	e1a0100d 	mov	r1, sp
4001cf48:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cffc <CyU3PUsbGetEP0Data+0x1c4>
4001cf4c:	ebffe8b2 	bl	4001721c <CyU3PDmaChannelWaitForRecvBuffer>
4001cf50:	e20070ff 	and	r7, r0, #255	; 0xff
4001cf54:	e3570045 	cmp	r7, #69	; 0x45
4001cf58:	1a000006 	bne	4001cf78 <CyU3PUsbGetEP0Data+0x140>
4001cf5c:	eb00002f 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cf60:	e3500000 	cmp	r0, #0
4001cf64:	0a000001 	beq	4001cf70 <CyU3PUsbGetEP0Data+0x138>
4001cf68:	e3a00051 	mov	r0, #81	; 0x51
4001cf6c:	eaffffbb 	b	4001ce60 <CyU3PUsbGetEP0Data+0x28>
4001cf70:	e2488064 	sub	r8, r8, #100	; 0x64
4001cf74:	ea000000 	b	4001cf7c <CyU3PUsbGetEP0Data+0x144>
4001cf78:	ea000001 	b	4001cf84 <CyU3PUsbGetEP0Data+0x14c>
4001cf7c:	e3580000 	cmp	r8, #0
4001cf80:	1affffee 	bne	4001cf40 <CyU3PUsbGetEP0Data+0x108>
4001cf84:	e1a00000 	nop			; (mov r0, r0)
4001cf88:	e3570000 	cmp	r7, #0
4001cf8c:	0a00000f 	beq	4001cfd0 <CyU3PUsbGetEP0Data+0x198>
4001cf90:	e3e01000 	mvn	r1, #0
4001cf94:	e59f0054 	ldr	r0, [pc, #84]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1b8>
4001cf98:	ebffb4c9 	bl	4000a2c4 <_txe_mutex_get>
4001cf9c:	e3a01001 	mov	r1, #1
4001cfa0:	e3a00000 	mov	r0, #0
4001cfa4:	eb000376 	bl	4001dd84 <CyU3PUsbSetEpNak>
4001cfa8:	e3a00064 	mov	r0, #100	; 0x64
4001cfac:	ebffda43 	bl	400138c0 <CyU3PBusyWait>
4001cfb0:	e59f0044 	ldr	r0, [pc, #68]	; 4001cffc <CyU3PUsbGetEP0Data+0x1c4>
4001cfb4:	ebffe57b 	bl	400165a8 <CyU3PDmaChannelReset>
4001cfb8:	e3a01000 	mov	r1, #0
4001cfbc:	e1a00001 	mov	r0, r1
4001cfc0:	eb00036f 	bl	4001dd84 <CyU3PUsbSetEpNak>
4001cfc4:	e59f0024 	ldr	r0, [pc, #36]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1b8>
4001cfc8:	ebffb4f2 	bl	4000a398 <_txe_mutex_put>
4001cfcc:	ea000003 	b	4001cfe0 <CyU3PUsbGetEP0Data+0x1a8>
4001cfd0:	e3560000 	cmp	r6, #0
4001cfd4:	0a000001 	beq	4001cfe0 <CyU3PUsbGetEP0Data+0x1a8>
4001cfd8:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cfdc:	e1c600b0 	strh	r0, [r6]
4001cfe0:	e1a00007 	mov	r0, r7
4001cfe4:	eaffff9d 	b	4001ce60 <CyU3PUsbGetEP0Data+0x28>
4001cfe8:	00001388 	.word	0x00001388
4001cfec:	40031d40 	.word	0x40031d40
4001cff0:	40031ee0 	.word	0x40031ee0
4001cff4:	0000fff0 	.word	0x0000fff0
4001cff8:	e0031000 	.word	0xe0031000
4001cffc:	40031b1c 	.word	0x40031b1c

Disassembly of section i.CyU3PUsbGetSpeed:

4001d000 <CyU3PUsbGetSpeed>:
4001d000:	e59f0004 	ldr	r0, [pc, #4]	; 4001d00c <CyU3PUsbGetSpeed+0xc>
4001d004:	e5d00009 	ldrb	r0, [r0, #9]
4001d008:	e12fff1e 	bx	lr
4001d00c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001d010 <CyU3PUsbHostIsStarted>:
4001d010:	e59f0004 	ldr	r0, [pc, #4]	; 4001d01c <CyU3PUsbHostIsStarted+0xc>
4001d014:	e5900000 	ldr	r0, [r0]
4001d018:	e12fff1e 	bx	lr
4001d01c:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001d020:	e59f0038 	ldr	r0, [pc, #56]	; 4001d060 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001d024:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001d028:	e3500000 	cmp	r0, #0
4001d02c:	1a000007 	bne	4001d050 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d030:	e59f002c 	ldr	r0, [pc, #44]	; 4001d064 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001d034:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001d038:	e3100040 	tst	r0, #64	; 0x40
4001d03c:	1a000003 	bne	4001d050 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d040:	e59f0020 	ldr	r0, [pc, #32]	; 4001d068 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001d044:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001d048:	e3100c02 	tst	r0, #512	; 0x200
4001d04c:	0a000001 	beq	4001d058 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001d050:	e3a00001 	mov	r0, #1
4001d054:	e12fff1e 	bx	lr
4001d058:	e3a00000 	mov	r0, #0
4001d05c:	eafffffc 	b	4001d054 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001d060:	40031d40 	.word	0x40031d40
4001d064:	e0031000 	.word	0xe0031000
4001d068:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001d06c <CyU3PUsbLoadBootloaderDescs>:
4001d06c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d070:	e1a04000 	mov	r4, r0
4001d074:	e3a06000 	mov	r6, #0
4001d078:	e5940008 	ldr	r0, [r4, #8]
4001d07c:	e20070ff 	and	r7, r0, #255	; 0xff
4001d080:	e1a00000 	nop			; (mov r0, r0)
4001d084:	ea00000f 	b	4001d0c8 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001d088:	e2843010 	add	r3, r4, #16
4001d08c:	e0833186 	add	r3, r3, r6, lsl #3
4001d090:	e5932004 	ldr	r2, [r3, #4]
4001d094:	e2843010 	add	r3, r4, #16
4001d098:	e0833186 	add	r3, r3, r6, lsl #3
4001d09c:	e5d31001 	ldrb	r1, [r3, #1]
4001d0a0:	e2843010 	add	r3, r4, #16
4001d0a4:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001d0a8:	eb0002bf 	bl	4001dbac <CyU3PUsbSetDesc>
4001d0ac:	e1a05000 	mov	r5, r0
4001d0b0:	e3550000 	cmp	r5, #0
4001d0b4:	0a000001 	beq	4001d0c0 <CyU3PUsbLoadBootloaderDescs+0x54>
4001d0b8:	e1a00005 	mov	r0, r5
4001d0bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001d0c0:	e2860001 	add	r0, r6, #1
4001d0c4:	e20060ff 	and	r6, r0, #255	; 0xff
4001d0c8:	e1560007 	cmp	r6, r7
4001d0cc:	baffffed 	blt	4001d088 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001d0d0:	e3a00000 	mov	r0, #0
4001d0d4:	eafffff8 	b	4001d0bc <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001d0d8 <CyU3PUsbMapStream>:
4001d0d8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d0dc:	e1a03000 	mov	r3, r0
4001d0e0:	e203c07f 	and	ip, r3, #127	; 0x7f
4001d0e4:	e59f005c 	ldr	r0, [pc, #92]	; 4001d148 <CyU3PUsbMapStream+0x70>
4001d0e8:	e5d00008 	ldrb	r0, [r0, #8]
4001d0ec:	e3500000 	cmp	r0, #0
4001d0f0:	1a000001 	bne	4001d0fc <CyU3PUsbMapStream+0x24>
4001d0f4:	e3a00042 	mov	r0, #66	; 0x42
4001d0f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d0fc:	e35c000f 	cmp	ip, #15
4001d100:	da000001 	ble	4001d10c <CyU3PUsbMapStream+0x34>
4001d104:	e3a00040 	mov	r0, #64	; 0x40
4001d108:	eafffffa 	b	4001d0f8 <CyU3PUsbMapStream+0x20>
4001d10c:	e3130080 	tst	r3, #128	; 0x80
4001d110:	0a000005 	beq	4001d12c <CyU3PUsbMapStream+0x54>
4001d114:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d118:	e180080c 	orr	r0, r0, ip, lsl #16
4001d11c:	e1800002 	orr	r0, r0, r2
4001d120:	e59fe024 	ldr	lr, [pc, #36]	; 4001d14c <CyU3PUsbMapStream+0x74>
4001d124:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d128:	ea000004 	b	4001d140 <CyU3PUsbMapStream+0x68>
4001d12c:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d130:	e180080c 	orr	r0, r0, ip, lsl #16
4001d134:	e1800002 	orr	r0, r0, r2
4001d138:	e59fe010 	ldr	lr, [pc, #16]	; 4001d150 <CyU3PUsbMapStream+0x78>
4001d13c:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d140:	e3a00000 	mov	r0, #0
4001d144:	eaffffeb 	b	4001d0f8 <CyU3PUsbMapStream+0x20>
4001d148:	40031d40 	.word	0x40031d40
4001d14c:	e00335c0 	.word	0xe00335c0
4001d150:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001d154 <CyU3PUsbOtgVbusChangeHandler>:
4001d154:	e92d4010 	push	{r4, lr}
4001d158:	e3a04000 	mov	r4, #0
4001d15c:	e59f0094 	ldr	r0, [pc, #148]	; 4001d1f8 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d160:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001d164:	e3500000 	cmp	r0, #0
4001d168:	0a000005 	beq	4001d184 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001d16c:	e59f0088 	ldr	r0, [pc, #136]	; 4001d1fc <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001d170:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001d174:	e59f107c 	ldr	r1, [pc, #124]	; 4001d1f8 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d178:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001d17c:	e1100001 	tst	r0, r1
4001d180:	0a000008 	beq	4001d1a8 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001d184:	e3a04001 	mov	r4, #1
4001d188:	e3a00018 	mov	r0, #24
4001d18c:	e59f106c 	ldr	r1, [pc, #108]	; 4001d200 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d190:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d194:	e1c10000 	bic	r0, r1, r0
4001d198:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d19c:	e3c00018 	bic	r0, r0, #24
4001d1a0:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d1a4:	ea000009 	b	4001d1d0 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d1a8:	ebfffbb2 	bl	4001c078 <CyU3POtgIsHostMode>
4001d1ac:	e3500000 	cmp	r0, #0
4001d1b0:	0a000006 	beq	4001d1d0 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d1b4:	e3a00018 	mov	r0, #24
4001d1b8:	e59f1040 	ldr	r1, [pc, #64]	; 4001d200 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d1bc:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d1c0:	e1c10000 	bic	r0, r1, r0
4001d1c4:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d1c8:	e3800018 	orr	r0, r0, #24
4001d1cc:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d1d0:	e59f002c 	ldr	r0, [pc, #44]	; 4001d204 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d1d4:	e5900004 	ldr	r0, [r0, #4]
4001d1d8:	e3500000 	cmp	r0, #0
4001d1dc:	0a000004 	beq	4001d1f4 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001d1e0:	e59f001c 	ldr	r0, [pc, #28]	; 4001d204 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d1e4:	e1a01004 	mov	r1, r4
4001d1e8:	e5902004 	ldr	r2, [r0, #4]
4001d1ec:	e3a00002 	mov	r0, #2
4001d1f0:	e12fff32 	blx	r2
4001d1f4:	e8bd8010 	pop	{r4, pc}
4001d1f8:	40031d40 	.word	0x40031d40
4001d1fc:	e0051000 	.word	0xe0051000
4001d200:	e0031000 	.word	0xe0031000
4001d204:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3PUsbPhyDisable:

4001d208 <CyU3PUsbPhyDisable>:
4001d208:	e92d4010 	push	{r4, lr}
4001d20c:	e1a04000 	mov	r4, r0
4001d210:	e2841003 	add	r1, r4, #3
4001d214:	e20100ff 	and	r0, r1, #255	; 0xff
4001d218:	eb000af4 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
4001d21c:	e3a00000 	mov	r0, #0
4001d220:	e59f1184 	ldr	r1, [pc, #388]	; 4001d3ac <CyU3PUsbPhyDisable+0x1a4>
4001d224:	e5810000 	str	r0, [r1]
4001d228:	e59f0180 	ldr	r0, [pc, #384]	; 4001d3b0 <CyU3PUsbPhyDisable+0x1a8>
4001d22c:	ebffb706 	bl	4000ae4c <_txe_timer_deactivate>
4001d230:	e3a00008 	mov	r0, #8
4001d234:	eb00141f 	bl	400222b8 <CyU3PVicDisableInt>
4001d238:	e59f0174 	ldr	r0, [pc, #372]	; 4001d3b4 <CyU3PUsbPhyDisable+0x1ac>
4001d23c:	e5900004 	ldr	r0, [r0, #4]
4001d240:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001d244:	e59f1168 	ldr	r1, [pc, #360]	; 4001d3b4 <CyU3PUsbPhyDisable+0x1ac>
4001d248:	e5810004 	str	r0, [r1, #4]
4001d24c:	e3e00000 	mvn	r0, #0
4001d250:	e0411600 	sub	r1, r1, r0, lsl #12
4001d254:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d258:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d25c:	e59f0154 	ldr	r0, [pc, #340]	; 4001d3b8 <CyU3PUsbPhyDisable+0x1b0>
4001d260:	ebffe4d0 	bl	400165a8 <CyU3PDmaChannelReset>
4001d264:	e59f0150 	ldr	r0, [pc, #336]	; 4001d3bc <CyU3PUsbPhyDisable+0x1b4>
4001d268:	ebffe4ce 	bl	400165a8 <CyU3PDmaChannelReset>
4001d26c:	e3540000 	cmp	r4, #0
4001d270:	0a00002b 	beq	4001d324 <CyU3PUsbPhyDisable+0x11c>
4001d274:	e3a00001 	mov	r0, #1
4001d278:	e59f1140 	ldr	r1, [pc, #320]	; 4001d3c0 <CyU3PUsbPhyDisable+0x1b8>
4001d27c:	e5810060 	str	r0, [r1, #96]	; 0x60
4001d280:	ebffb630 	bl	4000ab48 <_txe_thread_relinquish>
4001d284:	e3e00000 	mvn	r0, #0
4001d288:	e59f1134 	ldr	r1, [pc, #308]	; 4001d3c4 <CyU3PUsbPhyDisable+0x1bc>
4001d28c:	e5810004 	str	r0, [r1, #4]
4001d290:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d294:	e0010000 	and	r0, r1, r0
4001d298:	e5900014 	ldr	r0, [r0, #20]
4001d29c:	e59f1124 	ldr	r1, [pc, #292]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1c0>
4001d2a0:	e5810000 	str	r0, [r1]
4001d2a4:	e3a00000 	mov	r0, #0
4001d2a8:	e59f111c 	ldr	r1, [pc, #284]	; 4001d3cc <CyU3PUsbPhyDisable+0x1c4>
4001d2ac:	e5810000 	str	r0, [r1]
4001d2b0:	e3a01000 	mov	r1, #0
4001d2b4:	e59f0114 	ldr	r0, [pc, #276]	; 4001d3d0 <CyU3PUsbPhyDisable+0x1c8>
4001d2b8:	eb00146e 	bl	40022478 <CyFx3UsbWritePhyReg>
4001d2bc:	e3a01002 	mov	r1, #2
4001d2c0:	e1a00001 	mov	r0, r1
4001d2c4:	ebfffd1d 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001d2c8:	e3a00002 	mov	r0, #2
4001d2cc:	ebffd97b 	bl	400138c0 <CyU3PBusyWait>
4001d2d0:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d2d4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2d8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d2dc:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d2e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2e4:	e3a00002 	mov	r0, #2
4001d2e8:	ebffd974 	bl	400138c0 <CyU3PBusyWait>
4001d2ec:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d2f0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2f4:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001d2f8:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d2fc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d300:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001d304:	e590001c 	ldr	r0, [r0, #28]
4001d308:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001d30c:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001d310:	e581001c 	str	r0, [r1, #28]
4001d314:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d3d8 <CyU3PUsbPhyDisable+0x1d0>
4001d318:	e5900000 	ldr	r0, [r0]
4001d31c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d320:	ea00000e 	b	4001d360 <CyU3PUsbPhyDisable+0x158>
4001d324:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d328:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d32c:	e3800008 	orr	r0, r0, #8
4001d330:	e59f109c 	ldr	r1, [pc, #156]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d334:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d338:	e3a01002 	mov	r1, #2
4001d33c:	e1a00001 	mov	r0, r1
4001d340:	ebfffcfe 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001d344:	e3a00002 	mov	r0, #2
4001d348:	ebffd95c 	bl	400138c0 <CyU3PBusyWait>
4001d34c:	e59f0080 	ldr	r0, [pc, #128]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d350:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d354:	e2000001 	and	r0, r0, #1
4001d358:	e59f1074 	ldr	r1, [pc, #116]	; 4001d3d4 <CyU3PUsbPhyDisable+0x1cc>
4001d35c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d360:	e59f0074 	ldr	r0, [pc, #116]	; 4001d3dc <CyU3PUsbPhyDisable+0x1d4>
4001d364:	e5900000 	ldr	r0, [r0]
4001d368:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d36c:	e59f1068 	ldr	r1, [pc, #104]	; 4001d3dc <CyU3PUsbPhyDisable+0x1d4>
4001d370:	e5810000 	str	r0, [r1]
4001d374:	e3a00000 	mov	r0, #0
4001d378:	e59f1040 	ldr	r1, [pc, #64]	; 4001d3c0 <CyU3PUsbPhyDisable+0x1b8>
4001d37c:	e5c10009 	strb	r0, [r1, #9]
4001d380:	ebfffb6c 	bl	4001c138 <CyU3POtgIsStarted>
4001d384:	e3500000 	cmp	r0, #0
4001d388:	0a000006 	beq	4001d3a8 <CyU3PUsbPhyDisable+0x1a0>
4001d38c:	e3a00064 	mov	r0, #100	; 0x64
4001d390:	ebffd94a 	bl	400138c0 <CyU3PBusyWait>
4001d394:	e59f0040 	ldr	r0, [pc, #64]	; 4001d3dc <CyU3PUsbPhyDisable+0x1d4>
4001d398:	e5900000 	ldr	r0, [r0]
4001d39c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d3a0:	e59f1034 	ldr	r1, [pc, #52]	; 4001d3dc <CyU3PUsbPhyDisable+0x1d4>
4001d3a4:	e5810000 	str	r0, [r1]
4001d3a8:	e8bd8010 	pop	{r4, pc}
4001d3ac:	40030db0 	.word	0x40030db0
4001d3b0:	400326a0 	.word	0x400326a0
4001d3b4:	e0030000 	.word	0xe0030000
4001d3b8:	40031a7c 	.word	0x40031a7c
4001d3bc:	40031b1c 	.word	0x40031b1c
4001d3c0:	40031d40 	.word	0x40031d40
4001d3c4:	e0033000 	.word	0xe0033000
4001d3c8:	40030d84 	.word	0x40030d84
4001d3cc:	40030db4 	.word	0x40030db4
4001d3d0:	00001005 	.word	0x00001005
4001d3d4:	e0031000 	.word	0xe0031000
4001d3d8:	40030c58 	.word	0x40030c58
4001d3dc:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d3e0 <CyU3PUsbPhyEnable>:
4001d3e0:	e92d4070 	push	{r4, r5, r6, lr}
4001d3e4:	e1a04000 	mov	r4, r0
4001d3e8:	e2841005 	add	r1, r4, #5
4001d3ec:	e20100ff 	and	r0, r1, #255	; 0xff
4001d3f0:	eb000a7e 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
4001d3f4:	e3e00000 	mvn	r0, #0
4001d3f8:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d3fc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d400:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d404:	e3a00008 	mov	r0, #8
4001d408:	eb0013af 	bl	400222cc <CyU3PVicEnableInt>
4001d40c:	e3a00009 	mov	r0, #9
4001d410:	eb0013ad 	bl	400222cc <CyU3PVicEnableInt>
4001d414:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d6bc <CyU3PUsbPhyEnable+0x2dc>
4001d418:	e5900004 	ldr	r0, [r0, #4]
4001d41c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d420:	e59f1294 	ldr	r1, [pc, #660]	; 4001d6bc <CyU3PUsbPhyEnable+0x2dc>
4001d424:	e5810004 	str	r0, [r1, #4]
4001d428:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d42c:	e5900000 	ldr	r0, [r0]
4001d430:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d434:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d438:	e5810000 	str	r0, [r1]
4001d43c:	e3540000 	cmp	r4, #0
4001d440:	0a000069 	beq	4001d5ec <CyU3PUsbPhyEnable+0x20c>
4001d444:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d448:	e5900014 	ldr	r0, [r0, #20]
4001d44c:	e59f126c 	ldr	r1, [pc, #620]	; 4001d6c0 <CyU3PUsbPhyEnable+0x2e0>
4001d450:	e5810000 	str	r0, [r1]
4001d454:	e3a00000 	mov	r0, #0
4001d458:	e59f1264 	ldr	r1, [pc, #612]	; 4001d6c4 <CyU3PUsbPhyEnable+0x2e4>
4001d45c:	e5810000 	str	r0, [r1]
4001d460:	e3e00000 	mvn	r0, #0
4001d464:	e59f125c 	ldr	r1, [pc, #604]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d468:	e5810004 	str	r0, [r1, #4]
4001d46c:	e59f0258 	ldr	r0, [pc, #600]	; 4001d6cc <CyU3PUsbPhyEnable+0x2ec>
4001d470:	e5810008 	str	r0, [r1, #8]
4001d474:	e3e00000 	mvn	r0, #0
4001d478:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d47c:	e59f024c 	ldr	r0, [pc, #588]	; 4001d6d0 <CyU3PUsbPhyEnable+0x2f0>
4001d480:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d484:	e59f0248 	ldr	r0, [pc, #584]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d488:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d48c:	e3500000 	cmp	r0, #0
4001d490:	0a000003 	beq	4001d4a4 <CyU3PUsbPhyEnable+0xc4>
4001d494:	e1a00001 	mov	r0, r1
4001d498:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d49c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d4a0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d4a4:	e3a00000 	mov	r0, #0
4001d4a8:	e59f1224 	ldr	r1, [pc, #548]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d4ac:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d4b0:	e59f0220 	ldr	r0, [pc, #544]	; 4001d6d8 <CyU3PUsbPhyEnable+0x2f8>
4001d4b4:	e5900000 	ldr	r0, [r0]
4001d4b8:	e3500000 	cmp	r0, #0
4001d4bc:	0a000003 	beq	4001d4d0 <CyU3PUsbPhyEnable+0xf0>
4001d4c0:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d4c4:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d4c8:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d4cc:	ea000002 	b	4001d4dc <CyU3PUsbPhyEnable+0xfc>
4001d4d0:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d4d4:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d4d8:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d4dc:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d6dc <CyU3PUsbPhyEnable+0x2fc>
4001d4e0:	e5900000 	ldr	r0, [r0]
4001d4e4:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d4e8:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d4ec:	eb00139b 	bl	40022360 <CyFx3Usb3LnkSetup>
4001d4f0:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d6e0 <CyU3PUsbPhyEnable+0x300>
4001d4f4:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d4f8:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d4fc:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d500:	e1c10000 	bic	r0, r1, r0
4001d504:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d508:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d50c:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d510:	e3a00000 	mov	r0, #0
4001d514:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d518:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d51c:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d520:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d524:	e581001c 	str	r0, [r1, #28]
4001d528:	e3a01002 	mov	r1, #2
4001d52c:	e1a00001 	mov	r0, r1
4001d530:	ebfffc82 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001d534:	eb00135b 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
4001d538:	e1a05000 	mov	r5, r0
4001d53c:	e3a00000 	mov	r0, #0
4001d540:	e59f119c 	ldr	r1, [pc, #412]	; 4001d6e4 <CyU3PUsbPhyEnable+0x304>
4001d544:	e5810000 	str	r0, [r1]
4001d548:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d54c:	e59f1174 	ldr	r1, [pc, #372]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d550:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d554:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d558:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d55c:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d560:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d564:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d568:	e3a00064 	mov	r0, #100	; 0x64
4001d56c:	ebffd8d3 	bl	400138c0 <CyU3PBusyWait>
4001d570:	e59f0150 	ldr	r0, [pc, #336]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d574:	e5900000 	ldr	r0, [r0]
4001d578:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d57c:	e59f1144 	ldr	r1, [pc, #324]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d580:	e5810000 	str	r0, [r1]
4001d584:	e59f015c 	ldr	r0, [pc, #348]	; 4001d6e8 <CyU3PUsbPhyEnable+0x308>
4001d588:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d58c:	e3a01080 	mov	r1, #128	; 0x80
4001d590:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d594:	eb0013b7 	bl	40022478 <CyFx3UsbWritePhyReg>
4001d598:	e3a01d06 	mov	r1, #384	; 0x180
4001d59c:	e59f0148 	ldr	r0, [pc, #328]	; 4001d6ec <CyU3PUsbPhyEnable+0x30c>
4001d5a0:	eb0013b4 	bl	40022478 <CyFx3UsbWritePhyReg>
4001d5a4:	e3a01080 	mov	r1, #128	; 0x80
4001d5a8:	e59f0140 	ldr	r0, [pc, #320]	; 4001d6f0 <CyU3PUsbPhyEnable+0x310>
4001d5ac:	eb0013b1 	bl	40022478 <CyFx3UsbWritePhyReg>
4001d5b0:	e1a00005 	mov	r0, r5
4001d5b4:	eb001349 	bl	400222e0 <CyU3PVicEnableInterrupts>
4001d5b8:	e59f0108 	ldr	r0, [pc, #264]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d5bc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d5c0:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d5c4:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2e8>
4001d5c8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d5cc:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d5d0:	e581001c 	str	r0, [r1, #28]
4001d5d4:	e3a00064 	mov	r0, #100	; 0x64
4001d5d8:	ebffd8b8 	bl	400138c0 <CyU3PBusyWait>
4001d5dc:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d5e0:	e59f110c 	ldr	r1, [pc, #268]	; 4001d6f4 <CyU3PUsbPhyEnable+0x314>
4001d5e4:	e5810008 	str	r0, [r1, #8]
4001d5e8:	ea000031 	b	4001d6b4 <CyU3PUsbPhyEnable+0x2d4>
4001d5ec:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d5f0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d5f4:	e3500000 	cmp	r0, #0
4001d5f8:	0a000000 	beq	4001d600 <CyU3PUsbPhyEnable+0x220>
4001d5fc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d600:	e3a00001 	mov	r0, #1
4001d604:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d608:	e5c10009 	strb	r0, [r1, #9]
4001d60c:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d610:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d6f8 <CyU3PUsbPhyEnable+0x318>
4001d614:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d618:	e3a00000 	mov	r0, #0
4001d61c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d6d4 <CyU3PUsbPhyEnable+0x2f4>
4001d620:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d624:	e59f008c 	ldr	r0, [pc, #140]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d628:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d62c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d630:	e59f1080 	ldr	r1, [pc, #128]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d634:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d638:	e1a00001 	mov	r0, r1
4001d63c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d640:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d644:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d648:	e3a00002 	mov	r0, #2
4001d64c:	ebffd89b 	bl	400138c0 <CyU3PBusyWait>
4001d650:	e59f0060 	ldr	r0, [pc, #96]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d654:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d658:	e2000001 	and	r0, r0, #1
4001d65c:	e59f1054 	ldr	r1, [pc, #84]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d660:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d664:	e1a00001 	mov	r0, r1
4001d668:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d66c:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d670:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d674:	e3a00064 	mov	r0, #100	; 0x64
4001d678:	ebffd890 	bl	400138c0 <CyU3PBusyWait>
4001d67c:	eb00132b 	bl	40022330 <CyFx3Usb2PhySetup>
4001d680:	e59f0074 	ldr	r0, [pc, #116]	; 4001d6fc <CyU3PUsbPhyEnable+0x31c>
4001d684:	e59f102c 	ldr	r1, [pc, #44]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d688:	e5810008 	str	r0, [r1, #8]
4001d68c:	e3a00050 	mov	r0, #80	; 0x50
4001d690:	ebffd88a 	bl	400138c0 <CyU3PBusyWait>
4001d694:	e3a01000 	mov	r1, #0
4001d698:	e3a00002 	mov	r0, #2
4001d69c:	ebfffc27 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001d6a0:	e59f0010 	ldr	r0, [pc, #16]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d6a4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d6a8:	e3c00008 	bic	r0, r0, #8
4001d6ac:	e59f1004 	ldr	r1, [pc, #4]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2d8>
4001d6b0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d6b4:	eaffffd0 	b	4001d5fc <CyU3PUsbPhyEnable+0x21c>
4001d6b8:	e0031000 	.word	0xe0031000
4001d6bc:	e0030000 	.word	0xe0030000
4001d6c0:	40030d84 	.word	0x40030d84
4001d6c4:	40030db4 	.word	0x40030db4
4001d6c8:	e0033000 	.word	0xe0033000
4001d6cc:	00038081 	.word	0x00038081
4001d6d0:	00004a3d 	.word	0x00004a3d
4001d6d4:	40031d40 	.word	0x40031d40
4001d6d8:	40030d40 	.word	0x40030d40
4001d6dc:	40030d8c 	.word	0x40030d8c
4001d6e0:	00000908 	.word	0x00000908
4001d6e4:	40030d74 	.word	0x40030d74
4001d6e8:	00310418 	.word	0x00310418
4001d6ec:	00001006 	.word	0x00001006
4001d6f0:	00001024 	.word	0x00001024
4001d6f4:	e0052000 	.word	0xe0052000
4001d6f8:	e0032000 	.word	0xe0032000
4001d6fc:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d700 <CyU3PUsbPowerOn>:
4001d700:	e92d4010 	push	{r4, lr}
4001d704:	eb00133b 	bl	400223f8 <CyFx3UsbPowerOn>
4001d708:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d70c <CyU3PUsbResetEp>:
4001d70c:	e92d4070 	push	{r4, r5, r6, lr}
4001d710:	e1a04000 	mov	r4, r0
4001d714:	e204507f 	and	r5, r4, #127	; 0x7f
4001d718:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d7dc <CyU3PUsbResetEp+0xd0>
4001d71c:	e5d00008 	ldrb	r0, [r0, #8]
4001d720:	e3500000 	cmp	r0, #0
4001d724:	1a000001 	bne	4001d730 <CyU3PUsbResetEp+0x24>
4001d728:	e3a00042 	mov	r0, #66	; 0x42
4001d72c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d730:	e355000f 	cmp	r5, #15
4001d734:	da000001 	ble	4001d740 <CyU3PUsbResetEp+0x34>
4001d738:	e3a00040 	mov	r0, #64	; 0x40
4001d73c:	eafffffa 	b	4001d72c <CyU3PUsbResetEp+0x20>
4001d740:	e3e01000 	mvn	r1, #0
4001d744:	e59f0094 	ldr	r0, [pc, #148]	; 4001d7e0 <CyU3PUsbResetEp+0xd4>
4001d748:	ebffb2dd 	bl	4000a2c4 <_txe_mutex_get>
4001d74c:	ebfffe2b 	bl	4001d000 <CyU3PUsbGetSpeed>
4001d750:	e3500003 	cmp	r0, #3
4001d754:	1a00001c 	bne	4001d7cc <CyU3PUsbResetEp+0xc0>
4001d758:	e59f0084 	ldr	r0, [pc, #132]	; 4001d7e4 <CyU3PUsbResetEp+0xd8>
4001d75c:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d760:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d764:	e59f1078 	ldr	r1, [pc, #120]	; 4001d7e4 <CyU3PUsbResetEp+0xd8>
4001d768:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d76c:	e3140080 	tst	r4, #128	; 0x80
4001d770:	0a00000a 	beq	4001d7a0 <CyU3PUsbResetEp+0x94>
4001d774:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d778:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d77c:	e3866011 	orr	r6, r6, #17
4001d780:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d784:	e3a00002 	mov	r0, #2
4001d788:	ebffd84c 	bl	400138c0 <CyU3PBusyWait>
4001d78c:	e3c60010 	bic	r0, r6, #16
4001d790:	e3806001 	orr	r6, r0, #1
4001d794:	e59f004c 	ldr	r0, [pc, #76]	; 4001d7e8 <CyU3PUsbResetEp+0xdc>
4001d798:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d79c:	ea00000a 	b	4001d7cc <CyU3PUsbResetEp+0xc0>
4001d7a0:	e59f0044 	ldr	r0, [pc, #68]	; 4001d7ec <CyU3PUsbResetEp+0xe0>
4001d7a4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d7a8:	e3806011 	orr	r6, r0, #17
4001d7ac:	e59f0038 	ldr	r0, [pc, #56]	; 4001d7ec <CyU3PUsbResetEp+0xe0>
4001d7b0:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d7b4:	e3a00002 	mov	r0, #2
4001d7b8:	ebffd840 	bl	400138c0 <CyU3PBusyWait>
4001d7bc:	e3c60010 	bic	r0, r6, #16
4001d7c0:	e3806001 	orr	r6, r0, #1
4001d7c4:	e59f0020 	ldr	r0, [pc, #32]	; 4001d7ec <CyU3PUsbResetEp+0xe0>
4001d7c8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d7cc:	e59f000c 	ldr	r0, [pc, #12]	; 4001d7e0 <CyU3PUsbResetEp+0xd4>
4001d7d0:	ebffb2f0 	bl	4000a398 <_txe_mutex_put>
4001d7d4:	e3a00000 	mov	r0, #0
4001d7d8:	eaffffd3 	b	4001d72c <CyU3PUsbResetEp+0x20>
4001d7dc:	40031d40 	.word	0x40031d40
4001d7e0:	40031ee0 	.word	0x40031ee0
4001d7e4:	e0033000 	.word	0xe0033000
4001d7e8:	e0033500 	.word	0xe0033500
4001d7ec:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d7f0 <CyU3PUsbSendEP0Data>:
4001d7f0:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d7f4:	e1a04000 	mov	r4, r0
4001d7f8:	e1a05001 	mov	r5, r1
4001d7fc:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1c0>
4001d800:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d9b4 <CyU3PUsbSendEP0Data+0x1c4>
4001d804:	e5d00008 	ldrb	r0, [r0, #8]
4001d808:	e3500000 	cmp	r0, #0
4001d80c:	1a000001 	bne	4001d818 <CyU3PUsbSendEP0Data+0x28>
4001d810:	e3a00042 	mov	r0, #66	; 0x42
4001d814:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d818:	e3550000 	cmp	r5, #0
4001d81c:	1a000001 	bne	4001d828 <CyU3PUsbSendEP0Data+0x38>
4001d820:	e3a00040 	mov	r0, #64	; 0x40
4001d824:	eafffffa 	b	4001d814 <CyU3PUsbSendEP0Data+0x24>
4001d828:	e3e01000 	mvn	r1, #0
4001d82c:	e59f0184 	ldr	r0, [pc, #388]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1c8>
4001d830:	ebffb2a3 	bl	4000a2c4 <_txe_mutex_get>
4001d834:	e59f0180 	ldr	r0, [pc, #384]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d838:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d83c:	e3c00008 	bic	r0, r0, #8
4001d840:	e59f1174 	ldr	r1, [pc, #372]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d844:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d848:	e59f0164 	ldr	r0, [pc, #356]	; 4001d9b4 <CyU3PUsbSendEP0Data+0x1c4>
4001d84c:	e5900018 	ldr	r0, [r0, #24]
4001d850:	e3500000 	cmp	r0, #0
4001d854:	1a000002 	bne	4001d864 <CyU3PUsbSendEP0Data+0x74>
4001d858:	ebfffdf0 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d85c:	e3500000 	cmp	r0, #0
4001d860:	0a000008 	beq	4001d888 <CyU3PUsbSendEP0Data+0x98>
4001d864:	e59f0150 	ldr	r0, [pc, #336]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d868:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d86c:	e3800008 	orr	r0, r0, #8
4001d870:	e59f1144 	ldr	r1, [pc, #324]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d874:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d878:	e59f0138 	ldr	r0, [pc, #312]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1c8>
4001d87c:	ebffb2c5 	bl	4000a398 <_txe_mutex_put>
4001d880:	e3a00000 	mov	r0, #0
4001d884:	eaffffe2 	b	4001d814 <CyU3PUsbSendEP0Data+0x24>
4001d888:	e59f012c 	ldr	r0, [pc, #300]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d88c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d890:	e3800008 	orr	r0, r0, #8
4001d894:	e59f1120 	ldr	r1, [pc, #288]	; 4001d9bc <CyU3PUsbSendEP0Data+0x1cc>
4001d898:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d89c:	e1a00001 	mov	r0, r1
4001d8a0:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d8a4:	e1500004 	cmp	r0, r4
4001d8a8:	2a000003 	bcs	4001d8bc <CyU3PUsbSendEP0Data+0xcc>
4001d8ac:	e1a00001 	mov	r0, r1
4001d8b0:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d8b4:	e1a04800 	lsl	r4, r0, #16
4001d8b8:	e1a04824 	lsr	r4, r4, #16
4001d8bc:	eb0003b8 	bl	4001e7a4 <GetUsbLinkActive>
4001d8c0:	e1cd40b4 	strh	r4, [sp, #4]
4001d8c4:	e284000f 	add	r0, r4, #15
4001d8c8:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d9c0 <CyU3PUsbSendEP0Data+0x1d0>
4001d8cc:	e0000001 	and	r0, r0, r1
4001d8d0:	e1cd00b6 	strh	r0, [sp, #6]
4001d8d4:	e58d5000 	str	r5, [sp]
4001d8d8:	e3a00000 	mov	r0, #0
4001d8dc:	e1cd00b8 	strh	r0, [sp, #8]
4001d8e0:	e1a0100d 	mov	r1, sp
4001d8e4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d9c4 <CyU3PUsbSendEP0Data+0x1d4>
4001d8e8:	ebffe571 	bl	40016eb4 <CyU3PDmaChannelSetupSendBuffer>
4001d8ec:	e20060ff 	and	r6, r0, #255	; 0xff
4001d8f0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1c8>
4001d8f4:	ebffb2a7 	bl	4000a398 <_txe_mutex_put>
4001d8f8:	e3560000 	cmp	r6, #0
4001d8fc:	1a000029 	bne	4001d9a8 <CyU3PUsbSendEP0Data+0x1b8>
4001d900:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d9b4 <CyU3PUsbSendEP0Data+0x1c4>
4001d904:	e5900014 	ldr	r0, [r0, #20]
4001d908:	e3500000 	cmp	r0, #0
4001d90c:	0a000000 	beq	4001d914 <CyU3PUsbSendEP0Data+0x124>
4001d910:	ebfffc1d 	bl	4001c98c <CyU3PUsbAckSetup>
4001d914:	ea00000d 	b	4001d950 <CyU3PUsbSendEP0Data+0x160>
4001d918:	e3a01064 	mov	r1, #100	; 0x64
4001d91c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d9c4 <CyU3PUsbSendEP0Data+0x1d4>
4001d920:	ebffe5f1 	bl	400170ec <CyU3PDmaChannelWaitForCompletion>
4001d924:	e20060ff 	and	r6, r0, #255	; 0xff
4001d928:	e3560045 	cmp	r6, #69	; 0x45
4001d92c:	1a000006 	bne	4001d94c <CyU3PUsbSendEP0Data+0x15c>
4001d930:	ebfffdba 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d934:	e3500000 	cmp	r0, #0
4001d938:	0a000001 	beq	4001d944 <CyU3PUsbSendEP0Data+0x154>
4001d93c:	e3a00000 	mov	r0, #0
4001d940:	eaffffb3 	b	4001d814 <CyU3PUsbSendEP0Data+0x24>
4001d944:	e2477064 	sub	r7, r7, #100	; 0x64
4001d948:	ea000000 	b	4001d950 <CyU3PUsbSendEP0Data+0x160>
4001d94c:	ea000001 	b	4001d958 <CyU3PUsbSendEP0Data+0x168>
4001d950:	e3570000 	cmp	r7, #0
4001d954:	1affffef 	bne	4001d918 <CyU3PUsbSendEP0Data+0x128>
4001d958:	e1a00000 	nop			; (mov r0, r0)
4001d95c:	e3560000 	cmp	r6, #0
4001d960:	0a000010 	beq	4001d9a8 <CyU3PUsbSendEP0Data+0x1b8>
4001d964:	e3e01000 	mvn	r1, #0
4001d968:	e59f0048 	ldr	r0, [pc, #72]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1c8>
4001d96c:	ebffb254 	bl	4000a2c4 <_txe_mutex_get>
4001d970:	e3a01001 	mov	r1, #1
4001d974:	e3a00080 	mov	r0, #128	; 0x80
4001d978:	eb000101 	bl	4001dd84 <CyU3PUsbSetEpNak>
4001d97c:	e3a00064 	mov	r0, #100	; 0x64
4001d980:	ebffd7ce 	bl	400138c0 <CyU3PBusyWait>
4001d984:	e59f0038 	ldr	r0, [pc, #56]	; 4001d9c4 <CyU3PUsbSendEP0Data+0x1d4>
4001d988:	ebffe306 	bl	400165a8 <CyU3PDmaChannelReset>
4001d98c:	e3a00080 	mov	r0, #128	; 0x80
4001d990:	ebfffcf5 	bl	4001cd6c <CyU3PUsbFlushEp>
4001d994:	e3a01000 	mov	r1, #0
4001d998:	e3a00080 	mov	r0, #128	; 0x80
4001d99c:	eb0000f8 	bl	4001dd84 <CyU3PUsbSetEpNak>
4001d9a0:	e59f0010 	ldr	r0, [pc, #16]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1c8>
4001d9a4:	ebffb27b 	bl	4000a398 <_txe_mutex_put>
4001d9a8:	e1a00006 	mov	r0, r6
4001d9ac:	eaffff98 	b	4001d814 <CyU3PUsbSendEP0Data+0x24>
4001d9b0:	00001388 	.word	0x00001388
4001d9b4:	40031d40 	.word	0x40031d40
4001d9b8:	40031ee0 	.word	0x40031ee0
4001d9bc:	e0031000 	.word	0xe0031000
4001d9c0:	0000fff0 	.word	0x0000fff0
4001d9c4:	40031a7c 	.word	0x40031a7c

Disassembly of section i.CyU3PUsbSendErdy:

4001d9c8 <CyU3PUsbSendErdy>:
4001d9c8:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d9cc:	e1a04000 	mov	r4, r0
4001d9d0:	e1a05001 	mov	r5, r1
4001d9d4:	e1a0000d 	mov	r0, sp
4001d9d8:	e3a02000 	mov	r2, #0
4001d9dc:	e1a03002 	mov	r3, r2
4001d9e0:	e1a06002 	mov	r6, r2
4001d9e4:	e880004c 	stm	r0, {r2, r3, r6}
4001d9e8:	e204600f 	and	r6, r4, #15
4001d9ec:	e2047080 	and	r7, r4, #128	; 0x80
4001d9f0:	e59f00b4 	ldr	r0, [pc, #180]	; 4001daac <CyU3PUsbSendErdy+0xe4>
4001d9f4:	e5d00008 	ldrb	r0, [r0, #8]
4001d9f8:	e3500000 	cmp	r0, #0
4001d9fc:	1a000001 	bne	4001da08 <CyU3PUsbSendErdy+0x40>
4001da00:	e3a00042 	mov	r0, #66	; 0x42
4001da04:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001da08:	ebfffd7c 	bl	4001d000 <CyU3PUsbGetSpeed>
4001da0c:	e3500003 	cmp	r0, #3
4001da10:	1a000004 	bne	4001da28 <CyU3PUsbSendErdy+0x60>
4001da14:	e59f0094 	ldr	r0, [pc, #148]	; 4001dab0 <CyU3PUsbSendErdy+0xe8>
4001da18:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001da1c:	e200003f 	and	r0, r0, #63	; 0x3f
4001da20:	e3500010 	cmp	r0, #16
4001da24:	0a000001 	beq	4001da30 <CyU3PUsbSendErdy+0x68>
4001da28:	e3a000ff 	mov	r0, #255	; 0xff
4001da2c:	eafffff4 	b	4001da04 <CyU3PUsbSendErdy+0x3c>
4001da30:	e204007f 	and	r0, r4, #127	; 0x7f
4001da34:	e350000f 	cmp	r0, #15
4001da38:	da000001 	ble	4001da44 <CyU3PUsbSendErdy+0x7c>
4001da3c:	e3a00040 	mov	r0, #64	; 0x40
4001da40:	eaffffef 	b	4001da04 <CyU3PUsbSendErdy+0x3c>
4001da44:	e59f0064 	ldr	r0, [pc, #100]	; 4001dab0 <CyU3PUsbSendErdy+0xe8>
4001da48:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001da4c:	e3a01004 	mov	r1, #4
4001da50:	e1810c80 	orr	r0, r1, r0, lsl #25
4001da54:	e58d0000 	str	r0, [sp]
4001da58:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001da5c:	e3800003 	orr	r0, r0, #3
4001da60:	e1800406 	orr	r0, r0, r6, lsl #8
4001da64:	e58d0004 	str	r0, [sp, #4]
4001da68:	e3570000 	cmp	r7, #0
4001da6c:	0a000005 	beq	4001da88 <CyU3PUsbSendErdy+0xc0>
4001da70:	e59f003c 	ldr	r0, [pc, #60]	; 4001dab4 <CyU3PUsbSendErdy+0xec>
4001da74:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da78:	e3100008 	tst	r0, #8
4001da7c:	0a000006 	beq	4001da9c <CyU3PUsbSendErdy+0xd4>
4001da80:	e58d5008 	str	r5, [sp, #8]
4001da84:	ea000004 	b	4001da9c <CyU3PUsbSendErdy+0xd4>
4001da88:	e59f0028 	ldr	r0, [pc, #40]	; 4001dab8 <CyU3PUsbSendErdy+0xf0>
4001da8c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da90:	e3100008 	tst	r0, #8
4001da94:	0a000000 	beq	4001da9c <CyU3PUsbSendErdy+0xd4>
4001da98:	e58d5008 	str	r5, [sp, #8]
4001da9c:	e1a0000d 	mov	r0, sp
4001daa0:	eb00123d 	bl	4002239c <CyFx3Usb3SendTP>
4001daa4:	e3a00000 	mov	r0, #0
4001daa8:	eaffffd5 	b	4001da04 <CyU3PUsbSendErdy+0x3c>
4001daac:	40031d40 	.word	0x40031d40
4001dab0:	e0033000 	.word	0xe0033000
4001dab4:	e0033500 	.word	0xe0033500
4001dab8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001dabc <CyU3PUsbSendNrdy>:
4001dabc:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001dac0:	e1a04000 	mov	r4, r0
4001dac4:	e1a05001 	mov	r5, r1
4001dac8:	e1a0000d 	mov	r0, sp
4001dacc:	e3a02000 	mov	r2, #0
4001dad0:	e1a03002 	mov	r3, r2
4001dad4:	e1a06002 	mov	r6, r2
4001dad8:	e880004c 	stm	r0, {r2, r3, r6}
4001dadc:	e204600f 	and	r6, r4, #15
4001dae0:	e2047080 	and	r7, r4, #128	; 0x80
4001dae4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001db9c <CyU3PUsbSendNrdy+0xe0>
4001dae8:	e5d00008 	ldrb	r0, [r0, #8]
4001daec:	e3500000 	cmp	r0, #0
4001daf0:	1a000001 	bne	4001dafc <CyU3PUsbSendNrdy+0x40>
4001daf4:	e3a00042 	mov	r0, #66	; 0x42
4001daf8:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001dafc:	ebfffd3f 	bl	4001d000 <CyU3PUsbGetSpeed>
4001db00:	e3500003 	cmp	r0, #3
4001db04:	1a000004 	bne	4001db1c <CyU3PUsbSendNrdy+0x60>
4001db08:	e59f0090 	ldr	r0, [pc, #144]	; 4001dba0 <CyU3PUsbSendNrdy+0xe4>
4001db0c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db10:	e200003f 	and	r0, r0, #63	; 0x3f
4001db14:	e3500010 	cmp	r0, #16
4001db18:	0a000001 	beq	4001db24 <CyU3PUsbSendNrdy+0x68>
4001db1c:	e3a000ff 	mov	r0, #255	; 0xff
4001db20:	eafffff4 	b	4001daf8 <CyU3PUsbSendNrdy+0x3c>
4001db24:	e204007f 	and	r0, r4, #127	; 0x7f
4001db28:	e350000f 	cmp	r0, #15
4001db2c:	da000001 	ble	4001db38 <CyU3PUsbSendNrdy+0x7c>
4001db30:	e3a00040 	mov	r0, #64	; 0x40
4001db34:	eaffffef 	b	4001daf8 <CyU3PUsbSendNrdy+0x3c>
4001db38:	e59f0060 	ldr	r0, [pc, #96]	; 4001dba0 <CyU3PUsbSendNrdy+0xe4>
4001db3c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001db40:	e3a01004 	mov	r1, #4
4001db44:	e1810c80 	orr	r0, r1, r0, lsl #25
4001db48:	e58d0000 	str	r0, [sp]
4001db4c:	e3870002 	orr	r0, r7, #2
4001db50:	e1800406 	orr	r0, r0, r6, lsl #8
4001db54:	e58d0004 	str	r0, [sp, #4]
4001db58:	e3570000 	cmp	r7, #0
4001db5c:	0a000005 	beq	4001db78 <CyU3PUsbSendNrdy+0xbc>
4001db60:	e59f003c 	ldr	r0, [pc, #60]	; 4001dba4 <CyU3PUsbSendNrdy+0xe8>
4001db64:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db68:	e3100008 	tst	r0, #8
4001db6c:	0a000006 	beq	4001db8c <CyU3PUsbSendNrdy+0xd0>
4001db70:	e58d5008 	str	r5, [sp, #8]
4001db74:	ea000004 	b	4001db8c <CyU3PUsbSendNrdy+0xd0>
4001db78:	e59f0028 	ldr	r0, [pc, #40]	; 4001dba8 <CyU3PUsbSendNrdy+0xec>
4001db7c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db80:	e3100008 	tst	r0, #8
4001db84:	0a000000 	beq	4001db8c <CyU3PUsbSendNrdy+0xd0>
4001db88:	e58d5008 	str	r5, [sp, #8]
4001db8c:	e1a0000d 	mov	r0, sp
4001db90:	eb001201 	bl	4002239c <CyFx3Usb3SendTP>
4001db94:	e3a00000 	mov	r0, #0
4001db98:	eaffffd6 	b	4001daf8 <CyU3PUsbSendNrdy+0x3c>
4001db9c:	40031d40 	.word	0x40031d40
4001dba0:	e0033000 	.word	0xe0033000
4001dba4:	e0033500 	.word	0xe0033500
4001dba8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001dbac <CyU3PUsbSetDesc>:
4001dbac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dbb0:	e1a03000 	mov	r3, r0
4001dbb4:	e3a0c000 	mov	ip, #0
4001dbb8:	e59f01b8 	ldr	r0, [pc, #440]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dbbc:	e5d00008 	ldrb	r0, [r0, #8]
4001dbc0:	e3500000 	cmp	r0, #0
4001dbc4:	1a000001 	bne	4001dbd0 <CyU3PUsbSetDesc+0x24>
4001dbc8:	e3a00042 	mov	r0, #66	; 0x42
4001dbcc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dbd0:	e3520000 	cmp	r2, #0
4001dbd4:	1a000001 	bne	4001dbe0 <CyU3PUsbSetDesc+0x34>
4001dbd8:	e3a00040 	mov	r0, #64	; 0x40
4001dbdc:	eafffffa 	b	4001dbcc <CyU3PUsbSetDesc+0x20>
4001dbe0:	e3530009 	cmp	r3, #9
4001dbe4:	308ff103 	addcc	pc, pc, r3, lsl #2
4001dbe8:	ea00004d 	b	4001dd24 <CyU3PUsbSetDesc+0x178>
4001dbec:	ea000007 	b	4001dc10 <CyU3PUsbSetDesc+0x64>
4001dbf0:	ea00000a 	b	4001dc20 <CyU3PUsbSetDesc+0x74>
4001dbf4:	ea000011 	b	4001dc40 <CyU3PUsbSetDesc+0x94>
4001dbf8:	ea000022 	b	4001dc88 <CyU3PUsbSetDesc+0xdc>
4001dbfc:	ea00002f 	b	4001dcc0 <CyU3PUsbSetDesc+0x114>
4001dc00:	ea00003c 	b	4001dcf8 <CyU3PUsbSetDesc+0x14c>
4001dc04:	ea000011 	b	4001dc50 <CyU3PUsbSetDesc+0xa4>
4001dc08:	ea000008 	b	4001dc30 <CyU3PUsbSetDesc+0x84>
4001dc0c:	ea000040 	b	4001dd14 <CyU3PUsbSetDesc+0x168>
4001dc10:	e1a00000 	nop			; (mov r0, r0)
4001dc14:	e59f0160 	ldr	r0, [pc, #352]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc18:	e5802004 	str	r2, [r0, #4]
4001dc1c:	ea000043 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dc20:	e1a00000 	nop			; (mov r0, r0)
4001dc24:	e59f0150 	ldr	r0, [pc, #336]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc28:	e5802000 	str	r2, [r0]
4001dc2c:	ea00003f 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dc30:	e1a00000 	nop			; (mov r0, r0)
4001dc34:	e59f0140 	ldr	r0, [pc, #320]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc38:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001dc3c:	ea00003b 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dc40:	e1a00000 	nop			; (mov r0, r0)
4001dc44:	e59f0130 	ldr	r0, [pc, #304]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc48:	e5802008 	str	r2, [r0, #8]
4001dc4c:	ea000037 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dc50:	e1a00000 	nop			; (mov r0, r0)
4001dc54:	e59f0120 	ldr	r0, [pc, #288]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc58:	e580201c 	str	r2, [r0, #28]
4001dc5c:	e5d20007 	ldrb	r0, [r2, #7]
4001dc60:	e3100040 	tst	r0, #64	; 0x40
4001dc64:	0a000003 	beq	4001dc78 <CyU3PUsbSetDesc+0xcc>
4001dc68:	e3a00001 	mov	r0, #1
4001dc6c:	e59fe104 	ldr	lr, [pc, #260]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dc70:	e5ce0006 	strb	r0, [lr, #6]
4001dc74:	ea000002 	b	4001dc84 <CyU3PUsbSetDesc+0xd8>
4001dc78:	e3a00000 	mov	r0, #0
4001dc7c:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dc80:	e5ce0006 	strb	r0, [lr, #6]
4001dc84:	ea000029 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dc88:	e1a00000 	nop			; (mov r0, r0)
4001dc8c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dc90:	e5802018 	str	r2, [r0, #24]
4001dc94:	e5d20007 	ldrb	r0, [r2, #7]
4001dc98:	e3100040 	tst	r0, #64	; 0x40
4001dc9c:	0a000003 	beq	4001dcb0 <CyU3PUsbSetDesc+0x104>
4001dca0:	e3a00001 	mov	r0, #1
4001dca4:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dca8:	e5ce0006 	strb	r0, [lr, #6]
4001dcac:	ea000002 	b	4001dcbc <CyU3PUsbSetDesc+0x110>
4001dcb0:	e3a00000 	mov	r0, #0
4001dcb4:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dcb8:	e5ce0006 	strb	r0, [lr, #6]
4001dcbc:	ea00001b 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dcc0:	e1a00000 	nop			; (mov r0, r0)
4001dcc4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dcc8:	e5802014 	str	r2, [r0, #20]
4001dccc:	e5d20007 	ldrb	r0, [r2, #7]
4001dcd0:	e3100040 	tst	r0, #64	; 0x40
4001dcd4:	0a000003 	beq	4001dce8 <CyU3PUsbSetDesc+0x13c>
4001dcd8:	e3a00001 	mov	r0, #1
4001dcdc:	e59fe094 	ldr	lr, [pc, #148]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dce0:	e5ce0006 	strb	r0, [lr, #6]
4001dce4:	ea000002 	b	4001dcf4 <CyU3PUsbSetDesc+0x148>
4001dce8:	e3a00000 	mov	r0, #0
4001dcec:	e59fe084 	ldr	lr, [pc, #132]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dcf0:	e5ce0006 	strb	r0, [lr, #6]
4001dcf4:	ea00000d 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dcf8:	e1a00000 	nop			; (mov r0, r0)
4001dcfc:	e3510010 	cmp	r1, #16
4001dd00:	da000000 	ble	4001dd08 <CyU3PUsbSetDesc+0x15c>
4001dd04:	e3a0c04b 	mov	ip, #75	; 0x4b
4001dd08:	e59f0070 	ldr	r0, [pc, #112]	; 4001dd80 <CyU3PUsbSetDesc+0x1d4>
4001dd0c:	e7802101 	str	r2, [r0, r1, lsl #2]
4001dd10:	ea000006 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dd14:	e1a00000 	nop			; (mov r0, r0)
4001dd18:	e59f005c 	ldr	r0, [pc, #92]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dd1c:	e5802070 	str	r2, [r0, #112]	; 0x70
4001dd20:	ea000002 	b	4001dd30 <CyU3PUsbSetDesc+0x184>
4001dd24:	e1a00000 	nop			; (mov r0, r0)
4001dd28:	e3a00050 	mov	r0, #80	; 0x50
4001dd2c:	eaffffa6 	b	4001dbcc <CyU3PUsbSetDesc+0x20>
4001dd30:	e1a00000 	nop			; (mov r0, r0)
4001dd34:	e59f0040 	ldr	r0, [pc, #64]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dd38:	e5900000 	ldr	r0, [r0]
4001dd3c:	e3500000 	cmp	r0, #0
4001dd40:	0a00000a 	beq	4001dd70 <CyU3PUsbSetDesc+0x1c4>
4001dd44:	e59f0030 	ldr	r0, [pc, #48]	; 4001dd7c <CyU3PUsbSetDesc+0x1d0>
4001dd48:	e5900020 	ldr	r0, [r0, #32]
4001dd4c:	e3500000 	cmp	r0, #0
4001dd50:	0a000006 	beq	4001dd70 <CyU3PUsbSetDesc+0x1c4>
4001dd54:	e59f001c 	ldr	r0, [pc, #28]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dd58:	e5d00008 	ldrb	r0, [r0, #8]
4001dd5c:	e3500003 	cmp	r0, #3
4001dd60:	aa000002 	bge	4001dd70 <CyU3PUsbSetDesc+0x1c4>
4001dd64:	e3a00003 	mov	r0, #3
4001dd68:	e59fe008 	ldr	lr, [pc, #8]	; 4001dd78 <CyU3PUsbSetDesc+0x1cc>
4001dd6c:	e5ce0008 	strb	r0, [lr, #8]
4001dd70:	e1a0000c 	mov	r0, ip
4001dd74:	eaffff94 	b	4001dbcc <CyU3PUsbSetDesc+0x20>
4001dd78:	40031d40 	.word	0x40031d40
4001dd7c:	40031f98 	.word	0x40031f98
4001dd80:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001dd84 <CyU3PUsbSetEpNak>:
4001dd84:	e92d4070 	push	{r4, r5, r6, lr}
4001dd88:	e1a04000 	mov	r4, r0
4001dd8c:	e1a06001 	mov	r6, r1
4001dd90:	e59f0198 	ldr	r0, [pc, #408]	; 4001df30 <CyU3PUsbSetEpNak+0x1ac>
4001dd94:	e5d00008 	ldrb	r0, [r0, #8]
4001dd98:	e3500000 	cmp	r0, #0
4001dd9c:	1a000001 	bne	4001dda8 <CyU3PUsbSetEpNak+0x24>
4001dda0:	e3a00042 	mov	r0, #66	; 0x42
4001dda4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dda8:	e204007f 	and	r0, r4, #127	; 0x7f
4001ddac:	e350000f 	cmp	r0, #15
4001ddb0:	da000001 	ble	4001ddbc <CyU3PUsbSetEpNak+0x38>
4001ddb4:	e3a00040 	mov	r0, #64	; 0x40
4001ddb8:	eafffff9 	b	4001dda4 <CyU3PUsbSetEpNak+0x20>
4001ddbc:	e3e01000 	mvn	r1, #0
4001ddc0:	e59f016c 	ldr	r0, [pc, #364]	; 4001df34 <CyU3PUsbSetEpNak+0x1b0>
4001ddc4:	ebffb13e 	bl	4000a2c4 <_txe_mutex_get>
4001ddc8:	e3560000 	cmp	r6, #0
4001ddcc:	0a000028 	beq	4001de74 <CyU3PUsbSetEpNak+0xf0>
4001ddd0:	e3140080 	tst	r4, #128	; 0x80
4001ddd4:	0a000012 	beq	4001de24 <CyU3PUsbSetEpNak+0xa0>
4001ddd8:	e59f0150 	ldr	r0, [pc, #336]	; 4001df30 <CyU3PUsbSetEpNak+0x1ac>
4001dddc:	e5d00009 	ldrb	r0, [r0, #9]
4001dde0:	e3500003 	cmp	r0, #3
4001dde4:	1a000006 	bne	4001de04 <CyU3PUsbSetEpNak+0x80>
4001dde8:	e59f0148 	ldr	r0, [pc, #328]	; 4001df38 <CyU3PUsbSetEpNak+0x1b4>
4001ddec:	e204100f 	and	r1, r4, #15
4001ddf0:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001ddf4:	e3855003 	orr	r5, r5, #3
4001ddf8:	e204100f 	and	r1, r4, #15
4001ddfc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001de00:	ea000046 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001de04:	e59f0130 	ldr	r0, [pc, #304]	; 4001df3c <CyU3PUsbSetEpNak+0x1b8>
4001de08:	e204100f 	and	r1, r4, #15
4001de0c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de10:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001de14:	e59f1120 	ldr	r1, [pc, #288]	; 4001df3c <CyU3PUsbSetEpNak+0x1b8>
4001de18:	e204200f 	and	r2, r4, #15
4001de1c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de20:	ea00003e 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001de24:	e59f0104 	ldr	r0, [pc, #260]	; 4001df30 <CyU3PUsbSetEpNak+0x1ac>
4001de28:	e5d00009 	ldrb	r0, [r0, #9]
4001de2c:	e3500003 	cmp	r0, #3
4001de30:	1a000007 	bne	4001de54 <CyU3PUsbSetEpNak+0xd0>
4001de34:	e59f0104 	ldr	r0, [pc, #260]	; 4001df40 <CyU3PUsbSetEpNak+0x1bc>
4001de38:	e204100f 	and	r1, r4, #15
4001de3c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de40:	e3805003 	orr	r5, r0, #3
4001de44:	e59f00f4 	ldr	r0, [pc, #244]	; 4001df40 <CyU3PUsbSetEpNak+0x1bc>
4001de48:	e204100f 	and	r1, r4, #15
4001de4c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001de50:	ea000032 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001de54:	e59f00e8 	ldr	r0, [pc, #232]	; 4001df44 <CyU3PUsbSetEpNak+0x1c0>
4001de58:	e204100f 	and	r1, r4, #15
4001de5c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de60:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001de64:	e59f10d8 	ldr	r1, [pc, #216]	; 4001df44 <CyU3PUsbSetEpNak+0x1c0>
4001de68:	e204200f 	and	r2, r4, #15
4001de6c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de70:	ea00002a 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001de74:	e3140080 	tst	r4, #128	; 0x80
4001de78:	0a000014 	beq	4001ded0 <CyU3PUsbSetEpNak+0x14c>
4001de7c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001df30 <CyU3PUsbSetEpNak+0x1ac>
4001de80:	e5d00009 	ldrb	r0, [r0, #9]
4001de84:	e3500003 	cmp	r0, #3
4001de88:	1a000008 	bne	4001deb0 <CyU3PUsbSetEpNak+0x12c>
4001de8c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001df38 <CyU3PUsbSetEpNak+0x1b4>
4001de90:	e204100f 	and	r1, r4, #15
4001de94:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001de98:	e3c50002 	bic	r0, r5, #2
4001de9c:	e3805001 	orr	r5, r0, #1
4001dea0:	e59f0090 	ldr	r0, [pc, #144]	; 4001df38 <CyU3PUsbSetEpNak+0x1b4>
4001dea4:	e204100f 	and	r1, r4, #15
4001dea8:	e7805101 	str	r5, [r0, r1, lsl #2]
4001deac:	ea00001b 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001deb0:	e59f0084 	ldr	r0, [pc, #132]	; 4001df3c <CyU3PUsbSetEpNak+0x1b8>
4001deb4:	e204100f 	and	r1, r4, #15
4001deb8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001debc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dec0:	e59f1074 	ldr	r1, [pc, #116]	; 4001df3c <CyU3PUsbSetEpNak+0x1b8>
4001dec4:	e204200f 	and	r2, r4, #15
4001dec8:	e7810102 	str	r0, [r1, r2, lsl #2]
4001decc:	ea000013 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001ded0:	e59f0058 	ldr	r0, [pc, #88]	; 4001df30 <CyU3PUsbSetEpNak+0x1ac>
4001ded4:	e5d00009 	ldrb	r0, [r0, #9]
4001ded8:	e3500003 	cmp	r0, #3
4001dedc:	1a000008 	bne	4001df04 <CyU3PUsbSetEpNak+0x180>
4001dee0:	e59f0058 	ldr	r0, [pc, #88]	; 4001df40 <CyU3PUsbSetEpNak+0x1bc>
4001dee4:	e204100f 	and	r1, r4, #15
4001dee8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001deec:	e3c00002 	bic	r0, r0, #2
4001def0:	e3805001 	orr	r5, r0, #1
4001def4:	e59f0044 	ldr	r0, [pc, #68]	; 4001df40 <CyU3PUsbSetEpNak+0x1bc>
4001def8:	e204100f 	and	r1, r4, #15
4001defc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001df00:	ea000006 	b	4001df20 <CyU3PUsbSetEpNak+0x19c>
4001df04:	e59f0038 	ldr	r0, [pc, #56]	; 4001df44 <CyU3PUsbSetEpNak+0x1c0>
4001df08:	e204100f 	and	r1, r4, #15
4001df0c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001df10:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001df14:	e59f1028 	ldr	r1, [pc, #40]	; 4001df44 <CyU3PUsbSetEpNak+0x1c0>
4001df18:	e204200f 	and	r2, r4, #15
4001df1c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001df20:	e59f000c 	ldr	r0, [pc, #12]	; 4001df34 <CyU3PUsbSetEpNak+0x1b0>
4001df24:	ebffb11b 	bl	4000a398 <_txe_mutex_put>
4001df28:	e3a00000 	mov	r0, #0
4001df2c:	eaffff9c 	b	4001dda4 <CyU3PUsbSetEpNak+0x20>
4001df30:	40031d40 	.word	0x40031d40
4001df34:	40031ee0 	.word	0x40031ee0
4001df38:	e0033500 	.word	0xe0033500
4001df3c:	e0031418 	.word	0xe0031418
4001df40:	e0033600 	.word	0xe0033600
4001df44:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001df48 <CyU3PUsbSetLinkPowerState>:
4001df48:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001df4c:	e1a01000 	mov	r1, r0
4001df50:	e3a030ff 	mov	r3, #255	; 0xff
4001df54:	e59f0138 	ldr	r0, [pc, #312]	; 4001e094 <CyU3PUsbSetLinkPowerState+0x14c>
4001df58:	e5d00008 	ldrb	r0, [r0, #8]
4001df5c:	e3500000 	cmp	r0, #0
4001df60:	1a000001 	bne	4001df6c <CyU3PUsbSetLinkPowerState+0x24>
4001df64:	e3a00042 	mov	r0, #66	; 0x42
4001df68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001df6c:	e59f0120 	ldr	r0, [pc, #288]	; 4001e094 <CyU3PUsbSetLinkPowerState+0x14c>
4001df70:	e5d00008 	ldrb	r0, [r0, #8]
4001df74:	e3500005 	cmp	r0, #5
4001df78:	aa000001 	bge	4001df84 <CyU3PUsbSetLinkPowerState+0x3c>
4001df7c:	e3a00044 	mov	r0, #68	; 0x44
4001df80:	eafffff8 	b	4001df68 <CyU3PUsbSetLinkPowerState+0x20>
4001df84:	ebfffc1d 	bl	4001d000 <CyU3PUsbGetSpeed>
4001df88:	e3500003 	cmp	r0, #3
4001df8c:	0a000001 	beq	4001df98 <CyU3PUsbSetLinkPowerState+0x50>
4001df90:	e3a000ff 	mov	r0, #255	; 0xff
4001df94:	eafffff3 	b	4001df68 <CyU3PUsbSetLinkPowerState+0x20>
4001df98:	e59f00f8 	ldr	r0, [pc, #248]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001df9c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dfa0:	e200203f 	and	r2, r0, #63	; 0x3f
4001dfa4:	e3510000 	cmp	r1, #0
4001dfa8:	0a000004 	beq	4001dfc0 <CyU3PUsbSetLinkPowerState+0x78>
4001dfac:	e3510001 	cmp	r1, #1
4001dfb0:	0a000015 	beq	4001e00c <CyU3PUsbSetLinkPowerState+0xc4>
4001dfb4:	e3510002 	cmp	r1, #2
4001dfb8:	1a00002f 	bne	4001e07c <CyU3PUsbSetLinkPowerState+0x134>
4001dfbc:	ea000020 	b	4001e044 <CyU3PUsbSetLinkPowerState+0xfc>
4001dfc0:	e1a00000 	nop			; (mov r0, r0)
4001dfc4:	e59f00cc 	ldr	r0, [pc, #204]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001dfc8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dfcc:	e3100c02 	tst	r0, #512	; 0x200
4001dfd0:	1a00000b 	bne	4001e004 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfd4:	e59f00bc 	ldr	r0, [pc, #188]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001dfd8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dfdc:	e200203f 	and	r2, r0, #63	; 0x3f
4001dfe0:	e3520011 	cmp	r2, #17
4001dfe4:	ba000006 	blt	4001e004 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfe8:	e3520013 	cmp	r2, #19
4001dfec:	ca000004 	bgt	4001e004 <CyU3PUsbSetLinkPowerState+0xbc>
4001dff0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001dff4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dff8:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dffc:	e59fc094 	ldr	ip, [pc, #148]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001e000:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e004:	e3a03000 	mov	r3, #0
4001e008:	ea00001e 	b	4001e088 <CyU3PUsbSetLinkPowerState+0x140>
4001e00c:	e1a00000 	nop			; (mov r0, r0)
4001e010:	e3520010 	cmp	r2, #16
4001e014:	1a000009 	bne	4001e040 <CyU3PUsbSetLinkPowerState+0xf8>
4001e018:	e59f0074 	ldr	r0, [pc, #116]	; 4001e094 <CyU3PUsbSetLinkPowerState+0x14c>
4001e01c:	e5d00006 	ldrb	r0, [r0, #6]
4001e020:	e3100004 	tst	r0, #4
4001e024:	0a000005 	beq	4001e040 <CyU3PUsbSetLinkPowerState+0xf8>
4001e028:	e59f0068 	ldr	r0, [pc, #104]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001e02c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e030:	e3800001 	orr	r0, r0, #1
4001e034:	e59fc05c 	ldr	ip, [pc, #92]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001e038:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e03c:	e3a03000 	mov	r3, #0
4001e040:	ea000010 	b	4001e088 <CyU3PUsbSetLinkPowerState+0x140>
4001e044:	e1a00000 	nop			; (mov r0, r0)
4001e048:	e3520010 	cmp	r2, #16
4001e04c:	1a000009 	bne	4001e078 <CyU3PUsbSetLinkPowerState+0x130>
4001e050:	e59f003c 	ldr	r0, [pc, #60]	; 4001e094 <CyU3PUsbSetLinkPowerState+0x14c>
4001e054:	e5d00006 	ldrb	r0, [r0, #6]
4001e058:	e3100008 	tst	r0, #8
4001e05c:	0a000005 	beq	4001e078 <CyU3PUsbSetLinkPowerState+0x130>
4001e060:	e59f0030 	ldr	r0, [pc, #48]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001e064:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e068:	e3800002 	orr	r0, r0, #2
4001e06c:	e59fc024 	ldr	ip, [pc, #36]	; 4001e098 <CyU3PUsbSetLinkPowerState+0x150>
4001e070:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e074:	e3a03000 	mov	r3, #0
4001e078:	ea000002 	b	4001e088 <CyU3PUsbSetLinkPowerState+0x140>
4001e07c:	e1a00000 	nop			; (mov r0, r0)
4001e080:	e3a03040 	mov	r3, #64	; 0x40
4001e084:	e1a00000 	nop			; (mov r0, r0)
4001e088:	e1a00000 	nop			; (mov r0, r0)
4001e08c:	e1a00003 	mov	r0, r3
4001e090:	eaffffb4 	b	4001df68 <CyU3PUsbSetLinkPowerState+0x20>
4001e094:	40031d40 	.word	0x40031d40
4001e098:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001e09c <CyU3PUsbStall>:
4001e09c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e0a0:	e1a04000 	mov	r4, r0
4001e0a4:	e1a05001 	mov	r5, r1
4001e0a8:	e1a06002 	mov	r6, r2
4001e0ac:	e204700f 	and	r7, r4, #15
4001e0b0:	e3a08000 	mov	r8, #0
4001e0b4:	e59f0344 	ldr	r0, [pc, #836]	; 4001e400 <CyU3PUsbStall+0x364>
4001e0b8:	e5d00008 	ldrb	r0, [r0, #8]
4001e0bc:	e3500000 	cmp	r0, #0
4001e0c0:	1a000001 	bne	4001e0cc <CyU3PUsbStall+0x30>
4001e0c4:	e3a00042 	mov	r0, #66	; 0x42
4001e0c8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001e0cc:	e204007f 	and	r0, r4, #127	; 0x7f
4001e0d0:	e350000f 	cmp	r0, #15
4001e0d4:	da000001 	ble	4001e0e0 <CyU3PUsbStall+0x44>
4001e0d8:	e3a00040 	mov	r0, #64	; 0x40
4001e0dc:	eafffff9 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e0e0:	e3570000 	cmp	r7, #0
4001e0e4:	1a000003 	bne	4001e0f8 <CyU3PUsbStall+0x5c>
4001e0e8:	e3550000 	cmp	r5, #0
4001e0ec:	1a000001 	bne	4001e0f8 <CyU3PUsbStall+0x5c>
4001e0f0:	e3a00040 	mov	r0, #64	; 0x40
4001e0f4:	eafffff3 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e0f8:	e59f0300 	ldr	r0, [pc, #768]	; 4001e400 <CyU3PUsbStall+0x364>
4001e0fc:	e5d00009 	ldrb	r0, [r0, #9]
4001e100:	e3500000 	cmp	r0, #0
4001e104:	1a000001 	bne	4001e110 <CyU3PUsbStall+0x74>
4001e108:	e3a00000 	mov	r0, #0
4001e10c:	eaffffed 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e110:	e3e01000 	mvn	r1, #0
4001e114:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e404 <CyU3PUsbStall+0x368>
4001e118:	ebffb069 	bl	4000a2c4 <_txe_mutex_get>
4001e11c:	e3570000 	cmp	r7, #0
4001e120:	1a000037 	bne	4001e204 <CyU3PUsbStall+0x168>
4001e124:	ebfffbbd 	bl	4001d020 <CyU3PUsbIsNewCtrlRqtRecvd>
4001e128:	e3500000 	cmp	r0, #0
4001e12c:	0a000003 	beq	4001e140 <CyU3PUsbStall+0xa4>
4001e130:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e404 <CyU3PUsbStall+0x368>
4001e134:	ebffb097 	bl	4000a398 <_txe_mutex_put>
4001e138:	e3a00000 	mov	r0, #0
4001e13c:	eaffffe1 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e140:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e400 <CyU3PUsbStall+0x364>
4001e144:	e5d00009 	ldrb	r0, [r0, #9]
4001e148:	e3500003 	cmp	r0, #3
4001e14c:	1a00001b 	bne	4001e1c0 <CyU3PUsbStall+0x124>
4001e150:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e154:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e158:	e3800004 	orr	r0, r0, #4
4001e15c:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e160:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e164:	e1a00001 	mov	r0, r1
4001e168:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e16c:	e3800004 	orr	r0, r0, #4
4001e170:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e174:	eb00104b 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
4001e178:	e1a0a000 	mov	sl, r0
4001e17c:	e3a00001 	mov	r0, #1
4001e180:	ebffd5ce 	bl	400138c0 <CyU3PBusyWait>
4001e184:	e59f027c 	ldr	r0, [pc, #636]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e188:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e18c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e190:	e59f1270 	ldr	r1, [pc, #624]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e194:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e198:	e1a0000a 	mov	r0, sl
4001e19c:	eb00104f 	bl	400222e0 <CyU3PVicEnableInterrupts>
4001e1a0:	e3a00000 	mov	r0, #0
4001e1a4:	e59f1260 	ldr	r1, [pc, #608]	; 4001e40c <CyU3PUsbStall+0x370>
4001e1a8:	e5810000 	str	r0, [r1]
4001e1ac:	e59f125c 	ldr	r1, [pc, #604]	; 4001e410 <CyU3PUsbStall+0x374>
4001e1b0:	e5810000 	str	r0, [r1]
4001e1b4:	e59f0258 	ldr	r0, [pc, #600]	; 4001e414 <CyU3PUsbStall+0x378>
4001e1b8:	ebffb323 	bl	4000ae4c <_txe_timer_deactivate>
4001e1bc:	ea00000c 	b	4001e1f4 <CyU3PUsbStall+0x158>
4001e1c0:	e59f0250 	ldr	r0, [pc, #592]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e1c4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e1c8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e1cc:	e59f1244 	ldr	r1, [pc, #580]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e1d0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e1d4:	e1a00001 	mov	r0, r1
4001e1d8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e1dc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e1e0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e1e4:	e1a00001 	mov	r0, r1
4001e1e8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e1ec:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001e1f0:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e1f4:	e59f0208 	ldr	r0, [pc, #520]	; 4001e404 <CyU3PUsbStall+0x368>
4001e1f8:	ebffb066 	bl	4000a398 <_txe_mutex_put>
4001e1fc:	e3a00000 	mov	r0, #0
4001e200:	eaffffb0 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e204:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e400 <CyU3PUsbStall+0x364>
4001e208:	e5d00009 	ldrb	r0, [r0, #9]
4001e20c:	e3500003 	cmp	r0, #3
4001e210:	1a000033 	bne	4001e2e4 <CyU3PUsbStall+0x248>
4001e214:	e3140080 	tst	r4, #128	; 0x80
4001e218:	0a000017 	beq	4001e27c <CyU3PUsbStall+0x1e0>
4001e21c:	e3550000 	cmp	r5, #0
4001e220:	0a00000a 	beq	4001e250 <CyU3PUsbStall+0x1b4>
4001e224:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e41c <CyU3PUsbStall+0x380>
4001e228:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e22c:	e3899005 	orr	r9, r9, #5
4001e230:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e234:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001e238:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e23c:	e1a01800 	lsl	r1, r0, #16
4001e240:	e1a01821 	lsr	r1, r1, #16
4001e244:	e1a00004 	mov	r0, r4
4001e248:	ebfffdde 	bl	4001d9c8 <CyU3PUsbSendErdy>
4001e24c:	ea000041 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e250:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e41c <CyU3PUsbStall+0x380>
4001e254:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e258:	e3899011 	orr	r9, r9, #17
4001e25c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e260:	e3a00001 	mov	r0, #1
4001e264:	ebffd595 	bl	400138c0 <CyU3PBusyWait>
4001e268:	e3c90014 	bic	r0, r9, #20
4001e26c:	e3809001 	orr	r9, r0, #1
4001e270:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e41c <CyU3PUsbStall+0x380>
4001e274:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e278:	ea000036 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e27c:	e3550000 	cmp	r5, #0
4001e280:	0a00000b 	beq	4001e2b4 <CyU3PUsbStall+0x218>
4001e284:	e59f0194 	ldr	r0, [pc, #404]	; 4001e420 <CyU3PUsbStall+0x384>
4001e288:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e28c:	e3809005 	orr	r9, r0, #5
4001e290:	e59f0188 	ldr	r0, [pc, #392]	; 4001e420 <CyU3PUsbStall+0x384>
4001e294:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e298:	e28000c0 	add	r0, r0, #192	; 0xc0
4001e29c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2a0:	e1a01800 	lsl	r1, r0, #16
4001e2a4:	e1a01821 	lsr	r1, r1, #16
4001e2a8:	e1a00004 	mov	r0, r4
4001e2ac:	ebfffdc5 	bl	4001d9c8 <CyU3PUsbSendErdy>
4001e2b0:	ea000028 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e2b4:	e59f0164 	ldr	r0, [pc, #356]	; 4001e420 <CyU3PUsbStall+0x384>
4001e2b8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2bc:	e3809011 	orr	r9, r0, #17
4001e2c0:	e59f0158 	ldr	r0, [pc, #344]	; 4001e420 <CyU3PUsbStall+0x384>
4001e2c4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2c8:	e3a00001 	mov	r0, #1
4001e2cc:	ebffd57b 	bl	400138c0 <CyU3PBusyWait>
4001e2d0:	e3c90014 	bic	r0, r9, #20
4001e2d4:	e3809001 	orr	r9, r0, #1
4001e2d8:	e59f0140 	ldr	r0, [pc, #320]	; 4001e420 <CyU3PUsbStall+0x384>
4001e2dc:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2e0:	ea00001c 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e2e4:	e3140080 	tst	r4, #128	; 0x80
4001e2e8:	0a00000d 	beq	4001e324 <CyU3PUsbStall+0x288>
4001e2ec:	e3550000 	cmp	r5, #0
4001e2f0:	0a000005 	beq	4001e30c <CyU3PUsbStall+0x270>
4001e2f4:	e59f0128 	ldr	r0, [pc, #296]	; 4001e424 <CyU3PUsbStall+0x388>
4001e2f8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2fc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e300:	e59f111c 	ldr	r1, [pc, #284]	; 4001e424 <CyU3PUsbStall+0x388>
4001e304:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e308:	ea000012 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e30c:	e59f0110 	ldr	r0, [pc, #272]	; 4001e424 <CyU3PUsbStall+0x388>
4001e310:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e314:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e318:	e59f1104 	ldr	r1, [pc, #260]	; 4001e424 <CyU3PUsbStall+0x388>
4001e31c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e320:	ea00000c 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e324:	e3550000 	cmp	r5, #0
4001e328:	0a000005 	beq	4001e344 <CyU3PUsbStall+0x2a8>
4001e32c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e428 <CyU3PUsbStall+0x38c>
4001e330:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e334:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e338:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e428 <CyU3PUsbStall+0x38c>
4001e33c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e340:	ea000004 	b	4001e358 <CyU3PUsbStall+0x2bc>
4001e344:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e428 <CyU3PUsbStall+0x38c>
4001e348:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e34c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e350:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e428 <CyU3PUsbStall+0x38c>
4001e354:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e358:	e3560000 	cmp	r6, #0
4001e35c:	0a000023 	beq	4001e3f0 <CyU3PUsbStall+0x354>
4001e360:	e3550000 	cmp	r5, #0
4001e364:	1a000021 	bne	4001e3f0 <CyU3PUsbStall+0x354>
4001e368:	e59f0090 	ldr	r0, [pc, #144]	; 4001e400 <CyU3PUsbStall+0x364>
4001e36c:	e5d00009 	ldrb	r0, [r0, #9]
4001e370:	e3500003 	cmp	r0, #3
4001e374:	1a00000b 	bne	4001e3a8 <CyU3PUsbStall+0x30c>
4001e378:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e37c:	e3140080 	tst	r4, #128	; 0x80
4001e380:	0a000000 	beq	4001e388 <CyU3PUsbStall+0x2ec>
4001e384:	e3888010 	orr	r8, r8, #16
4001e388:	e59f0078 	ldr	r0, [pc, #120]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e38c:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e390:	e1a00000 	nop			; (mov r0, r0)
4001e394:	e59f006c 	ldr	r0, [pc, #108]	; 4001e408 <CyU3PUsbStall+0x36c>
4001e398:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e39c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e3a0:	0afffffb 	beq	4001e394 <CyU3PUsbStall+0x2f8>
4001e3a4:	ea000011 	b	4001e3f0 <CyU3PUsbStall+0x354>
4001e3a8:	e3140080 	tst	r4, #128	; 0x80
4001e3ac:	0a000000 	beq	4001e3b4 <CyU3PUsbStall+0x318>
4001e3b0:	e3877010 	orr	r7, r7, #16
4001e3b4:	e59f005c 	ldr	r0, [pc, #92]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e3b8:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e3bc:	e1a00000 	nop			; (mov r0, r0)
4001e3c0:	e59f0050 	ldr	r0, [pc, #80]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e3c4:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e3c8:	e3100c01 	tst	r0, #256	; 0x100
4001e3cc:	0afffffb 	beq	4001e3c0 <CyU3PUsbStall+0x324>
4001e3d0:	e3877020 	orr	r7, r7, #32
4001e3d4:	e59f003c 	ldr	r0, [pc, #60]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e3d8:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e3dc:	e1a00000 	nop			; (mov r0, r0)
4001e3e0:	e59f0030 	ldr	r0, [pc, #48]	; 4001e418 <CyU3PUsbStall+0x37c>
4001e3e4:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e3e8:	e3100c01 	tst	r0, #256	; 0x100
4001e3ec:	0afffffb 	beq	4001e3e0 <CyU3PUsbStall+0x344>
4001e3f0:	e59f000c 	ldr	r0, [pc, #12]	; 4001e404 <CyU3PUsbStall+0x368>
4001e3f4:	ebffafe7 	bl	4000a398 <_txe_mutex_put>
4001e3f8:	e3a00000 	mov	r0, #0
4001e3fc:	eaffff31 	b	4001e0c8 <CyU3PUsbStall+0x2c>
4001e400:	40031d40 	.word	0x40031d40
4001e404:	40031ee0 	.word	0x40031ee0
4001e408:	e0033000 	.word	0xe0033000
4001e40c:	40030db0 	.word	0x40030db0
4001e410:	40030db4 	.word	0x40030db4
4001e414:	400326a0 	.word	0x400326a0
4001e418:	e0031000 	.word	0xe0031000
4001e41c:	e0033500 	.word	0xe0033500
4001e420:	e0033600 	.word	0xe0033600
4001e424:	e0031418 	.word	0xe0031418
4001e428:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e42c <CyU3PUsbStart>:
4001e42c:	e92d4070 	push	{r4, r5, r6, lr}
4001e430:	e59f0324 	ldr	r0, [pc, #804]	; 4001e75c <CyU3PUsbStart+0x330>
4001e434:	e5900000 	ldr	r0, [r0]
4001e438:	e3500000 	cmp	r0, #0
4001e43c:	1a000001 	bne	4001e448 <CyU3PUsbStart+0x1c>
4001e440:	e3a00010 	mov	r0, #16
4001e444:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e448:	e59f0310 	ldr	r0, [pc, #784]	; 4001e760 <CyU3PUsbStart+0x334>
4001e44c:	e5d00008 	ldrb	r0, [r0, #8]
4001e450:	e3500000 	cmp	r0, #0
4001e454:	0a000001 	beq	4001e460 <CyU3PUsbStart+0x34>
4001e458:	e3a00043 	mov	r0, #67	; 0x43
4001e45c:	eafffff8 	b	4001e444 <CyU3PUsbStart+0x18>
4001e460:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e764 <CyU3PUsbStart+0x338>
4001e464:	e5900000 	ldr	r0, [r0]
4001e468:	e3500000 	cmp	r0, #0
4001e46c:	0a00006b 	beq	4001e620 <CyU3PUsbStart+0x1f4>
4001e470:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e768 <CyU3PUsbStart+0x33c>
4001e474:	eb00059e 	bl	4001faf4 <CyU3PUibSocketInit>
4001e478:	ebfff98c 	bl	4001cab0 <CyU3PUsbCreateDmaChannels>
4001e47c:	e1a04000 	mov	r4, r0
4001e480:	e3540000 	cmp	r4, #0
4001e484:	0a000001 	beq	4001e490 <CyU3PUsbStart+0x64>
4001e488:	e1a00004 	mov	r0, r4
4001e48c:	eaffffec 	b	4001e444 <CyU3PUsbStart+0x18>
4001e490:	e3a00001 	mov	r0, #1
4001e494:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e760 <CyU3PUsbStart+0x334>
4001e498:	e5c10008 	strb	r0, [r1, #8]
4001e49c:	e5950004 	ldr	r0, [r5, #4]
4001e4a0:	e5c10009 	strb	r0, [r1, #9]
4001e4a4:	e1a00005 	mov	r0, r5
4001e4a8:	ebfffaef 	bl	4001d06c <CyU3PUsbLoadBootloaderDescs>
4001e4ac:	e1a04000 	mov	r4, r0
4001e4b0:	e3540000 	cmp	r4, #0
4001e4b4:	0a000001 	beq	4001e4c0 <CyU3PUsbStart+0x94>
4001e4b8:	e1a00004 	mov	r0, r4
4001e4bc:	eaffffe0 	b	4001e444 <CyU3PUsbStart+0x18>
4001e4c0:	e3a00006 	mov	r0, #6
4001e4c4:	e59f1294 	ldr	r1, [pc, #660]	; 4001e760 <CyU3PUsbStart+0x334>
4001e4c8:	e5c10008 	strb	r0, [r1, #8]
4001e4cc:	e2810000 	add	r0, r1, #0
4001e4d0:	e5d00009 	ldrb	r0, [r0, #9]
4001e4d4:	e3500003 	cmp	r0, #3
4001e4d8:	1a000002 	bne	4001e4e8 <CyU3PUsbStart+0xbc>
4001e4dc:	e3a00001 	mov	r0, #1
4001e4e0:	e59f1284 	ldr	r1, [pc, #644]	; 4001e76c <CyU3PUsbStart+0x340>
4001e4e4:	e5810000 	str	r0, [r1]
4001e4e8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e4ec:	e59f127c 	ldr	r1, [pc, #636]	; 4001e770 <CyU3PUsbStart+0x344>
4001e4f0:	e1500001 	cmp	r0, r1
4001e4f4:	1a000015 	bne	4001e550 <CyU3PUsbStart+0x124>
4001e4f8:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e4fc:	e59f1270 	ldr	r1, [pc, #624]	; 4001e774 <CyU3PUsbStart+0x348>
4001e500:	e1500001 	cmp	r0, r1
4001e504:	3a000007 	bcc	4001e528 <CyU3PUsbStart+0xfc>
4001e508:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e50c:	e3500000 	cmp	r0, #0
4001e510:	0a000001 	beq	4001e51c <CyU3PUsbStart+0xf0>
4001e514:	e3a00001 	mov	r0, #1
4001e518:	ea000000 	b	4001e520 <CyU3PUsbStart+0xf4>
4001e51c:	e3a00000 	mov	r0, #0
4001e520:	e59f1238 	ldr	r1, [pc, #568]	; 4001e760 <CyU3PUsbStart+0x334>
4001e524:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e528:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e52c:	e59f1244 	ldr	r1, [pc, #580]	; 4001e778 <CyU3PUsbStart+0x34c>
4001e530:	e1500001 	cmp	r0, r1
4001e534:	3a000008 	bcc	4001e55c <CyU3PUsbStart+0x130>
4001e538:	e59f023c 	ldr	r0, [pc, #572]	; 4001e77c <CyU3PUsbStart+0x350>
4001e53c:	e5900000 	ldr	r0, [r0]
4001e540:	e3800002 	orr	r0, r0, #2
4001e544:	e59f1230 	ldr	r1, [pc, #560]	; 4001e77c <CyU3PUsbStart+0x350>
4001e548:	e5810000 	str	r0, [r1]
4001e54c:	ea000002 	b	4001e55c <CyU3PUsbStart+0x130>
4001e550:	e3a00001 	mov	r0, #1
4001e554:	e59f1204 	ldr	r1, [pc, #516]	; 4001e760 <CyU3PUsbStart+0x334>
4001e558:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e55c:	e3e00000 	mvn	r0, #0
4001e560:	e59f1218 	ldr	r1, [pc, #536]	; 4001e780 <CyU3PUsbStart+0x354>
4001e564:	e5810004 	str	r0, [r1, #4]
4001e568:	e59f0214 	ldr	r0, [pc, #532]	; 4001e784 <CyU3PUsbStart+0x358>
4001e56c:	e5810008 	str	r0, [r1, #8]
4001e570:	e3e00000 	mvn	r0, #0
4001e574:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e578:	e59f0208 	ldr	r0, [pc, #520]	; 4001e788 <CyU3PUsbStart+0x35c>
4001e57c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e580:	e3a00000 	mov	r0, #0
4001e584:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e588:	e3e00000 	mvn	r0, #0
4001e58c:	e0811680 	add	r1, r1, r0, lsl #13
4001e590:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e594:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e78c <CyU3PUsbStart+0x360>
4001e598:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e59c:	e3e00000 	mvn	r0, #0
4001e5a0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e5a4:	e3a00000 	mov	r0, #0
4001e5a8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e5ac:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e5b0:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e5b4:	e5810004 	str	r0, [r1, #4]
4001e5b8:	e3a00008 	mov	r0, #8
4001e5bc:	eb000f42 	bl	400222cc <CyU3PVicEnableInt>
4001e5c0:	e3a00009 	mov	r0, #9
4001e5c4:	eb000f40 	bl	400222cc <CyU3PVicEnableInt>
4001e5c8:	ebfffa8c 	bl	4001d000 <CyU3PUsbGetSpeed>
4001e5cc:	e1a06000 	mov	r6, r0
4001e5d0:	eb0006b5 	bl	400200ac <CyU3PUsbEpPrepare>
4001e5d4:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e77c <CyU3PUsbStart+0x350>
4001e5d8:	e5900000 	ldr	r0, [r0]
4001e5dc:	e3100002 	tst	r0, #2
4001e5e0:	1a000003 	bne	4001e5f4 <CyU3PUsbStart+0x1c8>
4001e5e4:	e3e00000 	mvn	r0, #0
4001e5e8:	e5850000 	str	r0, [r5]
4001e5ec:	e3a00000 	mov	r0, #0
4001e5f0:	e585000c 	str	r0, [r5, #12]
4001e5f4:	e3e00000 	mvn	r0, #0
4001e5f8:	e59f1190 	ldr	r1, [pc, #400]	; 4001e790 <CyU3PUsbStart+0x364>
4001e5fc:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e600:	e3a00b01 	mov	r0, #1024	; 0x400
4001e604:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e608:	e59f1150 	ldr	r1, [pc, #336]	; 4001e760 <CyU3PUsbStart+0x334>
4001e60c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e610:	e3a00015 	mov	r0, #21
4001e614:	eb000f2c 	bl	400222cc <CyU3PVicEnableInt>
4001e618:	e3a000fe 	mov	r0, #254	; 0xfe
4001e61c:	eaffff88 	b	4001e444 <CyU3PUsbStart+0x18>
4001e620:	e1a00000 	nop			; (mov r0, r0)
4001e624:	e59f0168 	ldr	r0, [pc, #360]	; 4001e794 <CyU3PUsbStart+0x368>
4001e628:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e62c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e630:	e59f115c 	ldr	r1, [pc, #348]	; 4001e794 <CyU3PUsbStart+0x368>
4001e634:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e638:	e3a00002 	mov	r0, #2
4001e63c:	ebffd49f 	bl	400138c0 <CyU3PBusyWait>
4001e640:	e59f014c 	ldr	r0, [pc, #332]	; 4001e794 <CyU3PUsbStart+0x368>
4001e644:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e648:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e64c:	e59f1140 	ldr	r1, [pc, #320]	; 4001e794 <CyU3PUsbStart+0x368>
4001e650:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e654:	e1a00001 	mov	r0, r1
4001e658:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e65c:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e660:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e664:	e1a00001 	mov	r0, r1
4001e668:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e66c:	e3800008 	orr	r0, r0, #8
4001e670:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e674:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e678:	e5900008 	ldr	r0, [r0, #8]
4001e67c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e680:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e684:	e5810008 	str	r0, [r1, #8]
4001e688:	e3a00002 	mov	r0, #2
4001e68c:	ebffd48b 	bl	400138c0 <CyU3PBusyWait>
4001e690:	ebfff645 	bl	4001bfac <CyU3POtgIsDeviceMode>
4001e694:	e3500000 	cmp	r0, #0
4001e698:	0a000002 	beq	4001e6a8 <CyU3PUsbStart+0x27c>
4001e69c:	ebfffa5b 	bl	4001d010 <CyU3PUsbHostIsStarted>
4001e6a0:	e3500000 	cmp	r0, #0
4001e6a4:	0a000001 	beq	4001e6b0 <CyU3PUsbStart+0x284>
4001e6a8:	e3a00047 	mov	r0, #71	; 0x47
4001e6ac:	eaffff64 	b	4001e444 <CyU3PUsbStart+0x18>
4001e6b0:	e3a01002 	mov	r1, #2
4001e6b4:	e1a00001 	mov	r0, r1
4001e6b8:	ebfff820 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001e6bc:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e798 <CyU3PUsbStart+0x36c>
4001e6c0:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e79c <CyU3PUsbStart+0x370>
4001e6c4:	e5810000 	str	r0, [r1]
4001e6c8:	ebfff633 	bl	4001bf9c <CyU3POtgGetMode>
4001e6cc:	e3500000 	cmp	r0, #0
4001e6d0:	1a000003 	bne	4001e6e4 <CyU3PUsbStart+0x2b8>
4001e6d4:	ebfffc09 	bl	4001d700 <CyU3PUsbPowerOn>
4001e6d8:	e3a00000 	mov	r0, #0
4001e6dc:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e794 <CyU3PUsbStart+0x368>
4001e6e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e6e4:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e7a0 <CyU3PUsbStart+0x374>
4001e6e8:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e794 <CyU3PUsbStart+0x368>
4001e6ec:	e5810008 	str	r0, [r1, #8]
4001e6f0:	e00108c0 	and	r0, r1, r0, asr #17
4001e6f4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e6f8:	e3800008 	orr	r0, r0, #8
4001e6fc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e700:	eb000662 	bl	40020090 <CyU3PUsbDescInit>
4001e704:	ebfff8e9 	bl	4001cab0 <CyU3PUsbCreateDmaChannels>
4001e708:	e1a04000 	mov	r4, r0
4001e70c:	e3540000 	cmp	r4, #0
4001e710:	0a000001 	beq	4001e71c <CyU3PUsbStart+0x2f0>
4001e714:	e1a00004 	mov	r0, r4
4001e718:	eaffff49 	b	4001e444 <CyU3PUsbStart+0x18>
4001e71c:	e3a00001 	mov	r0, #1
4001e720:	e59f1038 	ldr	r1, [pc, #56]	; 4001e760 <CyU3PUsbStart+0x334>
4001e724:	e5c10008 	strb	r0, [r1, #8]
4001e728:	e2810000 	add	r0, r1, #0
4001e72c:	e5d00007 	ldrb	r0, [r0, #7]
4001e730:	e3500001 	cmp	r0, #1
4001e734:	1a000002 	bne	4001e744 <CyU3PUsbStart+0x318>
4001e738:	e3a00003 	mov	r0, #3
4001e73c:	e5c10008 	strb	r0, [r1, #8]
4001e740:	ea000002 	b	4001e750 <CyU3PUsbStart+0x324>
4001e744:	e3a00002 	mov	r0, #2
4001e748:	e59f1010 	ldr	r1, [pc, #16]	; 4001e760 <CyU3PUsbStart+0x334>
4001e74c:	e5c10008 	strb	r0, [r1, #8]
4001e750:	ebfff81b 	bl	4001c7c4 <CyU3PUibInit>
4001e754:	e1a00004 	mov	r0, r4
4001e758:	eaffff39 	b	4001e444 <CyU3PUsbStart+0x18>
4001e75c:	40030d60 	.word	0x40030d60
4001e760:	40031d40 	.word	0x40031d40
4001e764:	40030c68 	.word	0x40030c68
4001e768:	40002000 	.word	0x40002000
4001e76c:	40030d70 	.word	0x40030d70
4001e770:	42335846 	.word	0x42335846
4001e774:	00010101 	.word	0x00010101
4001e778:	00010200 	.word	0x00010200
4001e77c:	40030d44 	.word	0x40030d44
4001e780:	e0033000 	.word	0xe0033000
4001e784:	00038081 	.word	0x00038081
4001e788:	00004a3d 	.word	0x00004a3d
4001e78c:	0000095c 	.word	0x0000095c
4001e790:	e0051000 	.word	0xe0051000
4001e794:	e0031000 	.word	0xe0031000
4001e798:	de001011 	.word	0xde001011
4001e79c:	e0050000 	.word	0xe0050000
4001e7a0:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e7a4 <GetUsbLinkActive>:
4001e7a4:	e92d4010 	push	{r4, lr}
4001e7a8:	e59f0064 	ldr	r0, [pc, #100]	; 4001e814 <GetUsbLinkActive+0x70>
4001e7ac:	e5d00009 	ldrb	r0, [r0, #9]
4001e7b0:	e3500003 	cmp	r0, #3
4001e7b4:	1a000015 	bne	4001e810 <GetUsbLinkActive+0x6c>
4001e7b8:	e59f0058 	ldr	r0, [pc, #88]	; 4001e818 <GetUsbLinkActive+0x74>
4001e7bc:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e7c0:	e3c00004 	bic	r0, r0, #4
4001e7c4:	e59f104c 	ldr	r1, [pc, #76]	; 4001e818 <GetUsbLinkActive+0x74>
4001e7c8:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e7cc:	e1a00001 	mov	r0, r1
4001e7d0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e7d4:	e3c00004 	bic	r0, r0, #4
4001e7d8:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e7dc:	e59f0030 	ldr	r0, [pc, #48]	; 4001e814 <GetUsbLinkActive+0x70>
4001e7e0:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e7e4:	e3500000 	cmp	r0, #0
4001e7e8:	1a000008 	bne	4001e810 <GetUsbLinkActive+0x6c>
4001e7ec:	e1a00001 	mov	r0, r1
4001e7f0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e7f4:	e200403f 	and	r4, r0, #63	; 0x3f
4001e7f8:	e3540011 	cmp	r4, #17
4001e7fc:	0a000001 	beq	4001e808 <GetUsbLinkActive+0x64>
4001e800:	e3540012 	cmp	r4, #18
4001e804:	1a000001 	bne	4001e810 <GetUsbLinkActive+0x6c>
4001e808:	e3a00000 	mov	r0, #0
4001e80c:	ebfffdcd 	bl	4001df48 <CyU3PUsbSetLinkPowerState>
4001e810:	e8bd8010 	pop	{r4, pc}
4001e814:	40031d40 	.word	0x40031d40
4001e818:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e81c <CyU3PHsGrantIntrHandler>:
4001e81c:	e92d4010 	push	{r4, lr}
4001e820:	e59f005c 	ldr	r0, [pc, #92]	; 4001e884 <CyU3PHsGrantIntrHandler+0x68>
4001e824:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e828:	e3100080 	tst	r0, #128	; 0x80
4001e82c:	0a000013 	beq	4001e880 <CyU3PHsGrantIntrHandler+0x64>
4001e830:	e59f0050 	ldr	r0, [pc, #80]	; 4001e888 <CyU3PHsGrantIntrHandler+0x6c>
4001e834:	e5900014 	ldr	r0, [r0, #20]
4001e838:	e59f1048 	ldr	r1, [pc, #72]	; 4001e888 <CyU3PHsGrantIntrHandler+0x6c>
4001e83c:	e581000c 	str	r0, [r1, #12]
4001e840:	e2810000 	add	r0, r1, #0
4001e844:	e5900018 	ldr	r0, [r0, #24]
4001e848:	e5810010 	str	r0, [r1, #16]
4001e84c:	e59f0038 	ldr	r0, [pc, #56]	; 4001e88c <CyU3PHsGrantIntrHandler+0x70>
4001e850:	e5900000 	ldr	r0, [r0]
4001e854:	e3500000 	cmp	r0, #0
4001e858:	0a000004 	beq	4001e870 <CyU3PHsGrantIntrHandler+0x54>
4001e85c:	e3a01001 	mov	r1, #1
4001e860:	e3a00006 	mov	r0, #6
4001e864:	e59f2020 	ldr	r2, [pc, #32]	; 4001e88c <CyU3PHsGrantIntrHandler+0x70>
4001e868:	e5922000 	ldr	r2, [r2]
4001e86c:	e12fff32 	blx	r2
4001e870:	e3a00002 	mov	r0, #2
4001e874:	e59f1014 	ldr	r1, [pc, #20]	; 4001e890 <CyU3PHsGrantIntrHandler+0x74>
4001e878:	e5c10009 	strb	r0, [r1, #9]
4001e87c:	eb00060a 	bl	400200ac <CyU3PUsbEpPrepare>
4001e880:	e8bd8010 	pop	{r4, pc}
4001e884:	e0031000 	.word	0xe0031000
4001e888:	40031f98 	.word	0x40031f98
4001e88c:	40030d9c 	.word	0x40030d9c
4001e890:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e894 <CyU3PUibApplicationDefine>:
4001e894:	e92d4030 	push	{r4, r5, lr}
4001e898:	e24dd01c 	sub	sp, sp, #28
4001e89c:	eb000178 	bl	4001ee84 <CyU3PUibInitVars>
4001e8a0:	e3a00b01 	mov	r0, #1024	; 0x400
4001e8a4:	ebff9372 	bl	40003674 <CyU3PMemAlloc>
4001e8a8:	e1a05000 	mov	r5, r0
4001e8ac:	e3550000 	cmp	r5, #0
4001e8b0:	0a00004f 	beq	4001e9f4 <CyU3PUibApplicationDefine+0x160>
4001e8b4:	e3a030a8 	mov	r3, #168	; 0xa8
4001e8b8:	e3a02000 	mov	r2, #0
4001e8bc:	e3a00004 	mov	r0, #4
4001e8c0:	e58d000c 	str	r0, [sp, #12]
4001e8c4:	e58d2010 	str	r2, [sp, #16]
4001e8c8:	e58d2014 	str	r2, [sp, #20]
4001e8cc:	e58d3018 	str	r3, [sp, #24]
4001e8d0:	e3a02b01 	mov	r2, #1024	; 0x400
4001e8d4:	e3a03000 	mov	r3, #0
4001e8d8:	e58d2004 	str	r2, [sp, #4]
4001e8dc:	e59f2118 	ldr	r2, [pc, #280]	; 4001e9fc <CyU3PUibApplicationDefine+0x168>
4001e8e0:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e8e4:	e58d0008 	str	r0, [sp, #8]
4001e8e8:	e59f0120 	ldr	r0, [pc, #288]	; 4001ea10 <CyU3PUibApplicationDefine+0x17c>
4001e8ec:	e58d5000 	str	r5, [sp]
4001e8f0:	ebffafb6 	bl	4000a7d0 <_txe_thread_create>
4001e8f4:	e1a04000 	mov	r4, r0
4001e8f8:	e3540000 	cmp	r4, #0
4001e8fc:	1a00003c 	bne	4001e9f4 <CyU3PUibApplicationDefine+0x160>
4001e900:	e3a00080 	mov	r0, #128	; 0x80
4001e904:	ebff935a 	bl	40003674 <CyU3PMemAlloc>
4001e908:	e1a05000 	mov	r5, r0
4001e90c:	e3550000 	cmp	r5, #0
4001e910:	0a000009 	beq	4001e93c <CyU3PUibApplicationDefine+0xa8>
4001e914:	e3a0303c 	mov	r3, #60	; 0x3c
4001e918:	e3a02080 	mov	r2, #128	; 0x80
4001e91c:	e1cd20f0 	strd	r2, [sp]
4001e920:	e1a03005 	mov	r3, r5
4001e924:	e3a02004 	mov	r2, #4
4001e928:	e3a01000 	mov	r1, #0
4001e92c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001ea14 <CyU3PUibApplicationDefine+0x180>
4001e930:	ebffaec0 	bl	4000a438 <_txe_queue_create>
4001e934:	e1a04000 	mov	r4, r0
4001e938:	ea000000 	b	4001e940 <CyU3PUibApplicationDefine+0xac>
4001e93c:	e3a04010 	mov	r4, #16
4001e940:	e3540000 	cmp	r4, #0
4001e944:	1a000004 	bne	4001e95c <CyU3PUibApplicationDefine+0xc8>
4001e948:	e3a02028 	mov	r2, #40	; 0x28
4001e94c:	e3a01000 	mov	r1, #0
4001e950:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ea18 <CyU3PUibApplicationDefine+0x184>
4001e954:	ebffad22 	bl	40009de4 <_txe_event_flags_create>
4001e958:	e1a04000 	mov	r4, r0
4001e95c:	e3540000 	cmp	r4, #0
4001e960:	1a000005 	bne	4001e97c <CyU3PUibApplicationDefine+0xe8>
4001e964:	e3a03038 	mov	r3, #56	; 0x38
4001e968:	e3a02000 	mov	r2, #0
4001e96c:	e1a01002 	mov	r1, r2
4001e970:	e59f00a4 	ldr	r0, [pc, #164]	; 4001ea1c <CyU3PUibApplicationDefine+0x188>
4001e974:	ebffadd4 	bl	4000a0cc <_txe_mutex_create>
4001e978:	e1a04000 	mov	r4, r0
4001e97c:	e3540000 	cmp	r4, #0
4001e980:	1a00000a 	bne	4001e9b0 <CyU3PUibApplicationDefine+0x11c>
4001e984:	e3a0302c 	mov	r3, #44	; 0x2c
4001e988:	e3a02000 	mov	r2, #0
4001e98c:	e3a00064 	mov	r0, #100	; 0x64
4001e990:	e88d0005 	stm	sp, {r0, r2}
4001e994:	e1cd20f8 	strd	r2, [sp, #8]
4001e998:	e1a03002 	mov	r3, r2
4001e99c:	e59f207c 	ldr	r2, [pc, #124]	; 4001ea20 <CyU3PUibApplicationDefine+0x18c>
4001e9a0:	e3a01000 	mov	r1, #0
4001e9a4:	e59f0078 	ldr	r0, [pc, #120]	; 4001ea24 <CyU3PUibApplicationDefine+0x190>
4001e9a8:	ebffb0b5 	bl	4000ac84 <_txe_timer_create>
4001e9ac:	e1a04000 	mov	r4, r0
4001e9b0:	e3540000 	cmp	r4, #0
4001e9b4:	1a00000a 	bne	4001e9e4 <CyU3PUibApplicationDefine+0x150>
4001e9b8:	e3a0302c 	mov	r3, #44	; 0x2c
4001e9bc:	e3a02001 	mov	r2, #1
4001e9c0:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e9c4:	e58d1000 	str	r1, [sp]
4001e9c8:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e9cc:	e3a03000 	mov	r3, #0
4001e9d0:	e59f2050 	ldr	r2, [pc, #80]	; 4001ea28 <CyU3PUibApplicationDefine+0x194>
4001e9d4:	e1a01003 	mov	r1, r3
4001e9d8:	e59f004c 	ldr	r0, [pc, #76]	; 4001ea2c <CyU3PUibApplicationDefine+0x198>
4001e9dc:	ebffb0a8 	bl	4000ac84 <_txe_timer_create>
4001e9e0:	e1a04000 	mov	r4, r0
4001e9e4:	e3540000 	cmp	r4, #0
4001e9e8:	1a000001 	bne	4001e9f4 <CyU3PUibApplicationDefine+0x160>
4001e9ec:	e59f001c 	ldr	r0, [pc, #28]	; 4001ea10 <CyU3PUibApplicationDefine+0x17c>
4001e9f0:	ebffb061 	bl	4000ab7c <_txe_thread_resume>
4001e9f4:	e28dd01c 	add	sp, sp, #28
4001e9f8:	e8bd8030 	pop	{r4, r5, pc}
4001e9fc:	4001fc00 	.word	0x4001fc00
4001ea00:	555f3430 	.word	0x555f3430
4001ea04:	545f4249 	.word	0x545f4249
4001ea08:	41455248 	.word	0x41455248
4001ea0c:	00000044 	.word	0x00000044
4001ea10:	40031dd4 	.word	0x40031dd4
4001ea14:	40031e7c 	.word	0x40031e7c
4001ea18:	40031eb8 	.word	0x40031eb8
4001ea1c:	40031ee0 	.word	0x40031ee0
4001ea20:	4001fb90 	.word	0x4001fb90
4001ea24:	400326a0 	.word	0x400326a0
4001ea28:	4001ef3c 	.word	0x4001ef3c
4001ea2c:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001ea30 <CyU3PUibDevCtrlEvtHandler>:
4001ea30:	e92d4010 	push	{r4, lr}
4001ea34:	e59f01c8 	ldr	r0, [pc, #456]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea38:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001ea3c:	e3140c01 	tst	r4, #256	; 0x100
4001ea40:	0a000008 	beq	4001ea68 <CyU3PUibDevCtrlEvtHandler+0x38>
4001ea44:	e3a00c01 	mov	r0, #256	; 0x100
4001ea48:	e59f11b4 	ldr	r1, [pc, #436]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea4c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea50:	eb000995 	bl	400210ac <CyU3PUsbResumeHandler>
4001ea54:	e59f01a8 	ldr	r0, [pc, #424]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea58:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea5c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001ea60:	e59f119c 	ldr	r1, [pc, #412]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea64:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea68:	e3140004 	tst	r4, #4
4001ea6c:	0a000008 	beq	4001ea94 <CyU3PUibDevCtrlEvtHandler+0x64>
4001ea70:	e3a00004 	mov	r0, #4
4001ea74:	e59f1188 	ldr	r1, [pc, #392]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea78:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea7c:	eb000d6c 	bl	40022034 <CyU3PUsbSuspendHandler>
4001ea80:	e59f017c 	ldr	r0, [pc, #380]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea84:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea88:	e3800004 	orr	r0, r0, #4
4001ea8c:	e59f1170 	ldr	r1, [pc, #368]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea90:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea94:	e3140008 	tst	r4, #8
4001ea98:	0a000008 	beq	4001eac0 <CyU3PUibDevCtrlEvtHandler+0x90>
4001ea9c:	e3a00008 	mov	r0, #8
4001eaa0:	e59f115c 	ldr	r1, [pc, #348]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eaa4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eaa8:	eb00092e 	bl	40020f68 <CyU3PUsbResetHandler>
4001eaac:	e59f0150 	ldr	r0, [pc, #336]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eab0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eab4:	e3800008 	orr	r0, r0, #8
4001eab8:	e59f1144 	ldr	r1, [pc, #324]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eabc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eac0:	e3140010 	tst	r4, #16
4001eac4:	0a000008 	beq	4001eaec <CyU3PUibDevCtrlEvtHandler+0xbc>
4001eac8:	e3a00010 	mov	r0, #16
4001eacc:	e59f1130 	ldr	r1, [pc, #304]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ead0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ead4:	ebffff50 	bl	4001e81c <CyU3PHsGrantIntrHandler>
4001ead8:	e59f0124 	ldr	r0, [pc, #292]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eadc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eae0:	e3800010 	orr	r0, r0, #16
4001eae4:	e59f1118 	ldr	r1, [pc, #280]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eae8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eaec:	e3140040 	tst	r4, #64	; 0x40
4001eaf0:	0a000018 	beq	4001eb58 <CyU3PUibDevCtrlEvtHandler+0x128>
4001eaf4:	e59f010c 	ldr	r0, [pc, #268]	; 4001ec08 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eaf8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001eafc:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001eb00:	e59f1100 	ldr	r1, [pc, #256]	; 4001ec08 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eb04:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eb08:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001eb0c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001eb10:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001eb14:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001eb18:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001eb1c:	e1a00001 	mov	r0, r1
4001eb20:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001eb24:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001eb28:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001eb2c:	e3a00040 	mov	r0, #64	; 0x40
4001eb30:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb34:	e3a00001 	mov	r0, #1
4001eb38:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ec0c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb3c:	e5810014 	str	r0, [r1, #20]
4001eb40:	eb000b38 	bl	40021828 <CyU3PUsbSetupCommand>
4001eb44:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb48:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb4c:	e3800040 	orr	r0, r0, #64	; 0x40
4001eb50:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb54:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb58:	e3140080 	tst	r4, #128	; 0x80
4001eb5c:	0a000006 	beq	4001eb7c <CyU3PUibDevCtrlEvtHandler+0x14c>
4001eb60:	e3a00080 	mov	r0, #128	; 0x80
4001eb64:	e59f1098 	ldr	r1, [pc, #152]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb68:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb6c:	e1c10000 	bic	r0, r1, r0
4001eb70:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb74:	e3800080 	orr	r0, r0, #128	; 0x80
4001eb78:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb7c:	e3140b02 	tst	r4, #2048	; 0x800
4001eb80:	0a00001e 	beq	4001ec00 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001eb84:	e59f0080 	ldr	r0, [pc, #128]	; 4001ec0c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb88:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001eb8c:	e3500000 	cmp	r0, #0
4001eb90:	1a000002 	bne	4001eba0 <CyU3PUibDevCtrlEvtHandler+0x170>
4001eb94:	e3a00501 	mov	r0, #4194304	; 0x400000
4001eb98:	e59f1068 	ldr	r1, [pc, #104]	; 4001ec08 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eb9c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eba0:	e3a00b02 	mov	r0, #2048	; 0x800
4001eba4:	e59f1058 	ldr	r1, [pc, #88]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eba8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ebac:	e59f0058 	ldr	r0, [pc, #88]	; 4001ec0c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ebb0:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001ebb4:	e3500000 	cmp	r0, #0
4001ebb8:	0a00000b 	beq	4001ebec <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001ebbc:	e59f004c 	ldr	r0, [pc, #76]	; 4001ec10 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ebc0:	e5900000 	ldr	r0, [r0]
4001ebc4:	e3500000 	cmp	r0, #0
4001ebc8:	0a000004 	beq	4001ebe0 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001ebcc:	e3a01000 	mov	r1, #0
4001ebd0:	e3a0000a 	mov	r0, #10
4001ebd4:	e59f2034 	ldr	r2, [pc, #52]	; 4001ec10 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ebd8:	e5922000 	ldr	r2, [r2]
4001ebdc:	e12fff32 	blx	r2
4001ebe0:	e3a00000 	mov	r0, #0
4001ebe4:	e59f1020 	ldr	r1, [pc, #32]	; 4001ec0c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ebe8:	e5810040 	str	r0, [r1, #64]	; 0x40
4001ebec:	e59f0010 	ldr	r0, [pc, #16]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebf0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ebf4:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001ebf8:	e59f1004 	ldr	r1, [pc, #4]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebfc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ec00:	e8bd8010 	pop	{r4, pc}
4001ec04:	e0031000 	.word	0xe0031000
4001ec08:	e0032000 	.word	0xe0032000
4001ec0c:	40031d40 	.word	0x40031d40
4001ec10:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUibEPEvtHandler:

4001ec14 <CyU3PUibEPEvtHandler>:
4001ec14:	e92d4070 	push	{r4, r5, r6, lr}
4001ec18:	e59f0244 	ldr	r0, [pc, #580]	; 4001ee64 <CyU3PUibEPEvtHandler+0x250>
4001ec1c:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001ec20:	e59f123c 	ldr	r1, [pc, #572]	; 4001ee64 <CyU3PUibEPEvtHandler+0x250>
4001ec24:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001ec28:	e0004001 	and	r4, r0, r1
4001ec2c:	e59f0234 	ldr	r0, [pc, #564]	; 4001ee68 <CyU3PUibEPEvtHandler+0x254>
4001ec30:	e5900000 	ldr	r0, [r0]
4001ec34:	e0044000 	and	r4, r4, r0
4001ec38:	e3a05001 	mov	r5, #1
4001ec3c:	ea000080 	b	4001ee44 <CyU3PUibEPEvtHandler+0x230>
4001ec40:	e3a00001 	mov	r0, #1
4001ec44:	e1140510 	tst	r4, r0, lsl r5
4001ec48:	0a00003b 	beq	4001ed3c <CyU3PUibEPEvtHandler+0x128>
4001ec4c:	e59f0218 	ldr	r0, [pc, #536]	; 4001ee6c <CyU3PUibEPEvtHandler+0x258>
4001ec50:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ec54:	e59f0214 	ldr	r0, [pc, #532]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ec58:	e5900000 	ldr	r0, [r0]
4001ec5c:	e3500000 	cmp	r0, #0
4001ec60:	0a000033 	beq	4001ed34 <CyU3PUibEPEvtHandler+0x120>
4001ec64:	e59f0208 	ldr	r0, [pc, #520]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ec68:	e5900000 	ldr	r0, [r0]
4001ec6c:	e3100001 	tst	r0, #1
4001ec70:	0a000008 	beq	4001ec98 <CyU3PUibEPEvtHandler+0x84>
4001ec74:	e3160702 	tst	r6, #524288	; 0x80000
4001ec78:	0a000006 	beq	4001ec98 <CyU3PUibEPEvtHandler+0x84>
4001ec7c:	e3852080 	orr	r2, r5, #128	; 0x80
4001ec80:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ec84:	e5d01009 	ldrb	r1, [r0, #9]
4001ec88:	e3a00001 	mov	r0, #1
4001ec8c:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ec90:	e5933000 	ldr	r3, [r3]
4001ec94:	e12fff33 	blx	r3
4001ec98:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ec9c:	e5900000 	ldr	r0, [r0]
4001eca0:	e3100002 	tst	r0, #2
4001eca4:	0a000008 	beq	4001eccc <CyU3PUibEPEvtHandler+0xb8>
4001eca8:	e3160602 	tst	r6, #2097152	; 0x200000
4001ecac:	0a000006 	beq	4001eccc <CyU3PUibEPEvtHandler+0xb8>
4001ecb0:	e3852080 	orr	r2, r5, #128	; 0x80
4001ecb4:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ecb8:	e5d01009 	ldrb	r1, [r0, #9]
4001ecbc:	e3a00002 	mov	r0, #2
4001ecc0:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ecc4:	e5933000 	ldr	r3, [r3]
4001ecc8:	e12fff33 	blx	r3
4001eccc:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ecd0:	e5900000 	ldr	r0, [r0]
4001ecd4:	e3100004 	tst	r0, #4
4001ecd8:	0a000008 	beq	4001ed00 <CyU3PUibEPEvtHandler+0xec>
4001ecdc:	e3160501 	tst	r6, #4194304	; 0x400000
4001ece0:	0a000006 	beq	4001ed00 <CyU3PUibEPEvtHandler+0xec>
4001ece4:	e3852080 	orr	r2, r5, #128	; 0x80
4001ece8:	e59f0188 	ldr	r0, [pc, #392]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ecec:	e5d01009 	ldrb	r1, [r0, #9]
4001ecf0:	e3a00004 	mov	r0, #4
4001ecf4:	e59f3174 	ldr	r3, [pc, #372]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ecf8:	e5933000 	ldr	r3, [r3]
4001ecfc:	e12fff33 	blx	r3
4001ed00:	e59f016c 	ldr	r0, [pc, #364]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ed04:	e5900000 	ldr	r0, [r0]
4001ed08:	e3100008 	tst	r0, #8
4001ed0c:	0a000008 	beq	4001ed34 <CyU3PUibEPEvtHandler+0x120>
4001ed10:	e3160502 	tst	r6, #8388608	; 0x800000
4001ed14:	0a000006 	beq	4001ed34 <CyU3PUibEPEvtHandler+0x120>
4001ed18:	e3852080 	orr	r2, r5, #128	; 0x80
4001ed1c:	e59f0154 	ldr	r0, [pc, #340]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ed20:	e5d01009 	ldrb	r1, [r0, #9]
4001ed24:	e3a00008 	mov	r0, #8
4001ed28:	e59f3140 	ldr	r3, [pc, #320]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ed2c:	e5933000 	ldr	r3, [r3]
4001ed30:	e12fff33 	blx	r3
4001ed34:	e59f0130 	ldr	r0, [pc, #304]	; 4001ee6c <CyU3PUibEPEvtHandler+0x258>
4001ed38:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ed3c:	e2850010 	add	r0, r5, #16
4001ed40:	e3a01001 	mov	r1, #1
4001ed44:	e1140011 	tst	r4, r1, lsl r0
4001ed48:	0a00003b 	beq	4001ee3c <CyU3PUibEPEvtHandler+0x228>
4001ed4c:	e59f0128 	ldr	r0, [pc, #296]	; 4001ee7c <CyU3PUibEPEvtHandler+0x268>
4001ed50:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ed54:	e59f0114 	ldr	r0, [pc, #276]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ed58:	e5900000 	ldr	r0, [r0]
4001ed5c:	e3500000 	cmp	r0, #0
4001ed60:	0a000033 	beq	4001ee34 <CyU3PUibEPEvtHandler+0x220>
4001ed64:	e59f0108 	ldr	r0, [pc, #264]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ed68:	e5900000 	ldr	r0, [r0]
4001ed6c:	e3100001 	tst	r0, #1
4001ed70:	0a000008 	beq	4001ed98 <CyU3PUibEPEvtHandler+0x184>
4001ed74:	e3160702 	tst	r6, #524288	; 0x80000
4001ed78:	0a000006 	beq	4001ed98 <CyU3PUibEPEvtHandler+0x184>
4001ed7c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ed80:	e5d01009 	ldrb	r1, [r0, #9]
4001ed84:	e1a02005 	mov	r2, r5
4001ed88:	e3a00001 	mov	r0, #1
4001ed8c:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ed90:	e5933000 	ldr	r3, [r3]
4001ed94:	e12fff33 	blx	r3
4001ed98:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ed9c:	e5900000 	ldr	r0, [r0]
4001eda0:	e3100002 	tst	r0, #2
4001eda4:	0a000008 	beq	4001edcc <CyU3PUibEPEvtHandler+0x1b8>
4001eda8:	e3160602 	tst	r6, #2097152	; 0x200000
4001edac:	0a000006 	beq	4001edcc <CyU3PUibEPEvtHandler+0x1b8>
4001edb0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001edb4:	e5d01009 	ldrb	r1, [r0, #9]
4001edb8:	e1a02005 	mov	r2, r5
4001edbc:	e3a00002 	mov	r0, #2
4001edc0:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001edc4:	e5933000 	ldr	r3, [r3]
4001edc8:	e12fff33 	blx	r3
4001edcc:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001edd0:	e5900000 	ldr	r0, [r0]
4001edd4:	e3100004 	tst	r0, #4
4001edd8:	0a000008 	beq	4001ee00 <CyU3PUibEPEvtHandler+0x1ec>
4001eddc:	e3160501 	tst	r6, #4194304	; 0x400000
4001ede0:	0a000006 	beq	4001ee00 <CyU3PUibEPEvtHandler+0x1ec>
4001ede4:	e59f008c 	ldr	r0, [pc, #140]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ede8:	e5d01009 	ldrb	r1, [r0, #9]
4001edec:	e1a02005 	mov	r2, r5
4001edf0:	e3a00004 	mov	r0, #4
4001edf4:	e59f3074 	ldr	r3, [pc, #116]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001edf8:	e5933000 	ldr	r3, [r3]
4001edfc:	e12fff33 	blx	r3
4001ee00:	e59f006c 	ldr	r0, [pc, #108]	; 4001ee74 <CyU3PUibEPEvtHandler+0x260>
4001ee04:	e5900000 	ldr	r0, [r0]
4001ee08:	e3100008 	tst	r0, #8
4001ee0c:	0a000008 	beq	4001ee34 <CyU3PUibEPEvtHandler+0x220>
4001ee10:	e3160502 	tst	r6, #8388608	; 0x800000
4001ee14:	0a000006 	beq	4001ee34 <CyU3PUibEPEvtHandler+0x220>
4001ee18:	e59f0058 	ldr	r0, [pc, #88]	; 4001ee78 <CyU3PUibEPEvtHandler+0x264>
4001ee1c:	e5d01009 	ldrb	r1, [r0, #9]
4001ee20:	e1a02005 	mov	r2, r5
4001ee24:	e3a00008 	mov	r0, #8
4001ee28:	e59f3040 	ldr	r3, [pc, #64]	; 4001ee70 <CyU3PUibEPEvtHandler+0x25c>
4001ee2c:	e5933000 	ldr	r3, [r3]
4001ee30:	e12fff33 	blx	r3
4001ee34:	e59f0040 	ldr	r0, [pc, #64]	; 4001ee7c <CyU3PUibEPEvtHandler+0x268>
4001ee38:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ee3c:	e2850001 	add	r0, r5, #1
4001ee40:	e20050ff 	and	r5, r0, #255	; 0xff
4001ee44:	e3550010 	cmp	r5, #16
4001ee48:	baffff7c 	blt	4001ec40 <CyU3PUibEPEvtHandler+0x2c>
4001ee4c:	e59f002c 	ldr	r0, [pc, #44]	; 4001ee80 <CyU3PUibEPEvtHandler+0x26c>
4001ee50:	e5900004 	ldr	r0, [r0, #4]
4001ee54:	e3800010 	orr	r0, r0, #16
4001ee58:	e59f1020 	ldr	r1, [pc, #32]	; 4001ee80 <CyU3PUibEPEvtHandler+0x26c>
4001ee5c:	e5810004 	str	r0, [r1, #4]
4001ee60:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ee64:	e0031000 	.word	0xe0031000
4001ee68:	40030d80 	.word	0x40030d80
4001ee6c:	e0031418 	.word	0xe0031418
4001ee70:	40030d78 	.word	0x40030d78
4001ee74:	40030d7c 	.word	0x40030d7c
4001ee78:	40031d40 	.word	0x40031d40
4001ee7c:	e0031498 	.word	0xe0031498
4001ee80:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ee84 <CyU3PUibInitVars>:
4001ee84:	e92d4010 	push	{r4, lr}
4001ee88:	e3a0207c 	mov	r2, #124	; 0x7c
4001ee8c:	e3a01000 	mov	r1, #0
4001ee90:	e59f0070 	ldr	r0, [pc, #112]	; 4001ef08 <CyU3PUibInitVars+0x84>
4001ee94:	ebff9207 	bl	400036b8 <CyU3PMemSet>
4001ee98:	e3a02074 	mov	r2, #116	; 0x74
4001ee9c:	e3a01000 	mov	r1, #0
4001eea0:	e59f0064 	ldr	r0, [pc, #100]	; 4001ef0c <CyU3PUibInitVars+0x88>
4001eea4:	ebff9203 	bl	400036b8 <CyU3PMemSet>
4001eea8:	e3a00000 	mov	r0, #0
4001eeac:	e59f105c 	ldr	r1, [pc, #92]	; 4001ef10 <CyU3PUibInitVars+0x8c>
4001eeb0:	e5810000 	str	r0, [r1]
4001eeb4:	e59f1058 	ldr	r1, [pc, #88]	; 4001ef14 <CyU3PUibInitVars+0x90>
4001eeb8:	e5810000 	str	r0, [r1]
4001eebc:	e59f1054 	ldr	r1, [pc, #84]	; 4001ef18 <CyU3PUibInitVars+0x94>
4001eec0:	e5810000 	str	r0, [r1]
4001eec4:	e59f1050 	ldr	r1, [pc, #80]	; 4001ef1c <CyU3PUibInitVars+0x98>
4001eec8:	e5810000 	str	r0, [r1]
4001eecc:	e59f104c 	ldr	r1, [pc, #76]	; 4001ef20 <CyU3PUibInitVars+0x9c>
4001eed0:	e5810000 	str	r0, [r1]
4001eed4:	e59f1048 	ldr	r1, [pc, #72]	; 4001ef24 <CyU3PUibInitVars+0xa0>
4001eed8:	e5810000 	str	r0, [r1]
4001eedc:	e59f1044 	ldr	r1, [pc, #68]	; 4001ef28 <CyU3PUibInitVars+0xa4>
4001eee0:	e5810000 	str	r0, [r1]
4001eee4:	e59f1040 	ldr	r1, [pc, #64]	; 4001ef2c <CyU3PUibInitVars+0xa8>
4001eee8:	e5810000 	str	r0, [r1]
4001eeec:	e59f103c 	ldr	r1, [pc, #60]	; 4001ef30 <CyU3PUibInitVars+0xac>
4001eef0:	e5810000 	str	r0, [r1]
4001eef4:	e59f1038 	ldr	r1, [pc, #56]	; 4001ef34 <CyU3PUibInitVars+0xb0>
4001eef8:	e5810000 	str	r0, [r1]
4001eefc:	e59f1034 	ldr	r1, [pc, #52]	; 4001ef38 <CyU3PUibInitVars+0xb4>
4001ef00:	e5810000 	str	r0, [r1]
4001ef04:	e8bd8010 	pop	{r4, pc}
4001ef08:	40031d40 	.word	0x40031d40
4001ef0c:	40031f98 	.word	0x40031f98
4001ef10:	40030d60 	.word	0x40030d60
4001ef14:	40030d64 	.word	0x40030d64
4001ef18:	40030d68 	.word	0x40030d68
4001ef1c:	40030db4 	.word	0x40030db4
4001ef20:	40030d9c 	.word	0x40030d9c
4001ef24:	40030da0 	.word	0x40030da0
4001ef28:	40030da4 	.word	0x40030da4
4001ef2c:	40030d78 	.word	0x40030d78
4001ef30:	40030d7c 	.word	0x40030d7c
4001ef34:	40030d80 	.word	0x40030d80
4001ef38:	40030d40 	.word	0x40030d40

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ef3c <CyU3PUibLnkErrClrTimerCb>:
4001ef3c:	e92d4010 	push	{r4, lr}
4001ef40:	e1a04000 	mov	r4, r0
4001ef44:	ebfff82d 	bl	4001d000 <CyU3PUsbGetSpeed>
4001ef48:	e3500003 	cmp	r0, #3
4001ef4c:	1a000003 	bne	4001ef60 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ef50:	e59f000c 	ldr	r0, [pc, #12]	; 4001ef64 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ef54:	e5900014 	ldr	r0, [r0, #20]
4001ef58:	e59f1008 	ldr	r1, [pc, #8]	; 4001ef68 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001ef5c:	e5810000 	str	r0, [r1]
4001ef60:	e8bd8010 	pop	{r4, pc}
4001ef64:	e0033000 	.word	0xe0033000
4001ef68:	40030d84 	.word	0x40030d84

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ef6c <CyU3PUibLnkIntrEvtHandler>:
4001ef6c:	e92d4010 	push	{r4, lr}
4001ef70:	e59f008c 	ldr	r0, [pc, #140]	; 4001f004 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef74:	e5904004 	ldr	r4, [r0, #4]
4001ef78:	e3140902 	tst	r4, #32768	; 0x8000
4001ef7c:	0a00000b 	beq	4001efb0 <CyU3PUibLnkIntrEvtHandler+0x44>
4001ef80:	e59f0080 	ldr	r0, [pc, #128]	; 4001f008 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ef84:	e5900000 	ldr	r0, [r0]
4001ef88:	e59f1074 	ldr	r1, [pc, #116]	; 4001f004 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef8c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001ef90:	eb000859 	bl	400210fc <CyU3PUsbSSConnecthandler>
4001ef94:	e3a00902 	mov	r0, #32768	; 0x8000
4001ef98:	e59f1064 	ldr	r1, [pc, #100]	; 4001f004 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef9c:	e5810004 	str	r0, [r1, #4]
4001efa0:	e1c10000 	bic	r0, r1, r0
4001efa4:	e5900008 	ldr	r0, [r0, #8]
4001efa8:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001efac:	e5810008 	str	r0, [r1, #8]
4001efb0:	e3140801 	tst	r4, #65536	; 0x10000
4001efb4:	0a000007 	beq	4001efd8 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001efb8:	eb0008cc 	bl	400212f0 <CyU3PUsbSSDisConnecthandler>
4001efbc:	e3a00801 	mov	r0, #65536	; 0x10000
4001efc0:	e59f103c 	ldr	r1, [pc, #60]	; 4001f004 <CyU3PUibLnkIntrEvtHandler+0x98>
4001efc4:	e5810004 	str	r0, [r1, #4]
4001efc8:	e1810000 	orr	r0, r1, r0
4001efcc:	e5900008 	ldr	r0, [r0, #8]
4001efd0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001efd4:	e5810008 	str	r0, [r1, #8]
4001efd8:	e3140802 	tst	r4, #131072	; 0x20000
4001efdc:	0a000007 	beq	4001f000 <CyU3PUibLnkIntrEvtHandler+0x94>
4001efe0:	eb000926 	bl	40021480 <CyU3PUsbSSReset>
4001efe4:	e3a00802 	mov	r0, #131072	; 0x20000
4001efe8:	e59f1014 	ldr	r1, [pc, #20]	; 4001f004 <CyU3PUibLnkIntrEvtHandler+0x98>
4001efec:	e5810004 	str	r0, [r1, #4]
4001eff0:	e1810000 	orr	r0, r1, r0
4001eff4:	e5900008 	ldr	r0, [r0, #8]
4001eff8:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001effc:	e5810008 	str	r0, [r1, #8]
4001f000:	e8bd8010 	pop	{r4, pc}
4001f004:	e0033000 	.word	0xe0033000
4001f008:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001f00c <CyU3PUibProtEpIntrEvtHandler>:
4001f00c:	e92d4070 	push	{r4, r5, r6, lr}
4001f010:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f014:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001f018:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f01c:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001f020:	e0005001 	and	r5, r0, r1
4001f024:	e3a04001 	mov	r4, #1
4001f028:	ea0000df 	b	4001f3ac <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001f02c:	e3a00001 	mov	r0, #1
4001f030:	e1150410 	tst	r5, r0, lsl r4
4001f034:	0a000081 	beq	4001f240 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001f038:	e59f0390 	ldr	r0, [pc, #912]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f03c:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f040:	e3160901 	tst	r6, #16384	; 0x4000
4001f044:	0a00002a 	beq	4001f0f4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f048:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f04c:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f050:	e3800002 	orr	r0, r0, #2
4001f054:	e59f1374 	ldr	r1, [pc, #884]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f058:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f05c:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001f060:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f064:	e1a01802 	lsl	r1, r2, #16
4001f068:	e1a01821 	lsr	r1, r1, #16
4001f06c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f070:	e3820080 	orr	r0, r2, #128	; 0x80
4001f074:	ebfffa90 	bl	4001dabc <CyU3PUsbSendNrdy>
4001f078:	e20410ff 	and	r1, r4, #255	; 0xff
4001f07c:	e3810080 	orr	r0, r1, #128	; 0x80
4001f080:	ebfff9a1 	bl	4001d70c <CyU3PUsbResetEp>
4001f084:	e3a0000a 	mov	r0, #10
4001f088:	ebffd20c 	bl	400138c0 <CyU3PBusyWait>
4001f08c:	e59f2340 	ldr	r2, [pc, #832]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001f090:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f094:	e1a01802 	lsl	r1, r2, #16
4001f098:	e1a01821 	lsr	r1, r1, #16
4001f09c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f0a0:	e3820080 	orr	r0, r2, #128	; 0x80
4001f0a4:	ebfffa47 	bl	4001d9c8 <CyU3PUsbSendErdy>
4001f0a8:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001f0ac:	e59f131c 	ldr	r1, [pc, #796]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f0b0:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f0b4:	e59f031c 	ldr	r0, [pc, #796]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f0b8:	e5900000 	ldr	r0, [r0]
4001f0bc:	e3100020 	tst	r0, #32
4001f0c0:	0a00000b 	beq	4001f0f4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f0c4:	e3a00001 	mov	r0, #1
4001f0c8:	e59f130c 	ldr	r1, [pc, #780]	; 4001f3dc <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f0cc:	e5911000 	ldr	r1, [r1]
4001f0d0:	e1110410 	tst	r1, r0, lsl r4
4001f0d4:	0a000006 	beq	4001f0f4 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f0d8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f0dc:	e3802080 	orr	r2, r0, #128	; 0x80
4001f0e0:	e3a01003 	mov	r1, #3
4001f0e4:	e3a00020 	mov	r0, #32
4001f0e8:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0ec:	e5933000 	ldr	r3, [r3]
4001f0f0:	e12fff33 	blx	r3
4001f0f4:	e3160801 	tst	r6, #65536	; 0x10000
4001f0f8:	0a000004 	beq	4001f110 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001f0fc:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f100:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f104:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001f108:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f10c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f110:	e3a00001 	mov	r0, #1
4001f114:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f3dc <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f118:	e5911000 	ldr	r1, [r1]
4001f11c:	e1110410 	tst	r1, r0, lsl r4
4001f120:	0a000044 	beq	4001f238 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f124:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f128:	e5900000 	ldr	r0, [r0]
4001f12c:	e3500000 	cmp	r0, #0
4001f130:	0a000040 	beq	4001f238 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f134:	e59f029c 	ldr	r0, [pc, #668]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f138:	e5900000 	ldr	r0, [r0]
4001f13c:	e3100001 	tst	r0, #1
4001f140:	0a000008 	beq	4001f168 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f144:	e3160b01 	tst	r6, #1024	; 0x400
4001f148:	0a000006 	beq	4001f168 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f14c:	e20400ff 	and	r0, r4, #255	; 0xff
4001f150:	e3802080 	orr	r2, r0, #128	; 0x80
4001f154:	e3a01003 	mov	r1, #3
4001f158:	e3a00001 	mov	r0, #1
4001f15c:	e59f327c 	ldr	r3, [pc, #636]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f160:	e5933000 	ldr	r3, [r3]
4001f164:	e12fff33 	blx	r3
4001f168:	e59f0268 	ldr	r0, [pc, #616]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f16c:	e5900000 	ldr	r0, [r0]
4001f170:	e3100002 	tst	r0, #2
4001f174:	0a000008 	beq	4001f19c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f178:	e3160a01 	tst	r6, #4096	; 0x1000
4001f17c:	0a000006 	beq	4001f19c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f180:	e20400ff 	and	r0, r4, #255	; 0xff
4001f184:	e3802080 	orr	r2, r0, #128	; 0x80
4001f188:	e3a01003 	mov	r1, #3
4001f18c:	e3a00002 	mov	r0, #2
4001f190:	e59f3248 	ldr	r3, [pc, #584]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f194:	e5933000 	ldr	r3, [r3]
4001f198:	e12fff33 	blx	r3
4001f19c:	e59f0234 	ldr	r0, [pc, #564]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1a0:	e5900000 	ldr	r0, [r0]
4001f1a4:	e3100004 	tst	r0, #4
4001f1a8:	0a000008 	beq	4001f1d0 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f1ac:	e3160a02 	tst	r6, #8192	; 0x2000
4001f1b0:	0a000006 	beq	4001f1d0 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f1b4:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1b8:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1bc:	e3a01003 	mov	r1, #3
4001f1c0:	e3a00004 	mov	r0, #4
4001f1c4:	e59f3214 	ldr	r3, [pc, #532]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1c8:	e5933000 	ldr	r3, [r3]
4001f1cc:	e12fff33 	blx	r3
4001f1d0:	e59f0200 	ldr	r0, [pc, #512]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1d4:	e5900000 	ldr	r0, [r0]
4001f1d8:	e3100010 	tst	r0, #16
4001f1dc:	0a000008 	beq	4001f204 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1e0:	e3160c02 	tst	r6, #512	; 0x200
4001f1e4:	0a000006 	beq	4001f204 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1e8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1ec:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1f0:	e3a01003 	mov	r1, #3
4001f1f4:	e3a00010 	mov	r0, #16
4001f1f8:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1fc:	e5933000 	ldr	r3, [r3]
4001f200:	e12fff33 	blx	r3
4001f204:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f208:	e5900000 	ldr	r0, [r0]
4001f20c:	e3100040 	tst	r0, #64	; 0x40
4001f210:	0a000008 	beq	4001f238 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f214:	e3160802 	tst	r6, #131072	; 0x20000
4001f218:	0a000006 	beq	4001f238 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f21c:	e20400ff 	and	r0, r4, #255	; 0xff
4001f220:	e3802080 	orr	r2, r0, #128	; 0x80
4001f224:	e3a01003 	mov	r1, #3
4001f228:	e3a00040 	mov	r0, #64	; 0x40
4001f22c:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f230:	e5933000 	ldr	r3, [r3]
4001f234:	e12fff33 	blx	r3
4001f238:	e59f0190 	ldr	r0, [pc, #400]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f23c:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f240:	e2840010 	add	r0, r4, #16
4001f244:	e3a01001 	mov	r1, #1
4001f248:	e1150011 	tst	r5, r1, lsl r0
4001f24c:	0a000055 	beq	4001f3a8 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001f250:	e59f018c 	ldr	r0, [pc, #396]	; 4001f3e4 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f254:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f258:	e2840010 	add	r0, r4, #16
4001f25c:	e1a00011 	lsl	r0, r1, r0
4001f260:	e59f1174 	ldr	r1, [pc, #372]	; 4001f3dc <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f264:	e5911000 	ldr	r1, [r1]
4001f268:	e1100001 	tst	r0, r1
4001f26c:	0a00004b 	beq	4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f270:	e59f0168 	ldr	r0, [pc, #360]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f274:	e5900000 	ldr	r0, [r0]
4001f278:	e3500000 	cmp	r0, #0
4001f27c:	0a000047 	beq	4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f280:	e59f0150 	ldr	r0, [pc, #336]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f284:	e5900000 	ldr	r0, [r0]
4001f288:	e3100001 	tst	r0, #1
4001f28c:	0a000007 	beq	4001f2b0 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f290:	e3160b01 	tst	r6, #1024	; 0x400
4001f294:	0a000005 	beq	4001f2b0 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f298:	e20420ff 	and	r2, r4, #255	; 0xff
4001f29c:	e3a01003 	mov	r1, #3
4001f2a0:	e3a00001 	mov	r0, #1
4001f2a4:	e59f3134 	ldr	r3, [pc, #308]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2a8:	e5933000 	ldr	r3, [r3]
4001f2ac:	e12fff33 	blx	r3
4001f2b0:	e59f0120 	ldr	r0, [pc, #288]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2b4:	e5900000 	ldr	r0, [r0]
4001f2b8:	e3100002 	tst	r0, #2
4001f2bc:	0a000007 	beq	4001f2e0 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f2c0:	e3160a01 	tst	r6, #4096	; 0x1000
4001f2c4:	0a000005 	beq	4001f2e0 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f2c8:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2cc:	e3a01003 	mov	r1, #3
4001f2d0:	e3a00002 	mov	r0, #2
4001f2d4:	e59f3104 	ldr	r3, [pc, #260]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2d8:	e5933000 	ldr	r3, [r3]
4001f2dc:	e12fff33 	blx	r3
4001f2e0:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2e4:	e5900000 	ldr	r0, [r0]
4001f2e8:	e3100004 	tst	r0, #4
4001f2ec:	0a000007 	beq	4001f310 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2f0:	e3160a02 	tst	r6, #8192	; 0x2000
4001f2f4:	0a000005 	beq	4001f310 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2f8:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2fc:	e3a01003 	mov	r1, #3
4001f300:	e3a00004 	mov	r0, #4
4001f304:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f308:	e5933000 	ldr	r3, [r3]
4001f30c:	e12fff33 	blx	r3
4001f310:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f314:	e5900000 	ldr	r0, [r0]
4001f318:	e3100010 	tst	r0, #16
4001f31c:	0a000007 	beq	4001f340 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f320:	e3160c02 	tst	r6, #512	; 0x200
4001f324:	0a000005 	beq	4001f340 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f328:	e20420ff 	and	r2, r4, #255	; 0xff
4001f32c:	e3a01003 	mov	r1, #3
4001f330:	e3a00010 	mov	r0, #16
4001f334:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f338:	e5933000 	ldr	r3, [r3]
4001f33c:	e12fff33 	blx	r3
4001f340:	e59f0090 	ldr	r0, [pc, #144]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f344:	e5900000 	ldr	r0, [r0]
4001f348:	e3100040 	tst	r0, #64	; 0x40
4001f34c:	0a000007 	beq	4001f370 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f350:	e3160802 	tst	r6, #131072	; 0x20000
4001f354:	0a000005 	beq	4001f370 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f358:	e20420ff 	and	r2, r4, #255	; 0xff
4001f35c:	e3a01003 	mov	r1, #3
4001f360:	e3a00040 	mov	r0, #64	; 0x40
4001f364:	e59f3074 	ldr	r3, [pc, #116]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f368:	e5933000 	ldr	r3, [r3]
4001f36c:	e12fff33 	blx	r3
4001f370:	e59f0060 	ldr	r0, [pc, #96]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f374:	e5900000 	ldr	r0, [r0]
4001f378:	e3100020 	tst	r0, #32
4001f37c:	0a000007 	beq	4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f380:	e3160901 	tst	r6, #16384	; 0x4000
4001f384:	0a000005 	beq	4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f388:	e20420ff 	and	r2, r4, #255	; 0xff
4001f38c:	e3a01003 	mov	r1, #3
4001f390:	e3a00020 	mov	r0, #32
4001f394:	e59f3044 	ldr	r3, [pc, #68]	; 4001f3e0 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f398:	e5933000 	ldr	r3, [r3]
4001f39c:	e12fff33 	blx	r3
4001f3a0:	e59f003c 	ldr	r0, [pc, #60]	; 4001f3e4 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f3a4:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f3a8:	e2844001 	add	r4, r4, #1
4001f3ac:	e3540010 	cmp	r4, #16
4001f3b0:	baffff1d 	blt	4001f02c <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f3b4:	e59f002c 	ldr	r0, [pc, #44]	; 4001f3e8 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f3b8:	e5900004 	ldr	r0, [r0, #4]
4001f3bc:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f3c0:	e59f1020 	ldr	r1, [pc, #32]	; 4001f3e8 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f3c4:	e5810004 	str	r0, [r1, #4]
4001f3c8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f3cc:	e0033000 	.word	0xe0033000
4001f3d0:	e0033500 	.word	0xe0033500
4001f3d4:	e00335c0 	.word	0xe00335c0
4001f3d8:	40030d7c 	.word	0x40030d7c
4001f3dc:	40030d80 	.word	0x40030d80
4001f3e0:	40030d78 	.word	0x40030d78
4001f3e4:	e0033600 	.word	0xe0033600
4001f3e8:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f3ec <CyU3PUibProtIntrEvtHandler>:
4001f3ec:	e92d4010 	push	{r4, lr}
4001f3f0:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3f4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f3f8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3fc:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f400:	e0004001 	and	r4, r0, r1
4001f404:	e3140c02 	tst	r4, #512	; 0x200
4001f408:	0a000006 	beq	4001f428 <CyU3PUibProtIntrEvtHandler+0x3c>
4001f40c:	e3a00c02 	mov	r0, #512	; 0x200
4001f410:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f414:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f418:	e3a00001 	mov	r0, #1
4001f41c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f4cc <CyU3PUibProtIntrEvtHandler+0xe0>
4001f420:	e5810014 	str	r0, [r1, #20]
4001f424:	eb0008ff 	bl	40021828 <CyU3PUsbSetupCommand>
4001f428:	e3140901 	tst	r4, #16384	; 0x4000
4001f42c:	0a00000a 	beq	4001f45c <CyU3PUibProtIntrEvtHandler+0x70>
4001f430:	e59f0090 	ldr	r0, [pc, #144]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f434:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f438:	e3c00004 	bic	r0, r0, #4
4001f43c:	e59f1084 	ldr	r1, [pc, #132]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f440:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f444:	e1a00001 	mov	r0, r1
4001f448:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f44c:	e3c00004 	bic	r0, r0, #4
4001f450:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f454:	e3a00901 	mov	r0, #16384	; 0x4000
4001f458:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f45c:	e3140b02 	tst	r4, #2048	; 0x800
4001f460:	0a000012 	beq	4001f4b0 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f464:	e59f0060 	ldr	r0, [pc, #96]	; 4001f4cc <CyU3PUibProtIntrEvtHandler+0xe0>
4001f468:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f46c:	e3500000 	cmp	r0, #0
4001f470:	0a00000b 	beq	4001f4a4 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f474:	e59f0054 	ldr	r0, [pc, #84]	; 4001f4d0 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f478:	e5900000 	ldr	r0, [r0]
4001f47c:	e3500000 	cmp	r0, #0
4001f480:	0a000004 	beq	4001f498 <CyU3PUibProtIntrEvtHandler+0xac>
4001f484:	e3a01000 	mov	r1, #0
4001f488:	e3a0000a 	mov	r0, #10
4001f48c:	e59f203c 	ldr	r2, [pc, #60]	; 4001f4d0 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f490:	e5922000 	ldr	r2, [r2]
4001f494:	e12fff32 	blx	r2
4001f498:	e3a00000 	mov	r0, #0
4001f49c:	e59f1028 	ldr	r1, [pc, #40]	; 4001f4cc <CyU3PUibProtIntrEvtHandler+0xe0>
4001f4a0:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f4a4:	e3a00b02 	mov	r0, #2048	; 0x800
4001f4a8:	e59f1018 	ldr	r1, [pc, #24]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4ac:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f4b0:	e59f001c 	ldr	r0, [pc, #28]	; 4001f4d4 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f4b4:	e5900004 	ldr	r0, [r0, #4]
4001f4b8:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f4bc:	e59f1010 	ldr	r1, [pc, #16]	; 4001f4d4 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f4c0:	e5810004 	str	r0, [r1, #4]
4001f4c4:	e8bd8010 	pop	{r4, pc}
4001f4c8:	e0033000 	.word	0xe0033000
4001f4cc:	40031d40 	.word	0x40031d40
4001f4d0:	40030d9c 	.word	0x40030d9c
4001f4d4:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f4d8 <CyU3PUibSendDescr>:
4001f4d8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f4dc:	e1a04000 	mov	r4, r0
4001f4e0:	e1a05001 	mov	r5, r1
4001f4e4:	e3a06000 	mov	r6, #0
4001f4e8:	e3a07000 	mov	r7, #0
4001f4ec:	e3a08000 	mov	r8, #0
4001f4f0:	e3a09000 	mov	r9, #0
4001f4f4:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001fae0 <CyU3PUibSendDescr+0x608>
4001f4f8:	e0000825 	and	r0, r0, r5, lsr #16
4001f4fc:	e58d0000 	str	r0, [sp]
4001f500:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f504:	e5d00009 	ldrb	r0, [r0, #9]
4001f508:	e3500003 	cmp	r0, #3
4001f50c:	1a000001 	bne	4001f518 <CyU3PUibSendDescr+0x40>
4001f510:	e3a00c02 	mov	r0, #512	; 0x200
4001f514:	ea000000 	b	4001f51c <CyU3PUibSendDescr+0x44>
4001f518:	e3a00040 	mov	r0, #64	; 0x40
4001f51c:	e1a0a800 	lsl	sl, r0, #16
4001f520:	e1a0a82a 	lsr	sl, sl, #16
4001f524:	e1a00c24 	lsr	r0, r4, #24
4001f528:	e3500006 	cmp	r0, #6
4001f52c:	0a0000b4 	beq	4001f804 <CyU3PUibSendDescr+0x32c>
4001f530:	ca000006 	bgt	4001f550 <CyU3PUibSendDescr+0x78>
4001f534:	e3500001 	cmp	r0, #1
4001f538:	0a00000b 	beq	4001f56c <CyU3PUibSendDescr+0x94>
4001f53c:	e3500002 	cmp	r0, #2
4001f540:	0a000020 	beq	4001f5c8 <CyU3PUibSendDescr+0xf0>
4001f544:	e3500003 	cmp	r0, #3
4001f548:	1a00013b 	bne	4001fa3c <CyU3PUibSendDescr+0x564>
4001f54c:	ea00007b 	b	4001f740 <CyU3PUibSendDescr+0x268>
4001f550:	e3500007 	cmp	r0, #7
4001f554:	0a0000b8 	beq	4001f83c <CyU3PUibSendDescr+0x364>
4001f558:	e3500009 	cmp	r0, #9
4001f55c:	0a000122 	beq	4001f9ec <CyU3PUibSendDescr+0x514>
4001f560:	e350000f 	cmp	r0, #15
4001f564:	1a000134 	bne	4001fa3c <CyU3PUibSendDescr+0x564>
4001f568:	ea0000f6 	b	4001f948 <CyU3PUibSendDescr+0x470>
4001f56c:	e1a00000 	nop			; (mov r0, r0)
4001f570:	e59f056c 	ldr	r0, [pc, #1388]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f574:	e5d00009 	ldrb	r0, [r0, #9]
4001f578:	e3500003 	cmp	r0, #3
4001f57c:	1a000008 	bne	4001f5a4 <CyU3PUibSendDescr+0xcc>
4001f580:	e59f0560 	ldr	r0, [pc, #1376]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f584:	e5900004 	ldr	r0, [r0, #4]
4001f588:	e3500000 	cmp	r0, #0
4001f58c:	0a00000c 	beq	4001f5c4 <CyU3PUibSendDescr+0xec>
4001f590:	e3a09001 	mov	r9, #1
4001f594:	e3a06012 	mov	r6, #18
4001f598:	e59f0548 	ldr	r0, [pc, #1352]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f59c:	e5908004 	ldr	r8, [r0, #4]
4001f5a0:	ea000007 	b	4001f5c4 <CyU3PUibSendDescr+0xec>
4001f5a4:	e59f053c 	ldr	r0, [pc, #1340]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f5a8:	e5900000 	ldr	r0, [r0]
4001f5ac:	e3500000 	cmp	r0, #0
4001f5b0:	0a000003 	beq	4001f5c4 <CyU3PUibSendDescr+0xec>
4001f5b4:	e3a09001 	mov	r9, #1
4001f5b8:	e3a06012 	mov	r6, #18
4001f5bc:	e59f0524 	ldr	r0, [pc, #1316]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f5c0:	e5908000 	ldr	r8, [r0]
4001f5c4:	ea000128 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f5c8:	e1a00000 	nop			; (mov r0, r0)
4001f5cc:	e59f0510 	ldr	r0, [pc, #1296]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f5d0:	e5d00009 	ldrb	r0, [r0, #9]
4001f5d4:	e3500002 	cmp	r0, #2
4001f5d8:	1a00001a 	bne	4001f648 <CyU3PUibSendDescr+0x170>
4001f5dc:	e59f0504 	ldr	r0, [pc, #1284]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f5e0:	e5900014 	ldr	r0, [r0, #20]
4001f5e4:	e3500000 	cmp	r0, #0
4001f5e8:	0a00004f 	beq	4001f72c <CyU3PUibSendDescr+0x254>
4001f5ec:	e3a09001 	mov	r9, #1
4001f5f0:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f5f4:	e5908014 	ldr	r8, [r0, #20]
4001f5f8:	e5900014 	ldr	r0, [r0, #20]
4001f5fc:	e5d00002 	ldrb	r0, [r0, #2]
4001f600:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f604:	e5911014 	ldr	r1, [r1, #20]
4001f608:	e5d11003 	ldrb	r1, [r1, #3]
4001f60c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f610:	e1500825 	cmp	r0, r5, lsr #16
4001f614:	2a000007 	bcs	4001f638 <CyU3PUibSendDescr+0x160>
4001f618:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f61c:	e5900014 	ldr	r0, [r0, #20]
4001f620:	e5d00002 	ldrb	r0, [r0, #2]
4001f624:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f628:	e5911014 	ldr	r1, [r1, #20]
4001f62c:	e5d11003 	ldrb	r1, [r1, #3]
4001f630:	e1800401 	orr	r0, r0, r1, lsl #8
4001f634:	ea000000 	b	4001f63c <CyU3PUibSendDescr+0x164>
4001f638:	e1a00825 	lsr	r0, r5, #16
4001f63c:	e1a06800 	lsl	r6, r0, #16
4001f640:	e1a06826 	lsr	r6, r6, #16
4001f644:	ea000038 	b	4001f72c <CyU3PUibSendDescr+0x254>
4001f648:	e59f0494 	ldr	r0, [pc, #1172]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f64c:	e5d00009 	ldrb	r0, [r0, #9]
4001f650:	e3500001 	cmp	r0, #1
4001f654:	1a00001a 	bne	4001f6c4 <CyU3PUibSendDescr+0x1ec>
4001f658:	e59f0488 	ldr	r0, [pc, #1160]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f65c:	e5900018 	ldr	r0, [r0, #24]
4001f660:	e3500000 	cmp	r0, #0
4001f664:	0a000030 	beq	4001f72c <CyU3PUibSendDescr+0x254>
4001f668:	e3a09001 	mov	r9, #1
4001f66c:	e59f0474 	ldr	r0, [pc, #1140]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f670:	e5908018 	ldr	r8, [r0, #24]
4001f674:	e5900018 	ldr	r0, [r0, #24]
4001f678:	e5d00002 	ldrb	r0, [r0, #2]
4001f67c:	e59f1464 	ldr	r1, [pc, #1124]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f680:	e5911018 	ldr	r1, [r1, #24]
4001f684:	e5d11003 	ldrb	r1, [r1, #3]
4001f688:	e1800401 	orr	r0, r0, r1, lsl #8
4001f68c:	e1500825 	cmp	r0, r5, lsr #16
4001f690:	2a000007 	bcs	4001f6b4 <CyU3PUibSendDescr+0x1dc>
4001f694:	e59f044c 	ldr	r0, [pc, #1100]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f698:	e5900018 	ldr	r0, [r0, #24]
4001f69c:	e5d00002 	ldrb	r0, [r0, #2]
4001f6a0:	e59f1440 	ldr	r1, [pc, #1088]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f6a4:	e5911018 	ldr	r1, [r1, #24]
4001f6a8:	e5d11003 	ldrb	r1, [r1, #3]
4001f6ac:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6b0:	ea000000 	b	4001f6b8 <CyU3PUibSendDescr+0x1e0>
4001f6b4:	e1a00825 	lsr	r0, r5, #16
4001f6b8:	e1a06800 	lsl	r6, r0, #16
4001f6bc:	e1a06826 	lsr	r6, r6, #16
4001f6c0:	ea000019 	b	4001f72c <CyU3PUibSendDescr+0x254>
4001f6c4:	e59f041c 	ldr	r0, [pc, #1052]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f6c8:	e590001c 	ldr	r0, [r0, #28]
4001f6cc:	e3500000 	cmp	r0, #0
4001f6d0:	0a000015 	beq	4001f72c <CyU3PUibSendDescr+0x254>
4001f6d4:	e3a09001 	mov	r9, #1
4001f6d8:	e59f0408 	ldr	r0, [pc, #1032]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f6dc:	e590801c 	ldr	r8, [r0, #28]
4001f6e0:	e590001c 	ldr	r0, [r0, #28]
4001f6e4:	e5d00002 	ldrb	r0, [r0, #2]
4001f6e8:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f6ec:	e591101c 	ldr	r1, [r1, #28]
4001f6f0:	e5d11003 	ldrb	r1, [r1, #3]
4001f6f4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6f8:	e1500825 	cmp	r0, r5, lsr #16
4001f6fc:	2a000007 	bcs	4001f720 <CyU3PUibSendDescr+0x248>
4001f700:	e59f03e0 	ldr	r0, [pc, #992]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f704:	e590001c 	ldr	r0, [r0, #28]
4001f708:	e5d00002 	ldrb	r0, [r0, #2]
4001f70c:	e59f13d4 	ldr	r1, [pc, #980]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f710:	e591101c 	ldr	r1, [r1, #28]
4001f714:	e5d11003 	ldrb	r1, [r1, #3]
4001f718:	e1800401 	orr	r0, r0, r1, lsl #8
4001f71c:	ea000000 	b	4001f724 <CyU3PUibSendDescr+0x24c>
4001f720:	e1a00825 	lsr	r0, r5, #16
4001f724:	e1a06800 	lsl	r6, r0, #16
4001f728:	e1a06826 	lsr	r6, r6, #16
4001f72c:	e3580000 	cmp	r8, #0
4001f730:	0a000001 	beq	4001f73c <CyU3PUibSendDescr+0x264>
4001f734:	e3a00002 	mov	r0, #2
4001f738:	e5c80001 	strb	r0, [r8, #1]
4001f73c:	ea0000ca 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f740:	e1a00000 	nop			; (mov r0, r0)
4001f744:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f748:	e1a0b820 	lsr	fp, r0, #16
4001f74c:	e35b0010 	cmp	fp, #16
4001f750:	ca000003 	bgt	4001f764 <CyU3PUibSendDescr+0x28c>
4001f754:	e59f0390 	ldr	r0, [pc, #912]	; 4001faec <CyU3PUibSendDescr+0x614>
4001f758:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f75c:	e3500000 	cmp	r0, #0
4001f760:	1a000013 	bne	4001f7b4 <CyU3PUibSendDescr+0x2dc>
4001f764:	e59f0378 	ldr	r0, [pc, #888]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f768:	e5d00007 	ldrb	r0, [r0, #7]
4001f76c:	e3500001 	cmp	r0, #1
4001f770:	0a000022 	beq	4001f800 <CyU3PUibSendDescr+0x328>
4001f774:	e59f0374 	ldr	r0, [pc, #884]	; 4001faf0 <CyU3PUibSendDescr+0x618>
4001f778:	e5900000 	ldr	r0, [r0]
4001f77c:	e3500000 	cmp	r0, #0
4001f780:	0a00001e 	beq	4001f800 <CyU3PUibSendDescr+0x328>
4001f784:	e1a01005 	mov	r1, r5
4001f788:	e1a00004 	mov	r0, r4
4001f78c:	e59f235c 	ldr	r2, [pc, #860]	; 4001faf0 <CyU3PUibSendDescr+0x618>
4001f790:	e5922000 	ldr	r2, [r2]
4001f794:	e12fff32 	blx	r2
4001f798:	e1a09000 	mov	r9, r0
4001f79c:	e3590000 	cmp	r9, #0
4001f7a0:	0a000016 	beq	4001f800 <CyU3PUibSendDescr+0x328>
4001f7a4:	e3a00001 	mov	r0, #1
4001f7a8:	e59f1334 	ldr	r1, [pc, #820]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f7ac:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f7b0:	ea000012 	b	4001f800 <CyU3PUibSendDescr+0x328>
4001f7b4:	e59f0330 	ldr	r0, [pc, #816]	; 4001faec <CyU3PUibSendDescr+0x614>
4001f7b8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7bc:	e5d00000 	ldrb	r0, [r0]
4001f7c0:	e1500825 	cmp	r0, r5, lsr #16
4001f7c4:	2a000003 	bcs	4001f7d8 <CyU3PUibSendDescr+0x300>
4001f7c8:	e59f031c 	ldr	r0, [pc, #796]	; 4001faec <CyU3PUibSendDescr+0x614>
4001f7cc:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7d0:	e5d00000 	ldrb	r0, [r0]
4001f7d4:	ea000000 	b	4001f7dc <CyU3PUibSendDescr+0x304>
4001f7d8:	e1a00825 	lsr	r0, r5, #16
4001f7dc:	e1a06800 	lsl	r6, r0, #16
4001f7e0:	e1a06826 	lsr	r6, r6, #16
4001f7e4:	e59f0300 	ldr	r0, [pc, #768]	; 4001faec <CyU3PUibSendDescr+0x614>
4001f7e8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7ec:	e3500000 	cmp	r0, #0
4001f7f0:	0a000002 	beq	4001f800 <CyU3PUibSendDescr+0x328>
4001f7f4:	e3a09001 	mov	r9, #1
4001f7f8:	e59f02ec 	ldr	r0, [pc, #748]	; 4001faec <CyU3PUibSendDescr+0x614>
4001f7fc:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f800:	ea000099 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f804:	e1a00000 	nop			; (mov r0, r0)
4001f808:	e59f02d8 	ldr	r0, [pc, #728]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f80c:	e5900008 	ldr	r0, [r0, #8]
4001f810:	e3500000 	cmp	r0, #0
4001f814:	0a000007 	beq	4001f838 <CyU3PUibSendDescr+0x360>
4001f818:	e59f02c4 	ldr	r0, [pc, #708]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f81c:	e5d00009 	ldrb	r0, [r0, #9]
4001f820:	e3500003 	cmp	r0, #3
4001f824:	0a000003 	beq	4001f838 <CyU3PUibSendDescr+0x360>
4001f828:	e3a09001 	mov	r9, #1
4001f82c:	e3a0600a 	mov	r6, #10
4001f830:	e59f02b0 	ldr	r0, [pc, #688]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f834:	e5908008 	ldr	r8, [r0, #8]
4001f838:	ea00008b 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f83c:	e1a00000 	nop			; (mov r0, r0)
4001f840:	e59f029c 	ldr	r0, [pc, #668]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f844:	e5d00009 	ldrb	r0, [r0, #9]
4001f848:	e3500002 	cmp	r0, #2
4001f84c:	1a00001a 	bne	4001f8bc <CyU3PUibSendDescr+0x3e4>
4001f850:	e59f0290 	ldr	r0, [pc, #656]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f854:	e5900018 	ldr	r0, [r0, #24]
4001f858:	e3500000 	cmp	r0, #0
4001f85c:	0a000034 	beq	4001f934 <CyU3PUibSendDescr+0x45c>
4001f860:	e3a09001 	mov	r9, #1
4001f864:	e59f027c 	ldr	r0, [pc, #636]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f868:	e5908018 	ldr	r8, [r0, #24]
4001f86c:	e5900018 	ldr	r0, [r0, #24]
4001f870:	e5d00002 	ldrb	r0, [r0, #2]
4001f874:	e59f126c 	ldr	r1, [pc, #620]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f878:	e5911018 	ldr	r1, [r1, #24]
4001f87c:	e5d11003 	ldrb	r1, [r1, #3]
4001f880:	e1800401 	orr	r0, r0, r1, lsl #8
4001f884:	e1500825 	cmp	r0, r5, lsr #16
4001f888:	2a000007 	bcs	4001f8ac <CyU3PUibSendDescr+0x3d4>
4001f88c:	e59f0254 	ldr	r0, [pc, #596]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f890:	e5900018 	ldr	r0, [r0, #24]
4001f894:	e5d00002 	ldrb	r0, [r0, #2]
4001f898:	e59f1248 	ldr	r1, [pc, #584]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f89c:	e5911018 	ldr	r1, [r1, #24]
4001f8a0:	e5d11003 	ldrb	r1, [r1, #3]
4001f8a4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f8a8:	ea000000 	b	4001f8b0 <CyU3PUibSendDescr+0x3d8>
4001f8ac:	e1a00825 	lsr	r0, r5, #16
4001f8b0:	e1a06800 	lsl	r6, r0, #16
4001f8b4:	e1a06826 	lsr	r6, r6, #16
4001f8b8:	ea00001d 	b	4001f934 <CyU3PUibSendDescr+0x45c>
4001f8bc:	e59f0220 	ldr	r0, [pc, #544]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f8c0:	e5d00009 	ldrb	r0, [r0, #9]
4001f8c4:	e3500001 	cmp	r0, #1
4001f8c8:	1a000019 	bne	4001f934 <CyU3PUibSendDescr+0x45c>
4001f8cc:	e59f0214 	ldr	r0, [pc, #532]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f8d0:	e5900014 	ldr	r0, [r0, #20]
4001f8d4:	e3500000 	cmp	r0, #0
4001f8d8:	0a000015 	beq	4001f934 <CyU3PUibSendDescr+0x45c>
4001f8dc:	e3a09001 	mov	r9, #1
4001f8e0:	e59f0200 	ldr	r0, [pc, #512]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f8e4:	e5908014 	ldr	r8, [r0, #20]
4001f8e8:	e5900014 	ldr	r0, [r0, #20]
4001f8ec:	e5d00002 	ldrb	r0, [r0, #2]
4001f8f0:	e59f11f0 	ldr	r1, [pc, #496]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f8f4:	e5911014 	ldr	r1, [r1, #20]
4001f8f8:	e5d11003 	ldrb	r1, [r1, #3]
4001f8fc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f900:	e1500825 	cmp	r0, r5, lsr #16
4001f904:	2a000007 	bcs	4001f928 <CyU3PUibSendDescr+0x450>
4001f908:	e59f01d8 	ldr	r0, [pc, #472]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f90c:	e5900014 	ldr	r0, [r0, #20]
4001f910:	e5d00002 	ldrb	r0, [r0, #2]
4001f914:	e59f11cc 	ldr	r1, [pc, #460]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f918:	e5911014 	ldr	r1, [r1, #20]
4001f91c:	e5d11003 	ldrb	r1, [r1, #3]
4001f920:	e1800401 	orr	r0, r0, r1, lsl #8
4001f924:	ea000000 	b	4001f92c <CyU3PUibSendDescr+0x454>
4001f928:	e1a00825 	lsr	r0, r5, #16
4001f92c:	e1a06800 	lsl	r6, r0, #16
4001f930:	e1a06826 	lsr	r6, r6, #16
4001f934:	e3580000 	cmp	r8, #0
4001f938:	0a000001 	beq	4001f944 <CyU3PUibSendDescr+0x46c>
4001f93c:	e3a00007 	mov	r0, #7
4001f940:	e5c80001 	strb	r0, [r8, #1]
4001f944:	ea000048 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f948:	e1a00000 	nop			; (mov r0, r0)
4001f94c:	e59f0194 	ldr	r0, [pc, #404]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f950:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f954:	e3500000 	cmp	r0, #0
4001f958:	0a000022 	beq	4001f9e8 <CyU3PUibSendDescr+0x510>
4001f95c:	e59f0180 	ldr	r0, [pc, #384]	; 4001fae4 <CyU3PUibSendDescr+0x60c>
4001f960:	e5d00009 	ldrb	r0, [r0, #9]
4001f964:	e3500003 	cmp	r0, #3
4001f968:	0a000008 	beq	4001f990 <CyU3PUibSendDescr+0x4b8>
4001f96c:	e59f0174 	ldr	r0, [pc, #372]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f970:	e5900000 	ldr	r0, [r0]
4001f974:	e3500000 	cmp	r0, #0
4001f978:	0a00001a 	beq	4001f9e8 <CyU3PUibSendDescr+0x510>
4001f97c:	e59f0164 	ldr	r0, [pc, #356]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f980:	e5900000 	ldr	r0, [r0]
4001f984:	e5d00002 	ldrb	r0, [r0, #2]
4001f988:	e3500010 	cmp	r0, #16
4001f98c:	1a000015 	bne	4001f9e8 <CyU3PUibSendDescr+0x510>
4001f990:	e3a09001 	mov	r9, #1
4001f994:	e59f014c 	ldr	r0, [pc, #332]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f998:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f99c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f9a0:	e5d00002 	ldrb	r0, [r0, #2]
4001f9a4:	e59f113c 	ldr	r1, [pc, #316]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f9a8:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f9ac:	e5d11003 	ldrb	r1, [r1, #3]
4001f9b0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9b4:	e1500825 	cmp	r0, r5, lsr #16
4001f9b8:	2a000007 	bcs	4001f9dc <CyU3PUibSendDescr+0x504>
4001f9bc:	e59f0124 	ldr	r0, [pc, #292]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f9c0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f9c4:	e5d00002 	ldrb	r0, [r0, #2]
4001f9c8:	e59f1118 	ldr	r1, [pc, #280]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f9cc:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f9d0:	e5d11003 	ldrb	r1, [r1, #3]
4001f9d4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9d8:	ea000000 	b	4001f9e0 <CyU3PUibSendDescr+0x508>
4001f9dc:	e1a00825 	lsr	r0, r5, #16
4001f9e0:	e1a06800 	lsl	r6, r0, #16
4001f9e4:	e1a06826 	lsr	r6, r6, #16
4001f9e8:	ea00001f 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001f9ec:	e1a00000 	nop			; (mov r0, r0)
4001f9f0:	e59f00f0 	ldr	r0, [pc, #240]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001f9f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f9f8:	e3500000 	cmp	r0, #0
4001f9fc:	0a00000d 	beq	4001fa38 <CyU3PUibSendDescr+0x560>
4001fa00:	e3a09001 	mov	r9, #1
4001fa04:	e59f00dc 	ldr	r0, [pc, #220]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001fa08:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001fa0c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fa10:	e5d00000 	ldrb	r0, [r0]
4001fa14:	e1500825 	cmp	r0, r5, lsr #16
4001fa18:	2a000003 	bcs	4001fa2c <CyU3PUibSendDescr+0x554>
4001fa1c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001fae8 <CyU3PUibSendDescr+0x610>
4001fa20:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fa24:	e5d00000 	ldrb	r0, [r0]
4001fa28:	ea000000 	b	4001fa30 <CyU3PUibSendDescr+0x558>
4001fa2c:	e1a00825 	lsr	r0, r5, #16
4001fa30:	e1a06800 	lsl	r6, r0, #16
4001fa34:	e1a06826 	lsr	r6, r6, #16
4001fa38:	ea00000b 	b	4001fa6c <CyU3PUibSendDescr+0x594>
4001fa3c:	e1a00000 	nop			; (mov r0, r0)
4001fa40:	e59f00a8 	ldr	r0, [pc, #168]	; 4001faf0 <CyU3PUibSendDescr+0x618>
4001fa44:	e5900000 	ldr	r0, [r0]
4001fa48:	e3500000 	cmp	r0, #0
4001fa4c:	0a000005 	beq	4001fa68 <CyU3PUibSendDescr+0x590>
4001fa50:	e1a01005 	mov	r1, r5
4001fa54:	e1a00004 	mov	r0, r4
4001fa58:	e59f2090 	ldr	r2, [pc, #144]	; 4001faf0 <CyU3PUibSendDescr+0x618>
4001fa5c:	e5922000 	ldr	r2, [r2]
4001fa60:	e12fff32 	blx	r2
4001fa64:	e1a09000 	mov	r9, r0
4001fa68:	e1a00000 	nop			; (mov r0, r0)
4001fa6c:	e1a00000 	nop			; (mov r0, r0)
4001fa70:	e3590001 	cmp	r9, #1
4001fa74:	1a000017 	bne	4001fad8 <CyU3PUibSendDescr+0x600>
4001fa78:	e3580000 	cmp	r8, #0
4001fa7c:	0a000015 	beq	4001fad8 <CyU3PUibSendDescr+0x600>
4001fa80:	e1a01008 	mov	r1, r8
4001fa84:	e1a00006 	mov	r0, r6
4001fa88:	ebfff758 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
4001fa8c:	e1a07000 	mov	r7, r0
4001fa90:	e3570000 	cmp	r7, #0
4001fa94:	1a000009 	bne	4001fac0 <CyU3PUibSendDescr+0x5e8>
4001fa98:	e59d0000 	ldr	r0, [sp]
4001fa9c:	e1560000 	cmp	r6, r0
4001faa0:	aa000006 	bge	4001fac0 <CyU3PUibSendDescr+0x5e8>
4001faa4:	e24a0001 	sub	r0, sl, #1
4001faa8:	e1100006 	tst	r0, r6
4001faac:	1a000003 	bne	4001fac0 <CyU3PUibSendDescr+0x5e8>
4001fab0:	e1a01008 	mov	r1, r8
4001fab4:	e3a00000 	mov	r0, #0
4001fab8:	ebfff74c 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
4001fabc:	e1a07000 	mov	r7, r0
4001fac0:	e3570000 	cmp	r7, #0
4001fac4:	0a000003 	beq	4001fad8 <CyU3PUibSendDescr+0x600>
4001fac8:	e3a02000 	mov	r2, #0
4001facc:	e3a01001 	mov	r1, #1
4001fad0:	e1a00002 	mov	r0, r2
4001fad4:	ebfff970 	bl	4001e09c <CyU3PUsbStall>
4001fad8:	e1a00009 	mov	r0, r9
4001fadc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001fae0:	0000ffff 	.word	0x0000ffff
4001fae4:	40031d40 	.word	0x40031d40
4001fae8:	40031f98 	.word	0x40031f98
4001faec:	40031fb8 	.word	0x40031fb8
4001faf0:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibSocketInit:

4001faf4 <CyU3PUibSocketInit>:
4001faf4:	e3a00000 	mov	r0, #0
4001faf8:	ea00000d 	b	4001fb34 <CyU3PUibSocketInit+0x40>
4001fafc:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fb00:	e59f2080 	ldr	r2, [pc, #128]	; 4001fb88 <CyU3PUibSocketInit+0x94>
4001fb04:	e0822380 	add	r2, r2, r0, lsl #7
4001fb08:	e582100c 	str	r1, [r2, #12]
4001fb0c:	e3e01000 	mvn	r1, #0
4001fb10:	e59f2070 	ldr	r2, [pc, #112]	; 4001fb88 <CyU3PUibSocketInit+0x94>
4001fb14:	e0822380 	add	r2, r2, r0, lsl #7
4001fb18:	e5821010 	str	r1, [r2, #16]
4001fb1c:	e3a01000 	mov	r1, #0
4001fb20:	e59f2060 	ldr	r2, [pc, #96]	; 4001fb88 <CyU3PUibSocketInit+0x94>
4001fb24:	e0822380 	add	r2, r2, r0, lsl #7
4001fb28:	e5821014 	str	r1, [r2, #20]
4001fb2c:	e2801001 	add	r1, r0, #1
4001fb30:	e20100ff 	and	r0, r1, #255	; 0xff
4001fb34:	e3500010 	cmp	r0, #16
4001fb38:	baffffef 	blt	4001fafc <CyU3PUibSocketInit+0x8>
4001fb3c:	e3a00000 	mov	r0, #0
4001fb40:	ea00000d 	b	4001fb7c <CyU3PUibSocketInit+0x88>
4001fb44:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fb48:	e59f203c 	ldr	r2, [pc, #60]	; 4001fb8c <CyU3PUibSocketInit+0x98>
4001fb4c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb50:	e582100c 	str	r1, [r2, #12]
4001fb54:	e3e01000 	mvn	r1, #0
4001fb58:	e59f202c 	ldr	r2, [pc, #44]	; 4001fb8c <CyU3PUibSocketInit+0x98>
4001fb5c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb60:	e5821010 	str	r1, [r2, #16]
4001fb64:	e3a01000 	mov	r1, #0
4001fb68:	e59f201c 	ldr	r2, [pc, #28]	; 4001fb8c <CyU3PUibSocketInit+0x98>
4001fb6c:	e0822380 	add	r2, r2, r0, lsl #7
4001fb70:	e5821014 	str	r1, [r2, #20]
4001fb74:	e2801001 	add	r1, r0, #1
4001fb78:	e20100ff 	and	r0, r1, #255	; 0xff
4001fb7c:	e3500010 	cmp	r0, #16
4001fb80:	baffffef 	blt	4001fb44 <CyU3PUibSocketInit+0x50>
4001fb84:	e12fff1e 	bx	lr
4001fb88:	e0038000 	.word	0xe0038000
4001fb8c:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001fb90 <CyU3PUibStatusTimerCb>:
4001fb90:	e92d4010 	push	{r4, lr}
4001fb94:	e1a04000 	mov	r4, r0
4001fb98:	e59f0050 	ldr	r0, [pc, #80]	; 4001fbf0 <CyU3PUibStatusTimerCb+0x60>
4001fb9c:	e5900000 	ldr	r0, [r0]
4001fba0:	e3500000 	cmp	r0, #0
4001fba4:	0a000010 	beq	4001fbec <CyU3PUibStatusTimerCb+0x5c>
4001fba8:	e59f0044 	ldr	r0, [pc, #68]	; 4001fbf4 <CyU3PUibStatusTimerCb+0x64>
4001fbac:	e5d00009 	ldrb	r0, [r0, #9]
4001fbb0:	e3500003 	cmp	r0, #3
4001fbb4:	1a00000c 	bne	4001fbec <CyU3PUibStatusTimerCb+0x5c>
4001fbb8:	e59f0038 	ldr	r0, [pc, #56]	; 4001fbf8 <CyU3PUibStatusTimerCb+0x68>
4001fbbc:	e5900000 	ldr	r0, [r0]
4001fbc0:	e3500000 	cmp	r0, #0
4001fbc4:	0a000008 	beq	4001fbec <CyU3PUibStatusTimerCb+0x5c>
4001fbc8:	e3a01000 	mov	r1, #0
4001fbcc:	e1a00001 	mov	r0, r1
4001fbd0:	ebfff77c 	bl	4001d9c8 <CyU3PUsbSendErdy>
4001fbd4:	e3a02000 	mov	r2, #0
4001fbd8:	e3a01064 	mov	r1, #100	; 0x64
4001fbdc:	e59f0018 	ldr	r0, [pc, #24]	; 4001fbfc <CyU3PUibStatusTimerCb+0x6c>
4001fbe0:	ebffac05 	bl	4000abfc <_txe_timer_change>
4001fbe4:	e59f0010 	ldr	r0, [pc, #16]	; 4001fbfc <CyU3PUibStatusTimerCb+0x6c>
4001fbe8:	ebffabf3 	bl	4000abbc <_txe_timer_activate>
4001fbec:	e8bd8010 	pop	{r4, pc}
4001fbf0:	40030db0 	.word	0x40030db0
4001fbf4:	40031d40 	.word	0x40031d40
4001fbf8:	40030db4 	.word	0x40030db4
4001fbfc:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001fc00 <CyU3PUibThreadEntry>:
4001fc00:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001fc04:	e3a05000 	mov	r5, #0
4001fc08:	e59f505c 	ldr	r5, [pc, #92]	; 4001fc6c <CyU3PUibThreadEntry+0x6c>
4001fc0c:	e3a00001 	mov	r0, #1
4001fc10:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc70 <CyU3PUibThreadEntry+0x70>
4001fc14:	e5810000 	str	r0, [r1]
4001fc18:	e3a02020 	mov	r2, #32
4001fc1c:	e3a01000 	mov	r1, #0
4001fc20:	e59f004c 	ldr	r0, [pc, #76]	; 4001fc74 <CyU3PUibThreadEntry+0x74>
4001fc24:	ebff8ea3 	bl	400036b8 <CyU3PMemSet>
4001fc28:	ea00000e 	b	4001fc68 <CyU3PUibThreadEntry+0x68>
4001fc2c:	e3e03000 	mvn	r3, #0
4001fc30:	e58d3000 	str	r3, [sp]
4001fc34:	e28d3004 	add	r3, sp, #4
4001fc38:	e3a02001 	mov	r2, #1
4001fc3c:	e1a01005 	mov	r1, r5
4001fc40:	e59f0030 	ldr	r0, [pc, #48]	; 4001fc78 <CyU3PUibThreadEntry+0x78>
4001fc44:	ebffa8d6 	bl	40009fa4 <_txe_event_flags_get>
4001fc48:	e1a04000 	mov	r4, r0
4001fc4c:	e3540000 	cmp	r4, #0
4001fc50:	0a000000 	beq	4001fc58 <CyU3PUibThreadEntry+0x58>
4001fc54:	ea000003 	b	4001fc68 <CyU3PUibThreadEntry+0x68>
4001fc58:	e59d0004 	ldr	r0, [sp, #4]
4001fc5c:	eb0002a1 	bl	400206e8 <CyU3PUsbHandleEvents>
4001fc60:	ebffabb8 	bl	4000ab48 <_txe_thread_relinquish>
4001fc64:	e1a00000 	nop			; (mov r0, r0)
4001fc68:	eaffffef 	b	4001fc2c <CyU3PUibThreadEntry+0x2c>
4001fc6c:	073fbfe1 	.word	0x073fbfe1
4001fc70:	40030d60 	.word	0x40030d60
4001fc74:	40032680 	.word	0x40032680
4001fc78:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001fc7c <CyU3PUibVbusChangeHandler>:
4001fc7c:	e92d4010 	push	{r4, lr}
4001fc80:	e3a00000 	mov	r0, #0
4001fc84:	e59f114c 	ldr	r1, [pc, #332]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fc88:	e5810060 	str	r0, [r1, #96]	; 0x60
4001fc8c:	e59f0148 	ldr	r0, [pc, #328]	; 4001fddc <CyU3PUibVbusChangeHandler+0x160>
4001fc90:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fc94:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fc98:	e1100001 	tst	r0, r1
4001fc9c:	0a00000b 	beq	4001fcd0 <CyU3PUibVbusChangeHandler+0x54>
4001fca0:	e3a00002 	mov	r0, #2
4001fca4:	eb000051 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
4001fca8:	e59f0130 	ldr	r0, [pc, #304]	; 4001fde0 <CyU3PUibVbusChangeHandler+0x164>
4001fcac:	e5900000 	ldr	r0, [r0]
4001fcb0:	e3500000 	cmp	r0, #0
4001fcb4:	0a000010 	beq	4001fcfc <CyU3PUibVbusChangeHandler+0x80>
4001fcb8:	e3a01000 	mov	r1, #0
4001fcbc:	e3a0000b 	mov	r0, #11
4001fcc0:	e59f2118 	ldr	r2, [pc, #280]	; 4001fde0 <CyU3PUibVbusChangeHandler+0x164>
4001fcc4:	e5922000 	ldr	r2, [r2]
4001fcc8:	e12fff32 	blx	r2
4001fccc:	ea00000a 	b	4001fcfc <CyU3PUibVbusChangeHandler+0x80>
4001fcd0:	e3a00001 	mov	r0, #1
4001fcd4:	eb000045 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
4001fcd8:	e59f0100 	ldr	r0, [pc, #256]	; 4001fde0 <CyU3PUibVbusChangeHandler+0x164>
4001fcdc:	e5900000 	ldr	r0, [r0]
4001fce0:	e3500000 	cmp	r0, #0
4001fce4:	0a000004 	beq	4001fcfc <CyU3PUibVbusChangeHandler+0x80>
4001fce8:	e3a01000 	mov	r1, #0
4001fcec:	e3a0000c 	mov	r0, #12
4001fcf0:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fde0 <CyU3PUibVbusChangeHandler+0x164>
4001fcf4:	e5922000 	ldr	r2, [r2]
4001fcf8:	e12fff32 	blx	r2
4001fcfc:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fddc <CyU3PUibVbusChangeHandler+0x160>
4001fd00:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fd04:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd08:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fd0c:	e1100001 	tst	r0, r1
4001fd10:	0a000022 	beq	4001fda0 <CyU3PUibVbusChangeHandler+0x124>
4001fd14:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd18:	e5d00008 	ldrb	r0, [r0, #8]
4001fd1c:	e3500005 	cmp	r0, #5
4001fd20:	ba000000 	blt	4001fd28 <CyU3PUibVbusChangeHandler+0xac>
4001fd24:	eb0008d6 	bl	40022084 <HandleVbusOffEvent>
4001fd28:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd2c:	e5d00008 	ldrb	r0, [r0, #8]
4001fd30:	e3500004 	cmp	r0, #4
4001fd34:	1a00001e 	bne	4001fdb4 <CyU3PUibVbusChangeHandler+0x138>
4001fd38:	e59f0098 	ldr	r0, [pc, #152]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd3c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd40:	e59f1090 	ldr	r1, [pc, #144]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd44:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fd48:	e2810000 	add	r0, r1, #0
4001fd4c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd50:	e3500000 	cmp	r0, #0
4001fd54:	0a00000a 	beq	4001fd84 <CyU3PUibVbusChangeHandler+0x108>
4001fd58:	e3a00000 	mov	r0, #0
4001fd5c:	e59f1080 	ldr	r1, [pc, #128]	; 4001fde4 <CyU3PUibVbusChangeHandler+0x168>
4001fd60:	e5810014 	str	r0, [r1, #20]
4001fd64:	e59f107c 	ldr	r1, [pc, #124]	; 4001fde8 <CyU3PUibVbusChangeHandler+0x16c>
4001fd68:	e5810000 	str	r0, [r1]
4001fd6c:	e59f1078 	ldr	r1, [pc, #120]	; 4001fdec <CyU3PUibVbusChangeHandler+0x170>
4001fd70:	e5810000 	str	r0, [r1]
4001fd74:	e59f105c 	ldr	r1, [pc, #92]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd78:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fd7c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fd80:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fd84:	e59f104c 	ldr	r1, [pc, #76]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd88:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fd8c:	ebfff593 	bl	4001d3e0 <CyU3PUsbPhyEnable>
4001fd90:	e3a00005 	mov	r0, #5
4001fd94:	e59f103c 	ldr	r1, [pc, #60]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fd98:	e5c10008 	strb	r0, [r1, #8]
4001fd9c:	ea000004 	b	4001fdb4 <CyU3PUibVbusChangeHandler+0x138>
4001fda0:	e59f0030 	ldr	r0, [pc, #48]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fda4:	e5d00008 	ldrb	r0, [r0, #8]
4001fda8:	e3500005 	cmp	r0, #5
4001fdac:	ba000000 	blt	4001fdb4 <CyU3PUibVbusChangeHandler+0x138>
4001fdb0:	eb0008b3 	bl	40022084 <HandleVbusOffEvent>
4001fdb4:	ebfff0df 	bl	4001c138 <CyU3POtgIsStarted>
4001fdb8:	e3500000 	cmp	r0, #0
4001fdbc:	0a000000 	beq	4001fdc4 <CyU3PUibVbusChangeHandler+0x148>
4001fdc0:	ebfff4e3 	bl	4001d154 <CyU3PUsbOtgVbusChangeHandler>
4001fdc4:	e59f000c 	ldr	r0, [pc, #12]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x15c>
4001fdc8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fdcc:	e59f1008 	ldr	r1, [pc, #8]	; 4001fddc <CyU3PUibVbusChangeHandler+0x160>
4001fdd0:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fdd4:	e8bd8010 	pop	{r4, pc}
4001fdd8:	40031d40 	.word	0x40031d40
4001fddc:	e0051000 	.word	0xe0051000
4001fde0:	40030d9c 	.word	0x40030d9c
4001fde4:	e0033000 	.word	0xe0033000
4001fde8:	40030d84 	.word	0x40030d84
4001fdec:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fdf0 <CyU3PUsbAddToEventLog>:
4001fdf0:	e59f1058 	ldr	r1, [pc, #88]	; 4001fe50 <CyU3PUsbAddToEventLog+0x60>
4001fdf4:	e5911000 	ldr	r1, [r1]
4001fdf8:	e3510000 	cmp	r1, #0
4001fdfc:	0a000012 	beq	4001fe4c <CyU3PUsbAddToEventLog+0x5c>
4001fe00:	e59f104c 	ldr	r1, [pc, #76]	; 4001fe54 <CyU3PUsbAddToEventLog+0x64>
4001fe04:	e5911000 	ldr	r1, [r1]
4001fe08:	e59f2044 	ldr	r2, [pc, #68]	; 4001fe54 <CyU3PUsbAddToEventLog+0x64>
4001fe0c:	e5922000 	ldr	r2, [r2]
4001fe10:	e2822001 	add	r2, r2, #1
4001fe14:	e59f3038 	ldr	r3, [pc, #56]	; 4001fe54 <CyU3PUsbAddToEventLog+0x64>
4001fe18:	e5832000 	str	r2, [r3]
4001fe1c:	e59f202c 	ldr	r2, [pc, #44]	; 4001fe50 <CyU3PUsbAddToEventLog+0x60>
4001fe20:	e5922000 	ldr	r2, [r2]
4001fe24:	e7c20001 	strb	r0, [r2, r1]
4001fe28:	e2831000 	add	r1, r3, #0
4001fe2c:	e5911000 	ldr	r1, [r1]
4001fe30:	e59f2020 	ldr	r2, [pc, #32]	; 4001fe58 <CyU3PUsbAddToEventLog+0x68>
4001fe34:	e5922000 	ldr	r2, [r2]
4001fe38:	e1510002 	cmp	r1, r2
4001fe3c:	3a000002 	bcc	4001fe4c <CyU3PUsbAddToEventLog+0x5c>
4001fe40:	e3a01000 	mov	r1, #0
4001fe44:	e2832000 	add	r2, r3, #0
4001fe48:	e5821000 	str	r1, [r2]
4001fe4c:	e12fff1e 	bx	lr
4001fe50:	40030d90 	.word	0x40030d90
4001fe54:	40030d94 	.word	0x40030d94
4001fe58:	40030d98 	.word	0x40030d98

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fe5c <CyU3PUsbCheckUsb3Disconnect>:
4001fe5c:	e92d4070 	push	{r4, r5, r6, lr}
4001fe60:	e3a04e19 	mov	r4, #400	; 0x190
4001fe64:	e3a06002 	mov	r6, #2
4001fe68:	e59f01fc 	ldr	r0, [pc, #508]	; 4002006c <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe6c:	e1d000b0 	ldrh	r0, [r0]
4001fe70:	e3500001 	cmp	r0, #1
4001fe74:	da000008 	ble	4001fe9c <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fe78:	e59f01ec 	ldr	r0, [pc, #492]	; 4002006c <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe7c:	e1d010b0 	ldrh	r1, [r0]
4001fe80:	e1a00004 	mov	r0, r4
4001fe84:	ebffc3bc 	bl	40010d7c <__aeabi_idivmod>
4001fe88:	e1a04800 	lsl	r4, r0, #16
4001fe8c:	e1a04824 	lsr	r4, r4, #16
4001fe90:	e2840001 	add	r0, r4, #1
4001fe94:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fe98:	e3a06001 	mov	r6, #1
4001fe9c:	e59f01cc 	ldr	r0, [pc, #460]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fea0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fea4:	e200503f 	and	r5, r0, #63	; 0x3f
4001fea8:	e3550010 	cmp	r5, #16
4001feac:	ba000004 	blt	4001fec4 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001feb0:	e3550017 	cmp	r5, #23
4001feb4:	ca000002 	bgt	4001fec4 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001feb8:	e3a00000 	mov	r0, #0
4001febc:	e59f11b0 	ldr	r1, [pc, #432]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fec0:	e5810000 	str	r0, [r1]
4001fec4:	e59f01a8 	ldr	r0, [pc, #424]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fec8:	e5900000 	ldr	r0, [r0]
4001fecc:	e3500000 	cmp	r0, #0
4001fed0:	1a000000 	bne	4001fed8 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fed4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fed8:	ea000010 	b	4001ff20 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fedc:	e1a00006 	mov	r0, r6
4001fee0:	ebffa367 	bl	40008c84 <_tx_thread_sleep>
4001fee4:	e59f0184 	ldr	r0, [pc, #388]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fee8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001feec:	e200503f 	and	r5, r0, #63	; 0x3f
4001fef0:	e59f017c 	ldr	r0, [pc, #380]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fef4:	e5900000 	ldr	r0, [r0]
4001fef8:	e3500000 	cmp	r0, #0
4001fefc:	0a000003 	beq	4001ff10 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001ff00:	e3550010 	cmp	r5, #16
4001ff04:	ba000005 	blt	4001ff20 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ff08:	e3550017 	cmp	r5, #23
4001ff0c:	ca000003 	bgt	4001ff20 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ff10:	e3a00000 	mov	r0, #0
4001ff14:	e59f1158 	ldr	r1, [pc, #344]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff18:	e5810000 	str	r0, [r1]
4001ff1c:	ea000004 	b	4001ff34 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001ff20:	e1b00004 	movs	r0, r4
4001ff24:	e2441001 	sub	r1, r4, #1
4001ff28:	e1a04801 	lsl	r4, r1, #16
4001ff2c:	e1a04824 	lsr	r4, r4, #16
4001ff30:	1affffe9 	bne	4001fedc <CyU3PUsbCheckUsb3Disconnect+0x80>
4001ff34:	e1a00000 	nop			; (mov r0, r0)
4001ff38:	e59f0134 	ldr	r0, [pc, #308]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff3c:	e5900000 	ldr	r0, [r0]
4001ff40:	e3500000 	cmp	r0, #0
4001ff44:	0a000047 	beq	40020068 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ff48:	e59f0128 	ldr	r0, [pc, #296]	; 40020078 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff4c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff50:	e3100a02 	tst	r0, #8192	; 0x2000
4001ff54:	0a000020 	beq	4001ffdc <CyU3PUsbCheckUsb3Disconnect+0x180>
4001ff58:	e59f0118 	ldr	r0, [pc, #280]	; 40020078 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff5c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff60:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001ff64:	e59f110c 	ldr	r1, [pc, #268]	; 40020078 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff68:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ff6c:	e3a00002 	mov	r0, #2
4001ff70:	ebffce52 	bl	400138c0 <CyU3PBusyWait>
4001ff74:	e59f0100 	ldr	r0, [pc, #256]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff78:	e5900004 	ldr	r0, [r0, #4]
4001ff7c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ff80:	e59f10f4 	ldr	r1, [pc, #244]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff84:	e5810004 	str	r0, [r1, #4]
4001ff88:	e3a00001 	mov	r0, #1
4001ff8c:	ebffce4b 	bl	400138c0 <CyU3PBusyWait>
4001ff90:	e59f00d8 	ldr	r0, [pc, #216]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff94:	e590001c 	ldr	r0, [r0, #28]
4001ff98:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ff9c:	e59f10cc 	ldr	r1, [pc, #204]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ffa0:	e581001c 	str	r0, [r1, #28]
4001ffa4:	e59f00d4 	ldr	r0, [pc, #212]	; 40020080 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001ffa8:	e5900000 	ldr	r0, [r0]
4001ffac:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ffb0:	e3a00001 	mov	r0, #1
4001ffb4:	ebffce41 	bl	400138c0 <CyU3PBusyWait>
4001ffb8:	e59f00bc 	ldr	r0, [pc, #188]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ffbc:	e5900004 	ldr	r0, [r0, #4]
4001ffc0:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ffc4:	e59f10b0 	ldr	r1, [pc, #176]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ffc8:	e5810004 	str	r0, [r1, #4]
4001ffcc:	e3a01000 	mov	r1, #0
4001ffd0:	e3a00002 	mov	r0, #2
4001ffd4:	ebfff1d9 	bl	4001c740 <CyU3PSetUsbCoreClock>
4001ffd8:	ea000022 	b	40020068 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ffdc:	e59f00a0 	ldr	r0, [pc, #160]	; 40020084 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001ffe0:	e5900000 	ldr	r0, [r0]
4001ffe4:	e3500000 	cmp	r0, #0
4001ffe8:	0a000007 	beq	4002000c <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001ffec:	e3a00000 	mov	r0, #0
4001fff0:	e59f108c 	ldr	r1, [pc, #140]	; 40020084 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fff4:	e5810000 	str	r0, [r1]
4001fff8:	e3a00001 	mov	r0, #1
4001fffc:	ebfff481 	bl	4001d208 <CyU3PUsbPhyDisable>
40020000:	e3a00001 	mov	r0, #1
40020004:	ebfff4f5 	bl	4001d3e0 <CyU3PUsbPhyEnable>
40020008:	eaffffb1 	b	4001fed4 <CyU3PUsbCheckUsb3Disconnect+0x78>
4002000c:	e59f0074 	ldr	r0, [pc, #116]	; 40020088 <CyU3PUsbCheckUsb3Disconnect+0x22c>
40020010:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020014:	e3500000 	cmp	r0, #0
40020018:	0a000011 	beq	40020064 <CyU3PUsbCheckUsb3Disconnect+0x208>
4002001c:	e3a00001 	mov	r0, #1
40020020:	ebfff478 	bl	4001d208 <CyU3PUsbPhyDisable>
40020024:	e3a00003 	mov	r0, #3
40020028:	e59f1058 	ldr	r1, [pc, #88]	; 40020088 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4002002c:	e5c10008 	strb	r0, [r1, #8]
40020030:	e3a00000 	mov	r0, #0
40020034:	e5c10009 	strb	r0, [r1, #9]
40020038:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002003c:	e59f0048 	ldr	r0, [pc, #72]	; 4002008c <CyU3PUsbCheckUsb3Disconnect+0x230>
40020040:	e5900000 	ldr	r0, [r0]
40020044:	e3500000 	cmp	r0, #0
40020048:	0a000006 	beq	40020068 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4002004c:	e3a01000 	mov	r1, #0
40020050:	e3a00014 	mov	r0, #20
40020054:	e59f2030 	ldr	r2, [pc, #48]	; 4002008c <CyU3PUsbCheckUsb3Disconnect+0x230>
40020058:	e5922000 	ldr	r2, [r2]
4002005c:	e12fff32 	blx	r2
40020060:	ea000000 	b	40020068 <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020064:	eb00008e 	bl	400202a4 <CyU3PUsbFallBackToUsb2>
40020068:	eaffff99 	b	4001fed4 <CyU3PUsbCheckUsb3Disconnect+0x78>
4002006c:	40030db8 	.word	0x40030db8
40020070:	e0033000 	.word	0xe0033000
40020074:	40030d64 	.word	0x40030d64
40020078:	e0031000 	.word	0xe0031000
4002007c:	e0030000 	.word	0xe0030000
40020080:	40030c58 	.word	0x40030c58
40020084:	40030d74 	.word	0x40030d74
40020088:	40031d40 	.word	0x40031d40
4002008c:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbDescInit:

40020090 <CyU3PUsbDescInit>:
40020090:	e92d4010 	push	{r4, lr}
40020094:	e3a02074 	mov	r2, #116	; 0x74
40020098:	e3a01000 	mov	r1, #0
4002009c:	e59f0004 	ldr	r0, [pc, #4]	; 400200a8 <CyU3PUsbDescInit+0x18>
400200a0:	ebff8d84 	bl	400036b8 <CyU3PMemSet>
400200a4:	e8bd8010 	pop	{r4, pc}
400200a8:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

400200ac <CyU3PUsbEpPrepare>:
400200ac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400200b0:	e1a04000 	mov	r4, r0
400200b4:	e3a05001 	mov	r5, #1
400200b8:	ea000061 	b	40020244 <CyU3PUsbEpPrepare+0x198>
400200bc:	e59f01b8 	ldr	r0, [pc, #440]	; 4002027c <CyU3PUsbEpPrepare+0x1d0>
400200c0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200c4:	e3100901 	tst	r0, #16384	; 0x4000
400200c8:	0a000029 	beq	40020174 <CyU3PUsbEpPrepare+0xc8>
400200cc:	e0850085 	add	r0, r5, r5, lsl #1
400200d0:	e59f11a8 	ldr	r1, [pc, #424]	; 40020280 <CyU3PUsbEpPrepare+0x1d4>
400200d4:	e0810100 	add	r0, r1, r0, lsl #2
400200d8:	e1d070b0 	ldrh	r7, [r0]
400200dc:	e59f0198 	ldr	r0, [pc, #408]	; 4002027c <CyU3PUsbEpPrepare+0x1d0>
400200e0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200e4:	e2000b03 	and	r0, r0, #3072	; 0xc00
400200e8:	e1a06520 	lsr	r6, r0, #10
400200ec:	e2440001 	sub	r0, r4, #1
400200f0:	e0800080 	add	r0, r0, r0, lsl #1
400200f4:	e59f1188 	ldr	r1, [pc, #392]	; 40020284 <CyU3PUsbEpPrepare+0x1d8>
400200f8:	e0810100 	add	r0, r1, r0, lsl #2
400200fc:	e2461001 	sub	r1, r6, #1
40020100:	e7908101 	ldr	r8, [r0, r1, lsl #2]
40020104:	e1570008 	cmp	r7, r8
40020108:	8a000001 	bhi	40020114 <CyU3PUsbEpPrepare+0x68>
4002010c:	e3570000 	cmp	r7, #0
40020110:	1a000000 	bne	40020118 <CyU3PUsbEpPrepare+0x6c>
40020114:	e1a07008 	mov	r7, r8
40020118:	e3540003 	cmp	r4, #3
4002011c:	1a000005 	bne	40020138 <CyU3PUsbEpPrepare+0x8c>
40020120:	e59f0160 	ldr	r0, [pc, #352]	; 40020288 <CyU3PUsbEpPrepare+0x1dc>
40020124:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020128:	e3800001 	orr	r0, r0, #1
4002012c:	e59f1154 	ldr	r1, [pc, #340]	; 40020288 <CyU3PUsbEpPrepare+0x1dc>
40020130:	e7810105 	str	r0, [r1, r5, lsl #2]
40020134:	ea000008 	b	4002015c <CyU3PUsbEpPrepare+0xb0>
40020138:	e59f013c 	ldr	r0, [pc, #316]	; 4002027c <CyU3PUsbEpPrepare+0x1d0>
4002013c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020140:	e1a00520 	lsr	r0, r0, #10
40020144:	e1a00500 	lsl	r0, r0, #10
40020148:	e1a01b07 	lsl	r1, r7, #22
4002014c:	e1a01b21 	lsr	r1, r1, #22
40020150:	e1800001 	orr	r0, r0, r1
40020154:	e59f1120 	ldr	r1, [pc, #288]	; 4002027c <CyU3PUsbEpPrepare+0x1d0>
40020158:	e7810105 	str	r0, [r1, r5, lsl #2]
4002015c:	e59f0128 	ldr	r0, [pc, #296]	; 4002028c <CyU3PUsbEpPrepare+0x1e0>
40020160:	e7807105 	str	r7, [r0, r5, lsl #2]
40020164:	e3850080 	orr	r0, r5, #128	; 0x80
40020168:	e3a02001 	mov	r2, #1
4002016c:	e3a01000 	mov	r1, #0
40020170:	ebfff7c9 	bl	4001e09c <CyU3PUsbStall>
40020174:	e59f0114 	ldr	r0, [pc, #276]	; 40020290 <CyU3PUsbEpPrepare+0x1e4>
40020178:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002017c:	e3100901 	tst	r0, #16384	; 0x4000
40020180:	0a00002d 	beq	4002023c <CyU3PUsbEpPrepare+0x190>
40020184:	e0850085 	add	r0, r5, r5, lsl #1
40020188:	e59f1104 	ldr	r1, [pc, #260]	; 40020294 <CyU3PUsbEpPrepare+0x1e8>
4002018c:	e0810100 	add	r0, r1, r0, lsl #2
40020190:	e1d070b0 	ldrh	r7, [r0]
40020194:	e59f00f4 	ldr	r0, [pc, #244]	; 40020290 <CyU3PUsbEpPrepare+0x1e4>
40020198:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002019c:	e2000b03 	and	r0, r0, #3072	; 0xc00
400201a0:	e1a06520 	lsr	r6, r0, #10
400201a4:	e2440001 	sub	r0, r4, #1
400201a8:	e0800080 	add	r0, r0, r0, lsl #1
400201ac:	e59f10d0 	ldr	r1, [pc, #208]	; 40020284 <CyU3PUsbEpPrepare+0x1d8>
400201b0:	e0810100 	add	r0, r1, r0, lsl #2
400201b4:	e2461001 	sub	r1, r6, #1
400201b8:	e7908101 	ldr	r8, [r0, r1, lsl #2]
400201bc:	e1570008 	cmp	r7, r8
400201c0:	8a000001 	bhi	400201cc <CyU3PUsbEpPrepare+0x120>
400201c4:	e3570000 	cmp	r7, #0
400201c8:	1a000000 	bne	400201d0 <CyU3PUsbEpPrepare+0x124>
400201cc:	e1a07008 	mov	r7, r8
400201d0:	e3540003 	cmp	r4, #3
400201d4:	1a000005 	bne	400201f0 <CyU3PUsbEpPrepare+0x144>
400201d8:	e59f00b8 	ldr	r0, [pc, #184]	; 40020298 <CyU3PUsbEpPrepare+0x1ec>
400201dc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201e0:	e3800001 	orr	r0, r0, #1
400201e4:	e59f10ac 	ldr	r1, [pc, #172]	; 40020298 <CyU3PUsbEpPrepare+0x1ec>
400201e8:	e7810105 	str	r0, [r1, r5, lsl #2]
400201ec:	ea000008 	b	40020214 <CyU3PUsbEpPrepare+0x168>
400201f0:	e59f0098 	ldr	r0, [pc, #152]	; 40020290 <CyU3PUsbEpPrepare+0x1e4>
400201f4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201f8:	e1a00520 	lsr	r0, r0, #10
400201fc:	e1a00500 	lsl	r0, r0, #10
40020200:	e1a01b07 	lsl	r1, r7, #22
40020204:	e1a01b21 	lsr	r1, r1, #22
40020208:	e1800001 	orr	r0, r0, r1
4002020c:	e59f107c 	ldr	r1, [pc, #124]	; 40020290 <CyU3PUsbEpPrepare+0x1e4>
40020210:	e7810105 	str	r0, [r1, r5, lsl #2]
40020214:	e59f0080 	ldr	r0, [pc, #128]	; 4002029c <CyU3PUsbEpPrepare+0x1f0>
40020218:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002021c:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
40020220:	e1800007 	orr	r0, r0, r7
40020224:	e59f1070 	ldr	r1, [pc, #112]	; 4002029c <CyU3PUsbEpPrepare+0x1f0>
40020228:	e7810105 	str	r0, [r1, r5, lsl #2]
4002022c:	e3a02001 	mov	r2, #1
40020230:	e3a01000 	mov	r1, #0
40020234:	e1a00005 	mov	r0, r5
40020238:	ebfff797 	bl	4001e09c <CyU3PUsbStall>
4002023c:	e2850001 	add	r0, r5, #1
40020240:	e20050ff 	and	r5, r0, #255	; 0xff
40020244:	e3550010 	cmp	r5, #16
40020248:	baffff9b 	blt	400200bc <CyU3PUsbEpPrepare+0x10>
4002024c:	e3540003 	cmp	r4, #3
40020250:	1a000005 	bne	4002026c <CyU3PUsbEpPrepare+0x1c0>
40020254:	e59f1044 	ldr	r1, [pc, #68]	; 400202a0 <CyU3PUsbEpPrepare+0x1f4>
40020258:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4002025c:	e3510000 	cmp	r1, #0
40020260:	0a000001 	beq	4002026c <CyU3PUsbEpPrepare+0x1c0>
40020264:	e3a01001 	mov	r1, #1
40020268:	ea000000 	b	40020270 <CyU3PUsbEpPrepare+0x1c4>
4002026c:	e3a01000 	mov	r1, #0
40020270:	e1a00001 	mov	r0, r1
40020274:	eb000854 	bl	400223cc <CyFx3UsbDmaPrefetchEnable>
40020278:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002027c:	e0031418 	.word	0xe0031418
40020280:	40031bbc 	.word	0x40031bbc
40020284:	40012208 	.word	0x40012208
40020288:	e0033500 	.word	0xe0033500
4002028c:	e0031c40 	.word	0xe0031c40
40020290:	e0031498 	.word	0xe0031498
40020294:	40031c7c 	.word	0x40031c7c
40020298:	e0033600 	.word	0xe0033600
4002029c:	e0031c80 	.word	0xe0031c80
400202a0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

400202a4 <CyU3PUsbFallBackToUsb2>:
400202a4:	e92d4010 	push	{r4, lr}
400202a8:	e59f0234 	ldr	r0, [pc, #564]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x240>
400202ac:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400202b0:	e3500000 	cmp	r0, #0
400202b4:	0a000006 	beq	400202d4 <CyU3PUsbFallBackToUsb2+0x30>
400202b8:	e59f0228 	ldr	r0, [pc, #552]	; 400204e8 <CyU3PUsbFallBackToUsb2+0x244>
400202bc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400202c0:	e59f121c 	ldr	r1, [pc, #540]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x240>
400202c4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400202c8:	e1100001 	tst	r0, r1
400202cc:	1a000000 	bne	400202d4 <CyU3PUsbFallBackToUsb2+0x30>
400202d0:	e8bd8010 	pop	{r4, pc}
400202d4:	e3a00050 	mov	r0, #80	; 0x50
400202d8:	ebfffec4 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
400202dc:	eb0007f1 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
400202e0:	e1a04000 	mov	r4, r0
400202e4:	e3a01000 	mov	r1, #0
400202e8:	e59f01fc 	ldr	r0, [pc, #508]	; 400204ec <CyU3PUsbFallBackToUsb2+0x248>
400202ec:	eb000861 	bl	40022478 <CyFx3UsbWritePhyReg>
400202f0:	e1a00004 	mov	r0, r4
400202f4:	eb0007f9 	bl	400222e0 <CyU3PVicEnableInterrupts>
400202f8:	e3a00a01 	mov	r0, #4096	; 0x1000
400202fc:	e59f11ec 	ldr	r1, [pc, #492]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x24c>
40020300:	e5810054 	str	r0, [r1, #84]	; 0x54
40020304:	e59f01d8 	ldr	r0, [pc, #472]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x240>
40020308:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4002030c:	e2800001 	add	r0, r0, #1
40020310:	e59f11cc 	ldr	r1, [pc, #460]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x240>
40020314:	e5810058 	str	r0, [r1, #88]	; 0x58
40020318:	e3a00000 	mov	r0, #0
4002031c:	e59f11d0 	ldr	r1, [pc, #464]	; 400204f4 <CyU3PUsbFallBackToUsb2+0x250>
40020320:	e5810000 	str	r0, [r1]
40020324:	e59f01cc 	ldr	r0, [pc, #460]	; 400204f8 <CyU3PUsbFallBackToUsb2+0x254>
40020328:	ebffaac7 	bl	4000ae4c <_txe_timer_deactivate>
4002032c:	e3a00002 	mov	r0, #2
40020330:	ebffcd62 	bl	400138c0 <CyU3PBusyWait>
40020334:	e3a01002 	mov	r1, #2
40020338:	e1a00001 	mov	r0, r1
4002033c:	ebfff0ff 	bl	4001c740 <CyU3PSetUsbCoreClock>
40020340:	e3a00002 	mov	r0, #2
40020344:	ebffcd5d 	bl	400138c0 <CyU3PBusyWait>
40020348:	e59f01ac 	ldr	r0, [pc, #428]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
4002034c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020350:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020354:	e59f11a0 	ldr	r1, [pc, #416]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
40020358:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002035c:	e3a00002 	mov	r0, #2
40020360:	ebffcd56 	bl	400138c0 <CyU3PBusyWait>
40020364:	e59f0190 	ldr	r0, [pc, #400]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
40020368:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002036c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
40020370:	e59f1184 	ldr	r1, [pc, #388]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
40020374:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020378:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4002037c:	e5900004 	ldr	r0, [r0, #4]
40020380:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020384:	e2411a01 	sub	r1, r1, #4096	; 0x1000
40020388:	e5810004 	str	r0, [r1, #4]
4002038c:	e2810a03 	add	r0, r1, #12288	; 0x3000
40020390:	e590001c 	ldr	r0, [r0, #28]
40020394:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020398:	e2811a03 	add	r1, r1, #12288	; 0x3000
4002039c:	e581001c 	str	r0, [r1, #28]
400203a0:	e59f0158 	ldr	r0, [pc, #344]	; 40020500 <CyU3PUsbFallBackToUsb2+0x25c>
400203a4:	e5900000 	ldr	r0, [r0]
400203a8:	e581002c 	str	r0, [r1, #44]	; 0x2c
400203ac:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
400203b0:	e5900000 	ldr	r0, [r0]
400203b4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400203b8:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
400203bc:	e5810000 	str	r0, [r1]
400203c0:	e3a00005 	mov	r0, #5
400203c4:	ebffcd3d 	bl	400138c0 <CyU3PBusyWait>
400203c8:	e59f0134 	ldr	r0, [pc, #308]	; 40020504 <CyU3PUsbFallBackToUsb2+0x260>
400203cc:	e5900000 	ldr	r0, [r0]
400203d0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400203d4:	e59f1128 	ldr	r1, [pc, #296]	; 40020504 <CyU3PUsbFallBackToUsb2+0x260>
400203d8:	e5810000 	str	r0, [r1]
400203dc:	e3a0000a 	mov	r0, #10
400203e0:	ebffcd36 	bl	400138c0 <CyU3PBusyWait>
400203e4:	e3e00000 	mvn	r0, #0
400203e8:	e59f110c 	ldr	r1, [pc, #268]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
400203ec:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400203f0:	e5810524 	str	r0, [r1, #1316]	; 0x524
400203f4:	e5810810 	str	r0, [r1, #2064]	; 0x810
400203f8:	e59f0108 	ldr	r0, [pc, #264]	; 40020508 <CyU3PUsbFallBackToUsb2+0x264>
400203fc:	ebffd869 	bl	400165a8 <CyU3PDmaChannelReset>
40020400:	e59f0104 	ldr	r0, [pc, #260]	; 4002050c <CyU3PUsbFallBackToUsb2+0x268>
40020404:	ebffd867 	bl	400165a8 <CyU3PDmaChannelReset>
40020408:	e3a00000 	mov	r0, #0
4002040c:	e59f10dc 	ldr	r1, [pc, #220]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x24c>
40020410:	e5810008 	str	r0, [r1, #8]
40020414:	e3e00000 	mvn	r0, #0
40020418:	e5810004 	str	r0, [r1, #4]
4002041c:	e3a00000 	mov	r0, #0
40020420:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020424:	e3e00000 	mvn	r0, #0
40020428:	e5810404 	str	r0, [r1, #1028]	; 0x404
4002042c:	e1c10820 	bic	r0, r1, r0, lsr #16
40020430:	e5900004 	ldr	r0, [r0, #4]
40020434:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020438:	e2411a03 	sub	r1, r1, #12288	; 0x3000
4002043c:	e5810004 	str	r0, [r1, #4]
40020440:	e2810a01 	add	r0, r1, #4096	; 0x1000
40020444:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020448:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4002044c:	e2811a01 	add	r1, r1, #4096	; 0x1000
40020450:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020454:	e1a00001 	mov	r0, r1
40020458:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4002045c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020460:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020464:	e3a00001 	mov	r0, #1
40020468:	e59f1074 	ldr	r1, [pc, #116]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x240>
4002046c:	e5c10009 	strb	r0, [r1, #9]
40020470:	e3a00000 	mov	r0, #0
40020474:	e5810044 	str	r0, [r1, #68]	; 0x44
40020478:	e3a00501 	mov	r0, #4194304	; 0x400000
4002047c:	e59f108c 	ldr	r1, [pc, #140]	; 40020510 <CyU3PUsbFallBackToUsb2+0x26c>
40020480:	e5810074 	str	r0, [r1, #116]	; 0x74
40020484:	e3a00002 	mov	r0, #2
40020488:	ebffcd0c 	bl	400138c0 <CyU3PBusyWait>
4002048c:	e59f0068 	ldr	r0, [pc, #104]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
40020490:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020494:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020498:	e59f105c 	ldr	r1, [pc, #92]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
4002049c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400204a0:	e3a00064 	mov	r0, #100	; 0x64
400204a4:	ebffcd05 	bl	400138c0 <CyU3PBusyWait>
400204a8:	eb0007a0 	bl	40022330 <CyFx3Usb2PhySetup>
400204ac:	e59f0060 	ldr	r0, [pc, #96]	; 40020514 <CyU3PUsbFallBackToUsb2+0x270>
400204b0:	e59f1044 	ldr	r1, [pc, #68]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
400204b4:	e5810008 	str	r0, [r1, #8]
400204b8:	e3a00050 	mov	r0, #80	; 0x50
400204bc:	ebffccff 	bl	400138c0 <CyU3PBusyWait>
400204c0:	e3a01000 	mov	r1, #0
400204c4:	e3a00002 	mov	r0, #2
400204c8:	ebfff09c 	bl	4001c740 <CyU3PSetUsbCoreClock>
400204cc:	e59f0028 	ldr	r0, [pc, #40]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
400204d0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400204d4:	e3c00008 	bic	r0, r0, #8
400204d8:	e59f101c 	ldr	r1, [pc, #28]	; 400204fc <CyU3PUsbFallBackToUsb2+0x258>
400204dc:	e5810408 	str	r0, [r1, #1032]	; 0x408
400204e0:	eaffff7a 	b	400202d0 <CyU3PUsbFallBackToUsb2+0x2c>
400204e4:	40031d40 	.word	0x40031d40
400204e8:	e0051000 	.word	0xe0051000
400204ec:	00001005 	.word	0x00001005
400204f0:	e0033000 	.word	0xe0033000
400204f4:	40030db0 	.word	0x40030db0
400204f8:	400326a0 	.word	0x400326a0
400204fc:	e0031000 	.word	0xe0031000
40020500:	40030c58 	.word	0x40030c58
40020504:	e0050000 	.word	0xe0050000
40020508:	40031a7c 	.word	0x40031a7c
4002050c:	40031b1c 	.word	0x40031b1c
40020510:	e0032000 	.word	0xe0032000
40020514:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

40020518 <CyU3PUsbGetEpStatus>:
40020518:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002051c:	e1a04000 	mov	r4, r0
40020520:	e204600f 	and	r6, r4, #15
40020524:	e59f0090 	ldr	r0, [pc, #144]	; 400205bc <CyU3PUsbGetEpStatus+0xa4>
40020528:	e5d00009 	ldrb	r0, [r0, #9]
4002052c:	e3500003 	cmp	r0, #3
40020530:	1a00000b 	bne	40020564 <CyU3PUsbGetEpStatus+0x4c>
40020534:	e3140080 	tst	r4, #128	; 0x80
40020538:	0a000004 	beq	40020550 <CyU3PUsbGetEpStatus+0x38>
4002053c:	e59f007c 	ldr	r0, [pc, #124]	; 400205c0 <CyU3PUsbGetEpStatus+0xa8>
40020540:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020544:	e2000004 	and	r0, r0, #4
40020548:	e58d0000 	str	r0, [sp]
4002054c:	ea00000f 	b	40020590 <CyU3PUsbGetEpStatus+0x78>
40020550:	e59f006c 	ldr	r0, [pc, #108]	; 400205c4 <CyU3PUsbGetEpStatus+0xac>
40020554:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020558:	e2000004 	and	r0, r0, #4
4002055c:	e58d0000 	str	r0, [sp]
40020560:	ea00000a 	b	40020590 <CyU3PUsbGetEpStatus+0x78>
40020564:	e3140080 	tst	r4, #128	; 0x80
40020568:	0a000004 	beq	40020580 <CyU3PUsbGetEpStatus+0x68>
4002056c:	e59f0054 	ldr	r0, [pc, #84]	; 400205c8 <CyU3PUsbGetEpStatus+0xb0>
40020570:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020574:	e2000801 	and	r0, r0, #65536	; 0x10000
40020578:	e58d0000 	str	r0, [sp]
4002057c:	ea000003 	b	40020590 <CyU3PUsbGetEpStatus+0x78>
40020580:	e59f0044 	ldr	r0, [pc, #68]	; 400205cc <CyU3PUsbGetEpStatus+0xb4>
40020584:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020588:	e2000801 	and	r0, r0, #65536	; 0x10000
4002058c:	e58d0000 	str	r0, [sp]
40020590:	e59d0000 	ldr	r0, [sp]
40020594:	e3500000 	cmp	r0, #0
40020598:	0a000001 	beq	400205a4 <CyU3PUsbGetEpStatus+0x8c>
4002059c:	e3a00001 	mov	r0, #1
400205a0:	e58d0000 	str	r0, [sp]
400205a4:	e1a0100d 	mov	r1, sp
400205a8:	e3a00002 	mov	r0, #2
400205ac:	ebfff48f 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
400205b0:	e1a05000 	mov	r5, r0
400205b4:	e1a00005 	mov	r0, r5
400205b8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400205bc:	40031d40 	.word	0x40031d40
400205c0:	e0033500 	.word	0xe0033500
400205c4:	e0033600 	.word	0xe0033600
400205c8:	e0031418 	.word	0xe0031418
400205cc:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

400205d0 <CyU3PUsbHandleClearFeature>:
400205d0:	e92d4070 	push	{r4, r5, r6, lr}
400205d4:	e1a04000 	mov	r4, r0
400205d8:	e3a05000 	mov	r5, #0
400205dc:	e3540001 	cmp	r4, #1
400205e0:	0a000006 	beq	40020600 <CyU3PUsbHandleClearFeature+0x30>
400205e4:	e3540002 	cmp	r4, #2
400205e8:	0a00000b 	beq	4002061c <CyU3PUsbHandleClearFeature+0x4c>
400205ec:	e3540030 	cmp	r4, #48	; 0x30
400205f0:	0a00000f 	beq	40020634 <CyU3PUsbHandleClearFeature+0x64>
400205f4:	e3540031 	cmp	r4, #49	; 0x31
400205f8:	1a00002d 	bne	400206b4 <CyU3PUsbHandleClearFeature+0xe4>
400205fc:	ea00001c 	b	40020674 <CyU3PUsbHandleClearFeature+0xa4>
40020600:	e1a00000 	nop			; (mov r0, r0)
40020604:	e59f00d8 	ldr	r0, [pc, #216]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
40020608:	e5d00006 	ldrb	r0, [r0, #6]
4002060c:	e3c00002 	bic	r0, r0, #2
40020610:	e59f10cc 	ldr	r1, [pc, #204]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
40020614:	e5c10006 	strb	r0, [r1, #6]
40020618:	e1a00000 	nop			; (mov r0, r0)
4002061c:	e59f00c0 	ldr	r0, [pc, #192]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
40020620:	e5d00009 	ldrb	r0, [r0, #9]
40020624:	e3500003 	cmp	r0, #3
40020628:	0a000000 	beq	40020630 <CyU3PUsbHandleClearFeature+0x60>
4002062c:	e3a05001 	mov	r5, #1
40020630:	ea000021 	b	400206bc <CyU3PUsbHandleClearFeature+0xec>
40020634:	e1a00000 	nop			; (mov r0, r0)
40020638:	e59f00a4 	ldr	r0, [pc, #164]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002063c:	e5d00009 	ldrb	r0, [r0, #9]
40020640:	e3500003 	cmp	r0, #3
40020644:	1a000009 	bne	40020670 <CyU3PUsbHandleClearFeature+0xa0>
40020648:	e59f0094 	ldr	r0, [pc, #148]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002064c:	e5d00008 	ldrb	r0, [r0, #8]
40020650:	e3500006 	cmp	r0, #6
40020654:	1a000005 	bne	40020670 <CyU3PUsbHandleClearFeature+0xa0>
40020658:	e59f0084 	ldr	r0, [pc, #132]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002065c:	e5d00006 	ldrb	r0, [r0, #6]
40020660:	e3c00004 	bic	r0, r0, #4
40020664:	e59f1078 	ldr	r1, [pc, #120]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
40020668:	e5c10006 	strb	r0, [r1, #6]
4002066c:	e3a05001 	mov	r5, #1
40020670:	ea000011 	b	400206bc <CyU3PUsbHandleClearFeature+0xec>
40020674:	e1a00000 	nop			; (mov r0, r0)
40020678:	e59f0064 	ldr	r0, [pc, #100]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002067c:	e5d00009 	ldrb	r0, [r0, #9]
40020680:	e3500003 	cmp	r0, #3
40020684:	1a000009 	bne	400206b0 <CyU3PUsbHandleClearFeature+0xe0>
40020688:	e59f0054 	ldr	r0, [pc, #84]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002068c:	e5d00008 	ldrb	r0, [r0, #8]
40020690:	e3500006 	cmp	r0, #6
40020694:	1a000005 	bne	400206b0 <CyU3PUsbHandleClearFeature+0xe0>
40020698:	e59f0044 	ldr	r0, [pc, #68]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
4002069c:	e5d00006 	ldrb	r0, [r0, #6]
400206a0:	e3c00008 	bic	r0, r0, #8
400206a4:	e59f1038 	ldr	r1, [pc, #56]	; 400206e4 <CyU3PUsbHandleClearFeature+0x114>
400206a8:	e5c10006 	strb	r0, [r1, #6]
400206ac:	e3a05001 	mov	r5, #1
400206b0:	ea000001 	b	400206bc <CyU3PUsbHandleClearFeature+0xec>
400206b4:	e1a00000 	nop			; (mov r0, r0)
400206b8:	e1a00000 	nop			; (mov r0, r0)
400206bc:	e1a00000 	nop			; (mov r0, r0)
400206c0:	e3550000 	cmp	r5, #0
400206c4:	0a000001 	beq	400206d0 <CyU3PUsbHandleClearFeature+0x100>
400206c8:	ebfff0af 	bl	4001c98c <CyU3PUsbAckSetup>
400206cc:	ea000003 	b	400206e0 <CyU3PUsbHandleClearFeature+0x110>
400206d0:	e3a02000 	mov	r2, #0
400206d4:	e3a01001 	mov	r1, #1
400206d8:	e1a00002 	mov	r0, r2
400206dc:	ebfff66e 	bl	4001e09c <CyU3PUsbStall>
400206e0:	e8bd8070 	pop	{r4, r5, r6, pc}
400206e4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

400206e8 <CyU3PUsbHandleEvents>:
400206e8:	e92d4070 	push	{r4, r5, r6, lr}
400206ec:	e1a04000 	mov	r4, r0
400206f0:	e3140040 	tst	r4, #64	; 0x40
400206f4:	0a000000 	beq	400206fc <CyU3PUsbHandleEvents+0x14>
400206f8:	ebfff8cc 	bl	4001ea30 <CyU3PUibDevCtrlEvtHandler>
400206fc:	e3140020 	tst	r4, #32
40020700:	0a000000 	beq	40020708 <CyU3PUsbHandleEvents+0x20>
40020704:	ebfff942 	bl	4001ec14 <CyU3PUibEPEvtHandler>
40020708:	e3140080 	tst	r4, #128	; 0x80
4002070c:	0a000000 	beq	40020714 <CyU3PUsbHandleEvents+0x2c>
40020710:	ebfffa15 	bl	4001ef6c <CyU3PUibLnkIntrEvtHandler>
40020714:	e3140c01 	tst	r4, #256	; 0x100
40020718:	0a000000 	beq	40020720 <CyU3PUsbHandleEvents+0x38>
4002071c:	ebfffb32 	bl	4001f3ec <CyU3PUibProtIntrEvtHandler>
40020720:	e3140c02 	tst	r4, #512	; 0x200
40020724:	0a000000 	beq	4002072c <CyU3PUsbHandleEvents+0x44>
40020728:	ebfffa37 	bl	4001f00c <CyU3PUibProtEpIntrEvtHandler>
4002072c:	e3140b01 	tst	r4, #1024	; 0x400
40020730:	0a000006 	beq	40020750 <CyU3PUsbHandleEvents+0x68>
40020734:	e59f0378 	ldr	r0, [pc, #888]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
40020738:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002073c:	e3500b02 	cmp	r0, #2048	; 0x800
40020740:	1a000001 	bne	4002074c <CyU3PUsbHandleEvents+0x64>
40020744:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40020748:	ebffa14d 	bl	40008c84 <_tx_thread_sleep>
4002074c:	ebfffd4a 	bl	4001fc7c <CyU3PUibVbusChangeHandler>
40020750:	e3140b02 	tst	r4, #2048	; 0x800
40020754:	0a000000 	beq	4002075c <CyU3PUsbHandleEvents+0x74>
40020758:	eb0003ae 	bl	40021618 <CyU3PUsbSendCompliancePatterns>
4002075c:	e3140a01 	tst	r4, #4096	; 0x1000
40020760:	0a00000c 	beq	40020798 <CyU3PUsbHandleEvents+0xb0>
40020764:	e59f034c 	ldr	r0, [pc, #844]	; 40020ab8 <CyU3PUsbHandleEvents+0x3d0>
40020768:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002076c:	e3100902 	tst	r0, #32768	; 0x8000
40020770:	0a000008 	beq	40020798 <CyU3PUsbHandleEvents+0xb0>
40020774:	e3a00001 	mov	r0, #1
40020778:	e59f133c 	ldr	r1, [pc, #828]	; 40020abc <CyU3PUsbHandleEvents+0x3d4>
4002077c:	e5810000 	str	r0, [r1]
40020780:	e59f1338 	ldr	r1, [pc, #824]	; 40020ac0 <CyU3PUsbHandleEvents+0x3d8>
40020784:	e5810000 	str	r0, [r1]
40020788:	ebfffdb3 	bl	4001fe5c <CyU3PUsbCheckUsb3Disconnect>
4002078c:	e3a00000 	mov	r0, #0
40020790:	e59f1328 	ldr	r1, [pc, #808]	; 40020ac0 <CyU3PUsbHandleEvents+0x3d8>
40020794:	e5810000 	str	r0, [r1]
40020798:	e3140301 	tst	r4, #67108864	; 0x4000000
4002079c:	0a000013 	beq	400207f0 <CyU3PUsbHandleEvents+0x108>
400207a0:	e59f031c 	ldr	r0, [pc, #796]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
400207a4:	e5900000 	ldr	r0, [r0]
400207a8:	e3500000 	cmp	r0, #0
400207ac:	0a000008 	beq	400207d4 <CyU3PUsbHandleEvents+0xec>
400207b0:	e59f0300 	ldr	r0, [pc, #768]	; 40020ab8 <CyU3PUsbHandleEvents+0x3d0>
400207b4:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
400207b8:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
400207bc:	e3a02080 	mov	r2, #128	; 0x80
400207c0:	e1821920 	orr	r1, r2, r0, lsr #18
400207c4:	e3a00012 	mov	r0, #18
400207c8:	e59f22f4 	ldr	r2, [pc, #756]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
400207cc:	e5922000 	ldr	r2, [r2]
400207d0:	e12fff32 	blx	r2
400207d4:	e3a00b02 	mov	r0, #2048	; 0x800
400207d8:	e59f12e8 	ldr	r1, [pc, #744]	; 40020ac8 <CyU3PUsbHandleEvents+0x3e0>
400207dc:	e5810000 	str	r0, [r1]
400207e0:	e1c10000 	bic	r0, r1, r0
400207e4:	e5900004 	ldr	r0, [r0, #4]
400207e8:	e3800b02 	orr	r0, r0, #2048	; 0x800
400207ec:	e5810004 	str	r0, [r1, #4]
400207f0:	e3140901 	tst	r4, #16384	; 0x4000
400207f4:	0a000008 	beq	4002081c <CyU3PUsbHandleEvents+0x134>
400207f8:	e59f02c4 	ldr	r0, [pc, #708]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
400207fc:	e5900000 	ldr	r0, [r0]
40020800:	e3500000 	cmp	r0, #0
40020804:	0a000004 	beq	4002081c <CyU3PUsbHandleEvents+0x134>
40020808:	e3a01000 	mov	r1, #0
4002080c:	e3a00003 	mov	r0, #3
40020810:	e59f22ac 	ldr	r2, [pc, #684]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
40020814:	e5922000 	ldr	r2, [r2]
40020818:	e12fff32 	blx	r2
4002081c:	e3140a02 	tst	r4, #8192	; 0x2000
40020820:	0a000008 	beq	40020848 <CyU3PUsbHandleEvents+0x160>
40020824:	e59f0298 	ldr	r0, [pc, #664]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
40020828:	e5900000 	ldr	r0, [r0]
4002082c:	e3500000 	cmp	r0, #0
40020830:	0a000004 	beq	40020848 <CyU3PUsbHandleEvents+0x160>
40020834:	e3a01000 	mov	r1, #0
40020838:	e3a00002 	mov	r0, #2
4002083c:	e59f2280 	ldr	r2, [pc, #640]	; 40020ac4 <CyU3PUsbHandleEvents+0x3dc>
40020840:	e5922000 	ldr	r2, [r2]
40020844:	e12fff32 	blx	r2
40020848:	e3140902 	tst	r4, #32768	; 0x8000
4002084c:	0a000022 	beq	400208dc <CyU3PUsbHandleEvents+0x1f4>
40020850:	e59f0274 	ldr	r0, [pc, #628]	; 40020acc <CyU3PUsbHandleEvents+0x3e4>
40020854:	e5900000 	ldr	r0, [r0]
40020858:	e3500000 	cmp	r0, #0
4002085c:	0a00001e 	beq	400208dc <CyU3PUsbHandleEvents+0x1f4>
40020860:	eb000690 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
40020864:	e1a06000 	mov	r6, r0
40020868:	e3a00001 	mov	r0, #1
4002086c:	ebffcc13 	bl	400138c0 <CyU3PBusyWait>
40020870:	e59f0258 	ldr	r0, [pc, #600]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
40020874:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40020878:	e3c00803 	bic	r0, r0, #196608	; 0x30000
4002087c:	e59f124c 	ldr	r1, [pc, #588]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
40020880:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020884:	e1a00006 	mov	r0, r6
40020888:	eb000694 	bl	400222e0 <CyU3PVicEnableInterrupts>
4002088c:	e3a00001 	mov	r0, #1
40020890:	ebffa0fb 	bl	40008c84 <_tx_thread_sleep>
40020894:	e3a00000 	mov	r0, #0
40020898:	e59f122c 	ldr	r1, [pc, #556]	; 40020acc <CyU3PUsbHandleEvents+0x3e4>
4002089c:	e5810000 	str	r0, [r1]
400208a0:	e59f0228 	ldr	r0, [pc, #552]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
400208a4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400208a8:	e3100c02 	tst	r0, #512	; 0x200
400208ac:	1a00000a 	bne	400208dc <CyU3PUsbHandleEvents+0x1f4>
400208b0:	e59f01fc 	ldr	r0, [pc, #508]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
400208b4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
400208b8:	e3500000 	cmp	r0, #0
400208bc:	1a000006 	bne	400208dc <CyU3PUsbHandleEvents+0x1f4>
400208c0:	e59f01ec 	ldr	r0, [pc, #492]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
400208c4:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
400208c8:	e3500000 	cmp	r0, #0
400208cc:	1a000002 	bne	400208dc <CyU3PUsbHandleEvents+0x1f4>
400208d0:	e3a00303 	mov	r0, #201326592	; 0xc000000
400208d4:	e59f11f4 	ldr	r1, [pc, #500]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
400208d8:	e5810050 	str	r0, [r1, #80]	; 0x50
400208dc:	e3140401 	tst	r4, #16777216	; 0x1000000
400208e0:	0a000020 	beq	40020968 <CyU3PUsbHandleEvents+0x280>
400208e4:	e59f01e4 	ldr	r0, [pc, #484]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
400208e8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400208ec:	e200503f 	and	r5, r0, #63	; 0x3f
400208f0:	e3550011 	cmp	r5, #17
400208f4:	0a000001 	beq	40020900 <CyU3PUsbHandleEvents+0x218>
400208f8:	e3550012 	cmp	r5, #18
400208fc:	1a000018 	bne	40020964 <CyU3PUsbHandleEvents+0x27c>
40020900:	e59f01cc 	ldr	r0, [pc, #460]	; 40020ad4 <CyU3PUsbHandleEvents+0x3ec>
40020904:	e5900000 	ldr	r0, [r0]
40020908:	e3500000 	cmp	r0, #0
4002090c:	0a000014 	beq	40020964 <CyU3PUsbHandleEvents+0x27c>
40020910:	e3a00005 	mov	r0, #5
40020914:	ebffcbe9 	bl	400138c0 <CyU3PBusyWait>
40020918:	e59f01b0 	ldr	r0, [pc, #432]	; 40020ad0 <CyU3PUsbHandleEvents+0x3e8>
4002091c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020920:	e200503f 	and	r5, r0, #63	; 0x3f
40020924:	e3550011 	cmp	r5, #17
40020928:	0a000001 	beq	40020934 <CyU3PUsbHandleEvents+0x24c>
4002092c:	e3550012 	cmp	r5, #18
40020930:	1a000001 	bne	4002093c <CyU3PUsbHandleEvents+0x254>
40020934:	e3a00000 	mov	r0, #0
40020938:	ebfff582 	bl	4001df48 <CyU3PUsbSetLinkPowerState>
4002093c:	e3a00001 	mov	r0, #1
40020940:	ebffa0cf 	bl	40008c84 <_tx_thread_sleep>
40020944:	e59f0188 	ldr	r0, [pc, #392]	; 40020ad4 <CyU3PUsbHandleEvents+0x3ec>
40020948:	e5900000 	ldr	r0, [r0]
4002094c:	e3500000 	cmp	r0, #0
40020950:	0a000003 	beq	40020964 <CyU3PUsbHandleEvents+0x27c>
40020954:	e3a02000 	mov	r2, #0
40020958:	e3a01401 	mov	r1, #16777216	; 0x1000000
4002095c:	e59f0174 	ldr	r0, [pc, #372]	; 40020ad8 <CyU3PUsbHandleEvents+0x3f0>
40020960:	ebffa5bf 	bl	4000a064 <_txe_event_flags_set>
40020964:	e1a00000 	nop			; (mov r0, r0)
40020968:	e3140402 	tst	r4, #33554432	; 0x2000000
4002096c:	0a000019 	beq	400209d8 <CyU3PUsbHandleEvents+0x2f0>
40020970:	e3a00052 	mov	r0, #82	; 0x52
40020974:	ebfffd1d 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
40020978:	e59f1134 	ldr	r1, [pc, #308]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
4002097c:	e5d11009 	ldrb	r1, [r1, #9]
40020980:	e3510003 	cmp	r1, #3
40020984:	1a000001 	bne	40020990 <CyU3PUsbHandleEvents+0x2a8>
40020988:	e3a01001 	mov	r1, #1
4002098c:	ea000000 	b	40020994 <CyU3PUsbHandleEvents+0x2ac>
40020990:	e3a01000 	mov	r1, #0
40020994:	e1a00001 	mov	r0, r1
40020998:	ebfff21a 	bl	4001d208 <CyU3PUsbPhyDisable>
4002099c:	e3a00001 	mov	r0, #1
400209a0:	ebffa0b7 	bl	40008c84 <_tx_thread_sleep>
400209a4:	e59f0108 	ldr	r0, [pc, #264]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
400209a8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400209ac:	e3500000 	cmp	r0, #0
400209b0:	0a000005 	beq	400209cc <CyU3PUsbHandleEvents+0x2e4>
400209b4:	e59f0120 	ldr	r0, [pc, #288]	; 40020adc <CyU3PUsbHandleEvents+0x3f4>
400209b8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400209bc:	e59f10f0 	ldr	r1, [pc, #240]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
400209c0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400209c4:	e1100001 	tst	r0, r1
400209c8:	0a000002 	beq	400209d8 <CyU3PUsbHandleEvents+0x2f0>
400209cc:	e59f10e0 	ldr	r1, [pc, #224]	; 40020ab4 <CyU3PUsbHandleEvents+0x3cc>
400209d0:	e5910024 	ldr	r0, [r1, #36]	; 0x24
400209d4:	ebfff281 	bl	4001d3e0 <CyU3PUsbPhyEnable>
400209d8:	e3140801 	tst	r4, #65536	; 0x10000
400209dc:	0a000006 	beq	400209fc <CyU3PUsbHandleEvents+0x314>
400209e0:	e59f00f8 	ldr	r0, [pc, #248]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
400209e4:	e5900000 	ldr	r0, [r0]
400209e8:	e3500000 	cmp	r0, #0
400209ec:	0a000002 	beq	400209fc <CyU3PUsbHandleEvents+0x314>
400209f0:	e59f10e8 	ldr	r1, [pc, #232]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
400209f4:	e5910000 	ldr	r0, [r1]
400209f8:	e12fff30 	blx	r0
400209fc:	e3140802 	tst	r4, #131072	; 0x20000
40020a00:	0a000006 	beq	40020a20 <CyU3PUsbHandleEvents+0x338>
40020a04:	e59f00d4 	ldr	r0, [pc, #212]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a08:	e5900004 	ldr	r0, [r0, #4]
40020a0c:	e3500000 	cmp	r0, #0
40020a10:	0a000002 	beq	40020a20 <CyU3PUsbHandleEvents+0x338>
40020a14:	e59f10c4 	ldr	r1, [pc, #196]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a18:	e5910004 	ldr	r0, [r1, #4]
40020a1c:	e12fff30 	blx	r0
40020a20:	e3140701 	tst	r4, #262144	; 0x40000
40020a24:	0a000006 	beq	40020a44 <CyU3PUsbHandleEvents+0x35c>
40020a28:	e59f00b0 	ldr	r0, [pc, #176]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a2c:	e5900008 	ldr	r0, [r0, #8]
40020a30:	e3500000 	cmp	r0, #0
40020a34:	0a000002 	beq	40020a44 <CyU3PUsbHandleEvents+0x35c>
40020a38:	e59f10a0 	ldr	r1, [pc, #160]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a3c:	e5910008 	ldr	r0, [r1, #8]
40020a40:	e12fff30 	blx	r0
40020a44:	e3140702 	tst	r4, #524288	; 0x80000
40020a48:	0a000006 	beq	40020a68 <CyU3PUsbHandleEvents+0x380>
40020a4c:	e59f008c 	ldr	r0, [pc, #140]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a50:	e590000c 	ldr	r0, [r0, #12]
40020a54:	e3500000 	cmp	r0, #0
40020a58:	0a000002 	beq	40020a68 <CyU3PUsbHandleEvents+0x380>
40020a5c:	e59f107c 	ldr	r1, [pc, #124]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a60:	e591000c 	ldr	r0, [r1, #12]
40020a64:	e12fff30 	blx	r0
40020a68:	e3140601 	tst	r4, #1048576	; 0x100000
40020a6c:	0a000006 	beq	40020a8c <CyU3PUsbHandleEvents+0x3a4>
40020a70:	e59f0068 	ldr	r0, [pc, #104]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a74:	e5900010 	ldr	r0, [r0, #16]
40020a78:	e3500000 	cmp	r0, #0
40020a7c:	0a000002 	beq	40020a8c <CyU3PUsbHandleEvents+0x3a4>
40020a80:	e59f1058 	ldr	r1, [pc, #88]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a84:	e5910010 	ldr	r0, [r1, #16]
40020a88:	e12fff30 	blx	r0
40020a8c:	e3140602 	tst	r4, #2097152	; 0x200000
40020a90:	0a000006 	beq	40020ab0 <CyU3PUsbHandleEvents+0x3c8>
40020a94:	e59f0044 	ldr	r0, [pc, #68]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020a98:	e5900014 	ldr	r0, [r0, #20]
40020a9c:	e3500000 	cmp	r0, #0
40020aa0:	0a000002 	beq	40020ab0 <CyU3PUsbHandleEvents+0x3c8>
40020aa4:	e59f1034 	ldr	r1, [pc, #52]	; 40020ae0 <CyU3PUsbHandleEvents+0x3f8>
40020aa8:	e5910014 	ldr	r0, [r1, #20]
40020aac:	e12fff30 	blx	r0
40020ab0:	e8bd8070 	pop	{r4, r5, r6, pc}
40020ab4:	40031d40 	.word	0x40031d40
40020ab8:	e0031000 	.word	0xe0031000
40020abc:	40030d64 	.word	0x40030d64
40020ac0:	40030d68 	.word	0x40030d68
40020ac4:	40030d9c 	.word	0x40030d9c
40020ac8:	e0030000 	.word	0xe0030000
40020acc:	40030d6c 	.word	0x40030d6c
40020ad0:	e0033000 	.word	0xe0033000
40020ad4:	40030db4 	.word	0x40030db4
40020ad8:	40031eb8 	.word	0x40031eb8
40020adc:	e0051000 	.word	0xe0051000
40020ae0:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020ae4 <CyU3PUsbHandleGetStatus>:
40020ae4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020ae8:	e1a04000 	mov	r4, r0
40020aec:	e1a05001 	mov	r5, r1
40020af0:	e3a07000 	mov	r7, #0
40020af4:	e3a00000 	mov	r0, #0
40020af8:	e58d0000 	str	r0, [sp]
40020afc:	e3540000 	cmp	r4, #0
40020b00:	0a000004 	beq	40020b18 <CyU3PUsbHandleGetStatus+0x34>
40020b04:	e3540001 	cmp	r4, #1
40020b08:	0a00001e 	beq	40020b88 <CyU3PUsbHandleGetStatus+0xa4>
40020b0c:	e3540002 	cmp	r4, #2
40020b10:	1a00002b 	bne	40020bc4 <CyU3PUsbHandleGetStatus+0xe0>
40020b14:	ea000023 	b	40020ba8 <CyU3PUsbHandleGetStatus+0xc4>
40020b18:	e1a00000 	nop			; (mov r0, r0)
40020b1c:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020b20:	1a00000d 	bne	40020b5c <CyU3PUsbHandleGetStatus+0x78>
40020b24:	ebffed1c 	bl	4001bf9c <CyU3POtgGetMode>
40020b28:	e3500002 	cmp	r0, #2
40020b2c:	1a000008 	bne	40020b54 <CyU3PUsbHandleGetStatus+0x70>
40020b30:	e59f00a0 	ldr	r0, [pc, #160]	; 40020bd8 <CyU3PUsbHandleGetStatus+0xf4>
40020b34:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020b38:	e3500000 	cmp	r0, #0
40020b3c:	0a000001 	beq	40020b48 <CyU3PUsbHandleGetStatus+0x64>
40020b40:	e3a00001 	mov	r0, #1
40020b44:	ea000000 	b	40020b4c <CyU3PUsbHandleGetStatus+0x68>
40020b48:	e3a00000 	mov	r0, #0
40020b4c:	e5cd0000 	strb	r0, [sp]
40020b50:	ea00000b 	b	40020b84 <CyU3PUsbHandleGetStatus+0xa0>
40020b54:	e3a00000 	mov	r0, #0
40020b58:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020b5c:	e59f0074 	ldr	r0, [pc, #116]	; 40020bd8 <CyU3PUsbHandleGetStatus+0xf4>
40020b60:	e5d00006 	ldrb	r0, [r0, #6]
40020b64:	e5cd0000 	strb	r0, [sp]
40020b68:	e59f0068 	ldr	r0, [pc, #104]	; 40020bd8 <CyU3PUsbHandleGetStatus+0xf4>
40020b6c:	e5d00009 	ldrb	r0, [r0, #9]
40020b70:	e3500003 	cmp	r0, #3
40020b74:	1a000002 	bne	40020b84 <CyU3PUsbHandleGetStatus+0xa0>
40020b78:	e5dd0000 	ldrb	r0, [sp]
40020b7c:	e3c00002 	bic	r0, r0, #2
40020b80:	e5cd0000 	strb	r0, [sp]
40020b84:	e1a00000 	nop			; (mov r0, r0)
40020b88:	e1a0100d 	mov	r1, sp
40020b8c:	e3a00002 	mov	r0, #2
40020b90:	ebfff316 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40020b94:	e1a06000 	mov	r6, r0
40020b98:	e3560000 	cmp	r6, #0
40020b9c:	1a000000 	bne	40020ba4 <CyU3PUsbHandleGetStatus+0xc0>
40020ba0:	e3a07001 	mov	r7, #1
40020ba4:	ea000008 	b	40020bcc <CyU3PUsbHandleGetStatus+0xe8>
40020ba8:	e1a00000 	nop			; (mov r0, r0)
40020bac:	e20500ff 	and	r0, r5, #255	; 0xff
40020bb0:	ebfffe58 	bl	40020518 <CyU3PUsbGetEpStatus>
40020bb4:	e3500000 	cmp	r0, #0
40020bb8:	1a000000 	bne	40020bc0 <CyU3PUsbHandleGetStatus+0xdc>
40020bbc:	e3a07001 	mov	r7, #1
40020bc0:	ea000001 	b	40020bcc <CyU3PUsbHandleGetStatus+0xe8>
40020bc4:	e1a00000 	nop			; (mov r0, r0)
40020bc8:	e1a00000 	nop			; (mov r0, r0)
40020bcc:	e1a00000 	nop			; (mov r0, r0)
40020bd0:	e1a00007 	mov	r0, r7
40020bd4:	eaffffdf 	b	40020b58 <CyU3PUsbHandleGetStatus+0x74>
40020bd8:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020bdc <CyU3PUsbHandleSetFeature>:
40020bdc:	e92d4070 	push	{r4, r5, r6, lr}
40020be0:	e1a04000 	mov	r4, r0
40020be4:	e3a05000 	mov	r5, #0
40020be8:	e3540001 	cmp	r4, #1
40020bec:	0a000006 	beq	40020c0c <CyU3PUsbHandleSetFeature+0x30>
40020bf0:	e3540002 	cmp	r4, #2
40020bf4:	0a00000b 	beq	40020c28 <CyU3PUsbHandleSetFeature+0x4c>
40020bf8:	e3540030 	cmp	r4, #48	; 0x30
40020bfc:	0a00000e 	beq	40020c3c <CyU3PUsbHandleSetFeature+0x60>
40020c00:	e3540031 	cmp	r4, #49	; 0x31
40020c04:	1a00002a 	bne	40020cb4 <CyU3PUsbHandleSetFeature+0xd8>
40020c08:	ea00001a 	b	40020c78 <CyU3PUsbHandleSetFeature+0x9c>
40020c0c:	e1a00000 	nop			; (mov r0, r0)
40020c10:	e59f00cc 	ldr	r0, [pc, #204]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c14:	e5d00006 	ldrb	r0, [r0, #6]
40020c18:	e3800002 	orr	r0, r0, #2
40020c1c:	e59f10c0 	ldr	r1, [pc, #192]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c20:	e5c10006 	strb	r0, [r1, #6]
40020c24:	e1a00000 	nop			; (mov r0, r0)
40020c28:	ebfff0f4 	bl	4001d000 <CyU3PUsbGetSpeed>
40020c2c:	e3500003 	cmp	r0, #3
40020c30:	0a000000 	beq	40020c38 <CyU3PUsbHandleSetFeature+0x5c>
40020c34:	e3a05001 	mov	r5, #1
40020c38:	ea00001f 	b	40020cbc <CyU3PUsbHandleSetFeature+0xe0>
40020c3c:	e1a00000 	nop			; (mov r0, r0)
40020c40:	ebfff0ee 	bl	4001d000 <CyU3PUsbGetSpeed>
40020c44:	e3500003 	cmp	r0, #3
40020c48:	1a000009 	bne	40020c74 <CyU3PUsbHandleSetFeature+0x98>
40020c4c:	e59f0090 	ldr	r0, [pc, #144]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c50:	e5d00008 	ldrb	r0, [r0, #8]
40020c54:	e3500006 	cmp	r0, #6
40020c58:	1a000005 	bne	40020c74 <CyU3PUsbHandleSetFeature+0x98>
40020c5c:	e59f0080 	ldr	r0, [pc, #128]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c60:	e5d00006 	ldrb	r0, [r0, #6]
40020c64:	e3800004 	orr	r0, r0, #4
40020c68:	e59f1074 	ldr	r1, [pc, #116]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c6c:	e5c10006 	strb	r0, [r1, #6]
40020c70:	e3a05001 	mov	r5, #1
40020c74:	ea000010 	b	40020cbc <CyU3PUsbHandleSetFeature+0xe0>
40020c78:	e1a00000 	nop			; (mov r0, r0)
40020c7c:	ebfff0df 	bl	4001d000 <CyU3PUsbGetSpeed>
40020c80:	e3500003 	cmp	r0, #3
40020c84:	1a000009 	bne	40020cb0 <CyU3PUsbHandleSetFeature+0xd4>
40020c88:	e59f0054 	ldr	r0, [pc, #84]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c8c:	e5d00008 	ldrb	r0, [r0, #8]
40020c90:	e3500006 	cmp	r0, #6
40020c94:	1a000005 	bne	40020cb0 <CyU3PUsbHandleSetFeature+0xd4>
40020c98:	e59f0044 	ldr	r0, [pc, #68]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020c9c:	e5d00006 	ldrb	r0, [r0, #6]
40020ca0:	e3800008 	orr	r0, r0, #8
40020ca4:	e59f1038 	ldr	r1, [pc, #56]	; 40020ce4 <CyU3PUsbHandleSetFeature+0x108>
40020ca8:	e5c10006 	strb	r0, [r1, #6]
40020cac:	e3a05001 	mov	r5, #1
40020cb0:	ea000001 	b	40020cbc <CyU3PUsbHandleSetFeature+0xe0>
40020cb4:	e1a00000 	nop			; (mov r0, r0)
40020cb8:	e1a00000 	nop			; (mov r0, r0)
40020cbc:	e1a00000 	nop			; (mov r0, r0)
40020cc0:	e3550000 	cmp	r5, #0
40020cc4:	0a000001 	beq	40020cd0 <CyU3PUsbHandleSetFeature+0xf4>
40020cc8:	ebffef2f 	bl	4001c98c <CyU3PUsbAckSetup>
40020ccc:	ea000003 	b	40020ce0 <CyU3PUsbHandleSetFeature+0x104>
40020cd0:	e3a02000 	mov	r2, #0
40020cd4:	e3a01001 	mov	r1, #1
40020cd8:	e1a00002 	mov	r0, r2
40020cdc:	ebfff4ee 	bl	4001e09c <CyU3PUsbStall>
40020ce0:	e8bd8070 	pop	{r4, r5, r6, pc}
40020ce4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020ce8 <CyU3PUsbReEnableUsb3>:
40020ce8:	e92d4010 	push	{r4, lr}
40020cec:	e3a00051 	mov	r0, #81	; 0x51
40020cf0:	ebfffc3e 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
40020cf4:	e59f018c 	ldr	r0, [pc, #396]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1a0>
40020cf8:	e5900004 	ldr	r0, [r0, #4]
40020cfc:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020d00:	e59f1180 	ldr	r1, [pc, #384]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1a0>
40020d04:	e5810004 	str	r0, [r1, #4]
40020d08:	e3e00000 	mvn	r0, #0
40020d0c:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020d10:	e5810004 	str	r0, [r1, #4]
40020d14:	e59f0170 	ldr	r0, [pc, #368]	; 40020e8c <CyU3PUsbReEnableUsb3+0x1a4>
40020d18:	e5810008 	str	r0, [r1, #8]
40020d1c:	e3e00000 	mvn	r0, #0
40020d20:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020d24:	e59f0164 	ldr	r0, [pc, #356]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1a8>
40020d28:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d2c:	e59f0160 	ldr	r0, [pc, #352]	; 40020e94 <CyU3PUsbReEnableUsb3+0x1ac>
40020d30:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020d34:	e3500000 	cmp	r0, #0
40020d38:	0a000003 	beq	40020d4c <CyU3PUsbReEnableUsb3+0x64>
40020d3c:	e1a00001 	mov	r0, r1
40020d40:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020d44:	e3800c01 	orr	r0, r0, #256	; 0x100
40020d48:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d4c:	e3a00000 	mov	r0, #0
40020d50:	e59f113c 	ldr	r1, [pc, #316]	; 40020e94 <CyU3PUsbReEnableUsb3+0x1ac>
40020d54:	e5810044 	str	r0, [r1, #68]	; 0x44
40020d58:	e59f0138 	ldr	r0, [pc, #312]	; 40020e98 <CyU3PUsbReEnableUsb3+0x1b0>
40020d5c:	e5900000 	ldr	r0, [r0]
40020d60:	e3500000 	cmp	r0, #0
40020d64:	0a000003 	beq	40020d78 <CyU3PUsbReEnableUsb3+0x90>
40020d68:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020d6c:	e59f1128 	ldr	r1, [pc, #296]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020d70:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d74:	ea000002 	b	40020d84 <CyU3PUsbReEnableUsb3+0x9c>
40020d78:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020d7c:	e59f1118 	ldr	r1, [pc, #280]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020d80:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d84:	eb000575 	bl	40022360 <CyFx3Usb3LnkSetup>
40020d88:	e59f0110 	ldr	r0, [pc, #272]	; 40020ea0 <CyU3PUsbReEnableUsb3+0x1b8>
40020d8c:	e59f1108 	ldr	r1, [pc, #264]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020d90:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020d94:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020d98:	e1c10000 	bic	r0, r1, r0
40020d9c:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020da0:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020da4:	e5810158 	str	r0, [r1, #344]	; 0x158
40020da8:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020dac:	e581001c 	str	r0, [r1, #28]
40020db0:	e3a01000 	mov	r1, #0
40020db4:	e3a00001 	mov	r0, #1
40020db8:	ebffee60 	bl	4001c740 <CyU3PSetUsbCoreClock>
40020dbc:	e3a0000a 	mov	r0, #10
40020dc0:	ebffcabe 	bl	400138c0 <CyU3PBusyWait>
40020dc4:	eb000537 	bl	400222a8 <CyU3PVicDisableAllInterrupts>
40020dc8:	e1a04000 	mov	r4, r0
40020dcc:	e3a00000 	mov	r0, #0
40020dd0:	e59f10cc 	ldr	r1, [pc, #204]	; 40020ea4 <CyU3PUsbReEnableUsb3+0x1bc>
40020dd4:	e5810000 	str	r0, [r1]
40020dd8:	e3a00a01 	mov	r0, #4096	; 0x1000
40020ddc:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020de0:	e5810054 	str	r0, [r1, #84]	; 0x54
40020de4:	e1c10080 	bic	r0, r1, r0, lsl #1
40020de8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020dec:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020df0:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020df4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020df8:	e3a00064 	mov	r0, #100	; 0x64
40020dfc:	ebffcaaf 	bl	400138c0 <CyU3PBusyWait>
40020e00:	e59f0094 	ldr	r0, [pc, #148]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020e04:	e5900000 	ldr	r0, [r0]
40020e08:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020e0c:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020e10:	e59f1084 	ldr	r1, [pc, #132]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020e14:	e5810000 	str	r0, [r1]
40020e18:	e59f0088 	ldr	r0, [pc, #136]	; 40020ea8 <CyU3PUsbReEnableUsb3+0x1c0>
40020e1c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020e20:	e3a01080 	mov	r1, #128	; 0x80
40020e24:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020e28:	eb000592 	bl	40022478 <CyFx3UsbWritePhyReg>
40020e2c:	e3a01d06 	mov	r1, #384	; 0x180
40020e30:	e59f0074 	ldr	r0, [pc, #116]	; 40020eac <CyU3PUsbReEnableUsb3+0x1c4>
40020e34:	eb00058f 	bl	40022478 <CyFx3UsbWritePhyReg>
40020e38:	e3a01080 	mov	r1, #128	; 0x80
40020e3c:	e59f006c 	ldr	r0, [pc, #108]	; 40020eb0 <CyU3PUsbReEnableUsb3+0x1c8>
40020e40:	eb00058c 	bl	40022478 <CyFx3UsbWritePhyReg>
40020e44:	e59f003c 	ldr	r0, [pc, #60]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1a0>
40020e48:	e5900004 	ldr	r0, [r0, #4]
40020e4c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020e50:	e59f1030 	ldr	r1, [pc, #48]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1a0>
40020e54:	e5810004 	str	r0, [r1, #4]
40020e58:	e1a00004 	mov	r0, r4
40020e5c:	eb00051f 	bl	400222e0 <CyU3PVicEnableInterrupts>
40020e60:	e59f0034 	ldr	r0, [pc, #52]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020e64:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020e68:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020e6c:	e59f1028 	ldr	r1, [pc, #40]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1b4>
40020e70:	e5810054 	str	r0, [r1, #84]	; 0x54
40020e74:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020e78:	e581001c 	str	r0, [r1, #28]
40020e7c:	e3a00064 	mov	r0, #100	; 0x64
40020e80:	ebffca8e 	bl	400138c0 <CyU3PBusyWait>
40020e84:	e8bd8010 	pop	{r4, pc}
40020e88:	e0030000 	.word	0xe0030000
40020e8c:	00038081 	.word	0x00038081
40020e90:	00004a3d 	.word	0x00004a3d
40020e94:	40031d40 	.word	0x40031d40
40020e98:	40030d40 	.word	0x40030d40
40020e9c:	e0033000 	.word	0xe0033000
40020ea0:	00000908 	.word	0x00000908
40020ea4:	40030d74 	.word	0x40030d74
40020ea8:	00310418 	.word	0x00310418
40020eac:	00001006 	.word	0x00001006
40020eb0:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020eb4 <CyU3PUsbRegisterEventCallback>:
40020eb4:	e92d4010 	push	{r4, lr}
40020eb8:	e1a04000 	mov	r4, r0
40020ebc:	e59f0038 	ldr	r0, [pc, #56]	; 40020efc <CyU3PUsbRegisterEventCallback+0x48>
40020ec0:	e5804000 	str	r4, [r0]
40020ec4:	e59f0034 	ldr	r0, [pc, #52]	; 40020f00 <CyU3PUsbRegisterEventCallback+0x4c>
40020ec8:	e5d00008 	ldrb	r0, [r0, #8]
40020ecc:	e3500000 	cmp	r0, #0
40020ed0:	0a000008 	beq	40020ef8 <CyU3PUsbRegisterEventCallback+0x44>
40020ed4:	e59f0028 	ldr	r0, [pc, #40]	; 40020f04 <CyU3PUsbRegisterEventCallback+0x50>
40020ed8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020edc:	e59f101c 	ldr	r1, [pc, #28]	; 40020f00 <CyU3PUsbRegisterEventCallback+0x4c>
40020ee0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020ee4:	e1100001 	tst	r0, r1
40020ee8:	0a000002 	beq	40020ef8 <CyU3PUsbRegisterEventCallback+0x44>
40020eec:	e3a01000 	mov	r1, #0
40020ef0:	e3a0000b 	mov	r0, #11
40020ef4:	e12fff34 	blx	r4
40020ef8:	e8bd8010 	pop	{r4, pc}
40020efc:	40030d9c 	.word	0x40030d9c
40020f00:	40031d40 	.word	0x40031d40
40020f04:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020f08 <CyU3PUsbRegisterSetupCallback>:
40020f08:	e59f2050 	ldr	r2, [pc, #80]	; 40020f60 <CyU3PUsbRegisterSetupCallback+0x58>
40020f0c:	e5820000 	str	r0, [r2]
40020f10:	e3510001 	cmp	r1, #1
40020f14:	1a000003 	bne	40020f28 <CyU3PUsbRegisterSetupCallback+0x20>
40020f18:	e3a02000 	mov	r2, #0
40020f1c:	e59f3040 	ldr	r3, [pc, #64]	; 40020f64 <CyU3PUsbRegisterSetupCallback+0x5c>
40020f20:	e5c32007 	strb	r2, [r3, #7]
40020f24:	ea00000c 	b	40020f5c <CyU3PUsbRegisterSetupCallback+0x54>
40020f28:	e3a02001 	mov	r2, #1
40020f2c:	e59f3030 	ldr	r3, [pc, #48]	; 40020f64 <CyU3PUsbRegisterSetupCallback+0x5c>
40020f30:	e5c32007 	strb	r2, [r3, #7]
40020f34:	e2832000 	add	r2, r3, #0
40020f38:	e5d22008 	ldrb	r2, [r2, #8]
40020f3c:	e3520000 	cmp	r2, #0
40020f40:	da000005 	ble	40020f5c <CyU3PUsbRegisterSetupCallback+0x54>
40020f44:	e2832000 	add	r2, r3, #0
40020f48:	e5d22008 	ldrb	r2, [r2, #8]
40020f4c:	e3520003 	cmp	r2, #3
40020f50:	aa000001 	bge	40020f5c <CyU3PUsbRegisterSetupCallback+0x54>
40020f54:	e3a02003 	mov	r2, #3
40020f58:	e5c32008 	strb	r2, [r3, #8]
40020f5c:	e12fff1e 	bx	lr
40020f60:	40030da0 	.word	0x40030da0
40020f64:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020f68 <CyU3PUsbResetHandler>:
40020f68:	e92d4010 	push	{r4, lr}
40020f6c:	e3a00001 	mov	r0, #1
40020f70:	e59f1124 	ldr	r1, [pc, #292]	; 4002109c <CyU3PUsbResetHandler+0x134>
40020f74:	e5c10009 	strb	r0, [r1, #9]
40020f78:	e59f0120 	ldr	r0, [pc, #288]	; 400210a0 <CyU3PUsbResetHandler+0x138>
40020f7c:	e5900018 	ldr	r0, [r0, #24]
40020f80:	e59f1118 	ldr	r1, [pc, #280]	; 400210a0 <CyU3PUsbResetHandler+0x138>
40020f84:	e581000c 	str	r0, [r1, #12]
40020f88:	e2810000 	add	r0, r1, #0
40020f8c:	e5900014 	ldr	r0, [r0, #20]
40020f90:	e5810010 	str	r0, [r1, #16]
40020f94:	e59f0108 	ldr	r0, [pc, #264]	; 400210a4 <CyU3PUsbResetHandler+0x13c>
40020f98:	e5900000 	ldr	r0, [r0]
40020f9c:	e3500000 	cmp	r0, #0
40020fa0:	0a000010 	beq	40020fe8 <CyU3PUsbResetHandler+0x80>
40020fa4:	e59f00f0 	ldr	r0, [pc, #240]	; 4002109c <CyU3PUsbResetHandler+0x134>
40020fa8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020fac:	e3500000 	cmp	r0, #0
40020fb0:	1a000007 	bne	40020fd4 <CyU3PUsbResetHandler+0x6c>
40020fb4:	e3a01000 	mov	r1, #0
40020fb8:	e1a00001 	mov	r0, r1
40020fbc:	e59f20e0 	ldr	r2, [pc, #224]	; 400210a4 <CyU3PUsbResetHandler+0x13c>
40020fc0:	e5922000 	ldr	r2, [r2]
40020fc4:	e12fff32 	blx	r2
40020fc8:	e3a00001 	mov	r0, #1
40020fcc:	e59f10c8 	ldr	r1, [pc, #200]	; 4002109c <CyU3PUsbResetHandler+0x134>
40020fd0:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020fd4:	e3a01000 	mov	r1, #0
40020fd8:	e3a00004 	mov	r0, #4
40020fdc:	e59f20c0 	ldr	r2, [pc, #192]	; 400210a4 <CyU3PUsbResetHandler+0x13c>
40020fe0:	e5922000 	ldr	r2, [r2]
40020fe4:	e12fff32 	blx	r2
40020fe8:	e59f00b8 	ldr	r0, [pc, #184]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40020fec:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020ff0:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020ff4:	e59f10ac 	ldr	r1, [pc, #172]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40020ff8:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020ffc:	e3a00001 	mov	r0, #1
40021000:	ebffca2e 	bl	400138c0 <CyU3PBusyWait>
40021004:	e59f009c 	ldr	r0, [pc, #156]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40021008:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002100c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021010:	e59f1090 	ldr	r1, [pc, #144]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40021014:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021018:	e3a00001 	mov	r0, #1
4002101c:	ebffca27 	bl	400138c0 <CyU3PBusyWait>
40021020:	e3a00040 	mov	r0, #64	; 0x40
40021024:	e59f107c 	ldr	r1, [pc, #124]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40021028:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002102c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021030:	e1c10000 	bic	r0, r1, r0
40021034:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40021038:	e3800901 	orr	r0, r0, #16384	; 0x4000
4002103c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40021040:	e1a00001 	mov	r0, r1
40021044:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40021048:	e3800901 	orr	r0, r0, #16384	; 0x4000
4002104c:	e5810498 	str	r0, [r1, #1176]	; 0x498
40021050:	e3a00001 	mov	r0, #1
40021054:	ebfffc14 	bl	400200ac <CyU3PUsbEpPrepare>
40021058:	e59f003c 	ldr	r0, [pc, #60]	; 4002109c <CyU3PUsbResetHandler+0x134>
4002105c:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40021060:	e3500000 	cmp	r0, #0
40021064:	0a00000b 	beq	40021098 <CyU3PUsbResetHandler+0x130>
40021068:	e59f002c 	ldr	r0, [pc, #44]	; 4002109c <CyU3PUsbResetHandler+0x134>
4002106c:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021070:	e3500003 	cmp	r0, #3
40021074:	3a000002 	bcc	40021084 <CyU3PUsbResetHandler+0x11c>
40021078:	e3a00000 	mov	r0, #0
4002107c:	e59f1018 	ldr	r1, [pc, #24]	; 4002109c <CyU3PUsbResetHandler+0x134>
40021080:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021084:	e59f001c 	ldr	r0, [pc, #28]	; 400210a8 <CyU3PUsbResetHandler+0x140>
40021088:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002108c:	e3100901 	tst	r0, #16384	; 0x4000
40021090:	1a000000 	bne	40021098 <CyU3PUsbResetHandler+0x130>
40021094:	ebffff13 	bl	40020ce8 <CyU3PUsbReEnableUsb3>
40021098:	e8bd8010 	pop	{r4, pc}
4002109c:	40031d40 	.word	0x40031d40
400210a0:	40031f98 	.word	0x40031f98
400210a4:	40030d9c 	.word	0x40030d9c
400210a8:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

400210ac <CyU3PUsbResumeHandler>:
400210ac:	e92d4010 	push	{r4, lr}
400210b0:	e59f003c 	ldr	r0, [pc, #60]	; 400210f4 <CyU3PUsbResumeHandler+0x48>
400210b4:	e5d00008 	ldrb	r0, [r0, #8]
400210b8:	e3500005 	cmp	r0, #5
400210bc:	ba00000b 	blt	400210f0 <CyU3PUsbResumeHandler+0x44>
400210c0:	e59f0030 	ldr	r0, [pc, #48]	; 400210f8 <CyU3PUsbResumeHandler+0x4c>
400210c4:	e5900000 	ldr	r0, [r0]
400210c8:	e3500000 	cmp	r0, #0
400210cc:	0a000004 	beq	400210e4 <CyU3PUsbResumeHandler+0x38>
400210d0:	e3a01000 	mov	r1, #0
400210d4:	e3a00003 	mov	r0, #3
400210d8:	e59f2018 	ldr	r2, [pc, #24]	; 400210f8 <CyU3PUsbResumeHandler+0x4c>
400210dc:	e5922000 	ldr	r2, [r2]
400210e0:	e12fff32 	blx	r2
400210e4:	e3a00006 	mov	r0, #6
400210e8:	e59f1004 	ldr	r1, [pc, #4]	; 400210f4 <CyU3PUsbResumeHandler+0x48>
400210ec:	e5c10008 	strb	r0, [r1, #8]
400210f0:	e8bd8010 	pop	{r4, pc}
400210f4:	40031d40 	.word	0x40031d40
400210f8:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSConnecthandler:

400210fc <CyU3PUsbSSConnecthandler>:
400210fc:	e92d4010 	push	{r4, lr}
40021100:	e59f01d4 	ldr	r0, [pc, #468]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021104:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021108:	e3100a02 	tst	r0, #8192	; 0x2000
4002110c:	0a00002b 	beq	400211c0 <CyU3PUsbSSConnecthandler+0xc4>
40021110:	e59f01c8 	ldr	r0, [pc, #456]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1e4>
40021114:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021118:	e200403f 	and	r4, r0, #63	; 0x3f
4002111c:	ea000003 	b	40021130 <CyU3PUsbSSConnecthandler+0x34>
40021120:	ebffa688 	bl	4000ab48 <_txe_thread_relinquish>
40021124:	e59f01b4 	ldr	r0, [pc, #436]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1e4>
40021128:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002112c:	e200403f 	and	r4, r0, #63	; 0x3f
40021130:	e59f01a4 	ldr	r0, [pc, #420]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021134:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021138:	e3100901 	tst	r0, #16384	; 0x4000
4002113c:	0a000001 	beq	40021148 <CyU3PUsbSSConnecthandler+0x4c>
40021140:	e3540008 	cmp	r4, #8
40021144:	0afffff5 	beq	40021120 <CyU3PUsbSSConnecthandler+0x24>
40021148:	e3540017 	cmp	r4, #23
4002114c:	1a00000a 	bne	4002117c <CyU3PUsbSSConnecthandler+0x80>
40021150:	e59f018c 	ldr	r0, [pc, #396]	; 400212e4 <CyU3PUsbSSConnecthandler+0x1e8>
40021154:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40021158:	e3500000 	cmp	r0, #0
4002115c:	1a000002 	bne	4002116c <CyU3PUsbSSConnecthandler+0x70>
40021160:	e3a00010 	mov	r0, #16
40021164:	ebfffb21 	bl	4001fdf0 <CyU3PUsbAddToEventLog>
40021168:	eb000060 	bl	400212f0 <CyU3PUsbSSDisConnecthandler>
4002116c:	e3a00003 	mov	r0, #3
40021170:	e59f116c 	ldr	r1, [pc, #364]	; 400212e4 <CyU3PUsbSSConnecthandler+0x1e8>
40021174:	e5c10009 	strb	r0, [r1, #9]
40021178:	e8bd8010 	pop	{r4, pc}
4002117c:	e59f0158 	ldr	r0, [pc, #344]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021180:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021184:	e3100901 	tst	r0, #16384	; 0x4000
40021188:	1a000000 	bne	40021190 <CyU3PUsbSSConnecthandler+0x94>
4002118c:	eafffff9 	b	40021178 <CyU3PUsbSSConnecthandler+0x7c>
40021190:	e59f0144 	ldr	r0, [pc, #324]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021194:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40021198:	e3800008 	orr	r0, r0, #8
4002119c:	e59f1138 	ldr	r1, [pc, #312]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
400211a0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400211a4:	e1a00001 	mov	r0, r1
400211a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211ac:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
400211b0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400211b4:	e1a00001 	mov	r0, r1
400211b8:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
400211bc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400211c0:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
400211c4:	e59f111c 	ldr	r1, [pc, #284]	; 400212e8 <CyU3PUsbSSConnecthandler+0x1ec>
400211c8:	e5810008 	str	r0, [r1, #8]
400211cc:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
400211d0:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
400211d4:	e581001c 	str	r0, [r1, #28]
400211d8:	e3a00003 	mov	r0, #3
400211dc:	e59f1100 	ldr	r1, [pc, #256]	; 400212e4 <CyU3PUsbSSConnecthandler+0x1e8>
400211e0:	e5c10009 	strb	r0, [r1, #9]
400211e4:	e59f00f0 	ldr	r0, [pc, #240]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
400211e8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211ec:	e3800902 	orr	r0, r0, #32768	; 0x8000
400211f0:	e59f10e4 	ldr	r1, [pc, #228]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
400211f4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400211f8:	e1a00001 	mov	r0, r1
400211fc:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021200:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021204:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021208:	e3a00001 	mov	r0, #1
4002120c:	ebffc9ab 	bl	400138c0 <CyU3PBusyWait>
40021210:	e59f00c4 	ldr	r0, [pc, #196]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021214:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021218:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
4002121c:	e59f10b8 	ldr	r1, [pc, #184]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
40021220:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021224:	e3a00001 	mov	r0, #1
40021228:	ebffc9a4 	bl	400138c0 <CyU3PBusyWait>
4002122c:	e3a00000 	mov	r0, #0
40021230:	ebffeecd 	bl	4001cd6c <CyU3PUsbFlushEp>
40021234:	e3a00080 	mov	r0, #128	; 0x80
40021238:	ebffeecb 	bl	4001cd6c <CyU3PUsbFlushEp>
4002123c:	e59f009c 	ldr	r0, [pc, #156]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1e4>
40021240:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021244:	e3800001 	orr	r0, r0, #1
40021248:	e59f1090 	ldr	r1, [pc, #144]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1e4>
4002124c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021250:	e3a00c02 	mov	r0, #512	; 0x200
40021254:	e1c11200 	bic	r1, r1, r0, lsl #4
40021258:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002125c:	e1810200 	orr	r0, r1, r0, lsl #4
40021260:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021264:	e3800001 	orr	r0, r0, #1
40021268:	e2811a02 	add	r1, r1, #8192	; 0x2000
4002126c:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021270:	e3a00c02 	mov	r0, #512	; 0x200
40021274:	e1c11200 	bic	r1, r1, r0, lsl #4
40021278:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002127c:	e3a00000 	mov	r0, #0
40021280:	ebfff121 	bl	4001d70c <CyU3PUsbResetEp>
40021284:	e3a00000 	mov	r0, #0
40021288:	ebffeeb7 	bl	4001cd6c <CyU3PUsbFlushEp>
4002128c:	e3a00080 	mov	r0, #128	; 0x80
40021290:	ebfff11d 	bl	4001d70c <CyU3PUsbResetEp>
40021294:	e3a00080 	mov	r0, #128	; 0x80
40021298:	ebffeeb3 	bl	4001cd6c <CyU3PUsbFlushEp>
4002129c:	e3a00c02 	mov	r0, #512	; 0x200
400212a0:	e59f1034 	ldr	r1, [pc, #52]	; 400212dc <CyU3PUsbSSConnecthandler+0x1e0>
400212a4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400212a8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400212ac:	e59f0038 	ldr	r0, [pc, #56]	; 400212ec <CyU3PUsbSSConnecthandler+0x1f0>
400212b0:	e5900000 	ldr	r0, [r0]
400212b4:	e3500000 	cmp	r0, #0
400212b8:	0a000004 	beq	400212d0 <CyU3PUsbSSConnecthandler+0x1d4>
400212bc:	e3a01001 	mov	r1, #1
400212c0:	e3a00000 	mov	r0, #0
400212c4:	e59f2020 	ldr	r2, [pc, #32]	; 400212ec <CyU3PUsbSSConnecthandler+0x1f0>
400212c8:	e5922000 	ldr	r2, [r2]
400212cc:	e12fff32 	blx	r2
400212d0:	e3a00003 	mov	r0, #3
400212d4:	ebfffb74 	bl	400200ac <CyU3PUsbEpPrepare>
400212d8:	eaffffa6 	b	40021178 <CyU3PUsbSSConnecthandler+0x7c>
400212dc:	e0031000 	.word	0xe0031000
400212e0:	e0033000 	.word	0xe0033000
400212e4:	40031d40 	.word	0x40031d40
400212e8:	e0052000 	.word	0xe0052000
400212ec:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

400212f0 <CyU3PUsbSSDisConnecthandler>:
400212f0:	e92d4010 	push	{r4, lr}
400212f4:	e59f0164 	ldr	r0, [pc, #356]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
400212f8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212fc:	e3500000 	cmp	r0, #0
40021300:	0a000005 	beq	4002131c <CyU3PUsbSSDisConnecthandler+0x2c>
40021304:	e59f0158 	ldr	r0, [pc, #344]	; 40021464 <CyU3PUsbSSDisConnecthandler+0x174>
40021308:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002130c:	e59f114c 	ldr	r1, [pc, #332]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
40021310:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021314:	e1100001 	tst	r0, r1
40021318:	0a00004e 	beq	40021458 <CyU3PUsbSSDisConnecthandler+0x168>
4002131c:	e59f013c 	ldr	r0, [pc, #316]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
40021320:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021324:	e2800001 	add	r0, r0, #1
40021328:	e59f1130 	ldr	r1, [pc, #304]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
4002132c:	e5810058 	str	r0, [r1, #88]	; 0x58
40021330:	e59f0130 	ldr	r0, [pc, #304]	; 40021468 <CyU3PUsbSSDisConnecthandler+0x178>
40021334:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021338:	e3100a02 	tst	r0, #8192	; 0x2000
4002133c:	0a000020 	beq	400213c4 <CyU3PUsbSSDisConnecthandler+0xd4>
40021340:	e59f0120 	ldr	r0, [pc, #288]	; 40021468 <CyU3PUsbSSDisConnecthandler+0x178>
40021344:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021348:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4002134c:	e59f1114 	ldr	r1, [pc, #276]	; 40021468 <CyU3PUsbSSDisConnecthandler+0x178>
40021350:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021354:	e3a00002 	mov	r0, #2
40021358:	ebffc958 	bl	400138c0 <CyU3PBusyWait>
4002135c:	e59f0108 	ldr	r0, [pc, #264]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x17c>
40021360:	e5900004 	ldr	r0, [r0, #4]
40021364:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021368:	e59f10fc 	ldr	r1, [pc, #252]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x17c>
4002136c:	e5810004 	str	r0, [r1, #4]
40021370:	e3a00001 	mov	r0, #1
40021374:	ebffc951 	bl	400138c0 <CyU3PBusyWait>
40021378:	e59f00f0 	ldr	r0, [pc, #240]	; 40021470 <CyU3PUsbSSDisConnecthandler+0x180>
4002137c:	e590001c 	ldr	r0, [r0, #28]
40021380:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021384:	e59f10e4 	ldr	r1, [pc, #228]	; 40021470 <CyU3PUsbSSDisConnecthandler+0x180>
40021388:	e581001c 	str	r0, [r1, #28]
4002138c:	e59f00e0 	ldr	r0, [pc, #224]	; 40021474 <CyU3PUsbSSDisConnecthandler+0x184>
40021390:	e5900000 	ldr	r0, [r0]
40021394:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021398:	e3a00001 	mov	r0, #1
4002139c:	ebffc947 	bl	400138c0 <CyU3PBusyWait>
400213a0:	e59f00c4 	ldr	r0, [pc, #196]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x17c>
400213a4:	e5900004 	ldr	r0, [r0, #4]
400213a8:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400213ac:	e59f10b8 	ldr	r1, [pc, #184]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x17c>
400213b0:	e5810004 	str	r0, [r1, #4]
400213b4:	e3a01000 	mov	r1, #0
400213b8:	e3a00002 	mov	r0, #2
400213bc:	ebffecdf 	bl	4001c740 <CyU3PSetUsbCoreClock>
400213c0:	ea000025 	b	4002145c <CyU3PUsbSSDisConnecthandler+0x16c>
400213c4:	e3a00001 	mov	r0, #1
400213c8:	e59f1090 	ldr	r1, [pc, #144]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
400213cc:	e5c10009 	strb	r0, [r1, #9]
400213d0:	ebffef8c 	bl	4001d208 <CyU3PUsbPhyDisable>
400213d4:	e59f0084 	ldr	r0, [pc, #132]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
400213d8:	e5900078 	ldr	r0, [r0, #120]	; 0x78
400213dc:	e3500000 	cmp	r0, #0
400213e0:	0a000019 	beq	4002144c <CyU3PUsbSSDisConnecthandler+0x15c>
400213e4:	e59f008c 	ldr	r0, [pc, #140]	; 40021478 <CyU3PUsbSSDisConnecthandler+0x188>
400213e8:	e5900000 	ldr	r0, [r0]
400213ec:	e3500000 	cmp	r0, #0
400213f0:	0a000005 	beq	4002140c <CyU3PUsbSSDisConnecthandler+0x11c>
400213f4:	e3a00000 	mov	r0, #0
400213f8:	e59f1078 	ldr	r1, [pc, #120]	; 40021478 <CyU3PUsbSSDisConnecthandler+0x188>
400213fc:	e5810000 	str	r0, [r1]
40021400:	e3a00001 	mov	r0, #1
40021404:	ebffeff5 	bl	4001d3e0 <CyU3PUsbPhyEnable>
40021408:	ea000013 	b	4002145c <CyU3PUsbSSDisConnecthandler+0x16c>
4002140c:	e3a00003 	mov	r0, #3
40021410:	e59f1048 	ldr	r1, [pc, #72]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x170>
40021414:	e5c10008 	strb	r0, [r1, #8]
40021418:	e3a00000 	mov	r0, #0
4002141c:	e5c10009 	strb	r0, [r1, #9]
40021420:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021424:	e59f0050 	ldr	r0, [pc, #80]	; 4002147c <CyU3PUsbSSDisConnecthandler+0x18c>
40021428:	e5900000 	ldr	r0, [r0]
4002142c:	e3500000 	cmp	r0, #0
40021430:	0a000009 	beq	4002145c <CyU3PUsbSSDisConnecthandler+0x16c>
40021434:	e3a01000 	mov	r1, #0
40021438:	e3a00014 	mov	r0, #20
4002143c:	e59f2038 	ldr	r2, [pc, #56]	; 4002147c <CyU3PUsbSSDisConnecthandler+0x18c>
40021440:	e5922000 	ldr	r2, [r2]
40021444:	e12fff32 	blx	r2
40021448:	ea000003 	b	4002145c <CyU3PUsbSSDisConnecthandler+0x16c>
4002144c:	e3a00000 	mov	r0, #0
40021450:	ebffefe2 	bl	4001d3e0 <CyU3PUsbPhyEnable>
40021454:	ea000000 	b	4002145c <CyU3PUsbSSDisConnecthandler+0x16c>
40021458:	ebfffa07 	bl	4001fc7c <CyU3PUibVbusChangeHandler>
4002145c:	e8bd8010 	pop	{r4, pc}
40021460:	40031d40 	.word	0x40031d40
40021464:	e0051000 	.word	0xe0051000
40021468:	e0031000 	.word	0xe0031000
4002146c:	e0030000 	.word	0xe0030000
40021470:	e0033000 	.word	0xe0033000
40021474:	40030c58 	.word	0x40030c58
40021478:	40030d74 	.word	0x40030d74
4002147c:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSReset:

40021480 <CyU3PUsbSSReset>:
40021480:	e92d4010 	push	{r4, lr}
40021484:	e3a04000 	mov	r4, #0
40021488:	e59f0170 	ldr	r0, [pc, #368]	; 40021600 <CyU3PUsbSSReset+0x180>
4002148c:	e5d00009 	ldrb	r0, [r0, #9]
40021490:	e3500003 	cmp	r0, #3
40021494:	0a000000 	beq	4002149c <CyU3PUsbSSReset+0x1c>
40021498:	e8bd8010 	pop	{r4, pc}
4002149c:	e59f0160 	ldr	r0, [pc, #352]	; 40021604 <CyU3PUsbSSReset+0x184>
400214a0:	e5900000 	ldr	r0, [r0]
400214a4:	e3500000 	cmp	r0, #0
400214a8:	0a000004 	beq	400214c0 <CyU3PUsbSSReset+0x40>
400214ac:	e3a01001 	mov	r1, #1
400214b0:	e3a00004 	mov	r0, #4
400214b4:	e59f2148 	ldr	r2, [pc, #328]	; 40021604 <CyU3PUsbSSReset+0x184>
400214b8:	e5922000 	ldr	r2, [r2]
400214bc:	e12fff32 	blx	r2
400214c0:	e59f0140 	ldr	r0, [pc, #320]	; 40021608 <CyU3PUsbSSReset+0x188>
400214c4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400214c8:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400214cc:	e59f1134 	ldr	r1, [pc, #308]	; 40021608 <CyU3PUsbSSReset+0x188>
400214d0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400214d4:	e3a00001 	mov	r0, #1
400214d8:	ebffc8f8 	bl	400138c0 <CyU3PBusyWait>
400214dc:	e59f0124 	ldr	r0, [pc, #292]	; 40021608 <CyU3PUsbSSReset+0x188>
400214e0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400214e4:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400214e8:	e59f1118 	ldr	r1, [pc, #280]	; 40021608 <CyU3PUsbSSReset+0x188>
400214ec:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400214f0:	e3a00001 	mov	r0, #1
400214f4:	ebffc8f1 	bl	400138c0 <CyU3PBusyWait>
400214f8:	e3a00000 	mov	r0, #0
400214fc:	ebffee1a 	bl	4001cd6c <CyU3PUsbFlushEp>
40021500:	e3a00080 	mov	r0, #128	; 0x80
40021504:	ebffee18 	bl	4001cd6c <CyU3PUsbFlushEp>
40021508:	e59f00fc 	ldr	r0, [pc, #252]	; 4002160c <CyU3PUsbSSReset+0x18c>
4002150c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021510:	e3800001 	orr	r0, r0, #1
40021514:	e59f10f0 	ldr	r1, [pc, #240]	; 4002160c <CyU3PUsbSSReset+0x18c>
40021518:	e5810500 	str	r0, [r1, #1280]	; 0x500
4002151c:	e3a00c02 	mov	r0, #512	; 0x200
40021520:	e1c11200 	bic	r1, r1, r0, lsl #4
40021524:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021528:	e1810200 	orr	r0, r1, r0, lsl #4
4002152c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021530:	e3800001 	orr	r0, r0, #1
40021534:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021538:	e5810600 	str	r0, [r1, #1536]	; 0x600
4002153c:	e3a00c02 	mov	r0, #512	; 0x200
40021540:	e1c11200 	bic	r1, r1, r0, lsl #4
40021544:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021548:	e3a00000 	mov	r0, #0
4002154c:	ebfff06e 	bl	4001d70c <CyU3PUsbResetEp>
40021550:	e3a00000 	mov	r0, #0
40021554:	ebffee04 	bl	4001cd6c <CyU3PUsbFlushEp>
40021558:	e3a00080 	mov	r0, #128	; 0x80
4002155c:	ebfff06a 	bl	4001d70c <CyU3PUsbResetEp>
40021560:	e3a00080 	mov	r0, #128	; 0x80
40021564:	ebffee00 	bl	4001cd6c <CyU3PUsbFlushEp>
40021568:	e3a00c02 	mov	r0, #512	; 0x200
4002156c:	e59f1094 	ldr	r1, [pc, #148]	; 40021608 <CyU3PUsbSSReset+0x188>
40021570:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021574:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021578:	e3a04001 	mov	r4, #1
4002157c:	ea000019 	b	400215e8 <CyU3PUsbSSReset+0x168>
40021580:	e0840084 	add	r0, r4, r4, lsl #1
40021584:	e59f1084 	ldr	r1, [pc, #132]	; 40021610 <CyU3PUsbSSReset+0x190>
40021588:	e0810100 	add	r0, r1, r0, lsl #2
4002158c:	e5900004 	ldr	r0, [r0, #4]
40021590:	e3500001 	cmp	r0, #1
40021594:	1a000005 	bne	400215b0 <CyU3PUsbSSReset+0x130>
40021598:	e3840080 	orr	r0, r4, #128	; 0x80
4002159c:	ebffedf2 	bl	4001cd6c <CyU3PUsbFlushEp>
400215a0:	e3840080 	orr	r0, r4, #128	; 0x80
400215a4:	e3a02001 	mov	r2, #1
400215a8:	e3a01000 	mov	r1, #0
400215ac:	ebfff2ba 	bl	4001e09c <CyU3PUsbStall>
400215b0:	e0840084 	add	r0, r4, r4, lsl #1
400215b4:	e59f1058 	ldr	r1, [pc, #88]	; 40021614 <CyU3PUsbSSReset+0x194>
400215b8:	e0810100 	add	r0, r1, r0, lsl #2
400215bc:	e5900004 	ldr	r0, [r0, #4]
400215c0:	e3500001 	cmp	r0, #1
400215c4:	1a000005 	bne	400215e0 <CyU3PUsbSSReset+0x160>
400215c8:	e1a00004 	mov	r0, r4
400215cc:	ebffede6 	bl	4001cd6c <CyU3PUsbFlushEp>
400215d0:	e3a02001 	mov	r2, #1
400215d4:	e3a01000 	mov	r1, #0
400215d8:	e1a00004 	mov	r0, r4
400215dc:	ebfff2ae 	bl	4001e09c <CyU3PUsbStall>
400215e0:	e2840001 	add	r0, r4, #1
400215e4:	e20040ff 	and	r4, r0, #255	; 0xff
400215e8:	e3540010 	cmp	r4, #16
400215ec:	baffffe3 	blt	40021580 <CyU3PUsbSSReset+0x100>
400215f0:	e3a00005 	mov	r0, #5
400215f4:	e59f1004 	ldr	r1, [pc, #4]	; 40021600 <CyU3PUsbSSReset+0x180>
400215f8:	e5c10008 	strb	r0, [r1, #8]
400215fc:	eaffffa5 	b	40021498 <CyU3PUsbSSReset+0x18>
40021600:	40031d40 	.word	0x40031d40
40021604:	40030d9c 	.word	0x40030d9c
40021608:	e0031000 	.word	0xe0031000
4002160c:	e0033000 	.word	0xe0033000
40021610:	40031bbc 	.word	0x40031bbc
40021614:	40031c7c 	.word	0x40031c7c

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

40021618 <CyU3PUsbSendCompliancePatterns>:
40021618:	e92d4070 	push	{r4, r5, r6, lr}
4002161c:	e3a04001 	mov	r4, #1
40021620:	e59f01ec 	ldr	r0, [pc, #492]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021624:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021628:	e200503f 	and	r5, r0, #63	; 0x3f
4002162c:	e3550017 	cmp	r5, #23
40021630:	0a000000 	beq	40021638 <CyU3PUsbSendCompliancePatterns+0x20>
40021634:	e8bd8070 	pop	{r4, r5, r6, pc}
40021638:	e3a00003 	mov	r0, #3
4002163c:	e59f11d4 	ldr	r1, [pc, #468]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
40021640:	e5c10009 	strb	r0, [r1, #9]
40021644:	e3a00001 	mov	r0, #1
40021648:	e5810064 	str	r0, [r1, #100]	; 0x64
4002164c:	e3a00000 	mov	r0, #0
40021650:	e5810060 	str	r0, [r1, #96]	; 0x60
40021654:	e3a00d57 	mov	r0, #5568	; 0x15c0
40021658:	e59f11b4 	ldr	r1, [pc, #436]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002165c:	e5810054 	str	r0, [r1, #84]	; 0x54
40021660:	e59f01b4 	ldr	r0, [pc, #436]	; 4002181c <CyU3PUsbSendCompliancePatterns+0x204>
40021664:	e5900000 	ldr	r0, [r0]
40021668:	e3500000 	cmp	r0, #0
4002166c:	0a000004 	beq	40021684 <CyU3PUsbSendCompliancePatterns+0x6c>
40021670:	e3a01000 	mov	r1, #0
40021674:	e3a00015 	mov	r0, #21
40021678:	e59f219c 	ldr	r2, [pc, #412]	; 4002181c <CyU3PUsbSendCompliancePatterns+0x204>
4002167c:	e5922000 	ldr	r2, [r2]
40021680:	e12fff32 	blx	r2
40021684:	e1a00000 	nop			; (mov r0, r0)
40021688:	e59f0184 	ldr	r0, [pc, #388]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002168c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021690:	e3100002 	tst	r0, #2
40021694:	0a000031 	beq	40021760 <CyU3PUsbSendCompliancePatterns+0x148>
40021698:	e59f0180 	ldr	r0, [pc, #384]	; 40021820 <CyU3PUsbSendCompliancePatterns+0x208>
4002169c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400216a0:	e59f116c 	ldr	r1, [pc, #364]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216a4:	e5810138 	str	r0, [r1, #312]	; 0x138
400216a8:	e3a00001 	mov	r0, #1
400216ac:	ebff9d74 	bl	40008c84 <_tx_thread_sleep>
400216b0:	e59f015c 	ldr	r0, [pc, #348]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216b4:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400216b8:	e3c00002 	bic	r0, r0, #2
400216bc:	e59f1150 	ldr	r1, [pc, #336]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216c0:	e5810064 	str	r0, [r1, #100]	; 0x64
400216c4:	e3540004 	cmp	r4, #4
400216c8:	1a000020 	bne	40021750 <CyU3PUsbSendCompliancePatterns+0x138>
400216cc:	ea00000d 	b	40021708 <CyU3PUsbSendCompliancePatterns+0xf0>
400216d0:	e59f013c 	ldr	r0, [pc, #316]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216d4:	e590001c 	ldr	r0, [r0, #28]
400216d8:	e3800008 	orr	r0, r0, #8
400216dc:	e59f1130 	ldr	r1, [pc, #304]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216e0:	e581001c 	str	r0, [r1, #28]
400216e4:	e3a0000a 	mov	r0, #10
400216e8:	ebffc874 	bl	400138c0 <CyU3PBusyWait>
400216ec:	e59f0120 	ldr	r0, [pc, #288]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216f0:	e590001c 	ldr	r0, [r0, #28]
400216f4:	e3c00008 	bic	r0, r0, #8
400216f8:	e59f1114 	ldr	r1, [pc, #276]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216fc:	e581001c 	str	r0, [r1, #28]
40021700:	e3a0001e 	mov	r0, #30
40021704:	ebffc86d 	bl	400138c0 <CyU3PBusyWait>
40021708:	e59f0104 	ldr	r0, [pc, #260]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002170c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021710:	e3100006 	tst	r0, #6
40021714:	1a00000d 	bne	40021750 <CyU3PUsbSendCompliancePatterns+0x138>
40021718:	e59f00f8 	ldr	r0, [pc, #248]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
4002171c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021720:	e3500000 	cmp	r0, #0
40021724:	0a000005 	beq	40021740 <CyU3PUsbSendCompliancePatterns+0x128>
40021728:	e59f00f4 	ldr	r0, [pc, #244]	; 40021824 <CyU3PUsbSendCompliancePatterns+0x20c>
4002172c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021730:	e59f10e0 	ldr	r1, [pc, #224]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
40021734:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021738:	e1100001 	tst	r0, r1
4002173c:	0a000003 	beq	40021750 <CyU3PUsbSendCompliancePatterns+0x138>
40021740:	e59f00d0 	ldr	r0, [pc, #208]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
40021744:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021748:	e3500000 	cmp	r0, #0
4002174c:	0affffdf 	beq	400216d0 <CyU3PUsbSendCompliancePatterns+0xb8>
40021750:	e3a01009 	mov	r1, #9
40021754:	e2840001 	add	r0, r4, #1
40021758:	ebffbd87 	bl	40010d7c <__aeabi_idivmod>
4002175c:	e20140ff 	and	r4, r1, #255	; 0xff
40021760:	e59f00ac 	ldr	r0, [pc, #172]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021764:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021768:	e3100004 	tst	r0, #4
4002176c:	1a00000d 	bne	400217a8 <CyU3PUsbSendCompliancePatterns+0x190>
40021770:	e59f00a0 	ldr	r0, [pc, #160]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
40021774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021778:	e3500000 	cmp	r0, #0
4002177c:	0a000005 	beq	40021798 <CyU3PUsbSendCompliancePatterns+0x180>
40021780:	e59f009c 	ldr	r0, [pc, #156]	; 40021824 <CyU3PUsbSendCompliancePatterns+0x20c>
40021784:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021788:	e59f1088 	ldr	r1, [pc, #136]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
4002178c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021790:	e1100001 	tst	r0, r1
40021794:	0a000003 	beq	400217a8 <CyU3PUsbSendCompliancePatterns+0x190>
40021798:	e59f0078 	ldr	r0, [pc, #120]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
4002179c:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400217a0:	e3500001 	cmp	r0, #1
400217a4:	1a000009 	bne	400217d0 <CyU3PUsbSendCompliancePatterns+0x1b8>
400217a8:	e59f0064 	ldr	r0, [pc, #100]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217ac:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400217b0:	e3c00004 	bic	r0, r0, #4
400217b4:	e59f1058 	ldr	r1, [pc, #88]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217b8:	e5810064 	str	r0, [r1, #100]	; 0x64
400217bc:	e3a00c06 	mov	r0, #1536	; 0x600
400217c0:	e5810138 	str	r0, [r1, #312]	; 0x138
400217c4:	e3a00000 	mov	r0, #0
400217c8:	e5810054 	str	r0, [r1, #84]	; 0x54
400217cc:	ea000002 	b	400217dc <CyU3PUsbSendCompliancePatterns+0x1c4>
400217d0:	e3a00001 	mov	r0, #1
400217d4:	ebff9d2a 	bl	40008c84 <_tx_thread_sleep>
400217d8:	eaffffaa 	b	40021688 <CyU3PUsbSendCompliancePatterns+0x70>
400217dc:	e1a00000 	nop			; (mov r0, r0)
400217e0:	e59f0034 	ldr	r0, [pc, #52]	; 4002181c <CyU3PUsbSendCompliancePatterns+0x204>
400217e4:	e5900000 	ldr	r0, [r0]
400217e8:	e3500000 	cmp	r0, #0
400217ec:	0a000004 	beq	40021804 <CyU3PUsbSendCompliancePatterns+0x1ec>
400217f0:	e3a01000 	mov	r1, #0
400217f4:	e3a00016 	mov	r0, #22
400217f8:	e59f201c 	ldr	r2, [pc, #28]	; 4002181c <CyU3PUsbSendCompliancePatterns+0x204>
400217fc:	e5922000 	ldr	r2, [r2]
40021800:	e12fff32 	blx	r2
40021804:	e3a00000 	mov	r0, #0
40021808:	e59f1008 	ldr	r1, [pc, #8]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x200>
4002180c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021810:	eaffff87 	b	40021634 <CyU3PUsbSendCompliancePatterns+0x1c>
40021814:	e0033000 	.word	0xe0033000
40021818:	40031d40 	.word	0x40031d40
4002181c:	40030d9c 	.word	0x40030d9c
40021820:	4001222c 	.word	0x4001222c
40021824:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

40021828 <CyU3PUsbSetupCommand>:
40021828:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4002182c:	e3a06000 	mov	r6, #0
40021830:	e3a07000 	mov	r7, #0
40021834:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021838:	e5d00009 	ldrb	r0, [r0, #9]
4002183c:	e3500003 	cmp	r0, #3
40021840:	1a00001a 	bne	400218b0 <CyU3PUsbSetupCommand+0x88>
40021844:	e59f07b4 	ldr	r0, [pc, #1972]	; 40022000 <CyU3PUsbSetupCommand+0x7d8>
40021848:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
4002184c:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
40021850:	e3a00001 	mov	r0, #1
40021854:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021858:	e5810050 	str	r0, [r1, #80]	; 0x50
4002185c:	e3a00000 	mov	r0, #0
40021860:	e59f179c 	ldr	r1, [pc, #1948]	; 40022004 <CyU3PUsbSetupCommand+0x7dc>
40021864:	e5810000 	str	r0, [r1]
40021868:	e59f0798 	ldr	r0, [pc, #1944]	; 40022008 <CyU3PUsbSetupCommand+0x7e0>
4002186c:	ebffa576 	bl	4000ae4c <_txe_timer_deactivate>
40021870:	e3a00b02 	mov	r0, #2048	; 0x800
40021874:	e59f1784 	ldr	r1, [pc, #1924]	; 40022000 <CyU3PUsbSetupCommand+0x7d8>
40021878:	e5810404 	str	r0, [r1, #1028]	; 0x404
4002187c:	e1c10000 	bic	r0, r1, r0
40021880:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021884:	e200603f 	and	r6, r0, #63	; 0x3f
40021888:	e3560011 	cmp	r6, #17
4002188c:	0a000001 	beq	40021898 <CyU3PUsbSetupCommand+0x70>
40021890:	e3560012 	cmp	r6, #18
40021894:	1a000003 	bne	400218a8 <CyU3PUsbSetupCommand+0x80>
40021898:	e3a02000 	mov	r2, #0
4002189c:	e3a01401 	mov	r1, #16777216	; 0x1000000
400218a0:	e59f0764 	ldr	r0, [pc, #1892]	; 4002200c <CyU3PUsbSetupCommand+0x7e4>
400218a4:	ebffa1ee 	bl	4000a064 <_txe_event_flags_set>
400218a8:	e3a06000 	mov	r6, #0
400218ac:	ea00000d 	b	400218e8 <CyU3PUsbSetupCommand+0xc0>
400218b0:	e59f0744 	ldr	r0, [pc, #1860]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
400218b4:	e5900024 	ldr	r0, [r0, #36]	; 0x24
400218b8:	e3500000 	cmp	r0, #0
400218bc:	0a000006 	beq	400218dc <CyU3PUsbSetupCommand+0xb4>
400218c0:	e59f0734 	ldr	r0, [pc, #1844]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
400218c4:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400218c8:	e3500003 	cmp	r0, #3
400218cc:	2a000002 	bcs	400218dc <CyU3PUsbSetupCommand+0xb4>
400218d0:	e3a00001 	mov	r0, #1
400218d4:	e59f1720 	ldr	r1, [pc, #1824]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
400218d8:	e581004c 	str	r0, [r1, #76]	; 0x4c
400218dc:	e59f072c 	ldr	r0, [pc, #1836]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
400218e0:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
400218e4:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
400218e8:	e3a01064 	mov	r1, #100	; 0x64
400218ec:	e59f0720 	ldr	r0, [pc, #1824]	; 40022014 <CyU3PUsbSetupCommand+0x7ec>
400218f0:	ebffd5fd 	bl	400170ec <CyU3PDmaChannelWaitForCompletion>
400218f4:	e1a06000 	mov	r6, r0
400218f8:	e3560000 	cmp	r6, #0
400218fc:	0a00000b 	beq	40021930 <CyU3PUsbSetupCommand+0x108>
40021900:	e3560042 	cmp	r6, #66	; 0x42
40021904:	0a000009 	beq	40021930 <CyU3PUsbSetupCommand+0x108>
40021908:	e3a01001 	mov	r1, #1
4002190c:	e3a00000 	mov	r0, #0
40021910:	ebfff11b 	bl	4001dd84 <CyU3PUsbSetEpNak>
40021914:	e3a00064 	mov	r0, #100	; 0x64
40021918:	ebffc7e8 	bl	400138c0 <CyU3PBusyWait>
4002191c:	e59f06f0 	ldr	r0, [pc, #1776]	; 40022014 <CyU3PUsbSetupCommand+0x7ec>
40021920:	ebffd320 	bl	400165a8 <CyU3PDmaChannelReset>
40021924:	e3a01000 	mov	r1, #0
40021928:	e1a00001 	mov	r0, r1
4002192c:	ebfff114 	bl	4001dd84 <CyU3PUsbSetEpNak>
40021930:	e3a01064 	mov	r1, #100	; 0x64
40021934:	e59f06dc 	ldr	r0, [pc, #1756]	; 40022018 <CyU3PUsbSetupCommand+0x7f0>
40021938:	ebffd5eb 	bl	400170ec <CyU3PDmaChannelWaitForCompletion>
4002193c:	e1a06000 	mov	r6, r0
40021940:	e3560000 	cmp	r6, #0
40021944:	0a00000d 	beq	40021980 <CyU3PUsbSetupCommand+0x158>
40021948:	e3560042 	cmp	r6, #66	; 0x42
4002194c:	0a00000b 	beq	40021980 <CyU3PUsbSetupCommand+0x158>
40021950:	e3a01001 	mov	r1, #1
40021954:	e3a00080 	mov	r0, #128	; 0x80
40021958:	ebfff109 	bl	4001dd84 <CyU3PUsbSetEpNak>
4002195c:	e3a00064 	mov	r0, #100	; 0x64
40021960:	ebffc7d6 	bl	400138c0 <CyU3PBusyWait>
40021964:	e59f06ac 	ldr	r0, [pc, #1708]	; 40022018 <CyU3PUsbSetupCommand+0x7f0>
40021968:	ebffd30e 	bl	400165a8 <CyU3PDmaChannelReset>
4002196c:	e3a00080 	mov	r0, #128	; 0x80
40021970:	ebffecfd 	bl	4001cd6c <CyU3PUsbFlushEp>
40021974:	e3a01000 	mov	r1, #0
40021978:	e3a00080 	mov	r0, #128	; 0x80
4002197c:	ebfff100 	bl	4001dd84 <CyU3PUsbSetEpNak>
40021980:	e3a06000 	mov	r6, #0
40021984:	e20490ff 	and	r9, r4, #255	; 0xff
40021988:	e209a060 	and	sl, r9, #96	; 0x60
4002198c:	e2090003 	and	r0, r9, #3
40021990:	e58d0008 	str	r0, [sp, #8]
40021994:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021998:	e1a08420 	lsr	r8, r0, #8
4002199c:	e59f0678 	ldr	r0, [pc, #1656]	; 4002201c <CyU3PUsbSetupCommand+0x7f4>
400219a0:	e000b824 	and	fp, r0, r4, lsr #16
400219a4:	e0050000 	and	r0, r5, r0
400219a8:	e58d0004 	str	r0, [sp, #4]
400219ac:	e59f0668 	ldr	r0, [pc, #1640]	; 4002201c <CyU3PUsbSetupCommand+0x7f4>
400219b0:	e0000825 	and	r0, r0, r5, lsr #16
400219b4:	e58d0000 	str	r0, [sp]
400219b8:	e3140080 	tst	r4, #128	; 0x80
400219bc:	0a000003 	beq	400219d0 <CyU3PUsbSetupCommand+0x1a8>
400219c0:	e59d0000 	ldr	r0, [sp]
400219c4:	e59f1644 	ldr	r1, [pc, #1604]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
400219c8:	e5810458 	str	r0, [r1, #1112]	; 0x458
400219cc:	ea000002 	b	400219dc <CyU3PUsbSetupCommand+0x1b4>
400219d0:	e59d0000 	ldr	r0, [sp]
400219d4:	e59f1634 	ldr	r1, [pc, #1588]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
400219d8:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
400219dc:	e3a00000 	mov	r0, #0
400219e0:	e59f1614 	ldr	r1, [pc, #1556]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
400219e4:	e5810040 	str	r0, [r1, #64]	; 0x40
400219e8:	e59f0620 	ldr	r0, [pc, #1568]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
400219ec:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400219f0:	e3c00008 	bic	r0, r0, #8
400219f4:	e59f1614 	ldr	r1, [pc, #1556]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
400219f8:	e5810518 	str	r0, [r1, #1304]	; 0x518
400219fc:	e3a00000 	mov	r0, #0
40021a00:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021a04:	e5810018 	str	r0, [r1, #24]
40021a08:	e5810070 	str	r0, [r1, #112]	; 0x70
40021a0c:	e59f05fc 	ldr	r0, [pc, #1532]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
40021a10:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021a14:	e3800008 	orr	r0, r0, #8
40021a18:	e59f15f0 	ldr	r1, [pc, #1520]	; 40022010 <CyU3PUsbSetupCommand+0x7e8>
40021a1c:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021a20:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021a24:	e5d00007 	ldrb	r0, [r0, #7]
40021a28:	e3500001 	cmp	r0, #1
40021a2c:	0a000001 	beq	40021a38 <CyU3PUsbSetupCommand+0x210>
40021a30:	e35a0000 	cmp	sl, #0
40021a34:	0a000024 	beq	40021acc <CyU3PUsbSetupCommand+0x2a4>
40021a38:	e35a0000 	cmp	sl, #0
40021a3c:	1a000012 	bne	40021a8c <CyU3PUsbSetupCommand+0x264>
40021a40:	e3580009 	cmp	r8, #9
40021a44:	1a000010 	bne	40021a8c <CyU3PUsbSetupCommand+0x264>
40021a48:	e35b0001 	cmp	fp, #1
40021a4c:	1a00000b 	bne	40021a80 <CyU3PUsbSetupCommand+0x258>
40021a50:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021a54:	e5d10009 	ldrb	r0, [r1, #9]
40021a58:	ebfff993 	bl	400200ac <CyU3PUsbEpPrepare>
40021a5c:	e3a00006 	mov	r0, #6
40021a60:	e59f1594 	ldr	r1, [pc, #1428]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021a64:	e5c10008 	strb	r0, [r1, #8]
40021a68:	e5c1b00c 	strb	fp, [r1, #12]
40021a6c:	e2810000 	add	r0, r1, #0
40021a70:	e5d00006 	ldrb	r0, [r0, #6]
40021a74:	e2000001 	and	r0, r0, #1
40021a78:	e5c10006 	strb	r0, [r1, #6]
40021a7c:	ea000002 	b	40021a8c <CyU3PUsbSetupCommand+0x264>
40021a80:	e3a00005 	mov	r0, #5
40021a84:	e59f1570 	ldr	r1, [pc, #1392]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021a88:	e5c10008 	strb	r0, [r1, #8]
40021a8c:	e59f058c 	ldr	r0, [pc, #1420]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021a90:	e5900000 	ldr	r0, [r0]
40021a94:	e3500000 	cmp	r0, #0
40021a98:	0a000005 	beq	40021ab4 <CyU3PUsbSetupCommand+0x28c>
40021a9c:	e1a01005 	mov	r1, r5
40021aa0:	e1a00004 	mov	r0, r4
40021aa4:	e59f2574 	ldr	r2, [pc, #1396]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021aa8:	e5922000 	ldr	r2, [r2]
40021aac:	e12fff32 	blx	r2
40021ab0:	e1a07000 	mov	r7, r0
40021ab4:	e3570001 	cmp	r7, #1
40021ab8:	1a000003 	bne	40021acc <CyU3PUsbSetupCommand+0x2a4>
40021abc:	e3a00001 	mov	r0, #1
40021ac0:	e59f1534 	ldr	r1, [pc, #1332]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021ac4:	e5810040 	str	r0, [r1, #64]	; 0x40
40021ac8:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021acc:	e35a0000 	cmp	sl, #0
40021ad0:	1a000140 	bne	40021fd8 <CyU3PUsbSetupCommand+0x7b0>
40021ad4:	e3580009 	cmp	r8, #9
40021ad8:	0a0000b1 	beq	40021da4 <CyU3PUsbSetupCommand+0x57c>
40021adc:	ca00000b 	bgt	40021b10 <CyU3PUsbSetupCommand+0x2e8>
40021ae0:	e3580009 	cmp	r8, #9
40021ae4:	308ff108 	addcc	pc, pc, r8, lsl #2
40021ae8:	ea000137 	b	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021aec:	ea000014 	b	40021b44 <CyU3PUsbSetupCommand+0x31c>
40021af0:	ea000029 	b	40021b9c <CyU3PUsbSetupCommand+0x374>
40021af4:	ea000134 	b	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021af8:	ea000057 	b	40021c5c <CyU3PUsbSetupCommand+0x434>
40021afc:	ea000132 	b	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021b00:	ea000131 	b	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021b04:	ea000099 	b	40021d70 <CyU3PUsbSetupCommand+0x548>
40021b08:	ea00012f 	b	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021b0c:	ea00009d 	b	40021d88 <CyU3PUsbSetupCommand+0x560>
40021b10:	e358000c 	cmp	r8, #12
40021b14:	0a0000fb 	beq	40021f08 <CyU3PUsbSetupCommand+0x6e0>
40021b18:	ca000004 	bgt	40021b30 <CyU3PUsbSetupCommand+0x308>
40021b1c:	e358000a 	cmp	r8, #10
40021b20:	0a0000c5 	beq	40021e3c <CyU3PUsbSetupCommand+0x614>
40021b24:	e358000b 	cmp	r8, #11
40021b28:	1a000127 	bne	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021b2c:	ea0000d6 	b	40021e8c <CyU3PUsbSetupCommand+0x664>
40021b30:	e3580030 	cmp	r8, #48	; 0x30
40021b34:	0a0000f7 	beq	40021f18 <CyU3PUsbSetupCommand+0x6f0>
40021b38:	e3580031 	cmp	r8, #49	; 0x31
40021b3c:	1a000122 	bne	40021fcc <CyU3PUsbSetupCommand+0x7a4>
40021b40:	ea000114 	b	40021f98 <CyU3PUsbSetupCommand+0x770>
40021b44:	e1a00000 	nop			; (mov r0, r0)
40021b48:	e59d0008 	ldr	r0, [sp, #8]
40021b4c:	e3500001 	cmp	r0, #1
40021b50:	1a00000c 	bne	40021b88 <CyU3PUsbSetupCommand+0x360>
40021b54:	e59f04c4 	ldr	r0, [pc, #1220]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021b58:	e5900000 	ldr	r0, [r0]
40021b5c:	e3500000 	cmp	r0, #0
40021b60:	0a000008 	beq	40021b88 <CyU3PUsbSetupCommand+0x360>
40021b64:	e1a01005 	mov	r1, r5
40021b68:	e1a00004 	mov	r0, r4
40021b6c:	e59f24ac 	ldr	r2, [pc, #1196]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021b70:	e5922000 	ldr	r2, [r2]
40021b74:	e12fff32 	blx	r2
40021b78:	e1a07000 	mov	r7, r0
40021b7c:	e3570000 	cmp	r7, #0
40021b80:	0a000000 	beq	40021b88 <CyU3PUsbSetupCommand+0x360>
40021b84:	ea000112 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021b88:	e59d0008 	ldr	r0, [sp, #8]
40021b8c:	e59d1004 	ldr	r1, [sp, #4]
40021b90:	ebfffbd3 	bl	40020ae4 <CyU3PUsbHandleGetStatus>
40021b94:	e1a07000 	mov	r7, r0
40021b98:	ea00010d 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021b9c:	e1a00000 	nop			; (mov r0, r0)
40021ba0:	e59d0008 	ldr	r0, [sp, #8]
40021ba4:	e3500000 	cmp	r0, #0
40021ba8:	1a000002 	bne	40021bb8 <CyU3PUsbSetupCommand+0x390>
40021bac:	e20b00ff 	and	r0, fp, #255	; 0xff
40021bb0:	ebfffa86 	bl	400205d0 <CyU3PUsbHandleClearFeature>
40021bb4:	eaffffc3 	b	40021ac8 <CyU3PUsbSetupCommand+0x2a0>
40021bb8:	e3a07000 	mov	r7, #0
40021bbc:	e59f0438 	ldr	r0, [pc, #1080]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021bc0:	e5d00007 	ldrb	r0, [r0, #7]
40021bc4:	e3500000 	cmp	r0, #0
40021bc8:	1a00000e 	bne	40021c08 <CyU3PUsbSetupCommand+0x3e0>
40021bcc:	e59f044c 	ldr	r0, [pc, #1100]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021bd0:	e5900000 	ldr	r0, [r0]
40021bd4:	e3500000 	cmp	r0, #0
40021bd8:	0a00000a 	beq	40021c08 <CyU3PUsbSetupCommand+0x3e0>
40021bdc:	e1a01005 	mov	r1, r5
40021be0:	e1a00004 	mov	r0, r4
40021be4:	e59f2434 	ldr	r2, [pc, #1076]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021be8:	e5922000 	ldr	r2, [r2]
40021bec:	e12fff32 	blx	r2
40021bf0:	e1a07000 	mov	r7, r0
40021bf4:	e3570000 	cmp	r7, #0
40021bf8:	0a000002 	beq	40021c08 <CyU3PUsbSetupCommand+0x3e0>
40021bfc:	e3a00001 	mov	r0, #1
40021c00:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021c04:	e5810040 	str	r0, [r1, #64]	; 0x40
40021c08:	e3570000 	cmp	r7, #0
40021c0c:	1a000011 	bne	40021c58 <CyU3PUsbSetupCommand+0x430>
40021c10:	e59d0008 	ldr	r0, [sp, #8]
40021c14:	e3500002 	cmp	r0, #2
40021c18:	1a00000e 	bne	40021c58 <CyU3PUsbSetupCommand+0x430>
40021c1c:	e35b0000 	cmp	fp, #0
40021c20:	1a00000c 	bne	40021c58 <CyU3PUsbSetupCommand+0x430>
40021c24:	e59d1004 	ldr	r1, [sp, #4]
40021c28:	e20100ff 	and	r0, r1, #255	; 0xff
40021c2c:	e3a02001 	mov	r2, #1
40021c30:	e3a01000 	mov	r1, #0
40021c34:	ebfff118 	bl	4001e09c <CyU3PUsbStall>
40021c38:	e3500000 	cmp	r0, #0
40021c3c:	1a000005 	bne	40021c58 <CyU3PUsbSetupCommand+0x430>
40021c40:	e59d1004 	ldr	r1, [sp, #4]
40021c44:	e20100ff 	and	r0, r1, #255	; 0xff
40021c48:	ebffeeaf 	bl	4001d70c <CyU3PUsbResetEp>
40021c4c:	ebffeb4e 	bl	4001c98c <CyU3PUsbAckSetup>
40021c50:	e3a07001 	mov	r7, #1
40021c54:	ea0000de 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021c58:	ea0000dd 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021c5c:	e1a00000 	nop			; (mov r0, r0)
40021c60:	e59d0008 	ldr	r0, [sp, #8]
40021c64:	e3500000 	cmp	r0, #0
40021c68:	1a00001b 	bne	40021cdc <CyU3PUsbSetupCommand+0x4b4>
40021c6c:	e35b0003 	cmp	fp, #3
40021c70:	0a000004 	beq	40021c88 <CyU3PUsbSetupCommand+0x460>
40021c74:	e35b0004 	cmp	fp, #4
40021c78:	0a000002 	beq	40021c88 <CyU3PUsbSetupCommand+0x460>
40021c7c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021c80:	ebfffbd5 	bl	40020bdc <CyU3PUsbHandleSetFeature>
40021c84:	eaffff8f 	b	40021ac8 <CyU3PUsbSetupCommand+0x2a0>
40021c88:	e59f036c 	ldr	r0, [pc, #876]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021c8c:	e5d00007 	ldrb	r0, [r0, #7]
40021c90:	e3500000 	cmp	r0, #0
40021c94:	1a00000f 	bne	40021cd8 <CyU3PUsbSetupCommand+0x4b0>
40021c98:	e59f0380 	ldr	r0, [pc, #896]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021c9c:	e5900000 	ldr	r0, [r0]
40021ca0:	e3500000 	cmp	r0, #0
40021ca4:	0a00000b 	beq	40021cd8 <CyU3PUsbSetupCommand+0x4b0>
40021ca8:	e1a01005 	mov	r1, r5
40021cac:	e1a00004 	mov	r0, r4
40021cb0:	e59f2368 	ldr	r2, [pc, #872]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021cb4:	e5922000 	ldr	r2, [r2]
40021cb8:	e12fff32 	blx	r2
40021cbc:	e1a07000 	mov	r7, r0
40021cc0:	e3570000 	cmp	r7, #0
40021cc4:	0a000003 	beq	40021cd8 <CyU3PUsbSetupCommand+0x4b0>
40021cc8:	e3a00001 	mov	r0, #1
40021ccc:	e59f1328 	ldr	r1, [pc, #808]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021cd0:	e5810040 	str	r0, [r1, #64]	; 0x40
40021cd4:	eaffff7b 	b	40021ac8 <CyU3PUsbSetupCommand+0x2a0>
40021cd8:	ea0000bd 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021cdc:	e3a07000 	mov	r7, #0
40021ce0:	e59f0314 	ldr	r0, [pc, #788]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021ce4:	e5d00007 	ldrb	r0, [r0, #7]
40021ce8:	e3500000 	cmp	r0, #0
40021cec:	1a00000e 	bne	40021d2c <CyU3PUsbSetupCommand+0x504>
40021cf0:	e59f0328 	ldr	r0, [pc, #808]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021cf4:	e5900000 	ldr	r0, [r0]
40021cf8:	e3500000 	cmp	r0, #0
40021cfc:	0a00000a 	beq	40021d2c <CyU3PUsbSetupCommand+0x504>
40021d00:	e1a01005 	mov	r1, r5
40021d04:	e1a00004 	mov	r0, r4
40021d08:	e59f2310 	ldr	r2, [pc, #784]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021d0c:	e5922000 	ldr	r2, [r2]
40021d10:	e12fff32 	blx	r2
40021d14:	e1a07000 	mov	r7, r0
40021d18:	e3570000 	cmp	r7, #0
40021d1c:	0a000002 	beq	40021d2c <CyU3PUsbSetupCommand+0x504>
40021d20:	e3a00001 	mov	r0, #1
40021d24:	e59f12d0 	ldr	r1, [pc, #720]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021d28:	e5810040 	str	r0, [r1, #64]	; 0x40
40021d2c:	e3570000 	cmp	r7, #0
40021d30:	1a00000d 	bne	40021d6c <CyU3PUsbSetupCommand+0x544>
40021d34:	e59d0008 	ldr	r0, [sp, #8]
40021d38:	e3500002 	cmp	r0, #2
40021d3c:	1a00000a 	bne	40021d6c <CyU3PUsbSetupCommand+0x544>
40021d40:	e35b0000 	cmp	fp, #0
40021d44:	1a000008 	bne	40021d6c <CyU3PUsbSetupCommand+0x544>
40021d48:	e59d1004 	ldr	r1, [sp, #4]
40021d4c:	e20100ff 	and	r0, r1, #255	; 0xff
40021d50:	e3a02000 	mov	r2, #0
40021d54:	e3a01001 	mov	r1, #1
40021d58:	ebfff0cf 	bl	4001e09c <CyU3PUsbStall>
40021d5c:	e3500000 	cmp	r0, #0
40021d60:	1a000001 	bne	40021d6c <CyU3PUsbSetupCommand+0x544>
40021d64:	ebffeb08 	bl	4001c98c <CyU3PUsbAckSetup>
40021d68:	e3a07001 	mov	r7, #1
40021d6c:	ea000098 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021d70:	e1a00000 	nop			; (mov r0, r0)
40021d74:	e1a01005 	mov	r1, r5
40021d78:	e1a00004 	mov	r0, r4
40021d7c:	ebfff5d5 	bl	4001f4d8 <CyU3PUibSendDescr>
40021d80:	e1a07000 	mov	r7, r0
40021d84:	ea000092 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021d88:	e1a00000 	nop			; (mov r0, r0)
40021d8c:	e3a07001 	mov	r7, #1
40021d90:	e59f128c 	ldr	r1, [pc, #652]	; 40022024 <CyU3PUsbSetupCommand+0x7fc>
40021d94:	e3a00001 	mov	r0, #1
40021d98:	ebffee94 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40021d9c:	e1a06000 	mov	r6, r0
40021da0:	ea00008b 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021da4:	e1a00000 	nop			; (mov r0, r0)
40021da8:	e3a07001 	mov	r7, #1
40021dac:	e35b0000 	cmp	fp, #0
40021db0:	0a000005 	beq	40021dcc <CyU3PUsbSetupCommand+0x5a4>
40021db4:	e35b0001 	cmp	fp, #1
40021db8:	1a00001a 	bne	40021e28 <CyU3PUsbSetupCommand+0x600>
40021dbc:	e59f1238 	ldr	r1, [pc, #568]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021dc0:	e5d10009 	ldrb	r0, [r1, #9]
40021dc4:	ebfff8b8 	bl	400200ac <CyU3PUsbEpPrepare>
40021dc8:	e1a00000 	nop			; (mov r0, r0)
40021dcc:	e35b0000 	cmp	fp, #0
40021dd0:	1a000001 	bne	40021ddc <CyU3PUsbSetupCommand+0x5b4>
40021dd4:	e3a00005 	mov	r0, #5
40021dd8:	ea000000 	b	40021de0 <CyU3PUsbSetupCommand+0x5b8>
40021ddc:	e3a00006 	mov	r0, #6
40021de0:	e59f1214 	ldr	r1, [pc, #532]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021de4:	e5c10008 	strb	r0, [r1, #8]
40021de8:	e5c1b00c 	strb	fp, [r1, #12]
40021dec:	e2810000 	add	r0, r1, #0
40021df0:	e5d00006 	ldrb	r0, [r0, #6]
40021df4:	e2000001 	and	r0, r0, #1
40021df8:	e5c10006 	strb	r0, [r1, #6]
40021dfc:	e59f0224 	ldr	r0, [pc, #548]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021e00:	e5900000 	ldr	r0, [r0]
40021e04:	e3500000 	cmp	r0, #0
40021e08:	0a000004 	beq	40021e20 <CyU3PUsbSetupCommand+0x5f8>
40021e0c:	e1a0100b 	mov	r1, fp
40021e10:	e3a00005 	mov	r0, #5
40021e14:	e59f220c 	ldr	r2, [pc, #524]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021e18:	e5922000 	ldr	r2, [r2]
40021e1c:	e12fff32 	blx	r2
40021e20:	ebffead9 	bl	4001c98c <CyU3PUsbAckSetup>
40021e24:	ea000002 	b	40021e34 <CyU3PUsbSetupCommand+0x60c>
40021e28:	e1a00000 	nop			; (mov r0, r0)
40021e2c:	e3a06040 	mov	r6, #64	; 0x40
40021e30:	e1a00000 	nop			; (mov r0, r0)
40021e34:	e1a00000 	nop			; (mov r0, r0)
40021e38:	ea000065 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021e3c:	e1a00000 	nop			; (mov r0, r0)
40021e40:	e59f01d8 	ldr	r0, [pc, #472]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021e44:	e5900000 	ldr	r0, [r0]
40021e48:	e3500000 	cmp	r0, #0
40021e4c:	0a000008 	beq	40021e74 <CyU3PUsbSetupCommand+0x64c>
40021e50:	e1a01005 	mov	r1, r5
40021e54:	e1a00004 	mov	r0, r4
40021e58:	e59f21c0 	ldr	r2, [pc, #448]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021e5c:	e5922000 	ldr	r2, [r2]
40021e60:	e12fff32 	blx	r2
40021e64:	e1a07000 	mov	r7, r0
40021e68:	e3570000 	cmp	r7, #0
40021e6c:	0a000000 	beq	40021e74 <CyU3PUsbSetupCommand+0x64c>
40021e70:	ea000057 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021e74:	e3a07001 	mov	r7, #1
40021e78:	e59f11ac 	ldr	r1, [pc, #428]	; 4002202c <CyU3PUsbSetupCommand+0x804>
40021e7c:	e3a00001 	mov	r0, #1
40021e80:	ebffee5a 	bl	4001d7f0 <CyU3PUsbSendEP0Data>
40021e84:	e1a06000 	mov	r6, r0
40021e88:	ea000051 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021e8c:	e1a00000 	nop			; (mov r0, r0)
40021e90:	e59f0188 	ldr	r0, [pc, #392]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021e94:	e5900000 	ldr	r0, [r0]
40021e98:	e3500000 	cmp	r0, #0
40021e9c:	0a000008 	beq	40021ec4 <CyU3PUsbSetupCommand+0x69c>
40021ea0:	e1a01005 	mov	r1, r5
40021ea4:	e1a00004 	mov	r0, r4
40021ea8:	e59f2170 	ldr	r2, [pc, #368]	; 40022020 <CyU3PUsbSetupCommand+0x7f8>
40021eac:	e5922000 	ldr	r2, [r2]
40021eb0:	e12fff32 	blx	r2
40021eb4:	e1a07000 	mov	r7, r0
40021eb8:	e3570000 	cmp	r7, #0
40021ebc:	0a000000 	beq	40021ec4 <CyU3PUsbSetupCommand+0x69c>
40021ec0:	ea000043 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021ec4:	e59f1130 	ldr	r1, [pc, #304]	; 40021ffc <CyU3PUsbSetupCommand+0x7d4>
40021ec8:	e5c1b00d 	strb	fp, [r1, #13]
40021ecc:	e59f0154 	ldr	r0, [pc, #340]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021ed0:	e5900000 	ldr	r0, [r0]
40021ed4:	e3500000 	cmp	r0, #0
40021ed8:	0a000007 	beq	40021efc <CyU3PUsbSetupCommand+0x6d4>
40021edc:	e20b00ff 	and	r0, fp, #255	; 0xff
40021ee0:	e59d2004 	ldr	r2, [sp, #4]
40021ee4:	e1800402 	orr	r0, r0, r2, lsl #8
40021ee8:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021eec:	e3a00007 	mov	r0, #7
40021ef0:	e59f2130 	ldr	r2, [pc, #304]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021ef4:	e5922000 	ldr	r2, [r2]
40021ef8:	e12fff32 	blx	r2
40021efc:	e3a07001 	mov	r7, #1
40021f00:	ebffeaa1 	bl	4001c98c <CyU3PUsbAckSetup>
40021f04:	ea000032 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021f08:	e1a00000 	nop			; (mov r0, r0)
40021f0c:	e3a07001 	mov	r7, #1
40021f10:	ebffea9d 	bl	4001c98c <CyU3PUsbAckSetup>
40021f14:	ea00002e 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021f18:	e1a00000 	nop			; (mov r0, r0)
40021f1c:	ebffec37 	bl	4001d000 <CyU3PUsbGetSpeed>
40021f20:	e3500003 	cmp	r0, #3
40021f24:	1a000019 	bne	40021f90 <CyU3PUsbSetupCommand+0x768>
40021f28:	e35b0000 	cmp	fp, #0
40021f2c:	1a000017 	bne	40021f90 <CyU3PUsbSetupCommand+0x768>
40021f30:	e59d0004 	ldr	r0, [sp, #4]
40021f34:	e3500000 	cmp	r0, #0
40021f38:	1a000014 	bne	40021f90 <CyU3PUsbSetupCommand+0x768>
40021f3c:	e59d0000 	ldr	r0, [sp]
40021f40:	e3500006 	cmp	r0, #6
40021f44:	1a000011 	bne	40021f90 <CyU3PUsbSetupCommand+0x768>
40021f48:	e3a07001 	mov	r7, #1
40021f4c:	e3a02000 	mov	r2, #0
40021f50:	e59f10d8 	ldr	r1, [pc, #216]	; 40022030 <CyU3PUsbSetupCommand+0x808>
40021f54:	e3a00020 	mov	r0, #32
40021f58:	ebffebb6 	bl	4001ce38 <CyU3PUsbGetEP0Data>
40021f5c:	e1a06000 	mov	r6, r0
40021f60:	e59f00c0 	ldr	r0, [pc, #192]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021f64:	e5900000 	ldr	r0, [r0]
40021f68:	e3500000 	cmp	r0, #0
40021f6c:	0a000008 	beq	40021f94 <CyU3PUsbSetupCommand+0x76c>
40021f70:	e3560000 	cmp	r6, #0
40021f74:	1a000006 	bne	40021f94 <CyU3PUsbSetupCommand+0x76c>
40021f78:	e3a01000 	mov	r1, #0
40021f7c:	e3a00008 	mov	r0, #8
40021f80:	e59f20a0 	ldr	r2, [pc, #160]	; 40022028 <CyU3PUsbSetupCommand+0x800>
40021f84:	e5922000 	ldr	r2, [r2]
40021f88:	e12fff32 	blx	r2
40021f8c:	ea000000 	b	40021f94 <CyU3PUsbSetupCommand+0x76c>
40021f90:	e3a07000 	mov	r7, #0
40021f94:	ea00000e 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021f98:	e1a00000 	nop			; (mov r0, r0)
40021f9c:	ebffec17 	bl	4001d000 <CyU3PUsbGetSpeed>
40021fa0:	e3500003 	cmp	r0, #3
40021fa4:	1a000007 	bne	40021fc8 <CyU3PUsbSetupCommand+0x7a0>
40021fa8:	e59d0004 	ldr	r0, [sp, #4]
40021fac:	e3500000 	cmp	r0, #0
40021fb0:	1a000004 	bne	40021fc8 <CyU3PUsbSetupCommand+0x7a0>
40021fb4:	e59d0000 	ldr	r0, [sp]
40021fb8:	e3500000 	cmp	r0, #0
40021fbc:	1a000001 	bne	40021fc8 <CyU3PUsbSetupCommand+0x7a0>
40021fc0:	e3a07001 	mov	r7, #1
40021fc4:	ebffea70 	bl	4001c98c <CyU3PUsbAckSetup>
40021fc8:	ea000001 	b	40021fd4 <CyU3PUsbSetupCommand+0x7ac>
40021fcc:	e1a00000 	nop			; (mov r0, r0)
40021fd0:	e1a00000 	nop			; (mov r0, r0)
40021fd4:	e1a00000 	nop			; (mov r0, r0)
40021fd8:	e3570001 	cmp	r7, #1
40021fdc:	1a000001 	bne	40021fe8 <CyU3PUsbSetupCommand+0x7c0>
40021fe0:	e3560000 	cmp	r6, #0
40021fe4:	0a000003 	beq	40021ff8 <CyU3PUsbSetupCommand+0x7d0>
40021fe8:	e3a02000 	mov	r2, #0
40021fec:	e3a01001 	mov	r1, #1
40021ff0:	e1a00002 	mov	r0, r2
40021ff4:	ebfff028 	bl	4001e09c <CyU3PUsbStall>
40021ff8:	eafffeb2 	b	40021ac8 <CyU3PUsbSetupCommand+0x2a0>
40021ffc:	40031d40 	.word	0x40031d40
40022000:	e0033000 	.word	0xe0033000
40022004:	40030db0 	.word	0x40030db0
40022008:	400326a0 	.word	0x400326a0
4002200c:	40031eb8 	.word	0x40031eb8
40022010:	e0031000 	.word	0xe0031000
40022014:	40031b1c 	.word	0x40031b1c
40022018:	40031a7c 	.word	0x40031a7c
4002201c:	0000ffff 	.word	0x0000ffff
40022020:	40030da0 	.word	0x40030da0
40022024:	40031d4c 	.word	0x40031d4c
40022028:	40030d9c 	.word	0x40030d9c
4002202c:	40031d4d 	.word	0x40031d4d
40022030:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40022034 <CyU3PUsbSuspendHandler>:
40022034:	e92d4010 	push	{r4, lr}
40022038:	e59f003c 	ldr	r0, [pc, #60]	; 4002207c <CyU3PUsbSuspendHandler+0x48>
4002203c:	e5d00008 	ldrb	r0, [r0, #8]
40022040:	e3500005 	cmp	r0, #5
40022044:	ba00000b 	blt	40022078 <CyU3PUsbSuspendHandler+0x44>
40022048:	e59f0030 	ldr	r0, [pc, #48]	; 40022080 <CyU3PUsbSuspendHandler+0x4c>
4002204c:	e5900000 	ldr	r0, [r0]
40022050:	e3500000 	cmp	r0, #0
40022054:	0a000004 	beq	4002206c <CyU3PUsbSuspendHandler+0x38>
40022058:	e3a01000 	mov	r1, #0
4002205c:	e3a00002 	mov	r0, #2
40022060:	e59f2018 	ldr	r2, [pc, #24]	; 40022080 <CyU3PUsbSuspendHandler+0x4c>
40022064:	e5922000 	ldr	r2, [r2]
40022068:	e12fff32 	blx	r2
4002206c:	e3a00005 	mov	r0, #5
40022070:	e59f1004 	ldr	r1, [pc, #4]	; 4002207c <CyU3PUsbSuspendHandler+0x48>
40022074:	e5c10008 	strb	r0, [r1, #8]
40022078:	e8bd8010 	pop	{r4, pc}
4002207c:	40031d40 	.word	0x40031d40
40022080:	40030d9c 	.word	0x40030d9c

Disassembly of section i.HandleVbusOffEvent:

40022084 <HandleVbusOffEvent>:
40022084:	e92d4010 	push	{r4, lr}
40022088:	e59f00e0 	ldr	r0, [pc, #224]	; 40022170 <HandleVbusOffEvent+0xec>
4002208c:	e5d00009 	ldrb	r0, [r0, #9]
40022090:	e3500003 	cmp	r0, #3
40022094:	1a000002 	bne	400220a4 <HandleVbusOffEvent+0x20>
40022098:	e3a00001 	mov	r0, #1
4002209c:	ebffec59 	bl	4001d208 <CyU3PUsbPhyDisable>
400220a0:	ea000022 	b	40022130 <HandleVbusOffEvent+0xac>
400220a4:	e59f00c8 	ldr	r0, [pc, #200]	; 40022174 <HandleVbusOffEvent+0xf0>
400220a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400220ac:	e3100901 	tst	r0, #16384	; 0x4000
400220b0:	0a00001c 	beq	40022128 <HandleVbusOffEvent+0xa4>
400220b4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022174 <HandleVbusOffEvent+0xf0>
400220b8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400220bc:	e3c00903 	bic	r0, r0, #49152	; 0xc000
400220c0:	e59f10ac 	ldr	r1, [pc, #172]	; 40022174 <HandleVbusOffEvent+0xf0>
400220c4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400220c8:	e3a00002 	mov	r0, #2
400220cc:	ebffc5fb 	bl	400138c0 <CyU3PBusyWait>
400220d0:	e59f00a0 	ldr	r0, [pc, #160]	; 40022178 <HandleVbusOffEvent+0xf4>
400220d4:	e5900004 	ldr	r0, [r0, #4]
400220d8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400220dc:	e59f1094 	ldr	r1, [pc, #148]	; 40022178 <HandleVbusOffEvent+0xf4>
400220e0:	e5810004 	str	r0, [r1, #4]
400220e4:	e3a00001 	mov	r0, #1
400220e8:	ebffc5f4 	bl	400138c0 <CyU3PBusyWait>
400220ec:	e59f0088 	ldr	r0, [pc, #136]	; 4002217c <HandleVbusOffEvent+0xf8>
400220f0:	e590001c 	ldr	r0, [r0, #28]
400220f4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400220f8:	e59f107c 	ldr	r1, [pc, #124]	; 4002217c <HandleVbusOffEvent+0xf8>
400220fc:	e581001c 	str	r0, [r1, #28]
40022100:	e59f0078 	ldr	r0, [pc, #120]	; 40022180 <HandleVbusOffEvent+0xfc>
40022104:	e5900000 	ldr	r0, [r0]
40022108:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002210c:	e3a00001 	mov	r0, #1
40022110:	ebffc5ea 	bl	400138c0 <CyU3PBusyWait>
40022114:	e59f005c 	ldr	r0, [pc, #92]	; 40022178 <HandleVbusOffEvent+0xf4>
40022118:	e5900004 	ldr	r0, [r0, #4]
4002211c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40022120:	e59f1050 	ldr	r1, [pc, #80]	; 40022178 <HandleVbusOffEvent+0xf4>
40022124:	e5810004 	str	r0, [r1, #4]
40022128:	e3a00000 	mov	r0, #0
4002212c:	ebffec35 	bl	4001d208 <CyU3PUsbPhyDisable>
40022130:	e3a01000 	mov	r1, #0
40022134:	e3a00001 	mov	r0, #1
40022138:	e59f2044 	ldr	r2, [pc, #68]	; 40022184 <HandleVbusOffEvent+0x100>
4002213c:	e5922000 	ldr	r2, [r2]
40022140:	e12fff32 	blx	r2
40022144:	e3a00000 	mov	r0, #0
40022148:	e59f1020 	ldr	r1, [pc, #32]	; 40022170 <HandleVbusOffEvent+0xec>
4002214c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40022150:	e3a00004 	mov	r0, #4
40022154:	e5c10008 	strb	r0, [r1, #8]
40022158:	e3a00000 	mov	r0, #0
4002215c:	e5c10009 	strb	r0, [r1, #9]
40022160:	e5810054 	str	r0, [r1, #84]	; 0x54
40022164:	e5810058 	str	r0, [r1, #88]	; 0x58
40022168:	e5810048 	str	r0, [r1, #72]	; 0x48
4002216c:	e8bd8010 	pop	{r4, pc}
40022170:	40031d40 	.word	0x40031d40
40022174:	e0031000 	.word	0xe0031000
40022178:	e0030000 	.word	0xe0030000
4002217c:	e0033000 	.word	0xe0033000
40022180:	40030c58 	.word	0x40030c58
40022184:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3POsTimerInit:

40022188 <CyU3POsTimerInit>:
40022188:	e92d4070 	push	{r4, r5, r6, lr}
4002218c:	e1a04000 	mov	r4, r0
40022190:	e3a00004 	mov	r0, #4
40022194:	eb000047 	bl	400222b8 <CyU3PVicDisableInt>
40022198:	e59f00f0 	ldr	r0, [pc, #240]	; 40022290 <CyU3POsTimerInit+0x108>
4002219c:	e5905014 	ldr	r5, [r0, #20]
400221a0:	e3a00064 	mov	r0, #100	; 0x64
400221a4:	ebffc5c5 	bl	400138c0 <CyU3PBusyWait>
400221a8:	e3850c03 	orr	r0, r5, #768	; 0x300
400221ac:	e59f10dc 	ldr	r1, [pc, #220]	; 40022290 <CyU3POsTimerInit+0x108>
400221b0:	e5810014 	str	r0, [r1, #20]
400221b4:	e3a00064 	mov	r0, #100	; 0x64
400221b8:	ebffc5c0 	bl	400138c0 <CyU3PBusyWait>
400221bc:	e59f00cc 	ldr	r0, [pc, #204]	; 40022290 <CyU3POsTimerInit+0x108>
400221c0:	e5905014 	ldr	r5, [r0, #20]
400221c4:	e3540000 	cmp	r4, #0
400221c8:	0a000001 	beq	400221d4 <CyU3POsTimerInit+0x4c>
400221cc:	e3540ffa 	cmp	r4, #1000	; 0x3e8
400221d0:	da000006 	ble	400221f0 <CyU3POsTimerInit+0x68>
400221d4:	e3a00001 	mov	r0, #1
400221d8:	e59f10b4 	ldr	r1, [pc, #180]	; 40022294 <CyU3POsTimerInit+0x10c>
400221dc:	e1c100b0 	strh	r0, [r1]
400221e0:	e3a00020 	mov	r0, #32
400221e4:	e59f10ac 	ldr	r1, [pc, #172]	; 40022298 <CyU3POsTimerInit+0x110>
400221e8:	e5810000 	str	r0, [r1]
400221ec:	ea000004 	b	40022204 <CyU3POsTimerInit+0x7c>
400221f0:	e59f009c 	ldr	r0, [pc, #156]	; 40022294 <CyU3POsTimerInit+0x10c>
400221f4:	e1c040b0 	strh	r4, [r0]
400221f8:	e1a00284 	lsl	r0, r4, #5
400221fc:	e59f1094 	ldr	r1, [pc, #148]	; 40022298 <CyU3POsTimerInit+0x110>
40022200:	e5810000 	str	r0, [r1]
40022204:	e59f008c 	ldr	r0, [pc, #140]	; 40022298 <CyU3POsTimerInit+0x110>
40022208:	e5900000 	ldr	r0, [r0]
4002220c:	e2400007 	sub	r0, r0, #7
40022210:	e59f1080 	ldr	r1, [pc, #128]	; 40022298 <CyU3POsTimerInit+0x110>
40022214:	e5810000 	str	r0, [r1]
40022218:	e3a06000 	mov	r6, #0
4002221c:	ea000001 	b	40022228 <CyU3POsTimerInit+0xa0>
40022220:	e2860001 	add	r0, r6, #1
40022224:	e20060ff 	and	r6, r0, #255	; 0xff
40022228:	e3a00001 	mov	r0, #1
4002222c:	e1a00610 	lsl	r0, r0, r6
40022230:	e59f1060 	ldr	r1, [pc, #96]	; 40022298 <CyU3POsTimerInit+0x110>
40022234:	e5911000 	ldr	r1, [r1]
40022238:	e1500001 	cmp	r0, r1
4002223c:	9afffff7 	bls	40022220 <CyU3POsTimerInit+0x98>
40022240:	e59f0050 	ldr	r0, [pc, #80]	; 40022298 <CyU3POsTimerInit+0x110>
40022244:	e5900000 	ldr	r0, [r0]
40022248:	e59f1040 	ldr	r1, [pc, #64]	; 40022290 <CyU3POsTimerInit+0x108>
4002224c:	e581001c 	str	r0, [r1, #28]
40022250:	e3a00064 	mov	r0, #100	; 0x64
40022254:	ebffc599 	bl	400138c0 <CyU3PBusyWait>
40022258:	e3a00004 	mov	r0, #4
4002225c:	eb00001a 	bl	400222cc <CyU3PVicEnableInt>
40022260:	e59f0028 	ldr	r0, [pc, #40]	; 40022290 <CyU3POsTimerInit+0x108>
40022264:	e5900014 	ldr	r0, [r0, #20]
40022268:	e3c05c03 	bic	r5, r0, #768	; 0x300
4002226c:	e3a00b01 	mov	r0, #1024	; 0x400
40022270:	e1800586 	orr	r0, r0, r6, lsl #11
40022274:	e1855000 	orr	r5, r5, r0
40022278:	e3855c01 	orr	r5, r5, #256	; 0x100
4002227c:	e3a00064 	mov	r0, #100	; 0x64
40022280:	ebffc58e 	bl	400138c0 <CyU3PBusyWait>
40022284:	e59f0004 	ldr	r0, [pc, #4]	; 40022290 <CyU3POsTimerInit+0x108>
40022288:	e5805014 	str	r5, [r0, #20]
4002228c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022290:	e0050000 	.word	0xe0050000
40022294:	40030db8 	.word	0x40030db8
40022298:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PVicClearInt:

4002229c <CyU3PVicClearInt>:
4002229c:	e3a00000 	mov	r0, #0
400222a0:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
400222a4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

400222a8 <CyU3PVicDisableAllInterrupts>:
400222a8:	e3a01000 	mov	r1, #0
400222ac:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
400222b0:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400222b4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

400222b8 <CyU3PVicDisableInt>:
400222b8:	e3a01001 	mov	r1, #1
400222bc:	e1a01011 	lsl	r1, r1, r0
400222c0:	e3a02000 	mov	r2, #0
400222c4:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
400222c8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

400222cc <CyU3PVicEnableInt>:
400222cc:	e3a01001 	mov	r1, #1
400222d0:	e1a01011 	lsl	r1, r1, r0
400222d4:	e3a02000 	mov	r2, #0
400222d8:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
400222dc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

400222e0 <CyU3PVicEnableInterrupts>:
400222e0:	e3a01000 	mov	r1, #0
400222e4:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
400222e8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

400222f0 <CyU3PVicInit>:
400222f0:	e92d4010 	push	{r4, lr}
400222f4:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
400222f8:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
400222fc:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40022300:	e3e00000 	mvn	r0, #0
40022304:	e3a01000 	mov	r1, #0
40022308:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
4002230c:	e3a00000 	mov	r0, #0
40022310:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40022314:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40022318:	ebffffdf 	bl	4002229c <CyU3PVicClearInt>
4002231c:	eb000001 	bl	40022328 <__CyU3PVicSetupIntVectors_veneer>
40022320:	e8bd8010 	pop	{r4, pc}
40022324:	00000000 	andeq	r0, r0, r0

40022328 <__CyU3PVicSetupIntVectors_veneer>:
40022328:	e51ff004 	ldr	pc, [pc, #-4]	; 4002232c <__CyU3PVicSetupIntVectors_veneer+0x4>
4002232c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40022330 <CyFx3Usb2PhySetup>:
40022330:	e59f0008 	ldr	r0, [pc, #8]	; 40022340 <CyFx3Usb2PhySetup+0x10>
40022334:	e59f1008 	ldr	r1, [pc, #8]	; 40022344 <CyFx3Usb2PhySetup+0x14>
40022338:	e581000c 	str	r0, [r1, #12]
4002233c:	e12fff1e 	bx	lr
40022340:	00d4a480 	.word	0x00d4a480
40022344:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40022348 <CyFx3Usb3LnkRelaxHpTimeout>:
40022348:	e59f0008 	ldr	r0, [pc, #8]	; 40022358 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
4002234c:	e59f1008 	ldr	r1, [pc, #8]	; 4002235c <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40022350:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40022354:	e12fff1e 	bx	lr
40022358:	000009c4 	.word	0x000009c4
4002235c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40022360 <CyFx3Usb3LnkSetup>:
40022360:	e59f1024 	ldr	r1, [pc, #36]	; 4002238c <CyFx3Usb3LnkSetup+0x2c>
40022364:	e59f0024 	ldr	r0, [pc, #36]	; 40022390 <CyFx3Usb3LnkSetup+0x30>
40022368:	e580109c 	str	r1, [r0, #156]	; 0x9c
4002236c:	e5801080 	str	r1, [r0, #128]	; 0x80
40022370:	e59f101c 	ldr	r1, [pc, #28]	; 40022394 <CyFx3Usb3LnkSetup+0x34>
40022374:	e5801084 	str	r1, [r0, #132]	; 0x84
40022378:	e59f1018 	ldr	r1, [pc, #24]	; 40022398 <CyFx3Usb3LnkSetup+0x38>
4002237c:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40022380:	e3a0107d 	mov	r1, #125	; 0x7d
40022384:	e5801078 	str	r1, [r0, #120]	; 0x78
40022388:	e12fff1e 	bx	lr
4002238c:	00002710 	.word	0x00002710
40022390:	e0033000 	.word	0xe0033000
40022394:	00fa004b 	.word	0x00fa004b
40022398:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

4002239c <CyFx3Usb3SendTP>:
4002239c:	e5902000 	ldr	r2, [r0]
400223a0:	e59f1020 	ldr	r1, [pc, #32]	; 400223c8 <CyFx3Usb3SendTP+0x2c>
400223a4:	e5812450 	str	r2, [r1, #1104]	; 0x450
400223a8:	e5902004 	ldr	r2, [r0, #4]
400223ac:	e5812454 	str	r2, [r1, #1108]	; 0x454
400223b0:	e5900008 	ldr	r0, [r0, #8]
400223b4:	e5810458 	str	r0, [r1, #1112]	; 0x458
400223b8:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
400223bc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400223c0:	e5810460 	str	r0, [r1, #1120]	; 0x460
400223c4:	e12fff1e 	bx	lr
400223c8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

400223cc <CyFx3UsbDmaPrefetchEnable>:
400223cc:	e3500000 	cmp	r0, #0
400223d0:	e59f001c 	ldr	r0, [pc, #28]	; 400223f4 <CyFx3UsbDmaPrefetchEnable+0x28>
400223d4:	e3a01206 	mov	r1, #1610612736	; 0x60000000
400223d8:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
400223dc:	12811a09 	addne	r1, r1, #36864	; 0x9000
400223e0:	e3c22903 	bic	r2, r2, #49152	; 0xc000
400223e4:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
400223e8:	e1811002 	orr	r1, r1, r2
400223ec:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
400223f0:	e12fff1e 	bx	lr
400223f4:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

400223f8 <CyFx3UsbPowerOn>:
400223f8:	e92d4010 	push	{r4, lr}
400223fc:	e59f406c 	ldr	r4, [pc, #108]	; 40022470 <CyFx3UsbPowerOn+0x78>
40022400:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022404:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022408:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
4002240c:	e3a0000a 	mov	r0, #10
40022410:	ebffca77 	bl	40014df4 <CyFx3BusyWait>
40022414:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022418:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002241c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40022420:	e3a00064 	mov	r0, #100	; 0x64
40022424:	ebffca72 	bl	40014df4 <CyFx3BusyWait>
40022428:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
4002242c:	e3100001 	tst	r0, #1
40022430:	0afffffc 	beq	40022428 <CyFx3UsbPowerOn+0x30>
40022434:	ebffca64 	bl	40014dcc <CyFx3DevIsUsb3Supported>
40022438:	e59f4034 	ldr	r4, [pc, #52]	; 40022474 <CyFx3UsbPowerOn+0x7c>
4002243c:	e3500000 	cmp	r0, #0
40022440:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40022444:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022448:	03a0000a 	moveq	r0, #10
4002244c:	0bffca68 	bleq	40014df4 <CyFx3BusyWait>
40022450:	ebffca3f 	bl	40014d54 <CyFx3DevIsOtgSupported>
40022454:	e3500000 	cmp	r0, #0
40022458:	18bd8010 	popne	{r4, pc}
4002245c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022460:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40022464:	e8bd4010 	pop	{r4, lr}
40022468:	e3a0000a 	mov	r0, #10
4002246c:	eaffca60 	b	40014df4 <CyFx3BusyWait>
40022470:	e0037000 	.word	0xe0037000
40022474:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022478 <CyFx3UsbWritePhyReg>:
40022478:	e59f2084 	ldr	r2, [pc, #132]	; 40022504 <CyFx3UsbWritePhyReg+0x8c>
4002247c:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022480:	e3120901 	tst	r2, #16384	; 0x4000
40022484:	012fff1e 	bxeq	lr
40022488:	e59f2078 	ldr	r2, [pc, #120]	; 40022508 <CyFx3UsbWritePhyReg+0x90>
4002248c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022490:	e3803801 	orr	r3, r0, #65536	; 0x10000
40022494:	e5823024 	str	r3, [r2, #36]	; 0x24
40022498:	e5923028 	ldr	r3, [r2, #40]	; 0x28
4002249c:	e3130801 	tst	r3, #65536	; 0x10000
400224a0:	0afffffc 	beq	40022498 <CyFx3UsbWritePhyReg+0x20>
400224a4:	e5820024 	str	r0, [r2, #36]	; 0x24
400224a8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224ac:	e3100801 	tst	r0, #65536	; 0x10000
400224b0:	1afffffc 	bne	400224a8 <CyFx3UsbWritePhyReg+0x30>
400224b4:	e5821024 	str	r1, [r2, #36]	; 0x24
400224b8:	e3810802 	orr	r0, r1, #131072	; 0x20000
400224bc:	e5820024 	str	r0, [r2, #36]	; 0x24
400224c0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224c4:	e3100801 	tst	r0, #65536	; 0x10000
400224c8:	0afffffc 	beq	400224c0 <CyFx3UsbWritePhyReg+0x48>
400224cc:	e5821024 	str	r1, [r2, #36]	; 0x24
400224d0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224d4:	e3100801 	tst	r0, #65536	; 0x10000
400224d8:	1afffffc 	bne	400224d0 <CyFx3UsbWritePhyReg+0x58>
400224dc:	e3810702 	orr	r0, r1, #524288	; 0x80000
400224e0:	e5820024 	str	r0, [r2, #36]	; 0x24
400224e4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224e8:	e3100801 	tst	r0, #65536	; 0x10000
400224ec:	0afffffc 	beq	400224e4 <CyFx3UsbWritePhyReg+0x6c>
400224f0:	e5821024 	str	r1, [r2, #36]	; 0x24
400224f4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224f8:	e3100801 	tst	r0, #65536	; 0x10000
400224fc:	1afffffc 	bne	400224f4 <CyFx3UsbWritePhyReg+0x7c>
40022500:	e12fff1e 	bx	lr
40022504:	e0031000 	.word	0xe0031000
40022508:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002250c <CyU3PDmaDscrChainCreate>:
4002250c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022510:	e24dd018 	sub	sp, sp, #24
40022514:	e1a04000 	mov	r4, r0
40022518:	e1a05001 	mov	r5, r1
4002251c:	e1a06002 	mov	r6, r2
40022520:	e1a07003 	mov	r7, r3
40022524:	e3a0a000 	mov	sl, #0
40022528:	eb0000a6 	bl	400227c8 <CyU3PDmaDscrGetFreeCount>
4002252c:	e1500005 	cmp	r0, r5
40022530:	aa000002 	bge	40022540 <CyU3PDmaDscrChainCreate+0x34>
40022534:	e3a00010 	mov	r0, #16
40022538:	e28dd018 	add	sp, sp, #24
4002253c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022540:	e3540000 	cmp	r4, #0
40022544:	1a000001 	bne	40022550 <CyU3PDmaDscrChainCreate+0x44>
40022548:	e3a00040 	mov	r0, #64	; 0x40
4002254c:	eafffff9 	b	40022538 <CyU3PDmaDscrChainCreate+0x2c>
40022550:	e3550000 	cmp	r5, #0
40022554:	1a000001 	bne	40022560 <CyU3PDmaDscrChainCreate+0x54>
40022558:	e3a00040 	mov	r0, #64	; 0x40
4002255c:	eafffff5 	b	40022538 <CyU3PDmaDscrChainCreate+0x2c>
40022560:	e1a09005 	mov	r9, r5
40022564:	e1a00004 	mov	r0, r4
40022568:	eb00005e 	bl	400226e8 <CyU3PDmaDscrGet>
4002256c:	e1d480b0 	ldrh	r8, [r4]
40022570:	ea000029 	b	4002261c <CyU3PDmaDscrChainCreate+0x110>
40022574:	e3590000 	cmp	r9, #0
40022578:	0a000002 	beq	40022588 <CyU3PDmaDscrChainCreate+0x7c>
4002257c:	e28d0014 	add	r0, sp, #20
40022580:	eb000058 	bl	400226e8 <CyU3PDmaDscrGet>
40022584:	ea000001 	b	40022590 <CyU3PDmaDscrChainCreate+0x84>
40022588:	e1d400b0 	ldrh	r0, [r4]
4002258c:	e58d0014 	str	r0, [sp, #20]
40022590:	e3560000 	cmp	r6, #0
40022594:	0a000015 	beq	400225f0 <CyU3PDmaDscrChainCreate+0xe4>
40022598:	e35a0000 	cmp	sl, #0
4002259c:	1a000013 	bne	400225f0 <CyU3PDmaDscrChainCreate+0xe4>
400225a0:	e1a00006 	mov	r0, r6
400225a4:	ebff85ef 	bl	40003d68 <CyU3PDmaBufferAlloc>
400225a8:	e58d0004 	str	r0, [sp, #4]
400225ac:	e59f00a0 	ldr	r0, [pc, #160]	; 40022654 <CyU3PDmaDscrChainCreate+0x148>
400225b0:	e0000006 	and	r0, r0, r6
400225b4:	e58d0010 	str	r0, [sp, #16]
400225b8:	e59d0004 	ldr	r0, [sp, #4]
400225bc:	e3500000 	cmp	r0, #0
400225c0:	1a000000 	bne	400225c8 <CyU3PDmaDscrChainCreate+0xbc>
400225c4:	e3a0a010 	mov	sl, #16
400225c8:	e59d0004 	ldr	r0, [sp, #4]
400225cc:	e3500101 	cmp	r0, #1073741824	; 0x40000000
400225d0:	3a000004 	bcc	400225e8 <CyU3PDmaDscrChainCreate+0xdc>
400225d4:	e59d0004 	ldr	r0, [sp, #4]
400225d8:	e0800006 	add	r0, r0, r6
400225dc:	e59f1074 	ldr	r1, [pc, #116]	; 40022658 <CyU3PDmaDscrChainCreate+0x14c>
400225e0:	e1500001 	cmp	r0, r1
400225e4:	3a000004 	bcc	400225fc <CyU3PDmaDscrChainCreate+0xf0>
400225e8:	e3a0a010 	mov	sl, #16
400225ec:	ea000002 	b	400225fc <CyU3PDmaDscrChainCreate+0xf0>
400225f0:	e3a00000 	mov	r0, #0
400225f4:	e58d0004 	str	r0, [sp, #4]
400225f8:	e58d0010 	str	r0, [sp, #16]
400225fc:	e58d7008 	str	r7, [sp, #8]
40022600:	e1dd01b4 	ldrh	r0, [sp, #20]
40022604:	e1800800 	orr	r0, r0, r0, lsl #16
40022608:	e58d000c 	str	r0, [sp, #12]
4002260c:	e28d1004 	add	r1, sp, #4
40022610:	e1a00008 	mov	r0, r8
40022614:	eb0000c6 	bl	40022934 <CyU3PDmaDscrSetConfig>
40022618:	e1dd81b4 	ldrh	r8, [sp, #20]
4002261c:	e1b00009 	movs	r0, r9
40022620:	e2491001 	sub	r1, r9, #1
40022624:	e1a09801 	lsl	r9, r1, #16
40022628:	e1a09829 	lsr	r9, r9, #16
4002262c:	1affffd0 	bne	40022574 <CyU3PDmaDscrChainCreate+0x68>
40022630:	e35a0000 	cmp	sl, #0
40022634:	0a000004 	beq	4002264c <CyU3PDmaDscrChainCreate+0x140>
40022638:	e1d400b0 	ldrh	r0, [r4]
4002263c:	e3a03001 	mov	r3, #1
40022640:	e1a02003 	mov	r2, r3
40022644:	e1a01005 	mov	r1, r5
40022648:	eb000003 	bl	4002265c <CyU3PDmaDscrChainDestroy>
4002264c:	e1a0000a 	mov	r0, sl
40022650:	eaffffb8 	b	40022538 <CyU3PDmaDscrChainCreate+0x2c>
40022654:	0000fff0 	.word	0x0000fff0
40022658:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

4002265c <CyU3PDmaDscrChainDestroy>:
4002265c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022660:	e1a04000 	mov	r4, r0
40022664:	e1a05001 	mov	r5, r1
40022668:	e1a06002 	mov	r6, r2
4002266c:	e1a07003 	mov	r7, r3
40022670:	ea000015 	b	400226cc <CyU3PDmaDscrChainDestroy+0x70>
40022674:	e1a0100d 	mov	r1, sp
40022678:	e1a00004 	mov	r0, r4
4002267c:	eb000091 	bl	400228c8 <CyU3PDmaDscrGetConfig>
40022680:	e3570000 	cmp	r7, #0
40022684:	0a000004 	beq	4002269c <CyU3PDmaDscrChainDestroy+0x40>
40022688:	e59d0000 	ldr	r0, [sp]
4002268c:	e3500000 	cmp	r0, #0
40022690:	0a000001 	beq	4002269c <CyU3PDmaDscrChainDestroy+0x40>
40022694:	e59d0000 	ldr	r0, [sp]
40022698:	ebff8615 	bl	40003ef4 <CyU3PDmaBufferFree>
4002269c:	e3560000 	cmp	r6, #0
400226a0:	0a000003 	beq	400226b4 <CyU3PDmaDscrChainDestroy+0x58>
400226a4:	e59d0008 	ldr	r0, [sp, #8]
400226a8:	e59f1034 	ldr	r1, [pc, #52]	; 400226e4 <CyU3PDmaDscrChainDestroy+0x88>
400226ac:	e0018820 	and	r8, r1, r0, lsr #16
400226b0:	ea000002 	b	400226c0 <CyU3PDmaDscrChainDestroy+0x64>
400226b4:	e59d0008 	ldr	r0, [sp, #8]
400226b8:	e1a08800 	lsl	r8, r0, #16
400226bc:	e1a08828 	lsr	r8, r8, #16
400226c0:	e1a00004 	mov	r0, r4
400226c4:	eb000058 	bl	4002282c <CyU3PDmaDscrPut>
400226c8:	e1a04008 	mov	r4, r8
400226cc:	e1b00005 	movs	r0, r5
400226d0:	e2451001 	sub	r1, r5, #1
400226d4:	e1a05801 	lsl	r5, r1, #16
400226d8:	e1a05825 	lsr	r5, r5, #16
400226dc:	1affffe4 	bne	40022674 <CyU3PDmaDscrChainDestroy+0x18>
400226e0:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400226e4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

400226e8 <CyU3PDmaDscrGet>:
400226e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400226ec:	e1a04000 	mov	r4, r0
400226f0:	e3a08000 	mov	r8, #0
400226f4:	e3540000 	cmp	r4, #0
400226f8:	1a000001 	bne	40022704 <CyU3PDmaDscrGet+0x1c>
400226fc:	e3a00040 	mov	r0, #64	; 0x40
40022700:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022704:	e3e01000 	mvn	r1, #0
40022708:	e59f00ac 	ldr	r0, [pc, #172]	; 400227bc <CyU3PDmaDscrGet+0xd4>
4002270c:	ebff9eec 	bl	4000a2c4 <_txe_mutex_get>
40022710:	e59f00a8 	ldr	r0, [pc, #168]	; 400227c0 <CyU3PDmaDscrGet+0xd8>
40022714:	e1d000b0 	ldrh	r0, [r0]
40022718:	e3500000 	cmp	r0, #0
4002271c:	0a000022 	beq	400227ac <CyU3PDmaDscrGet+0xc4>
40022720:	e3a06000 	mov	r6, #0
40022724:	ea00001e 	b	400227a4 <CyU3PDmaDscrGet+0xbc>
40022728:	e59f0094 	ldr	r0, [pc, #148]	; 400227c4 <CyU3PDmaDscrGet+0xdc>
4002272c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022730:	e3750001 	cmn	r5, #1
40022734:	0a000017 	beq	40022798 <CyU3PDmaDscrGet+0xb0>
40022738:	e3a07001 	mov	r7, #1
4002273c:	ea000012 	b	4002278c <CyU3PDmaDscrGet+0xa4>
40022740:	e1150007 	tst	r5, r7
40022744:	1a00000d 	bne	40022780 <CyU3PDmaDscrGet+0x98>
40022748:	e1850007 	orr	r0, r5, r7
4002274c:	e59f1070 	ldr	r1, [pc, #112]	; 400227c4 <CyU3PDmaDscrGet+0xdc>
40022750:	e7810106 	str	r0, [r1, r6, lsl #2]
40022754:	e2410004 	sub	r0, r1, #4
40022758:	e1c080b2 	strh	r8, [r0, #2]
4002275c:	e1d000b0 	ldrh	r0, [r0]
40022760:	e2400001 	sub	r0, r0, #1
40022764:	e2411004 	sub	r1, r1, #4
40022768:	e1c100b0 	strh	r0, [r1]
4002276c:	e1c480b0 	strh	r8, [r4]
40022770:	e2810044 	add	r0, r1, #68	; 0x44
40022774:	ebff9f07 	bl	4000a398 <_txe_mutex_put>
40022778:	e3a00000 	mov	r0, #0
4002277c:	eaffffdf 	b	40022700 <CyU3PDmaDscrGet+0x18>
40022780:	e1a07087 	lsl	r7, r7, #1
40022784:	e2880001 	add	r0, r8, #1
40022788:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4002278c:	e3570000 	cmp	r7, #0
40022790:	1affffea 	bne	40022740 <CyU3PDmaDscrGet+0x58>
40022794:	ea000001 	b	400227a0 <CyU3PDmaDscrGet+0xb8>
40022798:	e2880020 	add	r0, r8, #32
4002279c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400227a0:	e2866001 	add	r6, r6, #1
400227a4:	e3560010 	cmp	r6, #16
400227a8:	3affffde 	bcc	40022728 <CyU3PDmaDscrGet+0x40>
400227ac:	e59f0008 	ldr	r0, [pc, #8]	; 400227bc <CyU3PDmaDscrGet+0xd4>
400227b0:	ebff9ef8 	bl	4000a398 <_txe_mutex_put>
400227b4:	e3a0004a 	mov	r0, #74	; 0x4a
400227b8:	eaffffd0 	b	40022700 <CyU3PDmaDscrGet+0x18>
400227bc:	4003273c 	.word	0x4003273c
400227c0:	400326f8 	.word	0x400326f8
400227c4:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

400227c8 <CyU3PDmaDscrGetFreeCount>:
400227c8:	e59f0004 	ldr	r0, [pc, #4]	; 400227d4 <CyU3PDmaDscrGetFreeCount+0xc>
400227cc:	e1d000b0 	ldrh	r0, [r0]
400227d0:	e12fff1e 	bx	lr
400227d4:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

400227d8 <CyU3PDmaDscrListCreate>:
400227d8:	e92d4010 	push	{r4, lr}
400227dc:	e3a02040 	mov	r2, #64	; 0x40
400227e0:	e3a01000 	mov	r1, #0
400227e4:	e59f0034 	ldr	r0, [pc, #52]	; 40022820 <CyU3PDmaDscrListCreate+0x48>
400227e8:	ebff83b2 	bl	400036b8 <CyU3PMemSet>
400227ec:	e3a00001 	mov	r0, #1
400227f0:	e59f102c 	ldr	r1, [pc, #44]	; 40022824 <CyU3PDmaDscrListCreate+0x4c>
400227f4:	e5810004 	str	r0, [r1, #4]
400227f8:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400227fc:	e1c100b0 	strh	r0, [r1]
40022800:	e3a00001 	mov	r0, #1
40022804:	e1c100b2 	strh	r0, [r1, #2]
40022808:	e3a03038 	mov	r3, #56	; 0x38
4002280c:	e3a02000 	mov	r2, #0
40022810:	e1a01002 	mov	r1, r2
40022814:	e59f000c 	ldr	r0, [pc, #12]	; 40022828 <CyU3PDmaDscrListCreate+0x50>
40022818:	ebff9e2b 	bl	4000a0cc <_txe_mutex_create>
4002281c:	e8bd8010 	pop	{r4, pc}
40022820:	400326fc 	.word	0x400326fc
40022824:	400326f8 	.word	0x400326f8
40022828:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

4002282c <CyU3PDmaDscrPut>:
4002282c:	e92d4070 	push	{r4, r5, r6, lr}
40022830:	e1a04000 	mov	r4, r0
40022834:	e3540c02 	cmp	r4, #512	; 0x200
40022838:	aa000001 	bge	40022844 <CyU3PDmaDscrPut+0x18>
4002283c:	e3540000 	cmp	r4, #0
40022840:	1a000001 	bne	4002284c <CyU3PDmaDscrPut+0x20>
40022844:	e3a00040 	mov	r0, #64	; 0x40
40022848:	e8bd8070 	pop	{r4, r5, r6, pc}
4002284c:	e3e01000 	mvn	r1, #0
40022850:	e59f0064 	ldr	r0, [pc, #100]	; 400228bc <CyU3PDmaDscrPut+0x90>
40022854:	ebff9e9a 	bl	4000a2c4 <_txe_mutex_get>
40022858:	e1a00004 	mov	r0, r4
4002285c:	e1a01fc4 	asr	r1, r4, #31
40022860:	e0841da1 	add	r1, r4, r1, lsr #27
40022864:	e1a062c1 	asr	r6, r1, #5
40022868:	e59f0050 	ldr	r0, [pc, #80]	; 400228c0 <CyU3PDmaDscrPut+0x94>
4002286c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022870:	e1a00004 	mov	r0, r4
40022874:	e1a01fc4 	asr	r1, r4, #31
40022878:	e0841da1 	add	r1, r4, r1, lsr #27
4002287c:	e1a012c1 	asr	r1, r1, #5
40022880:	e0441281 	sub	r1, r4, r1, lsl #5
40022884:	e3a02001 	mov	r2, #1
40022888:	e1c55112 	bic	r5, r5, r2, lsl r1
4002288c:	e59f002c 	ldr	r0, [pc, #44]	; 400228c0 <CyU3PDmaDscrPut+0x94>
40022890:	e7805106 	str	r5, [r0, r6, lsl #2]
40022894:	e2400004 	sub	r0, r0, #4
40022898:	e1d000b0 	ldrh	r0, [r0]
4002289c:	e2800001 	add	r0, r0, #1
400228a0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400228a4:	e59f1018 	ldr	r1, [pc, #24]	; 400228c4 <CyU3PDmaDscrPut+0x98>
400228a8:	e1c100b0 	strh	r0, [r1]
400228ac:	e2810044 	add	r0, r1, #68	; 0x44
400228b0:	ebff9eb8 	bl	4000a398 <_txe_mutex_put>
400228b4:	e3a00000 	mov	r0, #0
400228b8:	eaffffe2 	b	40022848 <CyU3PDmaDscrPut+0x1c>
400228bc:	4003273c 	.word	0x4003273c
400228c0:	400326fc 	.word	0x400326fc
400228c4:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

400228c8 <CyU3PDmaDscrGetConfig>:
400228c8:	e92d4070 	push	{r4, r5, r6, lr}
400228cc:	e1a05000 	mov	r5, r0
400228d0:	e1a04001 	mov	r4, r1
400228d4:	e3550c02 	cmp	r5, #512	; 0x200
400228d8:	aa000001 	bge	400228e4 <CyU3PDmaDscrGetConfig+0x1c>
400228dc:	e3550000 	cmp	r5, #0
400228e0:	1a000001 	bne	400228ec <CyU3PDmaDscrGetConfig+0x24>
400228e4:	e3a00040 	mov	r0, #64	; 0x40
400228e8:	e8bd8070 	pop	{r4, r5, r6, pc}
400228ec:	e3540000 	cmp	r4, #0
400228f0:	1a000001 	bne	400228fc <CyU3PDmaDscrGetConfig+0x34>
400228f4:	e3a00040 	mov	r0, #64	; 0x40
400228f8:	eafffffa 	b	400228e8 <CyU3PDmaDscrGetConfig+0x20>
400228fc:	e59f102c 	ldr	r1, [pc, #44]	; 40022930 <CyU3PDmaDscrGetConfig+0x68>
40022900:	e5911000 	ldr	r1, [r1]
40022904:	e0810205 	add	r0, r1, r5, lsl #4
40022908:	e3a01010 	mov	r1, #16
4002290c:	ebffbea4 	bl	400123a4 <CyU3PSysClearDRegion>
40022910:	ebffc118 	bl	40012d78 <CyU3PSysBarrierSync>
40022914:	e59f0014 	ldr	r0, [pc, #20]	; 40022930 <CyU3PDmaDscrGetConfig+0x68>
40022918:	e5900000 	ldr	r0, [r0]
4002291c:	e0800205 	add	r0, r0, r5, lsl #4
40022920:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022924:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022928:	e3a00000 	mov	r0, #0
4002292c:	eaffffed 	b	400228e8 <CyU3PDmaDscrGetConfig+0x20>
40022930:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaDscrSetConfig:

40022934 <CyU3PDmaDscrSetConfig>:
40022934:	e92d4070 	push	{r4, r5, r6, lr}
40022938:	e1a04000 	mov	r4, r0
4002293c:	e1a05001 	mov	r5, r1
40022940:	e3540c02 	cmp	r4, #512	; 0x200
40022944:	aa000001 	bge	40022950 <CyU3PDmaDscrSetConfig+0x1c>
40022948:	e3540000 	cmp	r4, #0
4002294c:	1a000001 	bne	40022958 <CyU3PDmaDscrSetConfig+0x24>
40022950:	e3a00040 	mov	r0, #64	; 0x40
40022954:	e8bd8070 	pop	{r4, r5, r6, pc}
40022958:	e3550000 	cmp	r5, #0
4002295c:	1a000001 	bne	40022968 <CyU3PDmaDscrSetConfig+0x34>
40022960:	e3a00040 	mov	r0, #64	; 0x40
40022964:	eafffffa 	b	40022954 <CyU3PDmaDscrSetConfig+0x20>
40022968:	e59f002c 	ldr	r0, [pc, #44]	; 4002299c <CyU3PDmaDscrSetConfig+0x68>
4002296c:	e5900000 	ldr	r0, [r0]
40022970:	e0800204 	add	r0, r0, r4, lsl #4
40022974:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022978:	e880004e 	stm	r0, {r1, r2, r3, r6}
4002297c:	e59f1018 	ldr	r1, [pc, #24]	; 4002299c <CyU3PDmaDscrSetConfig+0x68>
40022980:	e5911000 	ldr	r1, [r1]
40022984:	e0810204 	add	r0, r1, r4, lsl #4
40022988:	e3a01010 	mov	r1, #16
4002298c:	ebffbe84 	bl	400123a4 <CyU3PSysClearDRegion>
40022990:	ebffc0f8 	bl	40012d78 <CyU3PSysBarrierSync>
40022994:	e3a00000 	mov	r0, #0
40022998:	eaffffed 	b	40022954 <CyU3PDmaDscrSetConfig+0x20>
4002299c:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaIntHandler:

400229a0 <CyU3PDmaIntHandler>:
400229a0:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400229a4:	e1a04000 	mov	r4, r0
400229a8:	e1a05001 	mov	r5, r1
400229ac:	e204003f 	and	r0, r4, #63	; 0x3f
400229b0:	e1857400 	orr	r7, r5, r0, lsl #8
400229b4:	e59f0150 	ldr	r0, [pc, #336]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
400229b8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229bc:	e0800385 	add	r0, r0, r5, lsl #7
400229c0:	e5900010 	ldr	r0, [r0, #16]
400229c4:	e59f1140 	ldr	r1, [pc, #320]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
400229c8:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400229cc:	e0811385 	add	r1, r1, r5, lsl #7
400229d0:	e5911014 	ldr	r1, [r1, #20]
400229d4:	e0009001 	and	r9, r0, r1
400229d8:	e59f0130 	ldr	r0, [pc, #304]	; 40022b10 <CyU3PDmaIntHandler+0x170>
400229dc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229e0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
400229e4:	e3560000 	cmp	r6, #0
400229e8:	0a000038 	beq	40022ad0 <CyU3PDmaIntHandler+0x130>
400229ec:	e1a00000 	nop			; (mov r0, r0)
400229f0:	e59f0114 	ldr	r0, [pc, #276]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
400229f4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229f8:	e0800385 	add	r0, r0, r5, lsl #7
400229fc:	e5900010 	ldr	r0, [r0, #16]
40022a00:	e59f1104 	ldr	r1, [pc, #260]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a04:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a08:	e0811385 	add	r1, r1, r5, lsl #7
40022a0c:	e5911014 	ldr	r1, [r1, #20]
40022a10:	e0000001 	and	r0, r0, r1
40022a14:	e1899000 	orr	r9, r9, r0
40022a18:	e2098e12 	and	r8, r9, #288	; 0x120
40022a1c:	e59f00e8 	ldr	r0, [pc, #232]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a20:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a24:	e0800385 	add	r0, r0, r5, lsl #7
40022a28:	e5900014 	ldr	r0, [r0, #20]
40022a2c:	e1c00008 	bic	r0, r0, r8
40022a30:	e59f10d4 	ldr	r1, [pc, #212]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a34:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a38:	e0811385 	add	r1, r1, r5, lsl #7
40022a3c:	e5810014 	str	r0, [r1, #20]
40022a40:	e1c90008 	bic	r0, r9, r8
40022a44:	e59f10c0 	ldr	r1, [pc, #192]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a48:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a4c:	e0811385 	add	r1, r1, r5, lsl #7
40022a50:	e5810010 	str	r0, [r1, #16]
40022a54:	e59f00b0 	ldr	r0, [pc, #176]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a58:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a5c:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022a60:	e1a00800 	lsl	r0, r0, #16
40022a64:	e1a00820 	lsr	r0, r0, #16
40022a68:	e58d000c 	str	r0, [sp, #12]
40022a6c:	e59f0098 	ldr	r0, [pc, #152]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a70:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a74:	e0800385 	add	r0, r0, r5, lsl #7
40022a78:	e5900010 	ldr	r0, [r0, #16]
40022a7c:	e59f1088 	ldr	r1, [pc, #136]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022a80:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a84:	e0811385 	add	r1, r1, r5, lsl #7
40022a88:	e5911014 	ldr	r1, [r1, #20]
40022a8c:	e0008001 	and	r8, r0, r1
40022a90:	e3580000 	cmp	r8, #0
40022a94:	1affffd5 	bne	400229f0 <CyU3PDmaIntHandler+0x50>
40022a98:	e3a00901 	mov	r0, #16384	; 0x4000
40022a9c:	e58d0000 	str	r0, [sp]
40022aa0:	e59d0000 	ldr	r0, [sp]
40022aa4:	e58d0000 	str	r0, [sp]
40022aa8:	e59d0000 	ldr	r0, [sp]
40022aac:	e1800807 	orr	r0, r0, r7, lsl #16
40022ab0:	e58d0000 	str	r0, [sp]
40022ab4:	e58d6004 	str	r6, [sp, #4]
40022ab8:	e58d9008 	str	r9, [sp, #8]
40022abc:	e3a02000 	mov	r2, #0
40022ac0:	e1a01002 	mov	r1, r2
40022ac4:	e1a0000d 	mov	r0, sp
40022ac8:	ebffe05f 	bl	4001ac4c <CyU3PDmaMsgSend>
40022acc:	ea00000d 	b	40022b08 <CyU3PDmaIntHandler+0x168>
40022ad0:	e59f003c 	ldr	r0, [pc, #60]	; 40022b14 <CyU3PDmaIntHandler+0x174>
40022ad4:	e5900000 	ldr	r0, [r0]
40022ad8:	e3500000 	cmp	r0, #0
40022adc:	0a000005 	beq	40022af8 <CyU3PDmaIntHandler+0x158>
40022ae0:	e1a01009 	mov	r1, r9
40022ae4:	e1a00007 	mov	r0, r7
40022ae8:	e59f2024 	ldr	r2, [pc, #36]	; 40022b14 <CyU3PDmaIntHandler+0x174>
40022aec:	e5922000 	ldr	r2, [r2]
40022af0:	e12fff32 	blx	r2
40022af4:	ea000003 	b	40022b08 <CyU3PDmaIntHandler+0x168>
40022af8:	e59f000c 	ldr	r0, [pc, #12]	; 40022b0c <CyU3PDmaIntHandler+0x16c>
40022afc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022b00:	e0800385 	add	r0, r0, r5, lsl #7
40022b04:	e5809010 	str	r9, [r0, #16]
40022b08:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40022b0c:	40030cd8 	.word	0x40030cd8
40022b10:	40030d00 	.word	0x40030d00
40022b14:	40030cd4 	.word	0x40030cd4

Disassembly of section i.CyU3PGpioInit:

40022b18 <CyU3PGpioInit>:
40022b18:	e92d4070 	push	{r4, r5, r6, lr}
40022b1c:	e1a04000 	mov	r4, r0
40022b20:	e1a06001 	mov	r6, r1
40022b24:	e59f00fc 	ldr	r0, [pc, #252]	; 40022c28 <CyU3PGpioInit+0x110>
40022b28:	e5900000 	ldr	r0, [r0]
40022b2c:	e3500000 	cmp	r0, #0
40022b30:	0a000001 	beq	40022b3c <CyU3PGpioInit+0x24>
40022b34:	e3a00043 	mov	r0, #67	; 0x43
40022b38:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b3c:	e3540000 	cmp	r4, #0
40022b40:	1a000001 	bne	40022b4c <CyU3PGpioInit+0x34>
40022b44:	e3a00041 	mov	r0, #65	; 0x41
40022b48:	eafffffa 	b	40022b38 <CyU3PGpioInit+0x20>
40022b4c:	e1a00006 	mov	r0, r6
40022b50:	eb00013b 	bl	40023044 <CyU3PRegisterGpioCallBack>
40022b54:	ebffc551 	bl	400140a0 <CyU3PLppGpioBlockIsOn>
40022b58:	e3500000 	cmp	r0, #0
40022b5c:	0a000003 	beq	40022b70 <CyU3PGpioInit+0x58>
40022b60:	e59f00c4 	ldr	r0, [pc, #196]	; 40022c2c <CyU3PGpioInit+0x114>
40022b64:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022b68:	e3100001 	tst	r0, #1
40022b6c:	1a000020 	bne	40022bf4 <CyU3PGpioInit+0xdc>
40022b70:	e1a00004 	mov	r0, r4
40022b74:	ebffc4a7 	bl	40013e18 <CyU3PGpioSetClock>
40022b78:	e1a05000 	mov	r5, r0
40022b7c:	e3550000 	cmp	r5, #0
40022b80:	0a000001 	beq	40022b8c <CyU3PGpioInit+0x74>
40022b84:	e1a00005 	mov	r0, r5
40022b88:	eaffffea 	b	40022b38 <CyU3PGpioInit+0x20>
40022b8c:	e59f109c 	ldr	r1, [pc, #156]	; 40022c30 <CyU3PGpioInit+0x118>
40022b90:	e3a00004 	mov	r0, #4
40022b94:	ebffc545 	bl	400140b0 <CyU3PLppInit>
40022b98:	e1a05000 	mov	r5, r0
40022b9c:	e3550000 	cmp	r5, #0
40022ba0:	0a000001 	beq	40022bac <CyU3PGpioInit+0x94>
40022ba4:	e1a00005 	mov	r0, r5
40022ba8:	eaffffe2 	b	40022b38 <CyU3PGpioInit+0x20>
40022bac:	e59f0078 	ldr	r0, [pc, #120]	; 40022c2c <CyU3PGpioInit+0x114>
40022bb0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022bb4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022bb8:	e59f106c 	ldr	r1, [pc, #108]	; 40022c2c <CyU3PGpioInit+0x114>
40022bbc:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022bc0:	e3a0000a 	mov	r0, #10
40022bc4:	ebffc33d 	bl	400138c0 <CyU3PBusyWait>
40022bc8:	e59f005c 	ldr	r0, [pc, #92]	; 40022c2c <CyU3PGpioInit+0x114>
40022bcc:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022bd0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022bd4:	e59f1050 	ldr	r1, [pc, #80]	; 40022c2c <CyU3PGpioInit+0x114>
40022bd8:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022bdc:	e1a00000 	nop			; (mov r0, r0)
40022be0:	e59f0044 	ldr	r0, [pc, #68]	; 40022c2c <CyU3PGpioInit+0x114>
40022be4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022be8:	e3100001 	tst	r0, #1
40022bec:	0afffffb 	beq	40022be0 <CyU3PGpioInit+0xc8>
40022bf0:	ea000007 	b	40022c14 <CyU3PGpioInit+0xfc>
40022bf4:	e59f1034 	ldr	r1, [pc, #52]	; 40022c30 <CyU3PGpioInit+0x118>
40022bf8:	e3a00004 	mov	r0, #4
40022bfc:	ebffc52b 	bl	400140b0 <CyU3PLppInit>
40022c00:	e1a05000 	mov	r5, r0
40022c04:	e3550000 	cmp	r5, #0
40022c08:	0a000001 	beq	40022c14 <CyU3PGpioInit+0xfc>
40022c0c:	e1a00005 	mov	r0, r5
40022c10:	eaffffc8 	b	40022b38 <CyU3PGpioInit+0x20>
40022c14:	e3a00001 	mov	r0, #1
40022c18:	e59f1008 	ldr	r1, [pc, #8]	; 40022c28 <CyU3PGpioInit+0x110>
40022c1c:	e5810000 	str	r0, [r1]
40022c20:	e3a00000 	mov	r0, #0
40022c24:	eaffffc3 	b	40022b38 <CyU3PGpioInit+0x20>
40022c28:	40030ed8 	.word	0x40030ed8
40022c2c:	e0001000 	.word	0xe0001000
40022c30:	40022c34 	.word	0x40022c34

Disassembly of section i.CyU3PGpioInt_Handler:

40022c34 <CyU3PGpioInt_Handler>:
40022c34:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022c38:	e3a06000 	mov	r6, #0
40022c3c:	e3a05000 	mov	r5, #0
40022c40:	e3a04001 	mov	r4, #1
40022c44:	ea000029 	b	40022cf0 <CyU3PGpioInt_Handler+0xbc>
40022c48:	e59f0198 	ldr	r0, [pc, #408]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022c4c:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022c50:	e1100004 	tst	r0, r4
40022c54:	0a000021 	beq	40022ce0 <CyU3PGpioInt_Handler+0xac>
40022c58:	e59f0188 	ldr	r0, [pc, #392]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022c5c:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022c60:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022c64:	e59f117c 	ldr	r1, [pc, #380]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022c68:	e7810205 	str	r0, [r1, r5, lsl #4]
40022c6c:	e59f0178 	ldr	r0, [pc, #376]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022c70:	e5900000 	ldr	r0, [r0]
40022c74:	e3500000 	cmp	r0, #0
40022c78:	0a000018 	beq	40022ce0 <CyU3PGpioInt_Handler+0xac>
40022c7c:	e1a06005 	mov	r6, r5
40022c80:	e1a07005 	mov	r7, r5
40022c84:	ea00000e 	b	40022cc4 <CyU3PGpioInt_Handler+0x90>
40022c88:	e1a00007 	mov	r0, r7
40022c8c:	ebffc097 	bl	40012ef0 <CyU3PIsGpioComplexIOConfigured>
40022c90:	e3500000 	cmp	r0, #0
40022c94:	0a000001 	beq	40022ca0 <CyU3PGpioInt_Handler+0x6c>
40022c98:	e1a06007 	mov	r6, r7
40022c9c:	ea00000a 	b	40022ccc <CyU3PGpioInt_Handler+0x98>
40022ca0:	e2870020 	add	r0, r7, #32
40022ca4:	ebffc091 	bl	40012ef0 <CyU3PIsGpioComplexIOConfigured>
40022ca8:	e3500000 	cmp	r0, #0
40022cac:	0a000002 	beq	40022cbc <CyU3PGpioInt_Handler+0x88>
40022cb0:	e2870020 	add	r0, r7, #32
40022cb4:	e20060ff 	and	r6, r0, #255	; 0xff
40022cb8:	ea000003 	b	40022ccc <CyU3PGpioInt_Handler+0x98>
40022cbc:	e2870008 	add	r0, r7, #8
40022cc0:	e20070ff 	and	r7, r0, #255	; 0xff
40022cc4:	e3570020 	cmp	r7, #32
40022cc8:	baffffee 	blt	40022c88 <CyU3PGpioInt_Handler+0x54>
40022ccc:	e1a00000 	nop			; (mov r0, r0)
40022cd0:	e1a00006 	mov	r0, r6
40022cd4:	e59f1110 	ldr	r1, [pc, #272]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022cd8:	e5911000 	ldr	r1, [r1]
40022cdc:	e12fff31 	blx	r1
40022ce0:	e59f0108 	ldr	r0, [pc, #264]	; 40022df0 <CyU3PGpioInt_Handler+0x1bc>
40022ce4:	e0004084 	and	r4, r0, r4, lsl #1
40022ce8:	e2850001 	add	r0, r5, #1
40022cec:	e20050ff 	and	r5, r0, #255	; 0xff
40022cf0:	e3540080 	cmp	r4, #128	; 0x80
40022cf4:	9affffd3 	bls	40022c48 <CyU3PGpioInt_Handler+0x14>
40022cf8:	e59f00e8 	ldr	r0, [pc, #232]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022cfc:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022d00:	e3500000 	cmp	r0, #0
40022d04:	0a000017 	beq	40022d68 <CyU3PGpioInt_Handler+0x134>
40022d08:	e3a05000 	mov	r5, #0
40022d0c:	ea000013 	b	40022d60 <CyU3PGpioInt_Handler+0x12c>
40022d10:	e59f00d0 	ldr	r0, [pc, #208]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022d14:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022d18:	e3a01001 	mov	r1, #1
40022d1c:	e1100511 	tst	r0, r1, lsl r5
40022d20:	0a00000c 	beq	40022d58 <CyU3PGpioInt_Handler+0x124>
40022d24:	e59f00c8 	ldr	r0, [pc, #200]	; 40022df4 <CyU3PGpioInt_Handler+0x1c0>
40022d28:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022d2c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022d30:	e59f10bc 	ldr	r1, [pc, #188]	; 40022df4 <CyU3PGpioInt_Handler+0x1c0>
40022d34:	e7810105 	str	r0, [r1, r5, lsl #2]
40022d38:	e59f00ac 	ldr	r0, [pc, #172]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022d3c:	e5900000 	ldr	r0, [r0]
40022d40:	e3500000 	cmp	r0, #0
40022d44:	0a000003 	beq	40022d58 <CyU3PGpioInt_Handler+0x124>
40022d48:	e1a00005 	mov	r0, r5
40022d4c:	e59f1098 	ldr	r1, [pc, #152]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022d50:	e5911000 	ldr	r1, [r1]
40022d54:	e12fff31 	blx	r1
40022d58:	e2850001 	add	r0, r5, #1
40022d5c:	e20050ff 	and	r5, r0, #255	; 0xff
40022d60:	e3550020 	cmp	r5, #32
40022d64:	baffffe9 	blt	40022d10 <CyU3PGpioInt_Handler+0xdc>
40022d68:	e59f0078 	ldr	r0, [pc, #120]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022d6c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d70:	e3500000 	cmp	r0, #0
40022d74:	0a00001a 	beq	40022de4 <CyU3PGpioInt_Handler+0x1b0>
40022d78:	e3a05000 	mov	r5, #0
40022d7c:	ea000016 	b	40022ddc <CyU3PGpioInt_Handler+0x1a8>
40022d80:	e59f0060 	ldr	r0, [pc, #96]	; 40022de8 <CyU3PGpioInt_Handler+0x1b4>
40022d84:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d88:	e3a01001 	mov	r1, #1
40022d8c:	e1100511 	tst	r0, r1, lsl r5
40022d90:	0a00000f 	beq	40022dd4 <CyU3PGpioInt_Handler+0x1a0>
40022d94:	e59f0058 	ldr	r0, [pc, #88]	; 40022df4 <CyU3PGpioInt_Handler+0x1c0>
40022d98:	e2851020 	add	r1, r5, #32
40022d9c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022da0:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022da4:	e59f0048 	ldr	r0, [pc, #72]	; 40022df4 <CyU3PGpioInt_Handler+0x1c0>
40022da8:	e2852020 	add	r2, r5, #32
40022dac:	e7801102 	str	r1, [r0, r2, lsl #2]
40022db0:	e59f0034 	ldr	r0, [pc, #52]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022db4:	e5900000 	ldr	r0, [r0]
40022db8:	e3500000 	cmp	r0, #0
40022dbc:	0a000004 	beq	40022dd4 <CyU3PGpioInt_Handler+0x1a0>
40022dc0:	e2851020 	add	r1, r5, #32
40022dc4:	e20100ff 	and	r0, r1, #255	; 0xff
40022dc8:	e59f101c 	ldr	r1, [pc, #28]	; 40022dec <CyU3PGpioInt_Handler+0x1b8>
40022dcc:	e5911000 	ldr	r1, [r1]
40022dd0:	e12fff31 	blx	r1
40022dd4:	e2850001 	add	r0, r5, #1
40022dd8:	e20050ff 	and	r5, r0, #255	; 0xff
40022ddc:	e3550020 	cmp	r5, #32
40022de0:	baffffe6 	blt	40022d80 <CyU3PGpioInt_Handler+0x14c>
40022de4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022de8:	e0001000 	.word	0xe0001000
40022dec:	40030edc 	.word	0x40030edc
40022df0:	0000ffff 	.word	0x0000ffff
40022df4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022df8 <CyU3PGpioSetSimpleConfig>:
40022df8:	e92d4070 	push	{r4, r5, r6, lr}
40022dfc:	e1a04000 	mov	r4, r0
40022e00:	e1a05001 	mov	r5, r1
40022e04:	e3a06000 	mov	r6, #0
40022e08:	e59f00d0 	ldr	r0, [pc, #208]	; 40022ee0 <CyU3PGpioSetSimpleConfig+0xe8>
40022e0c:	e5900000 	ldr	r0, [r0]
40022e10:	e3500000 	cmp	r0, #0
40022e14:	1a000001 	bne	40022e20 <CyU3PGpioSetSimpleConfig+0x28>
40022e18:	e3a00042 	mov	r0, #66	; 0x42
40022e1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022e20:	e1a00004 	mov	r0, r4
40022e24:	ebffc03d 	bl	40012f20 <CyU3PIsGpioValid>
40022e28:	e3500000 	cmp	r0, #0
40022e2c:	1a000001 	bne	40022e38 <CyU3PGpioSetSimpleConfig+0x40>
40022e30:	e3a00040 	mov	r0, #64	; 0x40
40022e34:	eafffff8 	b	40022e1c <CyU3PGpioSetSimpleConfig+0x24>
40022e38:	e3550000 	cmp	r5, #0
40022e3c:	1a000001 	bne	40022e48 <CyU3PGpioSetSimpleConfig+0x50>
40022e40:	e3a00041 	mov	r0, #65	; 0x41
40022e44:	eafffff4 	b	40022e1c <CyU3PGpioSetSimpleConfig+0x24>
40022e48:	e5d50010 	ldrb	r0, [r5, #16]
40022e4c:	e3500005 	cmp	r0, #5
40022e50:	da000001 	ble	40022e5c <CyU3PGpioSetSimpleConfig+0x64>
40022e54:	e3a00040 	mov	r0, #64	; 0x40
40022e58:	eaffffef 	b	40022e1c <CyU3PGpioSetSimpleConfig+0x24>
40022e5c:	e1a00004 	mov	r0, r4
40022e60:	ebffc028 	bl	40012f08 <CyU3PIsGpioSimpleIOConfigured>
40022e64:	e3500000 	cmp	r0, #0
40022e68:	1a000001 	bne	40022e74 <CyU3PGpioSetSimpleConfig+0x7c>
40022e6c:	e3a00044 	mov	r0, #68	; 0x44
40022e70:	eaffffe9 	b	40022e1c <CyU3PGpioSetSimpleConfig+0x24>
40022e74:	e595000c 	ldr	r0, [r5, #12]
40022e78:	e3500000 	cmp	r0, #0
40022e7c:	0a000000 	beq	40022e84 <CyU3PGpioSetSimpleConfig+0x8c>
40022e80:	e3866040 	orr	r6, r6, #64	; 0x40
40022e84:	e5950004 	ldr	r0, [r5, #4]
40022e88:	e3500000 	cmp	r0, #0
40022e8c:	0a000000 	beq	40022e94 <CyU3PGpioSetSimpleConfig+0x9c>
40022e90:	e3866010 	orr	r6, r6, #16
40022e94:	e5950008 	ldr	r0, [r5, #8]
40022e98:	e3500000 	cmp	r0, #0
40022e9c:	0a000000 	beq	40022ea4 <CyU3PGpioSetSimpleConfig+0xac>
40022ea0:	e3866020 	orr	r6, r6, #32
40022ea4:	e5950000 	ldr	r0, [r5]
40022ea8:	e3500000 	cmp	r0, #0
40022eac:	0a000000 	beq	40022eb4 <CyU3PGpioSetSimpleConfig+0xbc>
40022eb0:	e3866001 	orr	r6, r6, #1
40022eb4:	e5d50010 	ldrb	r0, [r5, #16]
40022eb8:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022ebc:	e0010c00 	and	r0, r1, r0, lsl #24
40022ec0:	e1866000 	orr	r6, r6, r0
40022ec4:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022ec8:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022ecc:	e59f0010 	ldr	r0, [pc, #16]	; 40022ee4 <CyU3PGpioSetSimpleConfig+0xec>
40022ed0:	e7806104 	str	r6, [r0, r4, lsl #2]
40022ed4:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022ed8:	e3a00000 	mov	r0, #0
40022edc:	eaffffce 	b	40022e1c <CyU3PGpioSetSimpleConfig+0x24>
40022ee0:	40030ed8 	.word	0x40030ed8
40022ee4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022ee8 <CyU3PGpioSetValue>:
40022ee8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022eec:	e1a04000 	mov	r4, r0
40022ef0:	e1a05001 	mov	r5, r1
40022ef4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022fb4 <CyU3PGpioSetValue+0xcc>
40022ef8:	e5900000 	ldr	r0, [r0]
40022efc:	e3500000 	cmp	r0, #0
40022f00:	1a000001 	bne	40022f0c <CyU3PGpioSetValue+0x24>
40022f04:	e3a00042 	mov	r0, #66	; 0x42
40022f08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022f0c:	e1a00004 	mov	r0, r4
40022f10:	ebffc002 	bl	40012f20 <CyU3PIsGpioValid>
40022f14:	e3500000 	cmp	r0, #0
40022f18:	1a000001 	bne	40022f24 <CyU3PGpioSetValue+0x3c>
40022f1c:	e3a00040 	mov	r0, #64	; 0x40
40022f20:	eafffff8 	b	40022f08 <CyU3PGpioSetValue+0x20>
40022f24:	e1a00004 	mov	r0, r4
40022f28:	ebffbff6 	bl	40012f08 <CyU3PIsGpioSimpleIOConfigured>
40022f2c:	e3500000 	cmp	r0, #0
40022f30:	0a000002 	beq	40022f40 <CyU3PGpioSetValue+0x58>
40022f34:	e59f007c 	ldr	r0, [pc, #124]	; 40022fb8 <CyU3PGpioSetValue+0xd0>
40022f38:	e0807104 	add	r7, r0, r4, lsl #2
40022f3c:	ea00000d 	b	40022f78 <CyU3PGpioSetValue+0x90>
40022f40:	e1a00004 	mov	r0, r4
40022f44:	ebffbfe9 	bl	40012ef0 <CyU3PIsGpioComplexIOConfigured>
40022f48:	e3500000 	cmp	r0, #0
40022f4c:	0a000007 	beq	40022f70 <CyU3PGpioSetValue+0x88>
40022f50:	e1a00004 	mov	r0, r4
40022f54:	e1a01fc4 	asr	r1, r4, #31
40022f58:	e0841ea1 	add	r1, r4, r1, lsr #29
40022f5c:	e1a011c1 	asr	r1, r1, #3
40022f60:	e0441181 	sub	r1, r4, r1, lsl #3
40022f64:	e59f2050 	ldr	r2, [pc, #80]	; 40022fbc <CyU3PGpioSetValue+0xd4>
40022f68:	e0827201 	add	r7, r2, r1, lsl #4
40022f6c:	ea000001 	b	40022f78 <CyU3PGpioSetValue+0x90>
40022f70:	e3a00044 	mov	r0, #68	; 0x44
40022f74:	eaffffe3 	b	40022f08 <CyU3PGpioSetValue+0x20>
40022f78:	e5970000 	ldr	r0, [r7]
40022f7c:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022f80:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022f84:	1a000001 	bne	40022f90 <CyU3PGpioSetValue+0xa8>
40022f88:	e3a00044 	mov	r0, #68	; 0x44
40022f8c:	eaffffdd 	b	40022f08 <CyU3PGpioSetValue+0x20>
40022f90:	e3550000 	cmp	r5, #0
40022f94:	0a000001 	beq	40022fa0 <CyU3PGpioSetValue+0xb8>
40022f98:	e3866001 	orr	r6, r6, #1
40022f9c:	ea000000 	b	40022fa4 <CyU3PGpioSetValue+0xbc>
40022fa0:	e3c66001 	bic	r6, r6, #1
40022fa4:	e5876000 	str	r6, [r7]
40022fa8:	e5976000 	ldr	r6, [r7]
40022fac:	e3a00000 	mov	r0, #0
40022fb0:	eaffffd4 	b	40022f08 <CyU3PGpioSetValue+0x20>
40022fb4:	40030ed8 	.word	0x40030ed8
40022fb8:	e0001100 	.word	0xe0001100
40022fbc:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022fc0 <CyU3PGpioSimpleGetValue>:
40022fc0:	e92d4070 	push	{r4, r5, r6, lr}
40022fc4:	e1a04000 	mov	r4, r0
40022fc8:	e1a06001 	mov	r6, r1
40022fcc:	e59f0068 	ldr	r0, [pc, #104]	; 4002303c <CyU3PGpioSimpleGetValue+0x7c>
40022fd0:	e5900000 	ldr	r0, [r0]
40022fd4:	e3500000 	cmp	r0, #0
40022fd8:	1a000001 	bne	40022fe4 <CyU3PGpioSimpleGetValue+0x24>
40022fdc:	e3a00042 	mov	r0, #66	; 0x42
40022fe0:	e8bd8070 	pop	{r4, r5, r6, pc}
40022fe4:	e1a00004 	mov	r0, r4
40022fe8:	ebffbfcc 	bl	40012f20 <CyU3PIsGpioValid>
40022fec:	e3500000 	cmp	r0, #0
40022ff0:	1a000001 	bne	40022ffc <CyU3PGpioSimpleGetValue+0x3c>
40022ff4:	e3a00040 	mov	r0, #64	; 0x40
40022ff8:	eafffff8 	b	40022fe0 <CyU3PGpioSimpleGetValue+0x20>
40022ffc:	e3560000 	cmp	r6, #0
40023000:	1a000001 	bne	4002300c <CyU3PGpioSimpleGetValue+0x4c>
40023004:	e3a00041 	mov	r0, #65	; 0x41
40023008:	eafffff4 	b	40022fe0 <CyU3PGpioSimpleGetValue+0x20>
4002300c:	e59f002c 	ldr	r0, [pc, #44]	; 40023040 <CyU3PGpioSimpleGetValue+0x80>
40023010:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40023014:	e3150040 	tst	r5, #64	; 0x40
40023018:	0a000003 	beq	4002302c <CyU3PGpioSimpleGetValue+0x6c>
4002301c:	e2050002 	and	r0, r5, #2
40023020:	e1a000a0 	lsr	r0, r0, #1
40023024:	e5860000 	str	r0, [r6]
40023028:	ea000001 	b	40023034 <CyU3PGpioSimpleGetValue+0x74>
4002302c:	e2050001 	and	r0, r5, #1
40023030:	e5860000 	str	r0, [r6]
40023034:	e3a00000 	mov	r0, #0
40023038:	eaffffe8 	b	40022fe0 <CyU3PGpioSimpleGetValue+0x20>
4002303c:	40030ed8 	.word	0x40030ed8
40023040:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40023044 <CyU3PRegisterGpioCallBack>:
40023044:	e59f1004 	ldr	r1, [pc, #4]	; 40023050 <CyU3PRegisterGpioCallBack+0xc>
40023048:	e5810000 	str	r0, [r1]
4002304c:	e12fff1e 	bx	lr
40023050:	40030edc 	.word	0x40030edc

Disassembly of section i.CyU3PRegisterUartCallBack:

40023054 <CyU3PRegisterUartCallBack>:
40023054:	e59f1004 	ldr	r1, [pc, #4]	; 40023060 <CyU3PRegisterUartCallBack+0xc>
40023058:	e5810000 	str	r0, [r1]
4002305c:	e12fff1e 	bx	lr
40023060:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartGetLock:

40023064 <CyU3PUartGetLock>:
40023064:	e92d4010 	push	{r4, lr}
40023068:	e3a04000 	mov	r4, #0
4002306c:	e59f0044 	ldr	r0, [pc, #68]	; 400230b8 <CyU3PUartGetLock+0x54>
40023070:	e5900000 	ldr	r0, [r0]
40023074:	e3500000 	cmp	r0, #0
40023078:	1a000001 	bne	40023084 <CyU3PUartGetLock+0x20>
4002307c:	e3a00044 	mov	r0, #68	; 0x44
40023080:	e8bd8010 	pop	{r4, pc}
40023084:	ebff9679 	bl	40008a70 <_tx_thread_identify>
40023088:	e3500000 	cmp	r0, #0
4002308c:	0a000000 	beq	40023094 <CyU3PUartGetLock+0x30>
40023090:	e3e04000 	mvn	r4, #0
40023094:	e1a01004 	mov	r1, r4
40023098:	e59f001c 	ldr	r0, [pc, #28]	; 400230bc <CyU3PUartGetLock+0x58>
4002309c:	ebff9c88 	bl	4000a2c4 <_txe_mutex_get>
400230a0:	e3500000 	cmp	r0, #0
400230a4:	0a000001 	beq	400230b0 <CyU3PUartGetLock+0x4c>
400230a8:	e3a0001d 	mov	r0, #29
400230ac:	eafffff3 	b	40023080 <CyU3PUartGetLock+0x1c>
400230b0:	e3a00000 	mov	r0, #0
400230b4:	eafffff1 	b	40023080 <CyU3PUartGetLock+0x1c>
400230b8:	40030ee8 	.word	0x40030ee8
400230bc:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

400230c0 <CyU3PUartInit>:
400230c0:	e92d4010 	push	{r4, lr}
400230c4:	e3a00003 	mov	r0, #3
400230c8:	ebffbf9b 	bl	40012f3c <CyU3PIsLppIOConfigured>
400230cc:	e3500000 	cmp	r0, #0
400230d0:	1a000001 	bne	400230dc <CyU3PUartInit+0x1c>
400230d4:	e3a00044 	mov	r0, #68	; 0x44
400230d8:	e8bd8010 	pop	{r4, pc}
400230dc:	e59f00b8 	ldr	r0, [pc, #184]	; 4002319c <CyU3PUartInit+0xdc>
400230e0:	e5900000 	ldr	r0, [r0]
400230e4:	e3500000 	cmp	r0, #0
400230e8:	0a000001 	beq	400230f4 <CyU3PUartInit+0x34>
400230ec:	e3a00043 	mov	r0, #67	; 0x43
400230f0:	eafffff8 	b	400230d8 <CyU3PUartInit+0x18>
400230f4:	e3a03038 	mov	r3, #56	; 0x38
400230f8:	e3a02000 	mov	r2, #0
400230fc:	e1a01002 	mov	r1, r2
40023100:	e59f0098 	ldr	r0, [pc, #152]	; 400231a0 <CyU3PUartInit+0xe0>
40023104:	ebff9bf0 	bl	4000a0cc <_txe_mutex_create>
40023108:	e3a00d96 	mov	r0, #9600	; 0x2580
4002310c:	ebffc505 	bl	40014528 <CyU3PUartSetClock>
40023110:	e1a04000 	mov	r4, r0
40023114:	e3540000 	cmp	r4, #0
40023118:	0a000001 	beq	40023124 <CyU3PUartInit+0x64>
4002311c:	e1a00004 	mov	r0, r4
40023120:	eaffffec 	b	400230d8 <CyU3PUartInit+0x18>
40023124:	e59f1078 	ldr	r1, [pc, #120]	; 400231a4 <CyU3PUartInit+0xe4>
40023128:	e3a00003 	mov	r0, #3
4002312c:	ebffc3df 	bl	400140b0 <CyU3PLppInit>
40023130:	e1a04000 	mov	r4, r0
40023134:	e3540000 	cmp	r4, #0
40023138:	0a000001 	beq	40023144 <CyU3PUartInit+0x84>
4002313c:	e1a00004 	mov	r0, r4
40023140:	eaffffe4 	b	400230d8 <CyU3PUartInit+0x18>
40023144:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023148:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
4002314c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023150:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023154:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023158:	e3a0000a 	mov	r0, #10
4002315c:	ebffc1d7 	bl	400138c0 <CyU3PBusyWait>
40023160:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023164:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023168:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002316c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023170:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023174:	e1a00000 	nop			; (mov r0, r0)
40023178:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002317c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023180:	e3100001 	tst	r0, #1
40023184:	0afffffb 	beq	40023178 <CyU3PUartInit+0xb8>
40023188:	e3a00001 	mov	r0, #1
4002318c:	e59f1008 	ldr	r1, [pc, #8]	; 4002319c <CyU3PUartInit+0xdc>
40023190:	e5810000 	str	r0, [r1]
40023194:	e3a00000 	mov	r0, #0
40023198:	eaffffce 	b	400230d8 <CyU3PUartInit+0x18>
4002319c:	40030ee8 	.word	0x40030ee8
400231a0:	40032e1c 	.word	0x40032e1c
400231a4:	400231a8 	.word	0x400231a8

Disassembly of section i.CyU3PUartInt_ThreadHandler:

400231a8 <CyU3PUartInt_ThreadHandler>:
400231a8:	e92d4070 	push	{r4, r5, r6, lr}
400231ac:	ebffffac 	bl	40023064 <CyU3PUartGetLock>
400231b0:	e1a05000 	mov	r5, r0
400231b4:	e3550000 	cmp	r5, #0
400231b8:	0a000000 	beq	400231c0 <CyU3PUartInt_ThreadHandler+0x18>
400231bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400231c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c4:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
400231c8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231cc:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
400231d0:	e0004001 	and	r4, r0, r1
400231d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231d8:	e5804808 	str	r4, [r0, #2056]	; 0x808
400231dc:	e59f0078 	ldr	r0, [pc, #120]	; 4002325c <CyU3PUartInt_ThreadHandler+0xb4>
400231e0:	e5900000 	ldr	r0, [r0]
400231e4:	e3500000 	cmp	r0, #0
400231e8:	1a000001 	bne	400231f4 <CyU3PUartInt_ThreadHandler+0x4c>
400231ec:	eb00001b 	bl	40023260 <CyU3PUartReleaseLock>
400231f0:	eafffff1 	b	400231bc <CyU3PUartInt_ThreadHandler+0x14>
400231f4:	e3140001 	tst	r4, #1
400231f8:	0a000004 	beq	40023210 <CyU3PUartInt_ThreadHandler+0x68>
400231fc:	e3a01000 	mov	r1, #0
40023200:	e1a00001 	mov	r0, r1
40023204:	e59f2050 	ldr	r2, [pc, #80]	; 4002325c <CyU3PUartInt_ThreadHandler+0xb4>
40023208:	e5922000 	ldr	r2, [r2]
4002320c:	e12fff32 	blx	r2
40023210:	e3140008 	tst	r4, #8
40023214:	0a000004 	beq	4002322c <CyU3PUartInt_ThreadHandler+0x84>
40023218:	e3a01000 	mov	r1, #0
4002321c:	e3a00001 	mov	r0, #1
40023220:	e59f2034 	ldr	r2, [pc, #52]	; 4002325c <CyU3PUartInt_ThreadHandler+0xb4>
40023224:	e5922000 	ldr	r2, [r2]
40023228:	e12fff32 	blx	r2
4002322c:	e3140c02 	tst	r4, #512	; 0x200
40023230:	0a000007 	beq	40023254 <CyU3PUartInt_ThreadHandler+0xac>
40023234:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023238:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
4002323c:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023240:	e1a01c20 	lsr	r1, r0, #24
40023244:	e3a00002 	mov	r0, #2
40023248:	e59f200c 	ldr	r2, [pc, #12]	; 4002325c <CyU3PUartInt_ThreadHandler+0xb4>
4002324c:	e5922000 	ldr	r2, [r2]
40023250:	e12fff32 	blx	r2
40023254:	eb000001 	bl	40023260 <CyU3PUartReleaseLock>
40023258:	eaffffd7 	b	400231bc <CyU3PUartInt_ThreadHandler+0x14>
4002325c:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartReleaseLock:

40023260 <CyU3PUartReleaseLock>:
40023260:	e92d4010 	push	{r4, lr}
40023264:	e59f0030 	ldr	r0, [pc, #48]	; 4002329c <CyU3PUartReleaseLock+0x3c>
40023268:	e5900000 	ldr	r0, [r0]
4002326c:	e3500000 	cmp	r0, #0
40023270:	1a000001 	bne	4002327c <CyU3PUartReleaseLock+0x1c>
40023274:	e3a00044 	mov	r0, #68	; 0x44
40023278:	e8bd8010 	pop	{r4, pc}
4002327c:	e59f001c 	ldr	r0, [pc, #28]	; 400232a0 <CyU3PUartReleaseLock+0x40>
40023280:	ebff9c44 	bl	4000a398 <_txe_mutex_put>
40023284:	e3500000 	cmp	r0, #0
40023288:	0a000001 	beq	40023294 <CyU3PUartReleaseLock+0x34>
4002328c:	e3a0001d 	mov	r0, #29
40023290:	eafffff8 	b	40023278 <CyU3PUartReleaseLock+0x18>
40023294:	e3a00000 	mov	r0, #0
40023298:	eafffff6 	b	40023278 <CyU3PUartReleaseLock+0x18>
4002329c:	40030ee8 	.word	0x40030ee8
400232a0:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

400232a4 <CyU3PUartSetConfig>:
400232a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400232a8:	e1a04000 	mov	r4, r0
400232ac:	e1a05001 	mov	r5, r1
400232b0:	e3a07000 	mov	r7, #0
400232b4:	e59f01f0 	ldr	r0, [pc, #496]	; 400234ac <CyU3PUartSetConfig+0x208>
400232b8:	e5900000 	ldr	r0, [r0]
400232bc:	e3500000 	cmp	r0, #0
400232c0:	1a000001 	bne	400232cc <CyU3PUartSetConfig+0x28>
400232c4:	e3a00042 	mov	r0, #66	; 0x42
400232c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400232cc:	e3540000 	cmp	r4, #0
400232d0:	1a000001 	bne	400232dc <CyU3PUartSetConfig+0x38>
400232d4:	e3a00041 	mov	r0, #65	; 0x41
400232d8:	eafffffa 	b	400232c8 <CyU3PUartSetConfig+0x24>
400232dc:	e5940004 	ldr	r0, [r4, #4]
400232e0:	e5941000 	ldr	r1, [r4]
400232e4:	e1900001 	orrs	r0, r0, r1
400232e8:	1a000001 	bne	400232f4 <CyU3PUartSetConfig+0x50>
400232ec:	e3a00040 	mov	r0, #64	; 0x40
400232f0:	eafffff4 	b	400232c8 <CyU3PUartSetConfig+0x24>
400232f4:	e5d40015 	ldrb	r0, [r4, #21]
400232f8:	e3500003 	cmp	r0, #3
400232fc:	ba000001 	blt	40023308 <CyU3PUartSetConfig+0x64>
40023300:	e3a00040 	mov	r0, #64	; 0x40
40023304:	eaffffef 	b	400232c8 <CyU3PUartSetConfig+0x24>
40023308:	e5d40014 	ldrb	r0, [r4, #20]
4002330c:	e3500001 	cmp	r0, #1
40023310:	0a000004 	beq	40023328 <CyU3PUartSetConfig+0x84>
40023314:	e5d40014 	ldrb	r0, [r4, #20]
40023318:	e3500002 	cmp	r0, #2
4002331c:	0a000001 	beq	40023328 <CyU3PUartSetConfig+0x84>
40023320:	e3a00040 	mov	r0, #64	; 0x40
40023324:	eaffffe7 	b	400232c8 <CyU3PUartSetConfig+0x24>
40023328:	e594000c 	ldr	r0, [r4, #12]
4002332c:	e3500000 	cmp	r0, #0
40023330:	1a000003 	bne	40023344 <CyU3PUartSetConfig+0xa0>
40023334:	e3550000 	cmp	r5, #0
40023338:	0a000001 	beq	40023344 <CyU3PUartSetConfig+0xa0>
4002333c:	e3a00040 	mov	r0, #64	; 0x40
40023340:	eaffffe0 	b	400232c8 <CyU3PUartSetConfig+0x24>
40023344:	ebffff46 	bl	40023064 <CyU3PUartGetLock>
40023348:	e1a06000 	mov	r6, r0
4002334c:	e3560000 	cmp	r6, #0
40023350:	0a000001 	beq	4002335c <CyU3PUartSetConfig+0xb8>
40023354:	e3a0001d 	mov	r0, #29
40023358:	eaffffda 	b	400232c8 <CyU3PUartSetConfig+0x24>
4002335c:	e5940010 	ldr	r0, [r4, #16]
40023360:	ebffc470 	bl	40014528 <CyU3PUartSetClock>
40023364:	e1a06000 	mov	r6, r0
40023368:	e3560000 	cmp	r6, #0
4002336c:	0a000002 	beq	4002337c <CyU3PUartSetConfig+0xd8>
40023370:	ebffffba 	bl	40023260 <CyU3PUartReleaseLock>
40023374:	e1a00006 	mov	r0, r6
40023378:	eaffffd2 	b	400232c8 <CyU3PUartSetConfig+0x24>
4002337c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023380:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023384:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023388:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002338c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023390:	e5940004 	ldr	r0, [r4, #4]
40023394:	e3500000 	cmp	r0, #0
40023398:	0a000001 	beq	400233a4 <CyU3PUartSetConfig+0x100>
4002339c:	e3877a01 	orr	r7, r7, #4096	; 0x1000
400233a0:	e3877001 	orr	r7, r7, #1
400233a4:	e5940000 	ldr	r0, [r4]
400233a8:	e3500000 	cmp	r0, #0
400233ac:	0a000000 	beq	400233b4 <CyU3PUartSetConfig+0x110>
400233b0:	e3877002 	orr	r7, r7, #2
400233b4:	e5940008 	ldr	r0, [r4, #8]
400233b8:	e3500000 	cmp	r0, #0
400233bc:	0a000000 	beq	400233c4 <CyU3PUartSetConfig+0x120>
400233c0:	e3877a06 	orr	r7, r7, #24576	; 0x6000
400233c4:	e594000c 	ldr	r0, [r4, #12]
400233c8:	e3500000 	cmp	r0, #0
400233cc:	0a000004 	beq	400233e4 <CyU3PUartSetConfig+0x140>
400233d0:	e3877b01 	orr	r7, r7, #1024	; 0x400
400233d4:	e3a00001 	mov	r0, #1
400233d8:	e59f10d0 	ldr	r1, [pc, #208]	; 400234b0 <CyU3PUartSetConfig+0x20c>
400233dc:	e5810000 	str	r0, [r1]
400233e0:	ea000002 	b	400233f0 <CyU3PUartSetConfig+0x14c>
400233e4:	e3a00000 	mov	r0, #0
400233e8:	e59f10c0 	ldr	r1, [pc, #192]	; 400234b0 <CyU3PUartSetConfig+0x20c>
400233ec:	e5810000 	str	r0, [r1]
400233f0:	e5d40014 	ldrb	r0, [r4, #20]
400233f4:	e3a01c03 	mov	r1, #768	; 0x300
400233f8:	e0010400 	and	r0, r1, r0, lsl #8
400233fc:	e1877000 	orr	r7, r7, r0
40023400:	e5d40015 	ldrb	r0, [r4, #21]
40023404:	e3500001 	cmp	r0, #1
40023408:	0a000002 	beq	40023418 <CyU3PUartSetConfig+0x174>
4002340c:	e3500002 	cmp	r0, #2
40023410:	1a000006 	bne	40023430 <CyU3PUartSetConfig+0x18c>
40023414:	ea000002 	b	40023424 <CyU3PUartSetConfig+0x180>
40023418:	e1a00000 	nop			; (mov r0, r0)
4002341c:	e3877008 	orr	r7, r7, #8
40023420:	ea000004 	b	40023438 <CyU3PUartSetConfig+0x194>
40023424:	e1a00000 	nop			; (mov r0, r0)
40023428:	e3877018 	orr	r7, r7, #24
4002342c:	ea000001 	b	40023438 <CyU3PUartSetConfig+0x194>
40023430:	e1a00000 	nop			; (mov r0, r0)
40023434:	e1a00000 	nop			; (mov r0, r0)
40023438:	e1a00000 	nop			; (mov r0, r0)
4002343c:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023440:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023444:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023448:	e59f0064 	ldr	r0, [pc, #100]	; 400234b4 <CyU3PUartSetConfig+0x210>
4002344c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023450:	e5810818 	str	r0, [r1, #2072]	; 0x818
40023454:	e1a00005 	mov	r0, r5
40023458:	ebfffefd 	bl	40023054 <CyU3PRegisterUartCallBack>
4002345c:	e3550000 	cmp	r5, #0
40023460:	0a000003 	beq	40023474 <CyU3PUartSetConfig+0x1d0>
40023464:	e59f004c 	ldr	r0, [pc, #76]	; 400234b8 <CyU3PUartSetConfig+0x214>
40023468:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002346c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023470:	ea000002 	b	40023480 <CyU3PUartSetConfig+0x1dc>
40023474:	e3a00000 	mov	r0, #0
40023478:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002347c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023480:	e3a00001 	mov	r0, #1
40023484:	e59f1030 	ldr	r1, [pc, #48]	; 400234bc <CyU3PUartSetConfig+0x218>
40023488:	e5810000 	str	r0, [r1]
4002348c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023490:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023494:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023498:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002349c:	e5810800 	str	r0, [r1, #2048]	; 0x800
400234a0:	ebffff6e 	bl	40023260 <CyU3PUartReleaseLock>
400234a4:	e3a00000 	mov	r0, #0
400234a8:	eaffff86 	b	400232c8 <CyU3PUartSetConfig+0x24>
400234ac:	40030ee8 	.word	0x40030ee8
400234b0:	40030ee0 	.word	0x40030ee0
400234b4:	00000603 	.word	0x00000603
400234b8:	00000309 	.word	0x00000309
400234bc:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PUartTxSetBlockXfer:

400234c0 <CyU3PUartTxSetBlockXfer>:
400234c0:	e92d4070 	push	{r4, r5, r6, lr}
400234c4:	e1a05000 	mov	r5, r0
400234c8:	e59f003c 	ldr	r0, [pc, #60]	; 4002350c <CyU3PUartTxSetBlockXfer+0x4c>
400234cc:	e5900000 	ldr	r0, [r0]
400234d0:	e3500000 	cmp	r0, #0
400234d4:	1a000001 	bne	400234e0 <CyU3PUartTxSetBlockXfer+0x20>
400234d8:	e3a00044 	mov	r0, #68	; 0x44
400234dc:	e8bd8070 	pop	{r4, r5, r6, pc}
400234e0:	ebfffedf 	bl	40023064 <CyU3PUartGetLock>
400234e4:	e1a04000 	mov	r4, r0
400234e8:	e3540000 	cmp	r4, #0
400234ec:	0a000001 	beq	400234f8 <CyU3PUartTxSetBlockXfer+0x38>
400234f0:	e1a00004 	mov	r0, r4
400234f4:	eafffff8 	b	400234dc <CyU3PUartTxSetBlockXfer+0x1c>
400234f8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234fc:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023500:	ebffff56 	bl	40023260 <CyU3PUartReleaseLock>
40023504:	e3a00000 	mov	r0, #0
40023508:	eafffff3 	b	400234dc <CyU3PUartTxSetBlockXfer+0x1c>
4002350c:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PI2cErrorRecovery:

40023510 <CyU3PI2cErrorRecovery>:
40023510:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023514:	e1a04000 	mov	r4, r0
40023518:	e3a07000 	mov	r7, #0
4002351c:	e3a08000 	mov	r8, #0
40023520:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023524:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023528:	e59f1164 	ldr	r1, [pc, #356]	; 40023694 <CyU3PI2cErrorRecovery+0x184>
4002352c:	e5810000 	str	r0, [r1]
40023530:	e59f5160 	ldr	r5, [pc, #352]	; 40023698 <CyU3PI2cErrorRecovery+0x188>
40023534:	e1a00000 	nop			; (mov r0, r0)
40023538:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002353c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023540:	e3100201 	tst	r0, #268435456	; 0x10000000
40023544:	0a000002 	beq	40023554 <CyU3PI2cErrorRecovery+0x44>
40023548:	e1b00005 	movs	r0, r5
4002354c:	e2455001 	sub	r5, r5, #1
40023550:	1afffff8 	bne	40023538 <CyU3PI2cErrorRecovery+0x28>
40023554:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023558:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
4002355c:	e3a00000 	mov	r0, #0
40023560:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023564:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023568:	e3e00000 	mvn	r0, #0
4002356c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023570:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023574:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023578:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4002357c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023580:	e3a00005 	mov	r0, #5
40023584:	ebffc0cd 	bl	400138c0 <CyU3PBusyWait>
40023588:	e3540000 	cmp	r4, #0
4002358c:	0a000032 	beq	4002365c <CyU3PI2cErrorRecovery+0x14c>
40023590:	e3a00000 	mov	r0, #0
40023594:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023598:	e5810438 	str	r0, [r1, #1080]	; 0x438
4002359c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235a0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235a4:	e3100008 	tst	r0, #8
400235a8:	1a000000 	bne	400235b0 <CyU3PI2cErrorRecovery+0xa0>
400235ac:	e3a07101 	mov	r7, #1073741824	; 0x40000000
400235b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235b4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235b8:	e3100002 	tst	r0, #2
400235bc:	0a000000 	beq	400235c4 <CyU3PI2cErrorRecovery+0xb4>
400235c0:	e3a07202 	mov	r7, #536870912	; 0x20000000
400235c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235c8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400235cc:	e1800007 	orr	r0, r0, r7
400235d0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400235d4:	e5810400 	str	r0, [r1, #1024]	; 0x400
400235d8:	e1e05741 	mvn	r5, r1, asr #14
400235dc:	ea000004 	b	400235f4 <CyU3PI2cErrorRecovery+0xe4>
400235e0:	e1b00005 	movs	r0, r5
400235e4:	e2455001 	sub	r5, r5, #1
400235e8:	1a000001 	bne	400235f4 <CyU3PI2cErrorRecovery+0xe4>
400235ec:	e3a08054 	mov	r8, #84	; 0x54
400235f0:	ea000003 	b	40023604 <CyU3PI2cErrorRecovery+0xf4>
400235f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235f8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235fc:	e3100008 	tst	r0, #8
40023600:	0afffff6 	beq	400235e0 <CyU3PI2cErrorRecovery+0xd0>
40023604:	e1a00000 	nop			; (mov r0, r0)
40023608:	e3580000 	cmp	r8, #0
4002360c:	1a00000b 	bne	40023640 <CyU3PI2cErrorRecovery+0x130>
40023610:	e59f5080 	ldr	r5, [pc, #128]	; 40023698 <CyU3PI2cErrorRecovery+0x188>
40023614:	ea000004 	b	4002362c <CyU3PI2cErrorRecovery+0x11c>
40023618:	e1b00005 	movs	r0, r5
4002361c:	e2455001 	sub	r5, r5, #1
40023620:	1a000001 	bne	4002362c <CyU3PI2cErrorRecovery+0x11c>
40023624:	e3a08054 	mov	r8, #84	; 0x54
40023628:	ea000003 	b	4002363c <CyU3PI2cErrorRecovery+0x12c>
4002362c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023630:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023634:	e3100002 	tst	r0, #2
40023638:	1afffff6 	bne	40023618 <CyU3PI2cErrorRecovery+0x108>
4002363c:	e1a00000 	nop			; (mov r0, r0)
40023640:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023644:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023648:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
4002364c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023650:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023654:	e3a00001 	mov	r0, #1
40023658:	ebffc098 	bl	400138c0 <CyU3PBusyWait>
4002365c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023660:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023664:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023668:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002366c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023670:	e3a00005 	mov	r0, #5
40023674:	ebffc091 	bl	400138c0 <CyU3PBusyWait>
40023678:	e3e00000 	mvn	r0, #0
4002367c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023680:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023684:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023688:	e580640c 	str	r6, [r0, #1036]	; 0x40c
4002368c:	e1a00008 	mov	r0, r8
40023690:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023694:	40030f00 	.word	0x40030f00
40023698:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

4002369c <CyU3PI2cGetLock>:
4002369c:	e92d4010 	push	{r4, lr}
400236a0:	e3a04000 	mov	r4, #0
400236a4:	e59f0044 	ldr	r0, [pc, #68]	; 400236f0 <CyU3PI2cGetLock+0x54>
400236a8:	e5900000 	ldr	r0, [r0]
400236ac:	e3500000 	cmp	r0, #0
400236b0:	1a000001 	bne	400236bc <CyU3PI2cGetLock+0x20>
400236b4:	e3a00044 	mov	r0, #68	; 0x44
400236b8:	e8bd8010 	pop	{r4, pc}
400236bc:	ebff94eb 	bl	40008a70 <_tx_thread_identify>
400236c0:	e3500000 	cmp	r0, #0
400236c4:	0a000000 	beq	400236cc <CyU3PI2cGetLock+0x30>
400236c8:	e3e04000 	mvn	r4, #0
400236cc:	e1a01004 	mov	r1, r4
400236d0:	e59f001c 	ldr	r0, [pc, #28]	; 400236f4 <CyU3PI2cGetLock+0x58>
400236d4:	ebff9afa 	bl	4000a2c4 <_txe_mutex_get>
400236d8:	e3500000 	cmp	r0, #0
400236dc:	0a000001 	beq	400236e8 <CyU3PI2cGetLock+0x4c>
400236e0:	e3a0001d 	mov	r0, #29
400236e4:	eafffff3 	b	400236b8 <CyU3PI2cGetLock+0x1c>
400236e8:	e3a00000 	mov	r0, #0
400236ec:	eafffff1 	b	400236b8 <CyU3PI2cGetLock+0x1c>
400236f0:	40030ef8 	.word	0x40030ef8
400236f4:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

400236f8 <CyU3PI2cInit>:
400236f8:	e92d4010 	push	{r4, lr}
400236fc:	e3a00000 	mov	r0, #0
40023700:	ebffbe0d 	bl	40012f3c <CyU3PIsLppIOConfigured>
40023704:	e3500000 	cmp	r0, #0
40023708:	1a000001 	bne	40023714 <CyU3PI2cInit+0x1c>
4002370c:	e3a00044 	mov	r0, #68	; 0x44
40023710:	e8bd8010 	pop	{r4, pc}
40023714:	e59f00bc 	ldr	r0, [pc, #188]	; 400237d8 <CyU3PI2cInit+0xe0>
40023718:	e5900000 	ldr	r0, [r0]
4002371c:	e3500000 	cmp	r0, #0
40023720:	0a000001 	beq	4002372c <CyU3PI2cInit+0x34>
40023724:	e3a00043 	mov	r0, #67	; 0x43
40023728:	eafffff8 	b	40023710 <CyU3PI2cInit+0x18>
4002372c:	e59f00a8 	ldr	r0, [pc, #168]	; 400237dc <CyU3PI2cInit+0xe4>
40023730:	ebffc1f7 	bl	40013f14 <CyU3PI2cSetClock>
40023734:	e1a04000 	mov	r4, r0
40023738:	e3540000 	cmp	r4, #0
4002373c:	0a000001 	beq	40023748 <CyU3PI2cInit+0x50>
40023740:	e1a00004 	mov	r0, r4
40023744:	eafffff1 	b	40023710 <CyU3PI2cInit+0x18>
40023748:	e59f1090 	ldr	r1, [pc, #144]	; 400237e0 <CyU3PI2cInit+0xe8>
4002374c:	e3a00000 	mov	r0, #0
40023750:	ebffc256 	bl	400140b0 <CyU3PLppInit>
40023754:	e1a04000 	mov	r4, r0
40023758:	e3540000 	cmp	r4, #0
4002375c:	0a000001 	beq	40023768 <CyU3PI2cInit+0x70>
40023760:	e1a00004 	mov	r0, r4
40023764:	eaffffe9 	b	40023710 <CyU3PI2cInit+0x18>
40023768:	e3a03038 	mov	r3, #56	; 0x38
4002376c:	e3a02000 	mov	r2, #0
40023770:	e1a01002 	mov	r1, r2
40023774:	e59f0068 	ldr	r0, [pc, #104]	; 400237e4 <CyU3PI2cInit+0xec>
40023778:	ebff9a53 	bl	4000a0cc <_txe_mutex_create>
4002377c:	e3a00000 	mov	r0, #0
40023780:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023784:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023788:	e3a0000a 	mov	r0, #10
4002378c:	ebffc04b 	bl	400138c0 <CyU3PBusyWait>
40023790:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023794:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023798:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002379c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237a0:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400237a4:	e1a00000 	nop			; (mov r0, r0)
400237a8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237ac:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400237b0:	e3100001 	tst	r0, #1
400237b4:	0afffffb 	beq	400237a8 <CyU3PI2cInit+0xb0>
400237b8:	e3a00000 	mov	r0, #0
400237bc:	e59f1024 	ldr	r1, [pc, #36]	; 400237e8 <CyU3PI2cInit+0xf0>
400237c0:	e5810000 	str	r0, [r1]
400237c4:	e3a00001 	mov	r0, #1
400237c8:	e2411008 	sub	r1, r1, #8
400237cc:	e5810000 	str	r0, [r1]
400237d0:	e3a00000 	mov	r0, #0
400237d4:	eaffffcd 	b	40023710 <CyU3PI2cInit+0x18>
400237d8:	40030ef8 	.word	0x40030ef8
400237dc:	000186a0 	.word	0x000186a0
400237e0:	400237ec 	.word	0x400237ec
400237e4:	40032e54 	.word	0x40032e54
400237e8:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

400237ec <CyU3PI2cInt_ThreadHandler>:
400237ec:	e92d4070 	push	{r4, r5, r6, lr}
400237f0:	ebffffa9 	bl	4002369c <CyU3PI2cGetLock>
400237f4:	e1a05000 	mov	r5, r0
400237f8:	e3550000 	cmp	r5, #0
400237fc:	0a000000 	beq	40023804 <CyU3PI2cInt_ThreadHandler+0x18>
40023800:	e8bd8070 	pop	{r4, r5, r6, pc}
40023804:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023808:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002380c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023810:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023814:	e0004001 	and	r4, r0, r1
40023818:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002381c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023820:	e59f00b0 	ldr	r0, [pc, #176]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
40023824:	e5900000 	ldr	r0, [r0]
40023828:	e3500000 	cmp	r0, #0
4002382c:	1a000001 	bne	40023838 <CyU3PI2cInt_ThreadHandler+0x4c>
40023830:	eb000098 	bl	40023a98 <CyU3PI2cReleaseLock>
40023834:	eafffff1 	b	40023800 <CyU3PI2cInt_ThreadHandler+0x14>
40023838:	e3140001 	tst	r4, #1
4002383c:	0a000004 	beq	40023854 <CyU3PI2cInt_ThreadHandler+0x68>
40023840:	e3a01000 	mov	r1, #0
40023844:	e1a00001 	mov	r0, r1
40023848:	e59f2088 	ldr	r2, [pc, #136]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
4002384c:	e5922000 	ldr	r2, [r2]
40023850:	e12fff32 	blx	r2
40023854:	e3140008 	tst	r4, #8
40023858:	0a000004 	beq	40023870 <CyU3PI2cInt_ThreadHandler+0x84>
4002385c:	e3a01000 	mov	r1, #0
40023860:	e3a00001 	mov	r0, #1
40023864:	e59f206c 	ldr	r2, [pc, #108]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
40023868:	e5922000 	ldr	r2, [r2]
4002386c:	e12fff32 	blx	r2
40023870:	e3140040 	tst	r4, #64	; 0x40
40023874:	0a000004 	beq	4002388c <CyU3PI2cInt_ThreadHandler+0xa0>
40023878:	e3a01000 	mov	r1, #0
4002387c:	e3a00002 	mov	r0, #2
40023880:	e59f2050 	ldr	r2, [pc, #80]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
40023884:	e5922000 	ldr	r2, [r2]
40023888:	e12fff32 	blx	r2
4002388c:	e3140080 	tst	r4, #128	; 0x80
40023890:	0a000004 	beq	400238a8 <CyU3PI2cInt_ThreadHandler+0xbc>
40023894:	e3a01000 	mov	r1, #0
40023898:	e3a00003 	mov	r0, #3
4002389c:	e59f2034 	ldr	r2, [pc, #52]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
400238a0:	e5922000 	ldr	r2, [r2]
400238a4:	e12fff32 	blx	r2
400238a8:	e3140c01 	tst	r4, #256	; 0x100
400238ac:	0a000007 	beq	400238d0 <CyU3PI2cInt_ThreadHandler+0xe4>
400238b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238b4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400238b8:	e200040f 	and	r0, r0, #251658240	; 0xf000000
400238bc:	e1a01c20 	lsr	r1, r0, #24
400238c0:	e3a00004 	mov	r0, #4
400238c4:	e59f200c 	ldr	r2, [pc, #12]	; 400238d8 <CyU3PI2cInt_ThreadHandler+0xec>
400238c8:	e5922000 	ldr	r2, [r2]
400238cc:	e12fff32 	blx	r2
400238d0:	eb000070 	bl	40023a98 <CyU3PI2cReleaseLock>
400238d4:	eaffffc9 	b	40023800 <CyU3PI2cInt_ThreadHandler+0x14>
400238d8:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cReceiveBytes:

400238dc <CyU3PI2cReceiveBytes>:
400238dc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400238e0:	e1a04000 	mov	r4, r0
400238e4:	e1a05001 	mov	r5, r1
400238e8:	e1a06002 	mov	r6, r2
400238ec:	e1a07003 	mov	r7, r3
400238f0:	e59f0194 	ldr	r0, [pc, #404]	; 40023a8c <CyU3PI2cReceiveBytes+0x1b0>
400238f4:	e5900000 	ldr	r0, [r0]
400238f8:	e3500000 	cmp	r0, #0
400238fc:	1a000001 	bne	40023908 <CyU3PI2cReceiveBytes+0x2c>
40023900:	e3a00044 	mov	r0, #68	; 0x44
40023904:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023908:	e59f0180 	ldr	r0, [pc, #384]	; 40023a90 <CyU3PI2cReceiveBytes+0x1b4>
4002390c:	e5900000 	ldr	r0, [r0]
40023910:	e3500000 	cmp	r0, #0
40023914:	0a000001 	beq	40023920 <CyU3PI2cReceiveBytes+0x44>
40023918:	e3a00044 	mov	r0, #68	; 0x44
4002391c:	eafffff8 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023920:	e3550000 	cmp	r5, #0
40023924:	0a000001 	beq	40023930 <CyU3PI2cReceiveBytes+0x54>
40023928:	e3540000 	cmp	r4, #0
4002392c:	1a000001 	bne	40023938 <CyU3PI2cReceiveBytes+0x5c>
40023930:	e3a00041 	mov	r0, #65	; 0x41
40023934:	eafffff2 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023938:	e5d40008 	ldrb	r0, [r4, #8]
4002393c:	e3500000 	cmp	r0, #0
40023940:	0a000002 	beq	40023950 <CyU3PI2cReceiveBytes+0x74>
40023944:	e5d40008 	ldrb	r0, [r4, #8]
40023948:	e3500008 	cmp	r0, #8
4002394c:	da000001 	ble	40023958 <CyU3PI2cReceiveBytes+0x7c>
40023950:	e3a00040 	mov	r0, #64	; 0x40
40023954:	eaffffea 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023958:	e3560000 	cmp	r6, #0
4002395c:	1a000001 	bne	40023968 <CyU3PI2cReceiveBytes+0x8c>
40023960:	e3a00000 	mov	r0, #0
40023964:	eaffffe6 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023968:	ebffff4b 	bl	4002369c <CyU3PI2cGetLock>
4002396c:	e1a08000 	mov	r8, r0
40023970:	e3580000 	cmp	r8, #0
40023974:	0a000001 	beq	40023980 <CyU3PI2cReceiveBytes+0xa4>
40023978:	e1a00008 	mov	r0, r8
4002397c:	eaffffe0 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023980:	e3a0bd07 	mov	fp, #448	; 0x1c0
40023984:	e1a00000 	nop			; (mov r0, r0)
40023988:	e3a02001 	mov	r2, #1
4002398c:	e1a01006 	mov	r1, r6
40023990:	e1a00004 	mov	r0, r4
40023994:	eb000166 	bl	40023f34 <MyI2cSendCommand>
40023998:	e1a08000 	mov	r8, r0
4002399c:	e3580000 	cmp	r8, #0
400239a0:	0a000000 	beq	400239a8 <CyU3PI2cReceiveBytes+0xcc>
400239a4:	ea00002a 	b	40023a54 <CyU3PI2cReceiveBytes+0x178>
400239a8:	e3a0a000 	mov	sl, #0
400239ac:	ea000020 	b	40023a34 <CyU3PI2cReceiveBytes+0x158>
400239b0:	e59f00dc 	ldr	r0, [pc, #220]	; 40023a94 <CyU3PI2cReceiveBytes+0x1b8>
400239b4:	e58d0000 	str	r0, [sp]
400239b8:	ea000006 	b	400239d8 <CyU3PI2cReceiveBytes+0xfc>
400239bc:	e59d0000 	ldr	r0, [sp]
400239c0:	e2401001 	sub	r1, r0, #1
400239c4:	e3500000 	cmp	r0, #0
400239c8:	e58d1000 	str	r1, [sp]
400239cc:	1a000001 	bne	400239d8 <CyU3PI2cReceiveBytes+0xfc>
400239d0:	e3a08055 	mov	r8, #85	; 0x55
400239d4:	ea000004 	b	400239ec <CyU3PI2cReceiveBytes+0x110>
400239d8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239dc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239e0:	e38b1002 	orr	r1, fp, #2
400239e4:	e1100001 	tst	r0, r1
400239e8:	0afffff3 	beq	400239bc <CyU3PI2cReceiveBytes+0xe0>
400239ec:	e1a00000 	nop			; (mov r0, r0)
400239f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239f4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239f8:	e110000b 	tst	r0, fp
400239fc:	0a000000 	beq	40023a04 <CyU3PI2cReceiveBytes+0x128>
40023a00:	e3a0804a 	mov	r8, #74	; 0x4a
40023a04:	e3580000 	cmp	r8, #0
40023a08:	0a000005 	beq	40023a24 <CyU3PI2cReceiveBytes+0x148>
40023a0c:	e3a00001 	mov	r0, #1
40023a10:	ebfffebe 	bl	40023510 <CyU3PI2cErrorRecovery>
40023a14:	e3500000 	cmp	r0, #0
40023a18:	0a000000 	beq	40023a20 <CyU3PI2cReceiveBytes+0x144>
40023a1c:	e3a08054 	mov	r8, #84	; 0x54
40023a20:	ea000005 	b	40023a3c <CyU3PI2cReceiveBytes+0x160>
40023a24:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a28:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
40023a2c:	e7c5000a 	strb	r0, [r5, sl]
40023a30:	e28aa001 	add	sl, sl, #1
40023a34:	e15a0006 	cmp	sl, r6
40023a38:	3affffdc 	bcc	400239b0 <CyU3PI2cReceiveBytes+0xd4>
40023a3c:	e1a00000 	nop			; (mov r0, r0)
40023a40:	e3580000 	cmp	r8, #0
40023a44:	0a000002 	beq	40023a54 <CyU3PI2cReceiveBytes+0x178>
40023a48:	e1b00007 	movs	r0, r7
40023a4c:	e2477001 	sub	r7, r7, #1
40023a50:	1affffcc 	bne	40023988 <CyU3PI2cReceiveBytes+0xac>
40023a54:	e1a00000 	nop			; (mov r0, r0)
40023a58:	e358004a 	cmp	r8, #74	; 0x4a
40023a5c:	1a000007 	bne	40023a80 <CyU3PI2cReceiveBytes+0x1a4>
40023a60:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a64:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023a68:	e3190040 	tst	r9, #64	; 0x40
40023a6c:	0a000000 	beq	40023a74 <CyU3PI2cReceiveBytes+0x198>
40023a70:	e3a08045 	mov	r8, #69	; 0x45
40023a74:	e3190080 	tst	r9, #128	; 0x80
40023a78:	0a000000 	beq	40023a80 <CyU3PI2cReceiveBytes+0x1a4>
40023a7c:	e3a08055 	mov	r8, #85	; 0x55
40023a80:	eb000004 	bl	40023a98 <CyU3PI2cReleaseLock>
40023a84:	e1a00008 	mov	r0, r8
40023a88:	eaffff9d 	b	40023904 <CyU3PI2cReceiveBytes+0x28>
40023a8c:	40030ef4 	.word	0x40030ef4
40023a90:	40030ef0 	.word	0x40030ef0
40023a94:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023a98 <CyU3PI2cReleaseLock>:
40023a98:	e92d4010 	push	{r4, lr}
40023a9c:	e59f0030 	ldr	r0, [pc, #48]	; 40023ad4 <CyU3PI2cReleaseLock+0x3c>
40023aa0:	e5900000 	ldr	r0, [r0]
40023aa4:	e3500000 	cmp	r0, #0
40023aa8:	1a000001 	bne	40023ab4 <CyU3PI2cReleaseLock+0x1c>
40023aac:	e3a00044 	mov	r0, #68	; 0x44
40023ab0:	e8bd8010 	pop	{r4, pc}
40023ab4:	e59f001c 	ldr	r0, [pc, #28]	; 40023ad8 <CyU3PI2cReleaseLock+0x40>
40023ab8:	ebff9a36 	bl	4000a398 <_txe_mutex_put>
40023abc:	e3500000 	cmp	r0, #0
40023ac0:	0a000001 	beq	40023acc <CyU3PI2cReleaseLock+0x34>
40023ac4:	e3a0001d 	mov	r0, #29
40023ac8:	eafffff8 	b	40023ab0 <CyU3PI2cReleaseLock+0x18>
40023acc:	e3a00000 	mov	r0, #0
40023ad0:	eafffff6 	b	40023ab0 <CyU3PI2cReleaseLock+0x18>
40023ad4:	40030ef8 	.word	0x40030ef8
40023ad8:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

40023adc <CyU3PI2cSetConfig>:
40023adc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023ae0:	e1a04000 	mov	r4, r0
40023ae4:	e1a05001 	mov	r5, r1
40023ae8:	e59f01e0 	ldr	r0, [pc, #480]	; 40023cd0 <CyU3PI2cSetConfig+0x1f4>
40023aec:	e5900000 	ldr	r0, [r0]
40023af0:	e3500000 	cmp	r0, #0
40023af4:	1a000001 	bne	40023b00 <CyU3PI2cSetConfig+0x24>
40023af8:	e3a00042 	mov	r0, #66	; 0x42
40023afc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023b00:	e3540000 	cmp	r4, #0
40023b04:	1a000001 	bne	40023b10 <CyU3PI2cSetConfig+0x34>
40023b08:	e3a00041 	mov	r0, #65	; 0x41
40023b0c:	eafffffa 	b	40023afc <CyU3PI2cSetConfig+0x20>
40023b10:	e5940004 	ldr	r0, [r4, #4]
40023b14:	e3500000 	cmp	r0, #0
40023b18:	1a000003 	bne	40023b2c <CyU3PI2cSetConfig+0x50>
40023b1c:	e3550000 	cmp	r5, #0
40023b20:	0a000001 	beq	40023b2c <CyU3PI2cSetConfig+0x50>
40023b24:	e3a00040 	mov	r0, #64	; 0x40
40023b28:	eafffff3 	b	40023afc <CyU3PI2cSetConfig+0x20>
40023b2c:	ebfffeda 	bl	4002369c <CyU3PI2cGetLock>
40023b30:	e1a06000 	mov	r6, r0
40023b34:	e3560000 	cmp	r6, #0
40023b38:	0a000001 	beq	40023b44 <CyU3PI2cSetConfig+0x68>
40023b3c:	e1a00006 	mov	r0, r6
40023b40:	eaffffed 	b	40023afc <CyU3PI2cSetConfig+0x20>
40023b44:	e3a00000 	mov	r0, #0
40023b48:	e59f1184 	ldr	r1, [pc, #388]	; 40023cd4 <CyU3PI2cSetConfig+0x1f8>
40023b4c:	e5810000 	str	r0, [r1]
40023b50:	e5940000 	ldr	r0, [r4]
40023b54:	ebffc0ee 	bl	40013f14 <CyU3PI2cSetClock>
40023b58:	e1a06000 	mov	r6, r0
40023b5c:	e3560000 	cmp	r6, #0
40023b60:	1a00000e 	bne	40023ba0 <CyU3PI2cSetConfig+0xc4>
40023b64:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023b68:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b6c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023b70:	e1e07741 	mvn	r7, r1, asr #14
40023b74:	ea000004 	b	40023b8c <CyU3PI2cSetConfig+0xb0>
40023b78:	e1b00007 	movs	r0, r7
40023b7c:	e2477001 	sub	r7, r7, #1
40023b80:	1a000001 	bne	40023b8c <CyU3PI2cSetConfig+0xb0>
40023b84:	e3a06054 	mov	r6, #84	; 0x54
40023b88:	ea000003 	b	40023b9c <CyU3PI2cSetConfig+0xc0>
40023b8c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b90:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b94:	e3100008 	tst	r0, #8
40023b98:	0afffff6 	beq	40023b78 <CyU3PI2cSetConfig+0x9c>
40023b9c:	e1a00000 	nop			; (mov r0, r0)
40023ba0:	e3560000 	cmp	r6, #0
40023ba4:	1a00000b 	bne	40023bd8 <CyU3PI2cSetConfig+0xfc>
40023ba8:	e59f7128 	ldr	r7, [pc, #296]	; 40023cd8 <CyU3PI2cSetConfig+0x1fc>
40023bac:	ea000004 	b	40023bc4 <CyU3PI2cSetConfig+0xe8>
40023bb0:	e1b00007 	movs	r0, r7
40023bb4:	e2477001 	sub	r7, r7, #1
40023bb8:	1a000001 	bne	40023bc4 <CyU3PI2cSetConfig+0xe8>
40023bbc:	e3a06054 	mov	r6, #84	; 0x54
40023bc0:	ea000003 	b	40023bd4 <CyU3PI2cSetConfig+0xf8>
40023bc4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bc8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023bcc:	e3100002 	tst	r0, #2
40023bd0:	1afffff6 	bne	40023bb0 <CyU3PI2cSetConfig+0xd4>
40023bd4:	e1a00000 	nop			; (mov r0, r0)
40023bd8:	e3560000 	cmp	r6, #0
40023bdc:	0a000002 	beq	40023bec <CyU3PI2cSetConfig+0x110>
40023be0:	ebffffac 	bl	40023a98 <CyU3PI2cReleaseLock>
40023be4:	e1a00006 	mov	r0, r6
40023be8:	eaffffc3 	b	40023afc <CyU3PI2cSetConfig+0x20>
40023bec:	e3a00000 	mov	r0, #0
40023bf0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bf4:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023bf8:	e3a06000 	mov	r6, #0
40023bfc:	e5940000 	ldr	r0, [r4]
40023c00:	e59f10d4 	ldr	r1, [pc, #212]	; 40023cdc <CyU3PI2cSetConfig+0x200>
40023c04:	e1500001 	cmp	r0, r1
40023c08:	8a000000 	bhi	40023c10 <CyU3PI2cSetConfig+0x134>
40023c0c:	e3a06004 	mov	r6, #4
40023c10:	e5940004 	ldr	r0, [r4, #4]
40023c14:	e3500000 	cmp	r0, #0
40023c18:	0a000007 	beq	40023c3c <CyU3PI2cSetConfig+0x160>
40023c1c:	e3866001 	orr	r6, r6, #1
40023c20:	e3a00001 	mov	r0, #1
40023c24:	e59f10b4 	ldr	r1, [pc, #180]	; 40023ce0 <CyU3PI2cSetConfig+0x204>
40023c28:	e5810000 	str	r0, [r1]
40023c2c:	e1d400bc 	ldrh	r0, [r4, #12]
40023c30:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c34:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023c38:	ea000005 	b	40023c54 <CyU3PI2cSetConfig+0x178>
40023c3c:	e3a00000 	mov	r0, #0
40023c40:	e59f1098 	ldr	r1, [pc, #152]	; 40023ce0 <CyU3PI2cSetConfig+0x204>
40023c44:	e5810000 	str	r0, [r1]
40023c48:	e59f0094 	ldr	r0, [pc, #148]	; 40023ce4 <CyU3PI2cSetConfig+0x208>
40023c4c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c50:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023c54:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c58:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023c5c:	e59f0084 	ldr	r0, [pc, #132]	; 40023ce8 <CyU3PI2cSetConfig+0x20c>
40023c60:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c64:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023c68:	e5940008 	ldr	r0, [r4, #8]
40023c6c:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023c70:	e3e00000 	mvn	r0, #0
40023c74:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023c78:	e1a00005 	mov	r0, r5
40023c7c:	eb0000a8 	bl	40023f24 <CyU3PRegisterI2cCallBack>
40023c80:	e3550000 	cmp	r5, #0
40023c84:	0a000003 	beq	40023c98 <CyU3PI2cSetConfig+0x1bc>
40023c88:	e59f005c 	ldr	r0, [pc, #92]	; 40023cec <CyU3PI2cSetConfig+0x210>
40023c8c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c90:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023c94:	ea000002 	b	40023ca4 <CyU3PI2cSetConfig+0x1c8>
40023c98:	e3a00000 	mov	r0, #0
40023c9c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ca0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023ca4:	e3a00001 	mov	r0, #1
40023ca8:	e59f1040 	ldr	r1, [pc, #64]	; 40023cf0 <CyU3PI2cSetConfig+0x214>
40023cac:	e5810000 	str	r0, [r1]
40023cb0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023cb4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023cb8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023cbc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cc0:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023cc4:	ebffff73 	bl	40023a98 <CyU3PI2cReleaseLock>
40023cc8:	e3a00000 	mov	r0, #0
40023ccc:	eaffff8a 	b	40023afc <CyU3PI2cSetConfig+0x20>
40023cd0:	40030ef8 	.word	0x40030ef8
40023cd4:	40030f00 	.word	0x40030f00
40023cd8:	00007fff 	.word	0x00007fff
40023cdc:	000186a0 	.word	0x000186a0
40023ce0:	40030ef0 	.word	0x40030ef0
40023ce4:	0000ffff 	.word	0x0000ffff
40023ce8:	00000502 	.word	0x00000502
40023cec:	000001c9 	.word	0x000001c9
40023cf0:	40030ef4 	.word	0x40030ef4

Disassembly of section i.CyU3PI2cTransmitBytes:

40023cf4 <CyU3PI2cTransmitBytes>:
40023cf4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023cf8:	e1a04000 	mov	r4, r0
40023cfc:	e1a05001 	mov	r5, r1
40023d00:	e1a06002 	mov	r6, r2
40023d04:	e59f020c 	ldr	r0, [pc, #524]	; 40023f18 <CyU3PI2cTransmitBytes+0x224>
40023d08:	e5900000 	ldr	r0, [r0]
40023d0c:	e3500000 	cmp	r0, #0
40023d10:	1a000002 	bne	40023d20 <CyU3PI2cTransmitBytes+0x2c>
40023d14:	e3a00044 	mov	r0, #68	; 0x44
40023d18:	e28dd010 	add	sp, sp, #16
40023d1c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023d20:	e59f01f4 	ldr	r0, [pc, #500]	; 40023f1c <CyU3PI2cTransmitBytes+0x228>
40023d24:	e5900000 	ldr	r0, [r0]
40023d28:	e3500000 	cmp	r0, #0
40023d2c:	0a000001 	beq	40023d38 <CyU3PI2cTransmitBytes+0x44>
40023d30:	e3a00044 	mov	r0, #68	; 0x44
40023d34:	eafffff7 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023d38:	e3550000 	cmp	r5, #0
40023d3c:	0a000001 	beq	40023d48 <CyU3PI2cTransmitBytes+0x54>
40023d40:	e3540000 	cmp	r4, #0
40023d44:	1a000001 	bne	40023d50 <CyU3PI2cTransmitBytes+0x5c>
40023d48:	e3a00041 	mov	r0, #65	; 0x41
40023d4c:	eafffff1 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023d50:	e5d40008 	ldrb	r0, [r4, #8]
40023d54:	e3500000 	cmp	r0, #0
40023d58:	0a000002 	beq	40023d68 <CyU3PI2cTransmitBytes+0x74>
40023d5c:	e5d40008 	ldrb	r0, [r4, #8]
40023d60:	e3500008 	cmp	r0, #8
40023d64:	da000001 	ble	40023d70 <CyU3PI2cTransmitBytes+0x7c>
40023d68:	e3a00040 	mov	r0, #64	; 0x40
40023d6c:	eaffffe9 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023d70:	e3560000 	cmp	r6, #0
40023d74:	1a000001 	bne	40023d80 <CyU3PI2cTransmitBytes+0x8c>
40023d78:	e3a00000 	mov	r0, #0
40023d7c:	eaffffe5 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023d80:	ebfffe45 	bl	4002369c <CyU3PI2cGetLock>
40023d84:	e1a07000 	mov	r7, r0
40023d88:	e3570000 	cmp	r7, #0
40023d8c:	0a000001 	beq	40023d98 <CyU3PI2cTransmitBytes+0xa4>
40023d90:	e1a00007 	mov	r0, r7
40023d94:	eaffffdf 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023d98:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023d9c:	e1a00000 	nop			; (mov r0, r0)
40023da0:	e3a07000 	mov	r7, #0
40023da4:	e5d50000 	ldrb	r0, [r5]
40023da8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023dac:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023db0:	e3a02000 	mov	r2, #0
40023db4:	e1a01006 	mov	r1, r6
40023db8:	e1a00004 	mov	r0, r4
40023dbc:	eb00005c 	bl	40023f34 <MyI2cSendCommand>
40023dc0:	e1a07000 	mov	r7, r0
40023dc4:	e3570000 	cmp	r7, #0
40023dc8:	0a000000 	beq	40023dd0 <CyU3PI2cTransmitBytes+0xdc>
40023dcc:	ea000043 	b	40023ee0 <CyU3PI2cTransmitBytes+0x1ec>
40023dd0:	e3a08001 	mov	r8, #1
40023dd4:	ea000018 	b	40023e3c <CyU3PI2cTransmitBytes+0x148>
40023dd8:	e59f9140 	ldr	r9, [pc, #320]	; 40023f20 <CyU3PI2cTransmitBytes+0x22c>
40023ddc:	ea000004 	b	40023df4 <CyU3PI2cTransmitBytes+0x100>
40023de0:	e1b00009 	movs	r0, r9
40023de4:	e2499001 	sub	r9, r9, #1
40023de8:	1a000001 	bne	40023df4 <CyU3PI2cTransmitBytes+0x100>
40023dec:	e3a07055 	mov	r7, #85	; 0x55
40023df0:	ea000004 	b	40023e08 <CyU3PI2cTransmitBytes+0x114>
40023df4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023df8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023dfc:	e38a1010 	orr	r1, sl, #16
40023e00:	e1100001 	tst	r0, r1
40023e04:	0afffff5 	beq	40023de0 <CyU3PI2cTransmitBytes+0xec>
40023e08:	e1a00000 	nop			; (mov r0, r0)
40023e0c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e10:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023e14:	e110000a 	tst	r0, sl
40023e18:	0a000000 	beq	40023e20 <CyU3PI2cTransmitBytes+0x12c>
40023e1c:	e3a0704a 	mov	r7, #74	; 0x4a
40023e20:	e3570000 	cmp	r7, #0
40023e24:	0a000000 	beq	40023e2c <CyU3PI2cTransmitBytes+0x138>
40023e28:	ea000005 	b	40023e44 <CyU3PI2cTransmitBytes+0x150>
40023e2c:	e7d50008 	ldrb	r0, [r5, r8]
40023e30:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e34:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023e38:	e2888001 	add	r8, r8, #1
40023e3c:	e1580006 	cmp	r8, r6
40023e40:	3affffe4 	bcc	40023dd8 <CyU3PI2cTransmitBytes+0xe4>
40023e44:	e1a00000 	nop			; (mov r0, r0)
40023e48:	e1560008 	cmp	r6, r8
40023e4c:	1a000013 	bne	40023ea0 <CyU3PI2cTransmitBytes+0x1ac>
40023e50:	e3570000 	cmp	r7, #0
40023e54:	1a000011 	bne	40023ea0 <CyU3PI2cTransmitBytes+0x1ac>
40023e58:	e59f90c0 	ldr	r9, [pc, #192]	; 40023f20 <CyU3PI2cTransmitBytes+0x22c>
40023e5c:	ea000004 	b	40023e74 <CyU3PI2cTransmitBytes+0x180>
40023e60:	e1b00009 	movs	r0, r9
40023e64:	e2499001 	sub	r9, r9, #1
40023e68:	1a000001 	bne	40023e74 <CyU3PI2cTransmitBytes+0x180>
40023e6c:	e3a07055 	mov	r7, #85	; 0x55
40023e70:	ea000004 	b	40023e88 <CyU3PI2cTransmitBytes+0x194>
40023e74:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e78:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023e7c:	e38a1008 	orr	r1, sl, #8
40023e80:	e1100001 	tst	r0, r1
40023e84:	0afffff5 	beq	40023e60 <CyU3PI2cTransmitBytes+0x16c>
40023e88:	e1a00000 	nop			; (mov r0, r0)
40023e8c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e90:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023e94:	e110000a 	tst	r0, sl
40023e98:	0a000000 	beq	40023ea0 <CyU3PI2cTransmitBytes+0x1ac>
40023e9c:	e3a0704a 	mov	r7, #74	; 0x4a
40023ea0:	e3570000 	cmp	r7, #0
40023ea4:	0a000006 	beq	40023ec4 <CyU3PI2cTransmitBytes+0x1d0>
40023ea8:	e3a00001 	mov	r0, #1
40023eac:	ebfffd97 	bl	40023510 <CyU3PI2cErrorRecovery>
40023eb0:	e3500000 	cmp	r0, #0
40023eb4:	0a000002 	beq	40023ec4 <CyU3PI2cTransmitBytes+0x1d0>
40023eb8:	ebfffef6 	bl	40023a98 <CyU3PI2cReleaseLock>
40023ebc:	e3a00054 	mov	r0, #84	; 0x54
40023ec0:	eaffff94 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023ec4:	e3570000 	cmp	r7, #0
40023ec8:	0a000004 	beq	40023ee0 <CyU3PI2cTransmitBytes+0x1ec>
40023ecc:	e59d000c 	ldr	r0, [sp, #12]
40023ed0:	e2401001 	sub	r1, r0, #1
40023ed4:	e3500000 	cmp	r0, #0
40023ed8:	e58d100c 	str	r1, [sp, #12]
40023edc:	1affffaf 	bne	40023da0 <CyU3PI2cTransmitBytes+0xac>
40023ee0:	e1a00000 	nop			; (mov r0, r0)
40023ee4:	e357004a 	cmp	r7, #74	; 0x4a
40023ee8:	1a000007 	bne	40023f0c <CyU3PI2cTransmitBytes+0x218>
40023eec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ef0:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023ef4:	e31b0040 	tst	fp, #64	; 0x40
40023ef8:	0a000000 	beq	40023f00 <CyU3PI2cTransmitBytes+0x20c>
40023efc:	e3a07045 	mov	r7, #69	; 0x45
40023f00:	e31b0080 	tst	fp, #128	; 0x80
40023f04:	0a000000 	beq	40023f0c <CyU3PI2cTransmitBytes+0x218>
40023f08:	e3a07055 	mov	r7, #85	; 0x55
40023f0c:	ebfffee1 	bl	40023a98 <CyU3PI2cReleaseLock>
40023f10:	e1a00007 	mov	r0, r7
40023f14:	eaffff7f 	b	40023d18 <CyU3PI2cTransmitBytes+0x24>
40023f18:	40030ef4 	.word	0x40030ef4
40023f1c:	40030ef0 	.word	0x40030ef0
40023f20:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023f24 <CyU3PRegisterI2cCallBack>:
40023f24:	e59f1004 	ldr	r1, [pc, #4]	; 40023f30 <CyU3PRegisterI2cCallBack+0xc>
40023f28:	e5810000 	str	r0, [r1]
40023f2c:	e12fff1e 	bx	lr
40023f30:	40030efc 	.word	0x40030efc

Disassembly of section i.MyI2cSendCommand:

40023f34 <MyI2cSendCommand>:
40023f34:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023f38:	e1a04000 	mov	r4, r0
40023f3c:	e1a06001 	mov	r6, r1
40023f40:	e1a07002 	mov	r7, r2
40023f44:	e3a00000 	mov	r0, #0
40023f48:	e59f1108 	ldr	r1, [pc, #264]	; 40024058 <MyI2cSendCommand+0x124>
40023f4c:	e5810000 	str	r0, [r1]
40023f50:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f54:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f58:	e3100202 	tst	r0, #536870912	; 0x20000000
40023f5c:	0a000006 	beq	40023f7c <MyI2cSendCommand+0x48>
40023f60:	e3a00000 	mov	r0, #0
40023f64:	ebfffd69 	bl	40023510 <CyU3PI2cErrorRecovery>
40023f68:	e1a05000 	mov	r5, r0
40023f6c:	e3550000 	cmp	r5, #0
40023f70:	0a000001 	beq	40023f7c <MyI2cSendCommand+0x48>
40023f74:	e1a00005 	mov	r0, r5
40023f78:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023f7c:	e59f80d8 	ldr	r8, [pc, #216]	; 4002405c <MyI2cSendCommand+0x128>
40023f80:	e1a00000 	nop			; (mov r0, r0)
40023f84:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f88:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f8c:	e3100203 	tst	r0, #805306368	; 0x30000000
40023f90:	0a000002 	beq	40023fa0 <MyI2cSendCommand+0x6c>
40023f94:	e1b00008 	movs	r0, r8
40023f98:	e2488001 	sub	r8, r8, #1
40023f9c:	1afffff8 	bne	40023f84 <MyI2cSendCommand+0x50>
40023fa0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023fa4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023fa8:	e3100203 	tst	r0, #805306368	; 0x30000000
40023fac:	0a000001 	beq	40023fb8 <MyI2cSendCommand+0x84>
40023fb0:	e3a00045 	mov	r0, #69	; 0x45
40023fb4:	eaffffef 	b	40023f78 <MyI2cSendCommand+0x44>
40023fb8:	e3a00000 	mov	r0, #0
40023fbc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023fc0:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023fc4:	e5d42008 	ldrb	r2, [r4, #8]
40023fc8:	e1a01004 	mov	r1, r4
40023fcc:	e1a0000d 	mov	r0, sp
40023fd0:	ebff7e3f 	bl	400038d4 <CyU3PMemCopy>
40023fd4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023fd8:	e59d0000 	ldr	r0, [sp]
40023fdc:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023fe0:	e59d0004 	ldr	r0, [sp, #4]
40023fe4:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023fe8:	e3a00000 	mov	r0, #0
40023fec:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023ff0:	e3e00000 	mvn	r0, #0
40023ff4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023ff8:	e3a00d07 	mov	r0, #448	; 0x1c0
40023ffc:	e5810404 	str	r0, [r1, #1028]	; 0x404
40024000:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40024004:	e5806438 	str	r6, [r0, #1080]	; 0x438
40024008:	e1d400ba 	ldrh	r0, [r4, #10]
4002400c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40024010:	e3570000 	cmp	r7, #0
40024014:	0a000004 	beq	4002402c <MyI2cSendCommand+0xf8>
40024018:	e5d40008 	ldrb	r0, [r4, #8]
4002401c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40024020:	e38000e0 	orr	r0, r0, #224	; 0xe0
40024024:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024028:	ea000003 	b	4002403c <MyI2cSendCommand+0x108>
4002402c:	e5d40008 	ldrb	r0, [r4, #8]
40024030:	e38000c0 	orr	r0, r0, #192	; 0xc0
40024034:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40024038:	e5810428 	str	r0, [r1, #1064]	; 0x428
4002403c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40024040:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40024044:	e3800010 	orr	r0, r0, #16
40024048:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002404c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024050:	e3a00000 	mov	r0, #0
40024054:	eaffffc7 	b	40023f78 <MyI2cSendCommand+0x44>
40024058:	40030f00 	.word	0x40030f00
4002405c:	00007fff 	.word	0x00007fff
