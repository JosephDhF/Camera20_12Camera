   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"sensor.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  18              	SensorI2CAccessDelay.part.0:
  19              	.LFB12:
  20              		.file 1 "../sensor.c"
   1:../sensor.c   **** /*
   2:../sensor.c   ****  ## Cypress FX3 Camera Kit source file (sensor.c)
   3:../sensor.c   ****  ## ===========================
   4:../sensor.c   ****  ##
   5:../sensor.c   ****  ##  Copyright Cypress Semiconductor Corporation, 2010-2012,
   6:../sensor.c   ****  ##  All Rights Reserved
   7:../sensor.c   ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
   8:../sensor.c   ****  ##
   9:../sensor.c   ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  10:../sensor.c   ****  ##  WHICH IS THE PROPERTY OF CYPRESS.
  11:../sensor.c   ****  ##
  12:../sensor.c   ****  ##  Use of this file is governed
  13:../sensor.c   ****  ##  by the license agreement included in the file
  14:../sensor.c   ****  ##
  15:../sensor.c   ****  ##     <install>/license/license.txt
  16:../sensor.c   ****  ##
  17:../sensor.c   ****  ##  where <install> is the Cypress software
  18:../sensor.c   ****  ##  installation root directory path.
  19:../sensor.c   ****  ##
  20:../sensor.c   ****  ## ===========================
  21:../sensor.c   ****  */
  22:../sensor.c   **** 
  23:../sensor.c   **** /* This file implements the I2C based driver for an image sensor that uses I2C
  24:../sensor.c   ****  for control in the FX3 HD 720p camera kit.
  25:../sensor.c   ****  */
  26:../sensor.c   **** 
  27:../sensor.c   **** #include <cyu3system.h>
  28:../sensor.c   **** #include <cyu3os.h>
  29:../sensor.c   **** #include <cyu3dma.h>
  30:../sensor.c   **** #include <cyu3error.h>
  31:../sensor.c   **** #include <cyu3uart.h>
  32:../sensor.c   **** #include <cyu3i2c.h>
  33:../sensor.c   **** #include <cyu3types.h>
  34:../sensor.c   **** #include <cyu3gpio.h>
  35:../sensor.c   **** #include <cyu3utils.h>
  36:../sensor.c   **** #include "sensor.h"
  37:../sensor.c   **** #include "uvc.h"
  38:../sensor.c   **** 
  39:../sensor.c   **** /* This function inserts a delay between successful I2C transfers to prevent
  40:../sensor.c   ****  false errors due to the slave being busy.
  41:../sensor.c   ****  */
  42:../sensor.c   **** static void SensorI2CAccessDelay(CyU3PReturnStatus_t status, CyBool_t isRead) {//add a read flag fo
  21              		.loc 1 42 0
  22              		.cfi_startproc
  23              		@ args = 0, pretend = 0, frame = 0
  24              		@ frame_needed = 0, uses_anonymous_args = 0
  25              	.LVL0:
  26 0000 10402DE9 		stmfd	sp!, {r4, lr}
  27              	.LCFI0:
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 4, -8
  30              		.cfi_offset 14, -4
  43:../sensor.c   **** 	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
  44:../sensor.c   **** 	if (status == CY_U3P_SUCCESS)
  45:../sensor.c   **** 	{
  46:../sensor.c   **** 		if(isRead){
  47:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
  31              		.loc 1 47 0
  32 0004 10409FE5 		ldr	r4, .L2
  33 0008 0400A0E1 		mov	r0, r4
  34 000c FEFFFFEB 		bl	CyFx3BusyWait
  35              	.LVL1:
  48:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
  36              		.loc 1 48 0
  37 0010 0400A0E1 		mov	r0, r4
  49:../sensor.c   **** 		}
  50:../sensor.c   **** 		else
  51:../sensor.c   **** 			CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
  52:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
  53:../sensor.c   **** 	{
  54:../sensor.c   **** 		//CyFxUVCApplnI2CInit ();
  55:../sensor.c   **** 		//CyU3PBusyWait(1000);
  56:../sensor.c   **** 	}
  57:../sensor.c   **** }
  38              		.loc 1 57 0
  39 0014 1040BDE8 		ldmfd	sp!, {r4, lr}
  48:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
  40              		.loc 1 48 0
  41 0018 FEFFFFEA 		b	CyFx3BusyWait
  42              	.LVL2:
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 001c 409C0000 		.word	40000
  47              		.cfi_endproc
  48              	.LFE12:
  50              		.align	2
  51              		.global	SensorWrite2B
  53              	SensorWrite2B:
  54              	.LFB1:
  58:../sensor.c   **** 
  59:../sensor.c   **** /* Write to an I2C slave with two bytes of data. */
  60:../sensor.c   **** CyU3PReturnStatus_t SensorWrite2B(
  61:../sensor.c   **** 	uint8_t slaveAddr,
  62:../sensor.c   **** 	uint8_t boradAddr,
  63:../sensor.c   **** 	uint8_t highAddr,
  64:../sensor.c   **** 	uint8_t lowAddr, 
  65:../sensor.c   **** 	uint8_t numData,
  66:../sensor.c   **** 	uint8_t *buf) {
  55              		.loc 1 66 0
  56              		.cfi_startproc
  57              		@ args = 8, pretend = 0, frame = 24
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL3:
  60 0020 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 24
  63              		.cfi_offset 4, -24
  64              		.cfi_offset 5, -20
  65              		.cfi_offset 6, -16
  66              		.cfi_offset 7, -12
  67              		.cfi_offset 8, -8
  68              		.cfi_offset 14, -4
  67:../sensor.c   **** 	
  68:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
  69:../sensor.c   **** 	CyU3PI2cPreamble_t preamble;
  70:../sensor.c   **** 	uint8_t inbuf[2];
  71:../sensor.c   **** 
  72:../sensor.c   **** 	/* Validate the I2C slave address. */
  73:../sensor.c   **** 	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
  69              		.loc 1 73 0
  70 0024 A00050E3 		cmp	r0, #160
  71 0028 70005013 		cmpne	r0, #112
  66:../sensor.c   **** 	
  72              		.loc 1 66 0
  73 002c 18D04DE2 		sub	sp, sp, #24
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 48
  66:../sensor.c   **** 	
  76              		.loc 1 66 0
  77 0030 00C0A0E1 		mov	ip, r0
  78              		.loc 1 73 0
  79 0034 00E0A003 		moveq	lr, #0
  80 0038 01E0A013 		movne	lr, #1
  66:../sensor.c   **** 	
  81              		.loc 1 66 0
  82 003c 0170A0E1 		mov	r7, r1
  83 0040 0260A0E1 		mov	r6, r2
  84 0044 0350A0E1 		mov	r5, r3
  85 0048 3040DDE5 		ldrb	r4, [sp, #48]	@ zero_extendqisi2
  86              	.LVL4:
  87              		.loc 1 73 0
  88 004c 2000001A 		bne	.L10
  74:../sensor.c   **** 		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
  75:../sensor.c   **** 		return 1;
  76:../sensor.c   **** 	}
  77:../sensor.c   **** 	preamble.buffer[0] = slaveAddr;						/************** command block *******************************
  78:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
  79:../sensor.c   **** 	preamble.buffer[2] = highAddr;
  80:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
  81:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
  82:../sensor.c   **** 	inbuf[0] = lowAddr;
  83:../sensor.c   **** 
  84:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
  89              		.loc 1 84 0
  90 0050 0E30A0E1 		mov	r3, lr
  91              	.LVL5:
  92 0054 08008DE2 		add	r0, sp, #8
  93              	.LVL6:
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
  94              		.loc 1 81 0
  95 0058 0380A0E3 		mov	r8, #3
  96              		.loc 1 84 0
  97 005c 0D10A0E1 		mov	r1, sp
  98              	.LVL7:
  99 0060 0120A0E3 		mov	r2, #1
 100              	.LVL8:
  77:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
 101              		.loc 1 77 0
 102 0064 08C0CDE5 		strb	ip, [sp, #8]
  78:../sensor.c   **** 	preamble.buffer[2] = highAddr;
 103              		.loc 1 78 0
 104 0068 0970CDE5 		strb	r7, [sp, #9]
  79:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 105              		.loc 1 79 0
 106 006c 0A60CDE5 		strb	r6, [sp, #10]
  80:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
 107              		.loc 1 80 0
 108 0070 B2E1CDE1 		strh	lr, [sp, #18]	@ movhi
  82:../sensor.c   **** 
 109              		.loc 1 82 0
 110 0074 0050CDE5 		strb	r5, [sp]
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
 111              		.loc 1 81 0
 112 0078 1080CDE5 		strb	r8, [sp, #16]
 113              		.loc 1 84 0
 114 007c FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 115              	.LVL9:
 116              	.LBB10:
 117              	.LBB11:
  44:../sensor.c   **** 	{
 118              		.loc 1 44 0
 119 0080 000050E3 		cmp	r0, #0
 120 0084 0100001A 		bne	.L7
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 121              		.loc 1 51 0
 122 0088 7D0EA0E3 		mov	r0, #2000
 123              	.LVL10:
 124 008c FEFFFFEB 		bl	CyFx3BusyWait
 125              	.LVL11:
 126              	.L7:
 127              	.LBE11:
 128              	.LBE10:
  85:../sensor.c   **** #ifdef DbgInfo
  86:../sensor.c   **** 	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
  87:../sensor.c   **** #endif
  88:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 0);
  89:../sensor.c   **** 
  90:../sensor.c   **** 	//buf[0] = lowData;								/****************** data block ****************************************
  91:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 129              		.loc 1 91 0
 130 0090 00C0A0E3 		mov	ip, #0
  92:../sensor.c   **** 	preamble.length = 1;
  93:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
 131              		.loc 1 93 0
 132 0094 0420A0E1 		mov	r2, r4
  92:../sensor.c   **** 	preamble.length = 1;
 133              		.loc 1 92 0
 134 0098 01E0A0E3 		mov	lr, #1
 135              		.loc 1 93 0
 136 009c 08008DE2 		add	r0, sp, #8
 137 00a0 0C30A0E1 		mov	r3, ip
 138 00a4 34109DE5 		ldr	r1, [sp, #52]
  91:../sensor.c   **** 	preamble.length = 1;
 139              		.loc 1 91 0
 140 00a8 B2C1CDE1 		strh	ip, [sp, #18]	@ movhi
  92:../sensor.c   **** 	preamble.length = 1;
 141              		.loc 1 92 0
 142 00ac 10E0CDE5 		strb	lr, [sp, #16]
 143              		.loc 1 93 0
 144 00b0 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 145              	.LVL12:
 146              	.LBB12:
 147              	.LBB13:
  44:../sensor.c   **** 	{
 148              		.loc 1 44 0
 149 00b4 004050E2 		subs	r4, r0, #0
 150 00b8 0400A011 		movne	r0, r4
 151              	.LVL13:
 152 00bc 0200001A 		bne	.L6
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 153              		.loc 1 51 0
 154 00c0 7D0EA0E3 		mov	r0, #2000
 155 00c4 FEFFFFEB 		bl	CyFx3BusyWait
 156              	.LVL14:
 157 00c8 0400A0E1 		mov	r0, r4
 158              	.L6:
 159              	.LBE13:
 160              	.LBE12:
  94:../sensor.c   **** #ifdef DbgInfo
  95:../sensor.c   **** 	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
  96:../sensor.c   **** #endif
  97:../sensor.c   **** 	/* Set the parameters for the I2C API access and then call the write API. */
  98:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 0);
  99:../sensor.c   **** 	return apiRetStatus;
 100:../sensor.c   **** }
 161              		.loc 1 100 0
 162 00cc 18D08DE2 		add	sp, sp, #24
 163              		@ sp needed
 164 00d0 F081BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
 165              	.LVL15:
 166              	.L10:
 167              	.LBB14:
 168              	.LBB15:
  74:../sensor.c   **** 		return 1;
 169              		.loc 1 74 0
 170 00d4 10109FE5 		ldr	r1, .L11
 171              	.LVL16:
 172 00d8 0400A0E3 		mov	r0, #4
 173              	.LVL17:
 174 00dc FEFFFFEB 		bl	CyU3PDebugPrint
 175              	.LVL18:
 176 00e0 0100A0E3 		mov	r0, #1
 177              	.LBE15:
 178              	.LBE14:
 179              		.loc 1 100 0
 180 00e4 18D08DE2 		add	sp, sp, #24
 181              		@ sp needed
 182 00e8 F081BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
 183              	.LVL19:
 184              	.L12:
 185              		.align	2
 186              	.L11:
 187 00ec 00000000 		.word	.LC0
 188              		.cfi_endproc
 189              	.LFE1:
 191              		.align	2
 192              		.global	SensorWrite
 194              	SensorWrite:
 195              	.LFB2:
 101:../sensor.c   **** 
 102:../sensor.c   **** CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
 103:../sensor.c   **** 		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
 196              		.loc 1 103 0
 197              		.cfi_startproc
 198              		@ args = 4, pretend = 0, frame = 16
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL20:
 104:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
 105:../sensor.c   **** 	CyU3PI2cPreamble_t preamble;
 106:../sensor.c   **** 
 107:../sensor.c   **** 	/* Validate the I2C slave address. */
 108:../sensor.c   **** 	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
 201              		.loc 1 108 0
 202 00f0 A00050E3 		cmp	r0, #160
 203 00f4 70005013 		cmpne	r0, #112
 103:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
 204              		.loc 1 103 0
 205 00f8 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 4, -16
 209              		.cfi_offset 5, -12
 210              		.cfi_offset 6, -8
 211              		.cfi_offset 14, -4
 212 00fc 00C0A0E1 		mov	ip, r0
 213 0100 10D04DE2 		sub	sp, sp, #16
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 32
 216              		.loc 1 108 0
 217 0104 00E0A003 		moveq	lr, #0
 218 0108 01E0A013 		movne	lr, #1
 219 010c 1C00001A 		bne	.L18
 109:../sensor.c   **** 		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
 110:../sensor.c   **** 		return 1;
 111:../sensor.c   **** 	}
 112:../sensor.c   **** 
 113:../sensor.c   **** 	if (count > 64) {
 220              		.loc 1 113 0
 221 0110 400053E3 		cmp	r3, #64
 222 0114 1400008A 		bhi	.L19
 114:../sensor.c   **** 		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
 115:../sensor.c   **** 		return 1;
 116:../sensor.c   **** 	}
 117:../sensor.c   **** 
 118:../sensor.c   **** 	/* Set up the I2C control parameters and invoke the write API. */
 119:../sensor.c   **** 	preamble.buffer[0] = slaveAddr;
 120:../sensor.c   **** 	preamble.buffer[1] = 0xab;//highAddr;
 121:../sensor.c   **** 	preamble.buffer[2] = 0xcd;//lowAddr;
 122:../sensor.c   **** 	preamble.length = 3;
 123:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 124:../sensor.c   **** 
 125:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
 223              		.loc 1 125 0
 224 0118 0320A0E1 		mov	r2, r3
 225              	.LVL21:
 122:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 226              		.loc 1 122 0
 227 011c 0340A0E3 		mov	r4, #3
 228              		.loc 1 125 0
 229 0120 0E30A0E1 		mov	r3, lr
 230              	.LVL22:
 120:../sensor.c   **** 	preamble.buffer[2] = 0xcd;//lowAddr;
 231              		.loc 1 120 0
 232 0124 5460E0E3 		mvn	r6, #84
 121:../sensor.c   **** 	preamble.length = 3;
 233              		.loc 1 121 0
 234 0128 3250E0E3 		mvn	r5, #50
 235              		.loc 1 125 0
 236 012c 0D00A0E1 		mov	r0, sp
 237              	.LVL23:
 238 0130 20109DE5 		ldr	r1, [sp, #32]
 239              	.LVL24:
 122:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 240              		.loc 1 122 0
 241 0134 0840CDE5 		strb	r4, [sp, #8]
 119:../sensor.c   **** 	preamble.buffer[1] = 0xab;//highAddr;
 242              		.loc 1 119 0
 243 0138 00C0CDE5 		strb	ip, [sp]
 123:../sensor.c   **** 
 244              		.loc 1 123 0
 245 013c BAE0CDE1 		strh	lr, [sp, #10]	@ movhi
 120:../sensor.c   **** 	preamble.buffer[2] = 0xcd;//lowAddr;
 246              		.loc 1 120 0
 247 0140 0160CDE5 		strb	r6, [sp, #1]
 121:../sensor.c   **** 	preamble.length = 3;
 248              		.loc 1 121 0
 249 0144 0250CDE5 		strb	r5, [sp, #2]
 250              		.loc 1 125 0
 251 0148 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 252              	.LVL25:
 253              	.LBB18:
 254              	.LBB19:
  44:../sensor.c   **** 	{
 255              		.loc 1 44 0
 256 014c 004050E2 		subs	r4, r0, #0
 257 0150 0400A011 		movne	r0, r4
 258              	.LVL26:
 259 0154 0200001A 		bne	.L15
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 260              		.loc 1 51 0
 261 0158 7D0EA0E3 		mov	r0, #2000
 262 015c FEFFFFEB 		bl	CyFx3BusyWait
 263              	.LVL27:
 264 0160 0400A0E1 		mov	r0, r4
 265              	.L15:
 266              	.LBE19:
 267              	.LBE18:
 126:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 0);
 127:../sensor.c   **** 
 128:../sensor.c   **** 	return apiRetStatus;
 129:../sensor.c   **** }
 268              		.loc 1 129 0
 269 0164 10D08DE2 		add	sp, sp, #16
 270              		@ sp needed
 271 0168 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 272              	.LVL28:
 273              	.L19:
 114:../sensor.c   **** 		return 1;
 274              		.loc 1 114 0
 275 016c 28109FE5 		ldr	r1, .L20
 276              	.LVL29:
 277 0170 0400A0E3 		mov	r0, #4
 278              	.LVL30:
 279 0174 FEFFFFEB 		bl	CyU3PDebugPrint
 280              	.LVL31:
 115:../sensor.c   **** 	}
 281              		.loc 1 115 0
 282 0178 0100A0E3 		mov	r0, #1
 283              		.loc 1 129 0
 284 017c 10D08DE2 		add	sp, sp, #16
 285              		@ sp needed
 286 0180 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 287              	.LVL32:
 288              	.L18:
 109:../sensor.c   **** 		return 1;
 289              		.loc 1 109 0
 290 0184 14109FE5 		ldr	r1, .L20+4
 291              	.LVL33:
 292 0188 0400A0E3 		mov	r0, #4
 293              	.LVL34:
 294 018c FEFFFFEB 		bl	CyU3PDebugPrint
 295              	.LVL35:
 110:../sensor.c   **** 	}
 296              		.loc 1 110 0
 297 0190 0100A0E3 		mov	r0, #1
 298              		.loc 1 129 0
 299 0194 10D08DE2 		add	sp, sp, #16
 300              		@ sp needed
 301 0198 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 302              	.L21:
 303              		.align	2
 304              	.L20:
 305 019c 24000000 		.word	.LC1
 306 01a0 00000000 		.word	.LC0
 307              		.cfi_endproc
 308              	.LFE2:
 310              		.align	2
 311              		.global	SensorRead2B
 313              	SensorRead2B:
 314              	.LFB3:
 130:../sensor.c   **** 
 131:../sensor.c   **** CyU3PReturnStatus_t SensorRead2B(
 132:../sensor.c   **** 		uint8_t slaveAddr, 
 133:../sensor.c   **** 		uint8_t highAddr,
 134:../sensor.c   **** 		uint8_t lowAddr, 
 135:../sensor.c   **** 		uint8_t RegAdd,
 136:../sensor.c   **** 		uint8_t numData,
 137:../sensor.c   **** 		uint8_t *buf) {
 315              		.loc 1 137 0
 316              		.cfi_startproc
 317              		@ args = 8, pretend = 0, frame = 16
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              	.LVL36:
 320 01a4 F0432DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, lr}
 321              	.LCFI5:
 322              		.cfi_def_cfa_offset 28
 323              		.cfi_offset 4, -28
 324              		.cfi_offset 5, -24
 325              		.cfi_offset 6, -20
 326              		.cfi_offset 7, -16
 327              		.cfi_offset 8, -12
 328              		.cfi_offset 9, -8
 329              		.cfi_offset 14, -4
 138:../sensor.c   **** 	
 139:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
 140:../sensor.c   **** 	CyU3PI2cPreamble_t preamble;
 141:../sensor.c   **** 
 142:../sensor.c   **** 	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
 330              		.loc 1 142 0
 331 01a8 A10050E3 		cmp	r0, #161
 332 01ac 71005013 		cmpne	r0, #113
 137:../sensor.c   **** 	
 333              		.loc 1 137 0
 334 01b0 1CD04DE2 		sub	sp, sp, #28
 335              	.LCFI6:
 336              		.cfi_def_cfa_offset 56
 137:../sensor.c   **** 	
 337              		.loc 1 137 0
 338 01b4 0040A0E1 		mov	r4, r0
 339              		.loc 1 142 0
 340 01b8 00C0A003 		moveq	ip, #0
 341 01bc 01C0A013 		movne	ip, #1
 137:../sensor.c   **** 	
 342              		.loc 1 137 0
 343 01c0 0170A0E1 		mov	r7, r1
 344 01c4 02E0A0E1 		mov	lr, r2
 345 01c8 3860DDE5 		ldrb	r6, [sp, #56]	@ zero_extendqisi2
 346 01cc 3C509DE5 		ldr	r5, [sp, #60]
 347              		.loc 1 142 0
 348 01d0 2300001A 		bne	.L30
 349              	.LVL37:
 350              	.LBB28:
 351              	.LBB29:
 143:../sensor.c   **** 		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
 144:../sensor.c   **** 		return 1;
 145:../sensor.c   **** 	}
 146:../sensor.c   **** 	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
 147:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 148:../sensor.c   **** 	preamble.buffer[2] = lowAddr; //lowAddr;
 149:../sensor.c   **** 	preamble.length = 3;
 150:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 151:../sensor.c   **** 	buf[0] = RegAdd;
 352              		.loc 1 151 0
 353 01d4 0030C5E5 		strb	r3, [r5]
 152:../sensor.c   **** #ifdef DbgInfo
 153:../sensor.c   **** 	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]
 154:../sensor.c   **** #endif
 155:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for re
 354              		.loc 1 155 0
 355 01d8 0120A0E3 		mov	r2, #1
 356              	.LVL38:
 357 01dc 0C30A0E1 		mov	r3, ip
 358              	.LVL39:
 359 01e0 08008DE2 		add	r0, sp, #8
 360              	.LVL40:
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 361              		.loc 1 146 0
 362 01e4 0190C4E3 		bic	r9, r4, #1
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 363              		.loc 1 149 0
 364 01e8 0380A0E3 		mov	r8, #3
 365              		.loc 1 155 0
 366 01ec 0510A0E1 		mov	r1, r5
 367              	.LVL41:
 147:../sensor.c   **** 	preamble.buffer[2] = lowAddr; //lowAddr;
 368              		.loc 1 147 0
 369 01f0 0970CDE5 		strb	r7, [sp, #9]
 148:../sensor.c   **** 	preamble.length = 3;
 370              		.loc 1 148 0
 371 01f4 0AE0CDE5 		strb	lr, [sp, #10]
 150:../sensor.c   **** 	buf[0] = RegAdd;
 372              		.loc 1 150 0
 373 01f8 B2C1CDE1 		strh	ip, [sp, #18]	@ movhi
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 374              		.loc 1 146 0
 375 01fc 0890CDE5 		strb	r9, [sp, #8]
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 376              		.loc 1 149 0
 377 0200 1080CDE5 		strb	r8, [sp, #16]
 378              		.loc 1 155 0
 379 0204 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 380              	.LVL42:
 156:../sensor.c   **** 	/*** test I2C bus ready ****/
 157:../sensor.c   **** 	if(apiRetStatus != CY_U3P_SUCCESS){
 381              		.loc 1 157 0
 382 0208 002050E2 		subs	r2, r0, #0
 383 020c 1A00001A 		bne	.L31
 384              	.LVL43:
 385              	.LBB30:
 386              	.LBB31:
 387              	.LBB32:
  47:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
 388              		.loc 1 47 0
 389 0210 A0009FE5 		ldr	r0, .L33
 390              	.LVL44:
 391 0214 FEFFFFEB 		bl	CyFx3BusyWait
 392              	.LVL45:
  48:../sensor.c   **** 		}
 393              		.loc 1 48 0
 394 0218 98009FE5 		ldr	r0, .L33
 395 021c FEFFFFEB 		bl	CyFx3BusyWait
 396              	.LVL46:
 397              	.L27:
 398              	.LBE32:
 399              	.LBE31:
 400              	.LBE30:
 158:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 159:../sensor.c   **** 	}
 160:../sensor.c   **** 
 161:../sensor.c   **** #ifdef DbgInfo
 162:../sensor.c   **** 	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
 163:../sensor.c   **** #endif
 164:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 1);
 165:../sensor.c   **** 	preamble.buffer[0] = slaveAddr;
 166:../sensor.c   **** 	preamble.length = 1;
 167:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 401              		.loc 1 167 0
 402 0220 00C0A0E3 		mov	ip, #0
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 403              		.loc 1 166 0
 404 0224 01E0A0E3 		mov	lr, #1
 168:../sensor.c   **** 
 169:../sensor.c   **** 	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
 405              		.loc 1 169 0
 406 0228 08008DE2 		add	r0, sp, #8
 407 022c 0620A0E1 		mov	r2, r6
 408 0230 0C30A0E1 		mov	r3, ip
 409 0234 0510A0E1 		mov	r1, r5
 165:../sensor.c   **** 	preamble.length = 1;
 410              		.loc 1 165 0
 411 0238 0840CDE5 		strb	r4, [sp, #8]
 167:../sensor.c   **** 
 412              		.loc 1 167 0
 413 023c B2C1CDE1 		strh	ip, [sp, #18]	@ movhi
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 414              		.loc 1 166 0
 415 0240 10E0CDE5 		strb	lr, [sp, #16]
 416              		.loc 1 169 0
 417 0244 FEFFFFEB 		bl	CyU3PI2cReceiveBytes
 418              	.LVL47:
 170:../sensor.c   **** 	/*** test I2C bus ready ****/
 171:../sensor.c   **** 	if(apiRetStatus != CY_U3P_SUCCESS){
 419              		.loc 1 171 0
 420 0248 004050E2 		subs	r4, r0, #0
 421              	.LVL48:
 422 024c 1100001A 		bne	.L32
 423              	.LVL49:
 424              	.LBB33:
 425              	.LBB34:
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 426              		.loc 1 51 0
 427 0250 7D0EA0E3 		mov	r0, #2000
 428              	.LVL50:
 429 0254 FEFFFFEB 		bl	CyFx3BusyWait
 430              	.LVL51:
 431              	.L28:
 432              	.LBE34:
 433              	.LBE33:
 169:../sensor.c   **** 	/*** test I2C bus ready ****/
 434              		.loc 1 169 0
 435 0258 0400A0E1 		mov	r0, r4
 436              	.LBE29:
 437              	.LBE28:
 172:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 173:../sensor.c   **** 	}
 174:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 0);
 175:../sensor.c   **** #ifdef DbgInfo
 176:../sensor.c   **** 	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional de
 177:../sensor.c   **** #endif
 178:../sensor.c   **** 	return apiRetStatus;
 179:../sensor.c   **** }
 438              		.loc 1 179 0
 439 025c 1CD08DE2 		add	sp, sp, #28
 440              		@ sp needed
 441 0260 F083BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, pc}
 442              	.LVL52:
 443              	.L30:
 143:../sensor.c   **** 		return 1;
 444              		.loc 1 143 0
 445 0264 50109FE5 		ldr	r1, .L33+4
 446              	.LVL53:
 447 0268 0400A0E3 		mov	r0, #4
 448              	.LVL54:
 449 026c FEFFFFEB 		bl	CyU3PDebugPrint
 450              	.LVL55:
 144:../sensor.c   **** 	}
 451              		.loc 1 144 0
 452 0270 0100A0E3 		mov	r0, #1
 453              		.loc 1 179 0
 454 0274 1CD08DE2 		add	sp, sp, #28
 455              		@ sp needed
 456 0278 F083BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, pc}
 457              	.LVL56:
 458              	.L31:
 459              	.LBB36:
 460              	.LBB35:
 158:../sensor.c   **** 	}
 461              		.loc 1 158 0
 462 027c 0110D5E5 		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 463 0280 0030D5E5 		ldrb	r3, [r5]	@ zero_extendqisi2
 464 0284 0400A0E3 		mov	r0, #4
 465              	.LVL57:
 466 0288 00108DE5 		str	r1, [sp]
 467 028c 2C109FE5 		ldr	r1, .L33+8
 468 0290 FEFFFFEB 		bl	CyU3PDebugPrint
 469              	.LVL58:
 470 0294 E1FFFFEA 		b	.L27
 471              	.LVL59:
 472              	.L32:
 172:../sensor.c   **** 	}
 473              		.loc 1 172 0
 474 0298 0120D5E5 		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 475 029c 0030D5E5 		ldrb	r3, [r5]	@ zero_extendqisi2
 476 02a0 1C109FE5 		ldr	r1, .L33+12
 477 02a4 00208DE5 		str	r2, [sp]
 478 02a8 0400A0E3 		mov	r0, #4
 479              	.LVL60:
 480 02ac 0420A0E1 		mov	r2, r4
 481 02b0 FEFFFFEB 		bl	CyU3PDebugPrint
 482              	.LVL61:
 483 02b4 E7FFFFEA 		b	.L28
 484              	.L34:
 485              		.align	2
 486              	.L33:
 487 02b8 409C0000 		.word	40000
 488 02bc 00000000 		.word	.LC0
 489 02c0 44000000 		.word	.LC2
 490 02c4 60000000 		.word	.LC3
 491              	.LBE35:
 492              	.LBE36:
 493              		.cfi_endproc
 494              	.LFE3:
 496              		.align	2
 497              		.global	SensorRead
 499              	SensorRead:
 500              	.LFB4:
 180:../sensor.c   **** 
 181:../sensor.c   **** CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
 182:../sensor.c   **** 		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
 501              		.loc 1 182 0
 502              		.cfi_startproc
 503              		@ args = 4, pretend = 0, frame = 16
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL62:
 183:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
 184:../sensor.c   **** 	CyU3PI2cPreamble_t preamble;
 185:../sensor.c   **** 
 186:../sensor.c   **** 	/* Validate the parameters. */
 187:../sensor.c   **** 	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
 506              		.loc 1 187 0
 507 02c8 A10050E3 		cmp	r0, #161
 508 02cc 71005013 		cmpne	r0, #113
 182:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
 509              		.loc 1 182 0
 510 02d0 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 511              	.LCFI7:
 512              		.cfi_def_cfa_offset 16
 513              		.cfi_offset 4, -16
 514              		.cfi_offset 5, -12
 515              		.cfi_offset 6, -8
 516              		.cfi_offset 14, -4
 517 02d4 00C0A0E1 		mov	ip, r0
 518 02d8 10D04DE2 		sub	sp, sp, #16
 519              	.LCFI8:
 520              		.cfi_def_cfa_offset 32
 521              		.loc 1 187 0
 522 02dc 0010A003 		moveq	r1, #0
 523 02e0 0110A013 		movne	r1, #1
 524              	.LVL63:
 525 02e4 1E00001A 		bne	.L40
 188:../sensor.c   **** 		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
 189:../sensor.c   **** 		return 1;
 190:../sensor.c   **** 	}
 191:../sensor.c   **** 	if (count > 64) {
 526              		.loc 1 191 0
 527 02e8 400053E3 		cmp	r3, #64
 528 02ec 1600008A 		bhi	.L41
 192:../sensor.c   **** 		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
 193:../sensor.c   **** 		return 1;
 194:../sensor.c   **** 	}
 195:../sensor.c   **** 	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
 196:../sensor.c   **** 	preamble.buffer[1] = 0x55;//highAddr;
 197:../sensor.c   **** 	preamble.buffer[2] = 0xaa;//lowAddr;
 198:../sensor.c   **** 	preamble.buffer[3] = slaveAddr;
 199:../sensor.c   **** 	preamble.length = 4;
 529              		.loc 1 199 0
 530 02f0 04E0A0E3 		mov	lr, #4
 200:../sensor.c   **** 	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
 201:../sensor.c   **** 
 202:../sensor.c   **** 	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
 531              		.loc 1 202 0
 532 02f4 0320A0E1 		mov	r2, r3
 533              	.LVL64:
 195:../sensor.c   **** 	preamble.buffer[1] = 0x55;//highAddr;
 534              		.loc 1 195 0
 535 02f8 0160C0E3 		bic	r6, r0, #1
 536              		.loc 1 202 0
 537 02fc 0130A0E1 		mov	r3, r1
 538              	.LVL65:
 197:../sensor.c   **** 	preamble.buffer[3] = slaveAddr;
 539              		.loc 1 197 0
 540 0300 5540E0E3 		mvn	r4, #85
 196:../sensor.c   **** 	preamble.buffer[2] = 0xaa;//lowAddr;
 541              		.loc 1 196 0
 542 0304 5550A0E3 		mov	r5, #85
 543              		.loc 1 202 0
 544 0308 0D00A0E1 		mov	r0, sp
 545              	.LVL66:
 546 030c 20109DE5 		ldr	r1, [sp, #32]
 197:../sensor.c   **** 	preamble.buffer[3] = slaveAddr;
 547              		.loc 1 197 0
 548 0310 0240CDE5 		strb	r4, [sp, #2]
 198:../sensor.c   **** 	preamble.length = 4;
 549              		.loc 1 198 0
 550 0314 03C0CDE5 		strb	ip, [sp, #3]
 195:../sensor.c   **** 	preamble.buffer[1] = 0x55;//highAddr;
 551              		.loc 1 195 0
 552 0318 0060CDE5 		strb	r6, [sp]
 196:../sensor.c   **** 	preamble.buffer[2] = 0xaa;//lowAddr;
 553              		.loc 1 196 0
 554 031c 0150CDE5 		strb	r5, [sp, #1]
 199:../sensor.c   **** 	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
 555              		.loc 1 199 0
 556 0320 08E0CDE5 		strb	lr, [sp, #8]
 200:../sensor.c   **** 
 557              		.loc 1 200 0
 558 0324 BAE0CDE1 		strh	lr, [sp, #10]	@ movhi
 559              		.loc 1 202 0
 560 0328 FEFFFFEB 		bl	CyU3PI2cReceiveBytes
 561              	.LVL67:
 562              	.LBB39:
 563              	.LBB40:
  44:../sensor.c   **** 	{
 564              		.loc 1 44 0
 565 032c 004050E2 		subs	r4, r0, #0
 566 0330 0400A011 		movne	r0, r4
 567              	.LVL68:
 568 0334 0200001A 		bne	.L37
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 569              		.loc 1 51 0
 570 0338 7D0EA0E3 		mov	r0, #2000
 571 033c FEFFFFEB 		bl	CyFx3BusyWait
 572              	.LVL69:
 573 0340 0400A0E1 		mov	r0, r4
 574              	.L37:
 575              	.LBE40:
 576              	.LBE39:
 203:../sensor.c   **** 	SensorI2CAccessDelay(apiRetStatus, 0);
 204:../sensor.c   **** 
 205:../sensor.c   **** 	return apiRetStatus;
 206:../sensor.c   **** }
 577              		.loc 1 206 0
 578 0344 10D08DE2 		add	sp, sp, #16
 579              		@ sp needed
 580 0348 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 581              	.LVL70:
 582              	.L41:
 192:../sensor.c   **** 		return 1;
 583              		.loc 1 192 0
 584 034c 28109FE5 		ldr	r1, .L42
 585 0350 0400A0E3 		mov	r0, #4
 586              	.LVL71:
 587 0354 FEFFFFEB 		bl	CyU3PDebugPrint
 588              	.LVL72:
 193:../sensor.c   **** 	}
 589              		.loc 1 193 0
 590 0358 0100A0E3 		mov	r0, #1
 591              		.loc 1 206 0
 592 035c 10D08DE2 		add	sp, sp, #16
 593              		@ sp needed
 594 0360 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 595              	.LVL73:
 596              	.L40:
 188:../sensor.c   **** 		return 1;
 597              		.loc 1 188 0
 598 0364 14109FE5 		ldr	r1, .L42+4
 599 0368 0400A0E3 		mov	r0, #4
 600              	.LVL74:
 601 036c FEFFFFEB 		bl	CyU3PDebugPrint
 602              	.LVL75:
 189:../sensor.c   **** 	}
 603              		.loc 1 189 0
 604 0370 0100A0E3 		mov	r0, #1
 605              		.loc 1 206 0
 606 0374 10D08DE2 		add	sp, sp, #16
 607              		@ sp needed
 608 0378 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 609              	.L43:
 610              		.align	2
 611              	.L42:
 612 037c 24000000 		.word	.LC1
 613 0380 00000000 		.word	.LC0
 614              		.cfi_endproc
 615              	.LFE4:
 617              		.align	2
 618              		.global	SensorReset
 620              	SensorReset:
 621              	.LFB5:
 207:../sensor.c   **** 
 208:../sensor.c   **** /*
 209:../sensor.c   ****  * Reset the image sensor using GPIO.
 210:../sensor.c   ****  */
 211:../sensor.c   **** void SensorReset(void) {
 622              		.loc 1 211 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626 0384 38402DE9 		stmfd	sp!, {r3, r4, r5, lr}
 627              	.LCFI9:
 628              		.cfi_def_cfa_offset 16
 629              		.cfi_offset 3, -16
 630              		.cfi_offset 4, -12
 631              		.cfi_offset 5, -8
 632              		.cfi_offset 14, -4
 212:../sensor.c   **** 	CyU3PReturnStatus_t apiRetStatus;
 213:../sensor.c   **** 	uint16_t preTick, posTick;
 214:../sensor.c   **** 	/* Drive the GPIO low to reset the sensor. */
 215:../sensor.c   **** 	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
 216:../sensor.c   **** 	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
 633              		.loc 1 216 0
 634 0388 1600A0E3 		mov	r0, #22
 635 038c 0010A0E3 		mov	r1, #0
 636 0390 FEFFFFEB 		bl	CyU3PGpioSetValue
 637              	.LVL76:
 217:../sensor.c   **** 	if (apiRetStatus != CY_U3P_SUCCESS) {
 638              		.loc 1 217 0
 639 0394 002050E2 		subs	r2, r0, #0
 218:../sensor.c   **** 		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
 640              		.loc 1 218 0
 641 0398 0400A0E3 		mov	r0, #4
 642              	.LVL77:
 217:../sensor.c   **** 	if (apiRetStatus != CY_U3P_SUCCESS) {
 643              		.loc 1 217 0
 644 039c 1A00001A 		bne	.L49
 219:../sensor.c   **** 				apiRetStatus);
 220:../sensor.c   **** 		return;
 221:../sensor.c   **** 	}
 222:../sensor.c   **** 	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
 645              		.loc 1 222 0
 646 03a0 70109FE5 		ldr	r1, .L50
 647 03a4 FEFFFFEB 		bl	CyU3PDebugPrint
 648              	.LVL78:
 649 03a8 0240A0E3 		mov	r4, #2
 650              	.LVL79:
 651              	.L47:
 223:../sensor.c   **** 	/* Wait for some time to allow proper reset. */
 224:../sensor.c   **** 	uint8_t i = 0;
 225:../sensor.c   **** 	while (i++ < 2){
 226:../sensor.c   **** 		preTick = CyU3PGetTime();
 652              		.loc 1 226 0
 653 03ac FEFFFFEB 		bl	_tx_time_get
 654              	.LVL80:
 655 03b0 0050A0E1 		mov	r5, r0
 656              	.LVL81:
 227:../sensor.c   **** 		CyU3PThreadSleep(500);  // change the value into 100 from 10.
 657              		.loc 1 227 0
 658 03b4 7D0FA0E3 		mov	r0, #500
 659              	.LVL82:
 660 03b8 FEFFFFEB 		bl	_tx_thread_sleep
 661              	.LVL83:
 228:../sensor.c   **** 		posTick = CyU3PGetTime();
 662              		.loc 1 228 0
 663 03bc FEFFFFEB 		bl	_tx_time_get
 664              	.LVL84:
 665 03c0 0528A0E1 		mov	r2, r5, asl #16
 229:../sensor.c   **** 		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
 666              		.loc 1 229 0
 667 03c4 2228A0E1 		mov	r2, r2, lsr #16
 668 03c8 4C109FE5 		ldr	r1, .L50+4
 669 03cc 0038A0E1 		mov	r3, r0, asl #16
 670 03d0 2338A0E1 		mov	r3, r3, lsr #16
 671 03d4 0400A0E3 		mov	r0, #4
 672              	.LVL85:
 673 03d8 FEFFFFEB 		bl	CyU3PDebugPrint
 674              	.LVL86:
 675 03dc 013044E2 		sub	r3, r4, #1
 225:../sensor.c   **** 		preTick = CyU3PGetTime();
 676              		.loc 1 225 0
 677 03e0 FF4013E2 		ands	r4, r3, #255
 678 03e4 F0FFFF1A 		bne	.L47
 230:../sensor.c   **** 		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
 231:../sensor.c   **** 	}
 232:../sensor.c   **** 
 233:../sensor.c   **** 	/* Drive the GPIO high to bring the sensor out of reset. */
 234:../sensor.c   **** 	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
 235:../sensor.c   **** 	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
 679              		.loc 1 235 0
 680 03e8 1600A0E3 		mov	r0, #22
 681 03ec 0110A0E3 		mov	r1, #1
 682 03f0 FEFFFFEB 		bl	CyU3PGpioSetValue
 683              	.LVL87:
 236:../sensor.c   **** 	if (apiRetStatus != CY_U3P_SUCCESS) {
 684              		.loc 1 236 0
 685 03f4 002050E2 		subs	r2, r0, #0
 686 03f8 0200001A 		bne	.L48
 687              	.LVL88:
 237:../sensor.c   **** 		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
 238:../sensor.c   **** 				apiRetStatus);
 239:../sensor.c   **** 		return;
 240:../sensor.c   **** 	}
 241:../sensor.c   **** /* pause the cpu */
 242:../sensor.c   **** 	while (i++ < 4){
 243:../sensor.c   **** 		CyU3PThreadSleep(600);  // change the value into 100 from 10.
 688              		.loc 1 243 0 discriminator 1
 689 03fc 960FA0E3 		mov	r0, #600
 690              	.LVL89:
 244:../sensor.c   **** 		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
 245:../sensor.c   **** 	}
 246:../sensor.c   **** 
 247:../sensor.c   **** 	return;
 248:../sensor.c   **** }
 691              		.loc 1 248 0 discriminator 1
 692 0400 3840BDE8 		ldmfd	sp!, {r3, r4, r5, lr}
 693              	.LVL90:
 243:../sensor.c   **** 		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
 694              		.loc 1 243 0 discriminator 1
 695 0404 FEFFFFEA 		b	_tx_thread_sleep
 696              	.LVL91:
 697              	.L48:
 237:../sensor.c   **** 		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
 698              		.loc 1 237 0
 699 0408 0400A0E3 		mov	r0, #4
 700              	.LVL92:
 701              	.L49:
 702 040c 0C109FE5 		ldr	r1, .L50+8
 703              		.loc 1 248 0
 704 0410 3840BDE8 		ldmfd	sp!, {r3, r4, r5, lr}
 237:../sensor.c   **** 		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
 705              		.loc 1 237 0
 706 0414 FEFFFFEA 		b	CyU3PDebugPrint
 707              	.LVL93:
 708              	.L51:
 709              		.align	2
 710              	.L50:
 711 0418 A4000000 		.word	.LC5
 712 041c B8000000 		.word	.LC6
 713 0420 7C000000 		.word	.LC4
 714              		.cfi_endproc
 715              	.LFE5:
 717              		.align	2
 718              		.global	SensorInit
 720              	SensorInit:
 721              	.LFB6:
 249:../sensor.c   **** 
 250:../sensor.c   **** /* Image sensor initialization sequence. */
 251:../sensor.c   **** void SensorInit(void) {
 722              		.loc 1 251 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 252:../sensor.c   **** 	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
 253:../sensor.c   **** 	{
 254:../sensor.c   **** 		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
 727              		.loc 1 254 0
 728 0424 0400A0E3 		mov	r0, #4
 729 0428 00109FE5 		ldr	r1, .L53
 730 042c FEFFFFEA 		b	CyU3PDebugPrint
 731              	.LVL94:
 732              	.L54:
 733              		.align	2
 734              	.L53:
 735 0430 CC000000 		.word	.LC7
 736              		.cfi_endproc
 737              	.LFE6:
 739              		.align	2
 740              		.global	SensorI2cBusTest
 742              	SensorI2cBusTest:
 743              	.LFB7:
 255:../sensor.c   **** 		return;
 256:../sensor.c   **** 	}
 257:../sensor.c   **** 
 258:../sensor.c   **** 	/* Generic settings (which are common for all resolutions) for bringing up the image sensor to str
 259:../sensor.c   **** 	 video data should be populated here.
 260:../sensor.c   **** 	 */
 261:../sensor.c   **** 
 262:../sensor.c   **** 	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as defau
 263:../sensor.c   **** 	//SensorScaling_HD720p_30fps();
 264:../sensor.c   **** }
 265:../sensor.c   **** 
 266:../sensor.c   **** /*
 267:../sensor.c   ****    Verify that the sensor can be accessed over the I2C bus from FX3.
 268:../sensor.c   ****  */
 269:../sensor.c   **** uint8_t SensorI2cBusTest(void) {
 744              		.loc 1 269 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 270:../sensor.c   **** 	/* The sensor ID register can be read here to verify sensor connectivity. */
 271:../sensor.c   **** 	uint8_t buf[2];
 272:../sensor.c   **** 
 273:../sensor.c   **** 	/* Reading sensor ID */
 274:../sensor.c   **** #if 0	//remove sensor ID read
 275:../sensor.c   **** 	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_
 276:../sensor.c   **** 		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
 277:../sensor.c   **** 			return CY_U3P_SUCCESS;
 278:../sensor.c   **** 		}
 279:../sensor.c   **** 	}
 280:../sensor.c   **** #endif
 281:../sensor.c   **** #ifdef USB_DEBUG_PRINT
 282:../sensor.c   **** 	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
 283:../sensor.c   **** #endif
 284:../sensor.c   **** 	return 1;
 285:../sensor.c   **** }
 749              		.loc 1 285 0
 750 0434 0100A0E3 		mov	r0, #1
 751 0438 1EFF2FE1 		bx	lr
 752              		.cfi_endproc
 753              	.LFE7:
 755              		.align	2
 756              		.global	SensorGetControl
 758              	SensorGetControl:
 759              	.LFB8:
 286:../sensor.c   **** 
 287:../sensor.c   **** /*************************************************************
 288:../sensor.c   ****  *  the modularized control get routine. IDext is the control ID.
 289:../sensor.c   ****  *
 290:../sensor.c   ****  * ********************************************************* */
 291:../sensor.c   **** 
 292:../sensor.c   **** uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addr
 293:../sensor.c   **** {
 760              		.loc 1 293 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 24
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL95:
 765 043c 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 766              	.LCFI10:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 4, -16
 769              		.cfi_offset 5, -12
 770              		.cfi_offset 6, -8
 771              		.cfi_offset 14, -4
 772              	.LBB51:
 773              	.LBB52:
 774              	.LBB53:
 775              	.LBB54:
 150:../sensor.c   **** 	buf[0] = RegAdd;
 776              		.loc 1 150 0
 777 0440 00C0A0E3 		mov	ip, #0
 778              	.LBE54:
 779              	.LBE53:
 780              	.LBE52:
 781              	.LBE51:
 782              		.loc 1 293 0
 783 0444 20D04DE2 		sub	sp, sp, #32
 784              	.LCFI11:
 785              		.cfi_def_cfa_offset 48
 786              		.loc 1 293 0
 787 0448 0040A0E1 		mov	r4, r0
 788              	.LVL96:
 789              	.LBB66:
 790              	.LBB64:
 791              	.LBB62:
 792              	.LBB60:
 148:../sensor.c   **** 	preamble.length = 3;
 793              		.loc 1 148 0
 794 044c 1210CDE5 		strb	r1, [sp, #18]
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 795              		.loc 1 149 0
 796 0450 03E0A0E3 		mov	lr, #3
 155:../sensor.c   **** 	/*** test I2C bus ready ****/
 797              		.loc 1 155 0
 798 0454 0120A0E3 		mov	r2, #1
 799 0458 0C30A0E1 		mov	r3, ip
 800 045c 10008DE2 		add	r0, sp, #16
 801              	.LVL97:
 802 0460 08108DE2 		add	r1, sp, #8
 803              	.LVL98:
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 804              		.loc 1 146 0
 805 0464 7060A0E3 		mov	r6, #112
 147:../sensor.c   **** 	preamble.buffer[2] = lowAddr; //lowAddr;
 806              		.loc 1 147 0
 807 0468 5350A0E3 		mov	r5, #83
 151:../sensor.c   **** #ifdef DbgInfo
 808              		.loc 1 151 0
 809 046c 0840CDE5 		strb	r4, [sp, #8]
 150:../sensor.c   **** 	buf[0] = RegAdd;
 810              		.loc 1 150 0
 811 0470 BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 812              		.loc 1 146 0
 813 0474 1060CDE5 		strb	r6, [sp, #16]
 147:../sensor.c   **** 	preamble.buffer[2] = lowAddr; //lowAddr;
 814              		.loc 1 147 0
 815 0478 1150CDE5 		strb	r5, [sp, #17]
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 816              		.loc 1 149 0
 817 047c 18E0CDE5 		strb	lr, [sp, #24]
 155:../sensor.c   **** 	/*** test I2C bus ready ****/
 818              		.loc 1 155 0
 819 0480 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 820              	.LVL99:
 157:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 821              		.loc 1 157 0
 822 0484 002050E2 		subs	r2, r0, #0
 823 0488 2100001A 		bne	.L62
 824              	.LVL100:
 825              	.LBB55:
 826              	.LBB56:
 827              	.LBB57:
  47:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
 828              		.loc 1 47 0
 829 048c 9C009FE5 		ldr	r0, .L64
 830              	.LVL101:
 831 0490 FEFFFFEB 		bl	CyFx3BusyWait
 832              	.LVL102:
  48:../sensor.c   **** 		}
 833              		.loc 1 48 0
 834 0494 94009FE5 		ldr	r0, .L64
 835 0498 FEFFFFEB 		bl	CyFx3BusyWait
 836              	.LVL103:
 837              	.L59:
 838              	.LBE57:
 839              	.LBE56:
 840              	.LBE55:
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 841              		.loc 1 166 0
 842 049c 01E0A0E3 		mov	lr, #1
 167:../sensor.c   **** 
 843              		.loc 1 167 0
 844 04a0 00C0A0E3 		mov	ip, #0
 169:../sensor.c   **** 	/*** test I2C bus ready ****/
 845              		.loc 1 169 0
 846 04a4 0E20A0E1 		mov	r2, lr
 847 04a8 10008DE2 		add	r0, sp, #16
 848 04ac 08108DE2 		add	r1, sp, #8
 849              	.LVL104:
 850 04b0 0C30A0E1 		mov	r3, ip
 165:../sensor.c   **** 	preamble.length = 1;
 851              		.loc 1 165 0
 852 04b4 7150A0E3 		mov	r5, #113
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 853              		.loc 1 166 0
 854 04b8 18E0CDE5 		strb	lr, [sp, #24]
 167:../sensor.c   **** 
 855              		.loc 1 167 0
 856 04bc BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
 165:../sensor.c   **** 	preamble.length = 1;
 857              		.loc 1 165 0
 858 04c0 1050CDE5 		strb	r5, [sp, #16]
 169:../sensor.c   **** 	/*** test I2C bus ready ****/
 859              		.loc 1 169 0
 860 04c4 FEFFFFEB 		bl	CyU3PI2cReceiveBytes
 861              	.LVL105:
 171:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 862              		.loc 1 171 0
 863 04c8 002050E2 		subs	r2, r0, #0
 864 04cc 0900001A 		bne	.L63
 865              	.LVL106:
 866              	.LBB58:
 867              	.LBB59:
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 868              		.loc 1 51 0
 869 04d0 7D0EA0E3 		mov	r0, #2000
 870              	.LVL107:
 871 04d4 FEFFFFEB 		bl	CyFx3BusyWait
 872              	.LVL108:
 873              	.L60:
 874              	.LBE59:
 875              	.LBE58:
 876              	.LBE60:
 877              	.LBE62:
 878              	.LBE64:
 879              	.LBE66:
 294:../sensor.c   **** 	uint8_t buf[2];
 295:../sensor.c   **** 	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, 1, buf);
 296:../sensor.c   **** //#ifdef USB_DEBUG_PRINT
 297:../sensor.c   **** 	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
 880              		.loc 1 297 0
 881 04d8 0420A0E1 		mov	r2, r4
 882 04dc 50109FE5 		ldr	r1, .L64+4
 883 04e0 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 884 04e4 0400A0E3 		mov	r0, #4
 885 04e8 FEFFFFEB 		bl	CyU3PDebugPrint
 886              	.LVL109:
 298:../sensor.c   **** //#endif
 299:../sensor.c   **** 	return buf[0];
 887              		.loc 1 299 0
 888 04ec 0800DDE5 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 300:../sensor.c   **** };
 889              		.loc 1 300 0
 890 04f0 20D08DE2 		add	sp, sp, #32
 891              		@ sp needed
 892 04f4 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 893              	.LVL110:
 894              	.L63:
 895              	.LBB67:
 896              	.LBB65:
 897              	.LBB63:
 898              	.LBB61:
 172:../sensor.c   **** 	}
 899              		.loc 1 172 0
 900 04f8 0910DDE5 		ldrb	r1, [sp, #9]	@ zero_extendqisi2
 901 04fc 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 902 0500 00108DE5 		str	r1, [sp]
 903 0504 0400A0E3 		mov	r0, #4
 904              	.LVL111:
 905 0508 28109FE5 		ldr	r1, .L64+8
 906 050c FEFFFFEB 		bl	CyU3PDebugPrint
 907              	.LVL112:
 908 0510 F0FFFFEA 		b	.L60
 909              	.LVL113:
 910              	.L62:
 158:../sensor.c   **** 	}
 911              		.loc 1 158 0
 912 0514 0910DDE5 		ldrb	r1, [sp, #9]	@ zero_extendqisi2
 913 0518 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 914 051c 00108DE5 		str	r1, [sp]
 915 0520 0400A0E3 		mov	r0, #4
 916              	.LVL114:
 917 0524 10109FE5 		ldr	r1, .L64+12
 918 0528 FEFFFFEB 		bl	CyU3PDebugPrint
 919              	.LVL115:
 920 052c DAFFFFEA 		b	.L59
 921              	.L65:
 922              		.align	2
 923              	.L64:
 924 0530 409C0000 		.word	40000
 925 0534 F0000000 		.word	.LC8
 926 0538 60000000 		.word	.LC3
 927 053c 44000000 		.word	.LC2
 928              	.LBE61:
 929              	.LBE63:
 930              	.LBE65:
 931              	.LBE67:
 932              		.cfi_endproc
 933              	.LFE8:
 935              		.align	2
 936              		.global	SensorSetControl
 938              	SensorSetControl:
 939              	.LFB9:
 301:../sensor.c   **** 
 302:../sensor.c   **** /* *********************************************************
 303:../sensor.c   ****  * the modularized control Set routine. IDuvc: the control ID;
 304:../sensor.c   ****  * value: set value, range check.
 305:../sensor.c   ****  *
 306:../sensor.c   ****  ************************************************************ */
 307:../sensor.c   **** 
 308:../sensor.c   **** uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDex
 309:../sensor.c   **** {
 940              		.loc 1 309 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 32
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              	.LVL116:
 945 0540 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 946              	.LCFI12:
 947              		.cfi_def_cfa_offset 20
 948              		.cfi_offset 4, -20
 949              		.cfi_offset 5, -16
 950              		.cfi_offset 6, -12
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953              	.LBB76:
 954              	.LBB77:
  80:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
 955              		.loc 1 80 0
 956 0544 00C0A0E3 		mov	ip, #0
 957              	.LBE77:
 958              	.LBE76:
 959              		.loc 1 309 0
 960 0548 24D04DE2 		sub	sp, sp, #36
 961              	.LCFI13:
 962              		.cfi_def_cfa_offset 56
 963              		.loc 1 309 0
 964 054c 0050A0E1 		mov	r5, r0
 965 0550 0240A0E1 		mov	r4, r2
 966              	.LBB84:
 967              	.LBB82:
  79:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 968              		.loc 1 79 0
 969 0554 1210CDE5 		strb	r1, [sp, #18]
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
 970              		.loc 1 81 0
 971 0558 03E0A0E3 		mov	lr, #3
  84:../sensor.c   **** #ifdef DbgInfo
 972              		.loc 1 84 0
 973 055c 0C30A0E1 		mov	r3, ip
 974 0560 10008DE2 		add	r0, sp, #16
 975              	.LVL117:
  77:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
 976              		.loc 1 77 0
 977 0564 7070A0E3 		mov	r7, #112
  78:../sensor.c   **** 	preamble.buffer[2] = highAddr;
 978              		.loc 1 78 0
 979 0568 5260A0E3 		mov	r6, #82
  84:../sensor.c   **** #ifdef DbgInfo
 980              		.loc 1 84 0
 981 056c 08108DE2 		add	r1, sp, #8
 982              	.LVL118:
 983 0570 0120A0E3 		mov	r2, #1
 984              	.LVL119:
  82:../sensor.c   **** 
 985              		.loc 1 82 0
 986 0574 0850CDE5 		strb	r5, [sp, #8]
 987              	.LBE82:
 988              	.LBE84:
 310:../sensor.c   **** 	uint8_t buf[2];
 311:../sensor.c   **** 	buf[0] = value;
 989              		.loc 1 311 0
 990 0578 0040CDE5 		strb	r4, [sp]
 991              	.LVL120:
 992              	.LBB85:
 993              	.LBB83:
  80:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
 994              		.loc 1 80 0
 995 057c BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
  77:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
 996              		.loc 1 77 0
 997 0580 1070CDE5 		strb	r7, [sp, #16]
  78:../sensor.c   **** 	preamble.buffer[2] = highAddr;
 998              		.loc 1 78 0
 999 0584 1160CDE5 		strb	r6, [sp, #17]
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
 1000              		.loc 1 81 0
 1001 0588 18E0CDE5 		strb	lr, [sp, #24]
  84:../sensor.c   **** #ifdef DbgInfo
 1002              		.loc 1 84 0
 1003 058c FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 1004              	.LVL121:
 1005              	.LBB78:
 1006              	.LBB79:
  44:../sensor.c   **** 	{
 1007              		.loc 1 44 0
 1008 0590 000050E3 		cmp	r0, #0
 1009 0594 0100001A 		bne	.L67
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 1010              		.loc 1 51 0
 1011 0598 7D0EA0E3 		mov	r0, #2000
 1012              	.LVL122:
 1013 059c FEFFFFEB 		bl	CyFx3BusyWait
 1014              	.LVL123:
 1015              	.L67:
 1016              	.LBE79:
 1017              	.LBE78:
  91:../sensor.c   **** 	preamble.length = 1;
 1018              		.loc 1 91 0
 1019 05a0 00E0A0E3 		mov	lr, #0
  92:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
 1020              		.loc 1 92 0
 1021 05a4 01C0A0E3 		mov	ip, #1
  93:../sensor.c   **** #ifdef DbgInfo
 1022              		.loc 1 93 0
 1023 05a8 10008DE2 		add	r0, sp, #16
 1024 05ac 0E30A0E1 		mov	r3, lr
 1025 05b0 0C20A0E1 		mov	r2, ip
 1026 05b4 0D10A0E1 		mov	r1, sp
  91:../sensor.c   **** 	preamble.length = 1;
 1027              		.loc 1 91 0
 1028 05b8 BAE1CDE1 		strh	lr, [sp, #26]	@ movhi
  92:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
 1029              		.loc 1 92 0
 1030 05bc 18C0CDE5 		strb	ip, [sp, #24]
  93:../sensor.c   **** #ifdef DbgInfo
 1031              		.loc 1 93 0
 1032 05c0 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 1033              	.LVL124:
 1034              	.LBB80:
 1035              	.LBB81:
  44:../sensor.c   **** 	{
 1036              		.loc 1 44 0
 1037 05c4 000050E3 		cmp	r0, #0
 1038 05c8 0100001A 		bne	.L68
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 1039              		.loc 1 51 0
 1040 05cc 7D0EA0E3 		mov	r0, #2000
 1041              	.LVL125:
 1042 05d0 FEFFFFEB 		bl	CyFx3BusyWait
 1043              	.LVL126:
 1044              	.L68:
 1045              	.LBE81:
 1046              	.LBE80:
 1047              	.LBE83:
 1048              	.LBE85:
 312:../sensor.c   **** 	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, 1, buf);
 313:../sensor.c   **** //#ifdef USB_DEBUG_PRINT
 314:../sensor.c   **** 	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
 1049              		.loc 1 314 0
 1050 05d4 0520A0E1 		mov	r2, r5
 1051 05d8 0430A0E1 		mov	r3, r4
 1052 05dc 10109FE5 		ldr	r1, .L69
 1053 05e0 0400A0E3 		mov	r0, #4
 1054 05e4 FEFFFFEB 		bl	CyU3PDebugPrint
 1055              	.LVL127:
 315:../sensor.c   **** //#endif
 316:../sensor.c   **** 	return 0;
 317:../sensor.c   **** };
 1056              		.loc 1 317 0
 1057 05e8 0000A0E3 		mov	r0, #0
 1058 05ec 24D08DE2 		add	sp, sp, #36
 1059              	.LVL128:
 1060              		@ sp needed
 1061 05f0 F080BDE8 		ldmfd	sp!, {r4, r5, r6, r7, pc}
 1062              	.LVL129:
 1063              	.L70:
 1064              		.align	2
 1065              	.L69:
 1066 05f4 10010000 		.word	.LC9
 1067              		.cfi_endproc
 1068              	.LFE9:
 1070              		.align	2
 1071              		.global	SensorGetIrisControl
 1073              	SensorGetIrisControl:
 1074              	.LFB10:
 318:../sensor.c   **** /*************************************************************
 319:../sensor.c   ****  *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 320:../sensor.c   ****  *
 321:../sensor.c   ****  * ********************************************************* */
 322:../sensor.c   **** 
 323:../sensor.c   **** uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, t
 324:../sensor.c   **** {
 1075              		.loc 1 324 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 24
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL130:
 1080 05f8 10402DE9 		stmfd	sp!, {r4, lr}
 1081              	.LCFI14:
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 4, -8
 1084              		.cfi_offset 14, -4
 1085              	.LBB96:
 1086              	.LBB97:
 1087              	.LBB98:
 1088              	.LBB99:
 150:../sensor.c   **** 	buf[0] = RegAdd;
 1089              		.loc 1 150 0
 1090 05fc 00C0A0E3 		mov	ip, #0
 1091              	.LBE99:
 1092              	.LBE98:
 1093              	.LBE97:
 1094              	.LBE96:
 1095              		.loc 1 324 0
 1096 0600 20D04DE2 		sub	sp, sp, #32
 1097              	.LCFI15:
 1098              		.cfi_def_cfa_offset 40
 1099              	.LVL131:
 1100              	.LBB114:
 1101              	.LBB111:
 1102              	.LBB108:
 1103              	.LBB105:
 147:../sensor.c   **** 	preamble.buffer[2] = lowAddr; //lowAddr;
 1104              		.loc 1 147 0
 1105 0604 1120CDE5 		strb	r2, [sp, #17]
 148:../sensor.c   **** 	preamble.length = 3;
 1106              		.loc 1 148 0
 1107 0608 1210CDE5 		strb	r1, [sp, #18]
 151:../sensor.c   **** #ifdef DbgInfo
 1108              		.loc 1 151 0
 1109 060c 0800CDE5 		strb	r0, [sp, #8]
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 1110              		.loc 1 149 0
 1111 0610 03E0A0E3 		mov	lr, #3
 155:../sensor.c   **** 	/*** test I2C bus ready ****/
 1112              		.loc 1 155 0
 1113 0614 0120A0E3 		mov	r2, #1
 1114              	.LVL132:
 1115 0618 0C30A0E1 		mov	r3, ip
 1116 061c 10008DE2 		add	r0, sp, #16
 1117              	.LVL133:
 1118 0620 08108DE2 		add	r1, sp, #8
 1119              	.LVL134:
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 1120              		.loc 1 146 0
 1121 0624 7040A0E3 		mov	r4, #112
 150:../sensor.c   **** 	buf[0] = RegAdd;
 1122              		.loc 1 150 0
 1123 0628 BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
 146:../sensor.c   **** 	preamble.buffer[1] = highAddr; //highAddr;
 1124              		.loc 1 146 0
 1125 062c 1040CDE5 		strb	r4, [sp, #16]
 149:../sensor.c   **** 	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
 1126              		.loc 1 149 0
 1127 0630 18E0CDE5 		strb	lr, [sp, #24]
 155:../sensor.c   **** 	/*** test I2C bus ready ****/
 1128              		.loc 1 155 0
 1129 0634 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 1130              	.LVL135:
 157:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 1131              		.loc 1 157 0
 1132 0638 002050E2 		subs	r2, r0, #0
 1133 063c 1E00001A 		bne	.L77
 1134              	.LVL136:
 1135              	.LBB100:
 1136              	.LBB101:
 1137              	.LBB102:
  47:../sensor.c   **** 			CyU3PBusyWait(40000); // 40ms delay.
 1138              		.loc 1 47 0
 1139 0640 90009FE5 		ldr	r0, .L79
 1140              	.LVL137:
 1141 0644 FEFFFFEB 		bl	CyFx3BusyWait
 1142              	.LVL138:
  48:../sensor.c   **** 		}
 1143              		.loc 1 48 0
 1144 0648 88009FE5 		ldr	r0, .L79
 1145 064c FEFFFFEB 		bl	CyFx3BusyWait
 1146              	.LVL139:
 1147              	.L74:
 1148              	.LBE102:
 1149              	.LBE101:
 1150              	.LBE100:
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 1151              		.loc 1 166 0
 1152 0650 01E0A0E3 		mov	lr, #1
 167:../sensor.c   **** 
 1153              		.loc 1 167 0
 1154 0654 00C0A0E3 		mov	ip, #0
 169:../sensor.c   **** 	/*** test I2C bus ready ****/
 1155              		.loc 1 169 0
 1156 0658 0E20A0E1 		mov	r2, lr
 1157 065c 10008DE2 		add	r0, sp, #16
 1158 0660 08108DE2 		add	r1, sp, #8
 1159              	.LVL140:
 1160 0664 0C30A0E1 		mov	r3, ip
 165:../sensor.c   **** 	preamble.length = 1;
 1161              		.loc 1 165 0
 1162 0668 7140A0E3 		mov	r4, #113
 166:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 1163              		.loc 1 166 0
 1164 066c 18E0CDE5 		strb	lr, [sp, #24]
 167:../sensor.c   **** 
 1165              		.loc 1 167 0
 1166 0670 BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
 165:../sensor.c   **** 	preamble.length = 1;
 1167              		.loc 1 165 0
 1168 0674 1040CDE5 		strb	r4, [sp, #16]
 169:../sensor.c   **** 	/*** test I2C bus ready ****/
 1169              		.loc 1 169 0
 1170 0678 FEFFFFEB 		bl	CyU3PI2cReceiveBytes
 1171              	.LVL141:
 171:../sensor.c   **** 		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
 1172              		.loc 1 171 0
 1173 067c 002050E2 		subs	r2, r0, #0
 1174 0680 0400001A 		bne	.L78
 1175              	.LVL142:
 1176              	.LBB103:
 1177              	.LBB104:
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 1178              		.loc 1 51 0
 1179 0684 7D0EA0E3 		mov	r0, #2000
 1180              	.LVL143:
 1181 0688 FEFFFFEB 		bl	CyFx3BusyWait
 1182              	.LVL144:
 1183              	.LBE104:
 1184              	.LBE103:
 1185              	.LBE105:
 1186              	.LBE108:
 1187              	.LBE111:
 1188              	.LBE114:
 325:../sensor.c   **** 	uint8_t buf[2];
 326:../sensor.c   **** 	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, 1, buf);
 327:../sensor.c   **** #ifdef USB_DEBUG_PRINT
 328:../sensor.c   **** 	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional 
 329:../sensor.c   **** #endif
 330:../sensor.c   **** 	return buf[0];
 1189              		.loc 1 330 0
 1190 068c 0800DDE5 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 331:../sensor.c   **** };
 1191              		.loc 1 331 0
 1192 0690 20D08DE2 		add	sp, sp, #32
 1193              		@ sp needed
 1194 0694 1080BDE8 		ldmfd	sp!, {r4, pc}
 1195              	.LVL145:
 1196              	.L78:
 1197              	.LBB115:
 1198              	.LBB112:
 1199              	.LBB109:
 1200              	.LBB106:
 172:../sensor.c   **** 	}
 1201              		.loc 1 172 0
 1202 0698 0910DDE5 		ldrb	r1, [sp, #9]	@ zero_extendqisi2
 1203 069c 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 1204 06a0 00108DE5 		str	r1, [sp]
 1205 06a4 0400A0E3 		mov	r0, #4
 1206              	.LVL146:
 1207 06a8 2C109FE5 		ldr	r1, .L79+4
 1208 06ac FEFFFFEB 		bl	CyU3PDebugPrint
 1209              	.LVL147:
 1210              	.LBE106:
 1211              	.LBE109:
 1212              	.LBE112:
 1213              	.LBE115:
 330:../sensor.c   **** };
 1214              		.loc 1 330 0
 1215 06b0 0800DDE5 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 1216              		.loc 1 331 0
 1217 06b4 20D08DE2 		add	sp, sp, #32
 1218              		@ sp needed
 1219 06b8 1080BDE8 		ldmfd	sp!, {r4, pc}
 1220              	.LVL148:
 1221              	.L77:
 1222              	.LBB116:
 1223              	.LBB113:
 1224              	.LBB110:
 1225              	.LBB107:
 158:../sensor.c   **** 	}
 1226              		.loc 1 158 0
 1227 06bc 0910DDE5 		ldrb	r1, [sp, #9]	@ zero_extendqisi2
 1228 06c0 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 1229 06c4 00108DE5 		str	r1, [sp]
 1230 06c8 0400A0E3 		mov	r0, #4
 1231              	.LVL149:
 1232 06cc 0C109FE5 		ldr	r1, .L79+8
 1233 06d0 FEFFFFEB 		bl	CyU3PDebugPrint
 1234              	.LVL150:
 1235 06d4 DDFFFFEA 		b	.L74
 1236              	.L80:
 1237              		.align	2
 1238              	.L79:
 1239 06d8 409C0000 		.word	40000
 1240 06dc 60000000 		.word	.LC3
 1241 06e0 44000000 		.word	.LC2
 1242              	.LBE107:
 1243              	.LBE110:
 1244              	.LBE113:
 1245              	.LBE116:
 1246              		.cfi_endproc
 1247              	.LFE10:
 1249              		.align	2
 1250              		.global	SensorSetIrisControl
 1252              	SensorSetIrisControl:
 1253              	.LFB11:
 332:../sensor.c   **** 
 333:../sensor.c   **** /* *********************************************************
 334:../sensor.c   ****  * the Iris control Set routine. IDuvc: the control ID, boardID: the Iris control board address;
 335:../sensor.c   ****  * value: set value, range check.
 336:../sensor.c   ****  *
 337:../sensor.c   ****  ************************************************************ */
 338:../sensor.c   **** 
 339:../sensor.c   **** uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for r
 340:../sensor.c   **** {
 1254              		.loc 1 340 0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 32
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              	.LVL151:
 1259 06e4 10402DE9 		stmfd	sp!, {r4, lr}
 1260              	.LCFI16:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 4, -8
 1263              		.cfi_offset 14, -4
 1264              	.LBB125:
 1265              	.LBB126:
  80:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
 1266              		.loc 1 80 0
 1267 06e8 00C0A0E3 		mov	ip, #0
 1268              	.LBE126:
 1269              	.LBE125:
 1270              		.loc 1 340 0
 1271 06ec 20D04DE2 		sub	sp, sp, #32
 1272              	.LCFI17:
 1273              		.cfi_def_cfa_offset 40
 341:../sensor.c   **** 	uint8_t buf[2];
 342:../sensor.c   **** 	buf[0] = value;
 1274              		.loc 1 342 0
 1275 06f0 0020CDE5 		strb	r2, [sp]
 1276              	.LVL152:
 1277              	.LBB132:
 1278              	.LBB131:
  78:../sensor.c   **** 	preamble.buffer[2] = highAddr;
 1279              		.loc 1 78 0
 1280 06f4 1130CDE5 		strb	r3, [sp, #17]
  79:../sensor.c   **** 	preamble.ctrlMask = 0x0000;
 1281              		.loc 1 79 0
 1282 06f8 1210CDE5 		strb	r1, [sp, #18]
  82:../sensor.c   **** 
 1283              		.loc 1 82 0
 1284 06fc 0800CDE5 		strb	r0, [sp, #8]
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
 1285              		.loc 1 81 0
 1286 0700 03E0A0E3 		mov	lr, #3
  84:../sensor.c   **** #ifdef DbgInfo
 1287              		.loc 1 84 0
 1288 0704 0C30A0E1 		mov	r3, ip
 1289              	.LVL153:
 1290 0708 10008DE2 		add	r0, sp, #16
 1291              	.LVL154:
  77:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
 1292              		.loc 1 77 0
 1293 070c 7040A0E3 		mov	r4, #112
  84:../sensor.c   **** #ifdef DbgInfo
 1294              		.loc 1 84 0
 1295 0710 08108DE2 		add	r1, sp, #8
 1296              	.LVL155:
 1297 0714 0120A0E3 		mov	r2, #1
 1298              	.LVL156:
  80:../sensor.c   **** 	preamble.length = 3; /*  Three byte preamble. */
 1299              		.loc 1 80 0
 1300 0718 BAC1CDE1 		strh	ip, [sp, #26]	@ movhi
  77:../sensor.c   **** 	preamble.buffer[1] = boradAddr;
 1301              		.loc 1 77 0
 1302 071c 1040CDE5 		strb	r4, [sp, #16]
  81:../sensor.c   **** 	inbuf[0] = lowAddr;
 1303              		.loc 1 81 0
 1304 0720 18E0CDE5 		strb	lr, [sp, #24]
  84:../sensor.c   **** #ifdef DbgInfo
 1305              		.loc 1 84 0
 1306 0724 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 1307              	.LVL157:
 1308              	.LBB127:
 1309              	.LBB128:
  44:../sensor.c   **** 	{
 1310              		.loc 1 44 0
 1311 0728 000050E3 		cmp	r0, #0
 1312 072c 0100001A 		bne	.L82
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 1313              		.loc 1 51 0
 1314 0730 7D0EA0E3 		mov	r0, #2000
 1315              	.LVL158:
 1316 0734 FEFFFFEB 		bl	CyFx3BusyWait
 1317              	.LVL159:
 1318              	.L82:
 1319              	.LBE128:
 1320              	.LBE127:
  91:../sensor.c   **** 	preamble.length = 1;
 1321              		.loc 1 91 0
 1322 0738 00E0A0E3 		mov	lr, #0
  92:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
 1323              		.loc 1 92 0
 1324 073c 01C0A0E3 		mov	ip, #1
  93:../sensor.c   **** #ifdef DbgInfo
 1325              		.loc 1 93 0
 1326 0740 10008DE2 		add	r0, sp, #16
 1327 0744 0E30A0E1 		mov	r3, lr
 1328 0748 0C20A0E1 		mov	r2, ip
 1329 074c 0D10A0E1 		mov	r1, sp
  91:../sensor.c   **** 	preamble.length = 1;
 1330              		.loc 1 91 0
 1331 0750 BAE1CDE1 		strh	lr, [sp, #26]	@ movhi
  92:../sensor.c   **** 	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
 1332              		.loc 1 92 0
 1333 0754 18C0CDE5 		strb	ip, [sp, #24]
  93:../sensor.c   **** #ifdef DbgInfo
 1334              		.loc 1 93 0
 1335 0758 FEFFFFEB 		bl	CyU3PI2cTransmitBytes
 1336              	.LVL160:
 1337              	.LBB129:
 1338              	.LBB130:
  44:../sensor.c   **** 	{
 1339              		.loc 1 44 0
 1340 075c 000050E3 		cmp	r0, #0
 1341 0760 0100001A 		bne	.L83
  51:../sensor.c   **** 	}else //if I2C operation is not success reconfig the I2C
 1342              		.loc 1 51 0
 1343 0764 7D0EA0E3 		mov	r0, #2000
 1344              	.LVL161:
 1345 0768 FEFFFFEB 		bl	CyFx3BusyWait
 1346              	.LVL162:
 1347              	.L83:
 1348              	.LBE130:
 1349              	.LBE129:
 1350              	.LBE131:
 1351              	.LBE132:
 343:../sensor.c   **** 	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, 1, buf);
 344:../sensor.c   **** #ifdef USB_DEBUG_PRINT
 345:../sensor.c   **** 	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional
 346:../sensor.c   **** #endif
 347:../sensor.c   **** 	return 0;
 348:../sensor.c   **** };
 1352              		.loc 1 348 0
 1353 076c 0000A0E3 		mov	r0, #0
 1354 0770 20D08DE2 		add	sp, sp, #32
 1355              	.LVL163:
 1356              		@ sp needed
 1357 0774 1080BDE8 		ldmfd	sp!, {r4, pc}
 1358              		.cfi_endproc
 1359              	.LFE11:
 1361              		.section	.rodata.str1.4,"aMS",%progbits,1
 1362              		.align	2
 1363              	.LC0:
 1364 0000 49324320 		.ascii	"I2C Slave address is not valid!\012\000"
 1364      536C6176 
 1364      65206164 
 1364      64726573 
 1364      73206973 
 1365 0021 000000   		.space	3
 1366              	.LC1:
 1367 0024 4552524F 		.ascii	"ERROR: SensorWrite count > 64\012\000"
 1367      523A2053 
 1367      656E736F 
 1367      72577269 
 1367      74652063 
 1368 0043 00       		.space	1
 1369              	.LC2:
 1370 0044 73656E73 		.ascii	"sensor read2B(T) %d %d %d\015\012\000"
 1370      6F722072 
 1370      65616432 
 1370      42285429 
 1370      20256420 
 1371              	.LC3:
 1372 0060 73656E73 		.ascii	"sensor read2B(R) %d %d %d\015\012\000"
 1372      6F722072 
 1372      65616432 
 1372      42285229 
 1372      20256420 
 1373              	.LC4:
 1374 007c 4750494F 		.ascii	"GPIO Set Value Error, Error Code = %d\012\000"
 1374      20536574 
 1374      2056616C 
 1374      75652045 
 1374      72726F72 
 1375 00a3 00       		.space	1
 1376              	.LC5:
 1377 00a4 4750494F 		.ascii	"GPIO Set Value\015\012\000"
 1377      20536574 
 1377      2056616C 
 1377      75650D0A 
 1377      00
 1378 00b5 000000   		.space	3
 1379              	.LC6:
 1380 00b8 54686520 		.ascii	"The ticks %d %d \015\012\000"
 1380      7469636B 
 1380      73202564 
 1380      20256420 
 1380      0D0A00
 1381 00cb 00       		.space	1
 1382              	.LC7:
 1383 00cc 4572726F 		.ascii	"Error: Reading Sensor ID failed!\015\012\000"
 1383      723A2052 
 1383      65616469 
 1383      6E672053 
 1383      656E736F 
 1384 00ef 00       		.space	1
 1385              	.LC8:
 1386 00f0 54686520 		.ascii	"The Get control ID 0x%x %d\015\012\000"
 1386      47657420 
 1386      636F6E74 
 1386      726F6C20 
 1386      49442030 
 1387 010d 000000   		.space	3
 1388              	.LC9:
 1389 0110 54686520 		.ascii	"The Set control regAdd 0x%x 0x%x\015\012\000"
 1389      53657420 
 1389      636F6E74 
 1389      726F6C20 
 1389      72656741 
 1390 0133 00       		.text
 1391              	.Letext0:
 1392              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 1393              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 1394              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 1395              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 1396              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 1397              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 1398              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 1399              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 1400              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
DEFINED SYMBOLS
                            *ABS*:00000000 sensor.c
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:16     .text:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:18     .text:00000000 SensorI2CAccessDelay.part.0
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:46     .text:0000001c $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:50     .text:00000020 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:53     .text:00000020 SensorWrite2B
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:187    .text:000000ec $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:191    .text:000000f0 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:194    .text:000000f0 SensorWrite
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:305    .text:0000019c $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:310    .text:000001a4 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:313    .text:000001a4 SensorRead2B
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:487    .text:000002b8 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:496    .text:000002c8 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:499    .text:000002c8 SensorRead
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:612    .text:0000037c $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:617    .text:00000384 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:620    .text:00000384 SensorReset
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:711    .text:00000418 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:717    .text:00000424 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:720    .text:00000424 SensorInit
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:735    .text:00000430 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:739    .text:00000434 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:742    .text:00000434 SensorI2cBusTest
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:758    .text:0000043c SensorGetControl
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:924    .text:00000530 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:935    .text:00000540 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:938    .text:00000540 SensorSetControl
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1066   .text:000005f4 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1070   .text:000005f8 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1073   .text:000005f8 SensorGetIrisControl
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1239   .text:000006d8 $d
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1249   .text:000006e4 $a
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1252   .text:000006e4 SensorSetIrisControl
C:\Users\wcheng\AppData\Local\Temp\ccuVSEoV.s:1362   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyFx3BusyWait
CyU3PI2cTransmitBytes
CyU3PDebugPrint
CyU3PI2cReceiveBytes
CyU3PGpioSetValue
_tx_time_get
_tx_thread_sleep
